["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.algorithms.indexing');\ncom.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_query_STAR_(prop__GT_classes,p__78964){\nvar map__78966 = p__78964;\nvar map__78966__$1 = (((((!((map__78966 == null))))?(((((map__78966.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78966.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78966):map__78966);\nvar ast = map__78966__$1;\nvar parent_component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78966__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\nvar parent_children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78966__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar parent_key = com.fulcrologic.fulcro.components.class__GT_registry_key(parent_component);\nvar parent_children__$1 = cljs.core.seq(parent_children);\nvar update_index = ((function (parent_key,parent_children__$1,map__78966,map__78966__$1,ast,parent_component,parent_children){\nreturn (function (idx,k,c){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(idx,k,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),c);\n});})(parent_key,parent_children__$1,map__78966,map__78966__$1,ast,parent_component,parent_children))\n;\nif(parent_children__$1){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parent_key,parent_children__$1,update_index,map__78966,map__78966__$1,ast,parent_component,parent_children){\nreturn (function (idx,p__78973){\nvar map__78975 = p__78973;\nvar map__78975__$1 = (((((!((map__78975 == null))))?(((((map__78975.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78975.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78975):map__78975);\nvar child_ast = map__78975__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78975__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar dispatch_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78975__$1,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78975__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar G__78977 = idx;\nvar G__78977__$1 = ((((cljs.core.vector_QMARK_(key)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(key)))))?update_index(G__78977,dispatch_key,parent_key):G__78977);\nvar G__78977__$2 = ((((cljs.core.vector_QMARK_(key)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(key)))))?update_index(G__78977__$1,key,parent_key):G__78977__$1);\nvar G__78977__$3 = (((key instanceof cljs.core.Keyword))?update_index(G__78977__$2,key,parent_key):G__78977__$2);\nif(cljs.core.seq(children)){\nreturn (com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_.cljs$core$IFn$_invoke$arity$2(G__78977__$3,child_ast) : com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_.call(null,G__78977__$3,child_ast));\n} else {\nreturn G__78977__$3;\n}\n});})(parent_key,parent_children__$1,update_index,map__78966,map__78966__$1,ast,parent_component,parent_children))\n,prop__GT_classes,parent_children__$1);\n} else {\nreturn prop__GT_classes;\n}\n});\n/**\n * Create an index of the given component-annotated query. Returns a map from query keyword to the component\n *   class(es) that query for that keyword.\n */\ncom.fulcrologic.fulcro.algorithms.indexing.index_query = (function com$fulcrologic$fulcro$algorithms$indexing$index_query(query){\nvar ast = edn_query_language.core.query__GT_ast(query);\nreturn com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_(cljs.core.PersistentArrayMap.EMPTY,ast);\n});\n/**\n * Return a set of keywords that are in the top-level of the given AST\n */\ncom.fulcrologic.fulcro.algorithms.indexing.top_level_keys = (function com$fulcrologic$fulcro$algorithms$indexing$top_level_keys(ast){\nvar map__78982 = ast;\nvar map__78982__$1 = (((((!((map__78982 == null))))?(((((map__78982.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78982.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78982):map__78982);\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78982__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587)),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.keyword_QMARK_)),children);\n});\n/**\n * Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast.\n */\ncom.fulcrologic.fulcro.algorithms.indexing.link_query_props = (function com$fulcrologic$fulcro$algorithms$indexing$link_query_props(p__78985){\nvar map__78986 = p__78985;\nvar map__78986__$1 = (((((!((map__78986 == null))))?(((((map__78986.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78986.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78986):map__78986);\nvar ast = map__78986__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78986__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78986__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nif(com.fulcrologic.fulcro.algorithms.denormalize.link_ref_QMARK_(key)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(clojure.set.union,cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core.first(key)]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.algorithms.indexing.link_query_props,children));\n} else {\nif(cljs.core.seq(children)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.set.union,cljs.core.map.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.algorithms.indexing.link_query_props,children));\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n\n}\n}\n});\n/**\n * Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n *   This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted).\n */\ncom.fulcrologic.fulcro.algorithms.indexing.index_root_BANG_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_root_BANG_(app__$1){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.algorithms.indexing\",null,57,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"(Re)indexing application query for prop->classes\"], null);\n}),null)),null,-1790297599);\n\nvar map__78993 = app__$1;\nvar map__78993__$1 = (((((!((map__78993 == null))))?(((((map__78993.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78993.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78993):map__78993);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78993__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78993__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__78994 = cljs.core.deref(runtime_atom);\nvar map__78994__$1 = (((((!((map__78994 == null))))?(((((map__78994.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78994.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78994):map__78994);\nvar root_class = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78994__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"root-class\",\"com.fulcrologic.fulcro.application/root-class\",-719803119));\nvar state_map = cljs.core.deref(state_atom);\nvar root_query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(root_class,state_map);\nvar ast = edn_query_language.core.query__GT_ast(root_query);\nvar prop__GT_classes = com.fulcrologic.fulcro.algorithms.indexing.index_query(root_query);\nvar idents_in_joins = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.ident_QMARK_),cljs.core.keys(prop__GT_classes));\nvar root_props = com.fulcrologic.fulcro.algorithms.indexing.top_level_keys(ast);\nvar linked_props = com.fulcrologic.fulcro.algorithms.indexing.link_query_props(ast);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(runtime_atom,((function (map__78993,map__78993__$1,state_atom,runtime_atom,map__78994,map__78994__$1,root_class,state_map,root_query,ast,prop__GT_classes,idents_in_joins,root_props,linked_props){\nreturn (function (s){\nreturn cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.assoc_in(s,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"root-props\",\"root-props\",-1015460595)], null),root_props),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714)], null),linked_props),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035)], null),idents_in_joins),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717)], null),prop__GT_classes);\n});})(map__78993,map__78993__$1,state_atom,runtime_atom,map__78994,map__78994__$1,root_class,state_map,root_query,ast,prop__GT_classes,idents_in_joins,root_props,linked_props))\n);\n});\ncom.fulcrologic.fulcro.algorithms.indexing.index_component_STAR_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_component_STAR_(runtime_state,instance,ident,cls){\nvar k = com.fulcrologic.fulcro.components.class__GT_registry_key(cls);\nvar G__79008 = runtime_state;\nvar G__79008__$1 = (cljs.core.truth_(k)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__79008,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),k], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),instance):G__79008);\nif(cljs.core.truth_(ident)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__79008__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224),ident], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),instance);\n} else {\nreturn G__79008__$1;\n}\n});\n/**\n * Add a component instance to the app index. This adds the component to the `class->components` and\n * `ident->components` indexes.\n */\ncom.fulcrologic.fulcro.algorithms.indexing.index_component_BANG_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_component_BANG_(this$){\nvar map__79010 = com.fulcrologic.fulcro.components.any__GT_app(this$);\nvar map__79010__$1 = (((((!((map__79010 == null))))?(((((map__79010.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__79010.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__79010):map__79010);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__79010__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar get_ident = com.fulcrologic.fulcro.components.component_options.cljs$core$IFn$_invoke$arity$variadic(this$,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ident\",\"ident\",-742346)], 0));\nvar ident = (cljs.core.truth_(get_ident)?(function (){var G__79014 = this$;\nvar G__79015 = com.fulcrologic.fulcro.components.props(this$);\nreturn (get_ident.cljs$core$IFn$_invoke$arity$2 ? get_ident.cljs$core$IFn$_invoke$arity$2(G__79014,G__79015) : get_ident.call(null,G__79014,G__79015));\n})():null);\nvar cls = com.fulcrologic.fulcro.components.react_type(this$);\nif(cljs.core.truth_(goog.DEBUG)){\nif(cljs.core.truth_((function (){var and__4120__auto__ = ident;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn (!(edn_query_language.core.ident_QMARK_(ident)));\n} else {\nreturn and__4120__auto__;\n}\n})())){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.indexing\",null,96,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Component\",com.fulcrologic.fulcro.components.component_name(this$),\"supplied an invalid ident\",ident], null);\n});})(ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident))\n,null)),null,314515078);\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4120__auto__ = ident;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn (cljs.core.second(ident) == null);\n} else {\nreturn and__4120__auto__;\n}\n})())){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.algorithms.indexing\",null,98,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\"component \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(com.fulcrologic.fulcro.components.component_name(this$)),\"'s ident (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ident),\") has a `nil` second element.\",\" This warning can be safely ignored if that is intended.\"].join('')], null);\n});})(ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident))\n,null)),null,-1133160193);\n} else {\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.algorithms.indexing\",null,101,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Adding\",com.fulcrologic.fulcro.components.component_name(this$),\"instance to class index\"], null);\n});})(ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident))\n,null)),null,1994181338);\n\nif(cljs.core.truth_(ident)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.algorithms.indexing\",null,103,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Adding\",com.fulcrologic.fulcro.components.component_name(this$),\"with ident\",ident,\"to ident index\"], null);\n});})(ident,cls,map__79010,map__79010__$1,runtime_atom,get_ident))\n,null)),null,1131147806);\n} else {\n}\n} else {\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(runtime_atom,com.fulcrologic.fulcro.algorithms.indexing.index_component_STAR_,this$,ident,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cls], 0));\n});\ncom.fulcrologic.fulcro.algorithms.indexing.drop_component_STAR_ = (function com$fulcrologic$fulcro$algorithms$indexing$drop_component_STAR_(runtime_state,instance,ident,cls){\nvar k = com.fulcrologic.fulcro.components.class__GT_registry_key(cls);\nvar G__79019 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(runtime_state,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),k], null),cljs.core.disj,instance);\nif(cljs.core.truth_(ident)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__79019,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224),ident], null),cljs.core.disj,instance);\n} else {\nreturn G__79019;\n}\n});\n/**\n * Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n *   ident from the component itself.\n * @param {...*} var_args\n */\ncom.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_ = (function com$fulcrologic$fulcro$algorithms$indexing$drop_component_BANG_(var_args){\nvar G__79021 = arguments.length;\nswitch (G__79021) {\ncase 2:\nreturn com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncom.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (this$,ident){\nvar map__79024 = com.fulcrologic.fulcro.components.any__GT_app(this$);\nvar map__79024__$1 = (((((!((map__79024 == null))))?(((((map__79024.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__79024.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__79024):map__79024);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__79024__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar cls = com.fulcrologic.fulcro.components.react_type(this$);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.algorithms.indexing\",null,122,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__79024,map__79024__$1,runtime_atom,cls){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Dropping component instance with ident \",ident,\"from indexes\"], null);\n});})(map__79024,map__79024__$1,runtime_atom,cls))\n,null)),null,-1626508537);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(runtime_atom,com.fulcrologic.fulcro.algorithms.indexing.drop_component_STAR_,this$,ident,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cls], 0));\n});\n\ncom.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (this$){\nvar old_ident = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(this$);\nreturn com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$2(this$,old_ident);\n});\n\ncom.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions that implement the query and component indexing.","~:file","com/fulcrologic/fulcro/algorithms/indexing.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",47],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$>defn","~$ghostwheel.core"],"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.algorithms.indexing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^Z","~$log","~$taoensso.timbre","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^Z","~$com.fulcrologic.fulcro.algorithms.denormalize","^14","^D","^D","~$goog","^15","^Y","^Y","~$util","~$com.fulcrologic.fulcro.algorithms.do-not-use","^O","^O","~$encore","~$taoensso.encore","~$gw","^O","^12","^12","^10","^10","^19","^19","~$fdn","^14","^17","^17"],"~:seen",["^Q",["~:require"]],"~:uses",["^ ","^N","^O"],"~:require-macros",["^ ","^[","^10","^11","^12","^D","^D","^O","^O","^18","^19","^1:","^O","^12","^12","^10","^10","^19","^19"],"~:form",["~#list",["~$ns","^S","Functions that implement the query and component indexing.",["^1A",["^1=",["^12","~:as","^11"],["^17","^1C","^16"],["^14","^1C","^1;"],["^O","^1C","^1:","~:refer",["^N"]],["^Y","^1C","^X"],["^Z","^1C","^13"],["^19","^1C","^18"],["^10","^1C","^["]]]]],"~:flags",["^ ","^1=",["^Q",[]]],"~:js-deps",["^ "],"~:deps",["^15","^D","^12","^17","^14","^O","^Y","^Z","^19","^10"]],"^U","^S","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/algorithms/indexing.cljc"],"~:compiled-at",1630228762076,"~:resource-name","com/fulcrologic/fulcro/algorithms/indexing.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.algorithms.indexing\n  \"Functions that implement the query and component indexing.\"\n  (:require\n    [com.fulcrologic.fulcro.components :as comp]\n    [com.fulcrologic.fulcro.algorithms.do-not-use :as util]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [ghostwheel.core :as gw :refer [>defn]]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.encore :as encore]\n    [taoensso.timbre :as log]))\n\n(defn- index-query*\n  [prop->classes {parent-component :component\n                  parent-children  :children\n                  :as              ast}]\n  (let [parent-key      (comp/class->registry-key parent-component)\n        parent-children (seq parent-children)\n        update-index    (fn [idx k c] (update idx k (fnil conj #{}) c))]\n    (if parent-children\n      (reduce\n        (fn [idx {:keys [key dispatch-key children] :as child-ast}]\n          (cond-> idx\n            (and (vector? key) (= '_ (second key))) (update-index dispatch-key parent-key)\n            (and (vector? key) (not= '_ (second key))) (update-index key parent-key)\n            (keyword? key) (update-index key parent-key)\n            (seq children) (index-query* child-ast)))\n        prop->classes\n        parent-children)\n      prop->classes)))\n\n(defn index-query\n  \"Create an index of the given component-annotated query. Returns a map from query keyword to the component\n  class(es) that query for that keyword.\"\n  [query]\n  (let [ast (eql/query->ast query)]\n    (index-query* {} ast)))\n\n(defn top-level-keys\n  \"Return a set of keywords that are in the top-level of the given AST\"\n  [ast]\n  (let [{:keys [children]} ast]\n    (into #{} (comp (map :key) (filter keyword?)) children)))\n\n(defn link-query-props\n  \"Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast.\"\n  [{:keys [key children] :as ast}]\n  (cond\n    (fdn/link-ref? key) (apply set/union #{(first key)} (map link-query-props children))\n    (seq children) (apply set/union (map link-query-props children))\n    :otherwise #{}))\n\n(defn index-root!\n  \"Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n  This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted).\"\n  [app]\n  (log/debug \"(Re)indexing application query for prop->classes\")\n  (let [{:com.fulcrologic.fulcro.application/keys [state-atom runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [root-class]} @runtime-atom\n        state-map       @state-atom\n        root-query      (comp/get-query root-class state-map)\n        ast             (eql/query->ast root-query)\n        prop->classes   (index-query root-query)\n        idents-in-joins (into #{} (filter eql/ident?) (keys prop->classes))\n        root-props      (top-level-keys ast)\n        linked-props    (link-query-props ast)]\n    (swap! runtime-atom (fn [s]\n                          (-> s\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :root-props] root-props)\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :linked-props] linked-props)\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :idents-in-joins] idents-in-joins)\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :prop->classes] prop->classes))))))\n\n(defn- index-component* [runtime-state instance ident cls]\n  (let [k (comp/class->registry-key cls)]\n    (cond-> runtime-state\n      k (update-in\n          [:com.fulcrologic.fulcro.application/indexes :class->components k]\n          (fnil conj #{})\n          instance)\n      ident (update-in\n              [:com.fulcrologic.fulcro.application/indexes :ident->components ident]\n              (fnil conj #{})\n              instance))))\n\n(defn index-component!\n  \"Add a component instance to the app index. This adds the component to the `class->components` and\n   `ident->components` indexes.\"\n  [this]\n  (let [{:keys [:com.fulcrologic.fulcro.application/runtime-atom]} (comp/any->app this)\n        get-ident (comp/component-options this :ident)]\n    (let [ident (when get-ident (get-ident this (comp/props this)))\n          cls   (comp/react-type this)]\n      (when #?(:cljs goog.DEBUG :clj true)\n        (when (and ident (not (eql/ident? ident)))\n          (log/error \"Component\" (comp/component-name this) \"supplied an invalid ident\" ident))\n        (when (and ident (nil? (second ident)))\n          (log/info\n            (str \"component \" (comp/component-name this) \"'s ident (\" ident \") has a `nil` second element.\"\n              \" This warning can be safely ignored if that is intended.\")))\n        (log/debug \"Adding\" (comp/component-name this) \"instance to class index\")\n        (when ident\n          (log/debug \"Adding\" (comp/component-name this) \"with ident\" ident \"to ident index\")))\n      (swap! runtime-atom index-component* this ident cls))))\n\n(defn- drop-component*\n  [runtime-state instance ident cls]\n  (let [k (comp/class->registry-key cls)]\n    (cond-> (update-in runtime-state [:com.fulcrologic.fulcro.application/indexes :class->components k]\n              disj instance)\n      ident (update-in\n              [:com.fulcrologic.fulcro.application/indexes :ident->components ident]\n              disj\n              instance))))\n\n(defn drop-component!\n  \"Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n  ident from the component itself.\"\n  ([this ident]\n   (let [{:keys [:com.fulcrologic.fulcro.application/runtime-atom]} (comp/any->app this)\n         cls (comp/react-type this)]\n     (log/debug \"Dropping component instance with ident \" ident \"from indexes\")\n     (swap! runtime-atom drop-component* this ident cls)))\n  ([this]\n   (let [old-ident (comp/get-ident this)]\n     (drop-component! this old-ident))))\n","~:reader-features",["^Q",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["p__78964","map__78966","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.algorithms.indexing/index-query*","prop->classes","parent-component","parent-children","ast","parent-key","com.fulcrologic.fulcro.components/class->registry-key","cljs.core/seq","update-index","idx","k","c","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2","cljs.core/conj","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__78973","map__78975","key","dispatch-key","children","child-ast","G__78977","cljs.core/vector?","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/second","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/Keyword","com.fulcrologic.fulcro.algorithms.indexing/index-query","query","edn-query-language.core/query->ast","com.fulcrologic.fulcro.algorithms.indexing/top-level-keys","map__78982","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$1","cljs.core.filter.cljs$core$IFn$_invoke$arity$1","cljs.core/keyword?","p__78985","map__78986","com.fulcrologic.fulcro.algorithms.indexing/link-query-props","com.fulcrologic.fulcro.algorithms.denormalize/link-ref?","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","clojure.set/union","cljs.core/first","cljs.core.map.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.algorithms.indexing/index-root!","app","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","map__78993","map__78994","cljs.core/deref","state-atom","runtime-atom","root-class","state-map","root-query","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2","idents-in-joins","edn-query-language.core/ident?","cljs.core/keys","root-props","linked-props","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","s","cljs.core/assoc-in","com.fulcrologic.fulcro.algorithms.indexing/index-component*","runtime-state","instance","ident","cls","G__79008","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","com.fulcrologic.fulcro.algorithms.indexing/index-component!","this","map__79010","com.fulcrologic.fulcro.components/any->app","get-ident","com.fulcrologic.fulcro.components.component_options.cljs$core$IFn$_invoke$arity$variadic","G__79014","G__79015","com.fulcrologic.fulcro.components/props","com.fulcrologic.fulcro.components/react-type","js/goog.DEBUG","and__4120__auto__","com.fulcrologic.fulcro.components/component-name","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","com.fulcrologic.fulcro.algorithms.indexing/drop-component*","G__79019","cljs.core/disj","var_args","G__79021","com.fulcrologic.fulcro.algorithms.indexing/drop-component!","js/Error","map__79024","old-ident","com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1","com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["^1I","ghostwheel/utils.cljc"],[1630228119207,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^15","^D","~$clojure.walk","~$cljs.env","~$orchestra-cljs.spec.test"]]],["^1I","goog/dom/tagname.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.dom.HtmlElement"]]],["^1I","goog/async/freelist.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/labs/useragent/platform.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.labs.userAgent.util","~$goog.string"]]],["^1I","expound/util.cljc"],[1630228118972,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","ghostwheel/reporting.cljc"],[1630228119207,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^@","^F","^B","~$expound.alpha","~$clojure.string","~$ghostwheel.logging"]]],["^1I","goog/timer/timer.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.Promise","~$goog.events.EventTarget"]]],["^1I","orchestra_cljs/spec/test.cljs"],[1630228119080,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$goog.object","~$goog.userAgent.product","^25","~$cljs.stacktrace","^J","^@","^H"]]],["^1I","com/fulcrologic/fulcro/algorithms/lookup.cljc"],[1630228119420,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^10"]]],["^1I","cljs/spec/gen/alpha.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$goog.Uri"]]],["^1I","com/fulcrologic/fulcro/algorithms/indexing.cljc"],[1630228119420,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^12","^17","^14","^O","^Y","^Z","^19","^10"]]],["^1I","cljs/tools/reader/impl/utils.cljs"],[1630228358603,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^23"]]],["^1I","goog/math/math.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.array","~$goog.asserts"]]],["^1I","goog/string/stringformat.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^23"]]],["^1I","cljs/env.cljc"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","goog/events/eventtype.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1I","goog/labs/useragent/browser.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^22","^29","~$goog.string.internal"]]],["^1I","goog/array/array.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>"]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1630228360000,1630228360000,1549836454000,"^1V",["^ ","^1W",3,"^1X",["^Q",[2]],"^1Y",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1I","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],[1630228119420,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^10","^Z","^29","^@"]]],["^1I","expound/problems.cljc"],[1630228118972,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$expound.paths","^@","^1Z","^25","~$expound.printer","~$expound.ansi"]]],["^1I","goog/useragent/useragent.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^22","~$goog.reflect","^23"]]],["^1I","goog/structs/prioritypool.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1I","clojure/test/check/properties.cljc"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$clojure.test.check.generators","~$clojure.test.check.results"]]],["^1I","goog/async/run.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1I","clojure/test/check/generators.cljc"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","~$clojure.test.check.random","~$clojure.test.check.rose-tree","^23"]]],["^1I","taoensso/encore.cljs"],[1630228119299,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^Y","~$cljs.reader","~$cljs.tools.reader.edn","^29","^23","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1I","goog/debug/error.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/async/workqueue.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>","~$goog.async.FreeList"]]],["^1I","goog/events/events.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2?","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1I","goog/promise/resolver.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/events/browserfeature.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2@"]]],["^1I","cljs/tools/reader/edn.cljs"],[1630228358603,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^23","^2X"]]],["^1I","clojure/test/check/random/doubles.cljs"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$clojure.test.check.random.longs"]]],["^1I","goog/structs/priorityqueue.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.structs.Heap"]]],["^1I","goog/net/xhrio.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.Timer","^2=","^2>","^36","^28","~$goog.json.hybrid","~$goog.log","^33","^32","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^29","^23","^31","~$goog.structs.Map","~$goog.uri.utils","^2@"]]],["^1I","goog/promise/thenable.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/dom/nodetype.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","cljs/tools/reader/impl/inspect.cljs"],[1630228358603,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","cljs/pprint.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^23","^2X"]]],["^1I","cljs/tools/reader.cljs"],[1630228358603,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^3;","^3<","^3=","^3:","^2=","^23","^2X"]]],["^1I","expound/alpha.cljc"],[1630228118972,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$expound.problems","^@","^25","^Y","^1Z","^2W","^23","^2F","~$expound.util","^2G","^H"]]],["^1I","clojure/test/check/rose_tree.cljc"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","clojure/test/check/impl.cljc"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","goog/net/wrapperxmlhttpfactory.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1I","goog/events/eventtarget.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.Disposable","^2>","^2Y","~$goog.events.Event","^38","^39","^29"]]],["^1I","clojure/test/check/random.cljs"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$clojure.test.check.random.doubles","^3?"]]],["^1I","goog/disposable/disposable.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.disposable.IDisposable"]]],["^1I","expound/ansi.cljc"],[1630228118972,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25"]]],["^2B","node_modules/react/index.js"],[1630228360000,1630228360000,499162500000,"^1V",["^ ","^1W",5,"^1X",["^Q",[1,4]],"^1Y",["^2C","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1I","cljs/spec/test/alpha.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^29","^2:","^25","^2;","^J","^@","^H"]]],["^1I","shadow/js.js"],[1630228360071,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/object/object.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/structs/set.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^31","~$goog.structs.Collection","^3F"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^2B","node_modules/react/cjs/react.development.js"],[1630228360000,1630228360000,499162500000,"^1V",["^ ","^1W",4,"^1X",["^Q",[0,3]],"^1Y",["^2C","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^1I","cljs/stacktrace.cljc"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^23","^25"]]],["^1I","goog/math/long.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>","^2K"]]],["^1I","goog/events/listener.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.events.ListenableKey"]]],["^1I","goog/events/listenermap.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","~$goog.events.Listener","^29"]]],["^1I","goog/events/eventid.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","taoensso/truss.cljs"],[1630228118689,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$taoensso.truss.impl"]]],["^1I","goog/string/internal.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","clojure/test/check.cljc"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^2N","^2S","^2O","^2T","~$clojure.test.check.impl"]]],["^1I","edn_query_language/core.cljc"],[1630228119293,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^@","~$clojure.test.check","^2N","~$clojure.test.check.properties"]]],["^1I","goog/functions/functions.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","expound/paths.cljc"],[1630228118972,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^@","^3I"]]],["^1I","taoensso/truss/impl.cljs"],[1630228118689,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^Y"]]],["^1I","clojure/walk.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","goog/useragent/product.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2H","^2J","^2@"]]],["^1I","goog/net/eventtype.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/structs/map.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1I","goog/net/xhriopool.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2Z","~$goog.structs.PriorityPool"]]],["^1I","goog/structs/queue.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2="]]],["^1I","goog/labs/useragent/engine.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^22","^23"]]],["^1I","taoensso/timbre/appenders/core.cljs"],[1630228119105,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^19"]]],["^1I","cljs/reader.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^29","^3>","^2V","^2X"]]],["^1I","com/fulcrologic/fulcro/components.cljc"],[1630228119420,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^29","~$cljsjs.react","^Z","^@","^10","^1Z","^25","^17","^14","~$com.fulcrologic.fulcro.algorithms.lookup","^Y"]]],["^1I","goog/asserts/asserts.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1I","goog/debug/logbuffer.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>","~$goog.debug.LogRecord"]]],["^1I","cljs/tagged_literals.cljc"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^2U"]]],["^1I","goog/uri/uri.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^2>","^23","^31","^3F","^3G","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1I","ghostwheel/threading_macros.cljc"],[1630228119207,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^26","~$ghostwheel.utils"]]],["^1I","goog/net/errorcode.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^2B","node_modules/object-assign/index.js"],[1630228360000,1630228360000,1484580833000,"^1V",["^ ","^1W",0,"^1X",["^Q",[]],"^1Y",["^2C"]]],["^1I","ghostwheel/logging.cljc"],[1630228119285,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^J"]]],["^1I","goog/disposable/idisposable.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/promise/promise.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","~$goog.Thenable","^2>","^35","~$goog.async.run","^2R","^45","~$goog.promise.Resolver"]]],["^1I","cljs/spec/alpha.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^29","^1Z","^H","^25"]]],["^1I","goog/debug/logrecord.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/base.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",[]]],["^1I","goog/json/hybrid.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>","~$goog.json"]]],["^1I","goog/structs/structs.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^29"]]],["^1I","cljs/tools/reader/impl/errors.cljs"],[1630228358603,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^3;","^25","~$cljs.tools.reader.impl.inspect"]]],["^1I","cljsjs/react.cljs"],[1630228358937,"^1V",["^ ","^1W",null,"^1X",["^Q",[5]],"^1Y",["^15","^D","~$module$node_modules$react$index"]]],["^1I","clojure/string.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^23","^2X"]]],["^1I","goog/structs/pool.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^3L","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1I","clojure/test/check/random/longs/bit_count_impl.cljs"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^2B","node_modules/react/cjs/react.production.min.js"],[1630228360000,1630228360000,499162500000,"^1V",["^ ","^1W",1,"^1X",["^Q",[0]],"^1Y",["^2C","^3T"]]],["^1I","goog/net/httpstatus.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/structs/heap.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^29","~$goog.structs.Node"]]],["^1I","goog/debug/entrypointregistry.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>"]]],["^1I","goog/string/string.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2A"]]],["^1I","goog/reflect/reflect.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/labs/useragent/util.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2A"]]],["^1I","expound/printer.cljc"],[1630228118972,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^@","^J","^1Z","^Y","^3I","^2G"]]],["^1I","goog/debug/debug.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","~$goog.debug.errorcontext","^2@"]]],["^1I","goog/string/stringbuffer.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/debug/errorcontext.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","cljs/tools/reader/reader_types.cljs"],[1630228358603,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^3<","^23","^2X"]]],["^1I","goog/iter/iter.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^2>","~$goog.functions","~$goog.math"]]],["^1I","goog/async/nexttick.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^36","~$goog.dom.TagName","^4E","^2H","^2I"]]],["^1I","goog/debug/logger.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^2>","~$goog.debug","~$goog.debug.LogBuffer","^47"]]],["^1I","ghostwheel/core.cljc"],[1630228119207,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^Y","^1Z","^B","^3Z","^2N","^3[","^@","^F","^H","~$ghostwheel.reporting","~$ghostwheel.unghost","^4:","^26","~$ghostwheel.threading-macros","^24","~$cljs.analyzer.api","^20"]]],["^2B","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1630228360000,1630228360000,1549571078000,"^1V",["^ ","^1W",2,"^1X",["^Q",[]],"^1Y",["^2C"]]],["^1I","goog/events/event.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^3L","~$goog.events.EventId"]]],["^1I","cljs/tools/reader/impl/commons.cljs"],[1630228358603,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^3:","^3;","^3<"]]],["^1I","goog/dom/htmlelement.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","cljs/core.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["~$goog.math.Long","~$goog.math.Integer","^23","^29","^2=","^2<","^2X"]]],["^1I","clojure/test/check/random/longs.cljs"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","~$clojure.test.check.random.longs.bit-count-impl","^4O","^D"]]],["^1I","goog/log/log.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^4H","~$goog.debug.LogManager","^47","~$goog.debug.Logger"]]],["^1I","goog/structs/collection.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/events/browserevent.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^4H","^2?","^3M","~$goog.events.EventType","^2K","^2@"]]],["^1I","cljs/analyzer/api.cljc"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^1[","~$cljs.analyzer"]]],["^1I","goog/math/integer.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/structs/node.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","clojure/set.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","goog/uri/utils.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2=","^2>","^23"]]],["^1I","taoensso/timbre.cljs"],[1630228119105,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^19","~$taoensso.timbre.appenders.core"]]],["^1I","cljs/analyzer.cljc"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^23","^25","^Y","^1[","~$cljs.tagged-literals","^3>","^3;","^2U"]]],["^1I","goog/json/json.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]],["^1I","goog/events/listenable.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^4N"]]],["^1I","goog/net/xmlhttpfactory.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^3J"]]],["^1I","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],[1630228119420,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^Z"]]],["^1I","ghostwheel/unghost.cljc"],[1630228119555,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","goog/net/xmlhttp.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^2>","~$goog.net.WrapperXmlHttpFactory","^3K"]]],["^1I","cljs/test.cljs"],[1630228118934,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D","^25","^J"]]],["^1I","clojure/test/check/results.cljc"],[1630228119162,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15","^D"]]],["^1I","goog/net/xhrlike.js"],[1630228359392,"^1V",["^ ","^1W",null,"^1X",["^Q",[]],"^1Y",["^15"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.0.0-beta-13/fulcro-3.0.0-beta-13.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel.logging/0.3.9/ghostwheel.logging-0.3.9.jar!/ghostwheel/logging.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/threading_macros.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/test/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/random.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/reporting.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/orchestra/orchestra/2019.02.06-1/orchestra-2019.02.06-1.jar!/orchestra/spec/test.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/printer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/test.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/paths.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer/api.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.0.0-beta-13/fulcro-3.0.0-beta-13.jar!/com/fulcrologic/fulcro/components.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/ansi.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/generators.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/core.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/template.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer/macros.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/problems.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.0.0-beta-13/fulcro-3.0.0-beta-13.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/edn-query-language/eql/0.0.7/eql-0.0.7.jar!/edn_query_language/core.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/results.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env/macros.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/test.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/utils.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/properties.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/rose_tree.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/orchestra/orchestra/2019.02.06-1/orchestra-2019.02.06-1.jar!/orchestra_cljs/spec/test.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/encore/2.94.0/encore-2.94.0.jar!/taoensso/encore.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/edn.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/test/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.0.0-beta-13/fulcro-3.0.0-beta-13.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1630228119000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions that implement the query and component indexing.","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",1,"^9",5,"^:",1,"^;",47],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L"],"^M",["^ ","^N","^O"],"^P",["^Q",[]],"^R","^S","^V",null,"^W",["^ ","^X","^Y","^Z","^Z","^[","^10","^11","^12","^13","^Z","^14","^14","^D","^D","^15","^15","^Y","^Y","^16","^17","^O","^O","^18","^19","^1:","^O","^12","^12","^10","^10","^19","^19","^1;","^14","^17","^17"],"^1<",["^Q",["^1="]],"~:shadow/js-access-global",["^Q",["Error"]],"^1>",["^ ","^N","^O"],"~:defs",["^ ","~$link-query-props",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",45,"^9",7,"^:",45,"^;",23,"~:arglists",["^1A",["~$quote",["^1A",[[["^ ","~:keys",["~$key","~$children"],"^1C","~$ast"]]]]]],"^6","Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast."],"^R","~$com.fulcrologic.fulcro.algorithms.indexing/link-query-props","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",23,"~:method-params",["^1A",[["~$p__78985"]]],"~:protocol-impl",null,"~:arglists-meta",["^1A",[null,null]],"^9",1,"~:variadic?",false,"^8",45,"~:ret-tag",["^Q",["~$any","~$cljs.core/ISet"]],"^:",45,"~:max-fixed-arity",1,"~:fn-var",true,"^6S",["^1A",["^6T",["^1A",[[["^ ","^6U",["^6V","^6W"],"^1C","^6X"]]]]]],"^6","Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast."],"~$index-query*",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",13,"^9",8,"^:",13,"^;",20,"~:private",true,"^6S",["^1A",["^6T",["^1A",[["~$prop->classes",["^ ","~$parent-component","~:component","~$parent-children","~:children","^1C","^6X"]]]]]]],"^79",true,"^R","~$com.fulcrologic.fulcro.algorithms.indexing/index-query*","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",20,"^6Z",["^1A",[["^7:","~$p__78964"]]],"^70",null,"^71",["^1A",[null,null]],"^9",1,"^72",false,"^8",13,"^73",["^Q",[null,"^74"]],"^:",13,"^76",2,"^77",true,"^6S",["^1A",["^6T",["^1A",[["^7:",["^ ","^7;","^7<","^7=","^7>","^1C","^6X"]]]]]]],"~$drop-component!",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",22,"~:top-fn",["^ ","^72",false,"~:fixed-arity",2,"^76",2,"^6Z",["^1A",[["~$this","~$ident"],["^7D"]]],"^6S",["^1A",[["^7D","^7E"],["^7D"]]],"^71",["^1A",[null,null]]],"^9",7,"^8",116,"^:",116,"^6S",["^1A",["^6T",["^1A",[["^7D","^7E"],["^7D"]]]]],"^6","Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n  ident from the component itself.","~:jsdoc",["^1A",["@param {...*} var_args"]]],"^R","~$com.fulcrologic.fulcro.algorithms.indexing/drop-component!","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",22,"^7B",["^ ","^72",false,"^7C",2,"^76",2,"^6Z",["^1A",[["^7D","^7E"],["^7D"]]],"^6S",["^1A",[["^7D","^7E"],["^7D"]]],"^71",["^1A",[null,null]]],"^6Z",["^1A",[["^7D","^7E"],["^7D"]]],"^70",null,"^7C",2,"^71",["^1A",[null,null]],"^9",1,"^72",false,"~:methods",[["^ ","^7C",2,"^72",false,"~:tag",["^Q",[null,"^74"]]],["^ ","^7C",1,"^72",false,"^7I",["^Q",[null,"^74"]]]],"^8",116,"^:",116,"^76",2,"^77",true,"^6S",["^1A",[["^7D","^7E"],["^7D"]]],"^6","Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n  ident from the component itself.","^7F",["^1A",["@param {...*} var_args"]]],"~$index-root!",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",53,"^9",7,"^:",53,"^;",18,"^6S",["^1A",["^6T",["^1A",[["~$app"]]]]],"^6","Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n  This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted)."],"^R","~$com.fulcrologic.fulcro.algorithms.indexing/index-root!","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",18,"^6Z",["^1A",[["^7K"]]],"^70",null,"^71",["^1A",[null,null]],"^9",1,"^72",false,"^8",53,"^73",["^Q",[null,"^74"]],"^:",53,"^76",1,"^77",true,"^6S",["^1A",["^6T",["^1A",[["^7K"]]]]],"^6","Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n  This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted)."],"~$index-query",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",32,"^9",7,"^:",32,"^;",18,"^6S",["^1A",["^6T",["^1A",[["~$query"]]]]],"^6","Create an index of the given component-annotated query. Returns a map from query keyword to the component\n  class(es) that query for that keyword."],"^R","~$com.fulcrologic.fulcro.algorithms.indexing/index-query","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",18,"^6Z",["^1A",[["^7N"]]],"^70",null,"^71",["^1A",[null,null]],"^9",1,"^72",false,"^8",32,"^73",["^Q",[null,"^74"]],"^:",32,"^76",1,"^77",true,"^6S",["^1A",["^6T",["^1A",[["^7N"]]]]],"^6","Create an index of the given component-annotated query. Returns a map from query keyword to the component\n  class(es) that query for that keyword."],"~$index-component*",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",74,"^9",8,"^:",74,"^;",24,"^79",true,"^6S",["^1A",["^6T",["^1A",[["~$runtime-state","~$instance","^7E","~$cls"]]]]]],"^79",true,"^R","~$com.fulcrologic.fulcro.algorithms.indexing/index-component*","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",24,"^6Z",["^1A",[["^7Q","^7R","^7E","^7S"]]],"^70",null,"^71",["^1A",[null,null]],"^9",1,"^72",false,"^8",74,"^73",["^Q",[null,"~$clj","^74"]],"^:",74,"^76",4,"^77",true,"^6S",["^1A",["^6T",["^1A",[["^7Q","^7R","^7E","^7S"]]]]]],"~$index-component!",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",86,"^9",7,"^:",86,"^;",23,"^6S",["^1A",["^6T",["^1A",[["^7D"]]]]],"^6","Add a component instance to the app index. This adds the component to the `class->components` and\n   `ident->components` indexes."],"^R","~$com.fulcrologic.fulcro.algorithms.indexing/index-component!","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",23,"^6Z",["^1A",[["^7D"]]],"^70",null,"^71",["^1A",[null,null]],"^9",1,"^72",false,"^8",86,"^73",["^Q",[null,"^74"]],"^:",86,"^76",1,"^77",true,"^6S",["^1A",["^6T",["^1A",[["^7D"]]]]],"^6","Add a component instance to the app index. This adds the component to the `class->components` and\n   `ident->components` indexes."],"~$drop-component*",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",106,"^9",8,"^:",106,"^;",23,"^79",true,"^6S",["^1A",["^6T",["^1A",[["^7Q","^7R","^7E","^7S"]]]]]],"^79",true,"^R","~$com.fulcrologic.fulcro.algorithms.indexing/drop-component*","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",23,"^6Z",["^1A",[["^7Q","^7R","^7E","^7S"]]],"^70",null,"^71",["^1A",[null,null]],"^9",1,"^72",false,"^8",106,"^73",["^Q",["^7U","^74"]],"^:",106,"^76",4,"^77",true,"^6S",["^1A",["^6T",["^1A",[["^7Q","^7R","^7E","^7S"]]]]]],"~$top-level-keys",["^ ","^6R",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",39,"^9",7,"^:",39,"^;",21,"^6S",["^1A",["^6T",["^1A",[["^6X"]]]]],"^6","Return a set of keywords that are in the top-level of the given AST"],"^R","~$com.fulcrologic.fulcro.algorithms.indexing/top-level-keys","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",21,"^6Z",["^1A",[["^6X"]]],"^70",null,"^71",["^1A",[null,null]],"^9",1,"^72",false,"^8",39,"^73",["^Q",["^7U","^74"]],"^:",39,"^76",1,"^77",true,"^6S",["^1A",["^6T",["^1A",[["^6X"]]]]],"^6","Return a set of keywords that are in the top-level of the given AST"]],"^1?",["^ ","^[","^10","^11","^12","^D","^D","^O","^O","^18","^19","^1:","^O","^12","^12","^10","^10","^19","^19"],"~:cljs.analyzer/constants",["^ ","^1<",["^Q",["^7>","~:key","~:com.fulcrologic.fulcro.application/indexes","~:debug","~:idents-in-joins","~:root-props","~:prop->classes","~$_","^7<","~:com.fulcrologic.fulcro.application/state-atom","~:otherwise","~:class->components","~:com.fulcrologic.fulcro.application/root-class","~:com.fulcrologic.fulcro.application/runtime-atom","~:ident","~:dispatch-key","~:info","~:error","~:ident->components","~:linked-props","~:auto","~:p"]],"~:order",["^7<","^7>","^81","^8=","~$_","^88","^83","~:p","^8B","^87","^8;","^8:","^82","^85","^8A","^84","^86","^89","^8@","^8<","^8?","^8>"]],"^1E",["^ ","^1=",["^Q",[]]],"^1F",["^ "],"^1G",["^15","^D","^12","^17","^14","^O","^Y","^Z","^19","^10"]],"^U","^S","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1U",[["^8F","~:static-fns"],true,["^8F","~:elide-asserts"],true,["^8F","~:optimize-constants"],null,["^8F","^1L"],null,["^8F","~:external-config"],null,["^8F","~:tooling-config"],null,["^8F","~:emit-constants"],null,["^8F","~:load-tests"],false,["^8F","~:form-size-threshold"],null,["^8F","~:infer-externs"],true,["^8F","^1N"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^8F","~:fn-invoke-direct"],null,["^8F","~:source-map"],"/dev/null"]]]