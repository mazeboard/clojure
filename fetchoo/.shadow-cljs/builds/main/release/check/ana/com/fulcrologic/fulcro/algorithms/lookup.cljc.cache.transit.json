["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.algorithms.lookup');\n/**\n * Get the current value of a particular Fulcro plugin algorithm.  These are set by default and can be overridden\n *   when you create your fulcro app.\n * \n *   `app` - The application\n *   `k` - the algorithm to obtain. This can be a plain keyword or a symbol of the algorithm desired.\n * \n *   Supported algorithms that can be obtained/overridden in Fulcro (check the source of app/fulcro-app if you suspect this is out\n *   of date):\n * \n *   - `:tx!` - Internal implementation of transaction submission. Default `app/default-tx!`\n *   - `:global-eql-transform` - A `(fn [tx] tx')` that is applied to all outgoing requests (when using default `tx!`).\n *   Defaults to stripping things like `:ui/*` and form state config joins.\n *   - `:remote-error?` - A `(fn [result] boolean)` that defines what a remote error is.\n *   - `:global-error-action` - A `(fn [env] ...)` that is run on any remote error (as defined by `remote-error?`).\n *   - `:optimized-render!` - The concrete render algorithm for optimized renders (not root refreshes)\n *   - `:render!` - The top-level render function. Calls root render or optimized render by default. Renders on the calling thread.\n *   - `:schedule-render!` - The call that schedules a render. Defaults to using `js/requestAnimationFrame`.\n *   - `:default-result-action!` -  The action used for remote results in all mutations that do not have a `result-action` section.\n *   - `:index-root!` - The algorithm that scans the current query from root an indexes all classes by their queries.\n *   - `:index-component!` - The algorithm that adds a component to indexes when it mounts.\n *   - `:drop-component!` - The algorithm that removes a component from indexes when it unmounts.\n *   - `:props-middleware` - Middleware that can modify `props` for all components.\n *   - `:render-middleware` - Middlware that wraps all `render` methods of `defsc` components.\n * \n *   Returns nil if the algorithm is currently undefined.\n *   \n */\ncom.fulcrologic.fulcro.algorithms.lookup.app_algorithm = (function com$fulcrologic$fulcro$algorithms$lookup$app_algorithm(p__73389,k){\nvar map__73390 = p__73389;\nvar map__73390__$1 = (((((!((map__73390 == null))))?(((((map__73390.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73390.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73390):map__73390);\nvar app__$1 = map__73390__$1;\nvar algorithms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73390__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"algorithms\",\"com.fulcrologic.fulcro.application/algorithms\",-397334538));\nvar temp__5753__auto__ = ((((typeof k === 'string') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))))?cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(\"com.fulcrologic.fulcro.algorithm\",cljs.core.name(k)):null);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar nm = temp__5753__auto__;\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(app__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"algorithms\",\"com.fulcrologic.fulcro.application/algorithms\",-397334538),nm], null),null);\n} else {\nreturn null;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Namespace with support for finding plug-in algorithms on the app. Avoids circular references\n  within the library itself.","~:file","com/fulcrologic/fulcro/algorithms/lookup.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",45],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.algorithms.lookup","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$taoensso.timbre","^V","~$log","^V","^D","^D","~$goog","^X"],"~:seen",["^O",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D","^V","^V","^W","^V"],"~:form",["~#list",["~$ns","^Q","Namespace with support for finding plug-in algorithms on the app. Avoids circular references\n  within the library itself.",["^12",["^Z",["^V","~:as","^W"]]]]],"~:flags",["^ ","^Z",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^X","^D","^V"]],"^S","^Q","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/algorithms/lookup.cljc"],"~:compiled-at",1630228761166,"~:resource-name","com/fulcrologic/fulcro/algorithms/lookup.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.algorithms.lookup\n  \"Namespace with support for finding plug-in algorithms on the app. Avoids circular references\n  within the library itself.\"\n  (:require\n    [taoensso.timbre :as log]))\n\n(defn app-algorithm\n  \"Get the current value of a particular Fulcro plugin algorithm.  These are set by default and can be overridden\n  when you create your fulcro app.\n\n  `app` - The application\n  `k` - the algorithm to obtain. This can be a plain keyword or a symbol of the algorithm desired.\n\n  Supported algorithms that can be obtained/overridden in Fulcro (check the source of app/fulcro-app if you suspect this is out\n  of date):\n\n  - `:tx!` - Internal implementation of transaction submission. Default `app/default-tx!`\n  - `:global-eql-transform` - A `(fn [tx] tx')` that is applied to all outgoing requests (when using default `tx!`).\n     Defaults to stripping things like `:ui/*` and form state config joins.\n  - `:remote-error?` - A `(fn [result] boolean)` that defines what a remote error is.\n  - `:global-error-action` - A `(fn [env] ...)` that is run on any remote error (as defined by `remote-error?`).\n  - `:optimized-render!` - The concrete render algorithm for optimized renders (not root refreshes)\n  - `:render!` - The top-level render function. Calls root render or optimized render by default. Renders on the calling thread.\n  - `:schedule-render!` - The call that schedules a render. Defaults to using `js/requestAnimationFrame`.\n  - `:default-result-action!` -  The action used for remote results in all mutations that do not have a `result-action` section.\n  - `:index-root!` - The algorithm that scans the current query from root an indexes all classes by their queries.\n  - `:index-component!` - The algorithm that adds a component to indexes when it mounts.\n  - `:drop-component!` - The algorithm that removes a component from indexes when it unmounts.\n  - `:props-middleware` - Middleware that can modify `props` for all components.\n  - `:render-middleware` - Middlware that wraps all `render` methods of `defsc` components.\n\n  Returns nil if the algorithm is currently undefined.\n  \"\n  [{:com.fulcrologic.fulcro.application/keys [algorithms] :as app} k]\n  (when-let [nm (when (or (string? k) (keyword? k) (symbol? k))\n                  (keyword \"com.fulcrologic.fulcro.algorithm\" (name k)))]\n    (get-in app [:com.fulcrologic.fulcro.application/algorithms nm] nil)))\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAAA,AAAMM,AA2B6DG;AA3BnE,AAAA,AAAAR,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AA2B8DO;AA3B9D,AAAAH,AAAAJ,AAAA,AA2B8CM;AA3B9C,AA4BE,AAAAG,AAAc,AAAA,AAAA,AAAM,AAAI,AAASD,AAAG,AAAAG,AAAUH,AAAG,AAAAI,AAASJ,AAC1C,AAAA,AAACK,AAA2C,AAACC,AAAKN;AADlE,AAAA,AAAAC;AAAA,AAAA,AAAAA,AAAWC;AAAX,AAEE,AAAA,AAAA,AAAA,AAACK,AAAOR,AAAoDG;;AAF9D","names",["p__73389","map__73390","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","algorithms","app","k","temp__5753__auto__","nm","cljs.core/Keyword","cljs.core/Symbol","cljs.core.keyword.cljs$core$IFn$_invoke$arity$2","cljs.core/name","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3"]]],"~:cache-keys",["~#cmap",[["^19","goog/dom/tagname.js"],[1630228359392,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^X","~$goog.dom.HtmlElement"]]],["^19","goog/async/freelist.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/labs/useragent/platform.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.labs.userAgent.util","~$goog.string"]]],["^19","goog/timer/timer.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.Promise","~$goog.events.EventTarget"]]],["^19","com/fulcrologic/fulcro/algorithms/lookup.cljc"],[1630228119420,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^V"]]],["^19","cljs/tools/reader/impl/utils.cljs"],[1630228358603,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","~$clojure.string","^1L"]]],["^19","goog/math/math.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.array","~$goog.asserts"]]],["^19","goog/string/stringformat.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1L"]]],["^19","goog/events/eventtype.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^19","goog/labs/useragent/browser.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1K","~$goog.object","~$goog.string.internal"]]],["^19","goog/array/array.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q"]]],["^19","goog/useragent/useragent.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1K","~$goog.reflect","^1L"]]],["^19","goog/structs/prioritypool.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^19","goog/async/run.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^19","taoensso/encore.cljs"],[1630228119299,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^1O","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^1T","^1L","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^19","goog/debug/error.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/async/workqueue.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q","~$goog.async.FreeList"]]],["^19","goog/events/events.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^1R","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^19","goog/promise/resolver.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/events/browserfeature.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1S"]]],["^19","cljs/tools/reader/edn.cljs"],[1630228358603,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^1L","^27"]]],["^19","goog/structs/priorityqueue.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.structs.Heap"]]],["^19","goog/net/xhrio.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.Timer","^1P","^1Q","^2A","^1N","~$goog.json.hybrid","~$goog.log","^2>","^2=","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^1T","^1L","^2<","~$goog.structs.Map","~$goog.uri.utils","^1S"]]],["^19","goog/promise/thenable.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/dom/nodetype.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","cljs/tools/reader/impl/inspect.cljs"],[1630228358603,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D"]]],["^19","cljs/tools/reader.cljs"],[1630228358603,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^2F","^2G","^2H","^2E","^1P","^1L","^27"]]],["^19","goog/net/wrapperxmlhttpfactory.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^19","goog/events/eventtarget.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.Disposable","^1Q","^28","~$goog.events.Event","^2C","^2D","^1T"]]],["^19","goog/disposable/disposable.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.disposable.IDisposable"]]],["^19","goog/object/object.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/structs/set.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^2<","~$goog.structs.Collection","^2P"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^19","goog/math/long.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q","^1Y"]]],["^19","goog/events/listener.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.events.ListenableKey"]]],["^19","goog/events/listenermap.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","~$goog.events.Listener","^1T"]]],["^19","goog/events/eventid.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","taoensso/truss.cljs"],[1630228118689,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","~$taoensso.truss.impl"]]],["^19","goog/string/internal.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/functions/functions.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","taoensso/truss/impl.cljs"],[1630228118689,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^23"]]],["^19","goog/net/eventtype.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/structs/map.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^19","goog/net/xhriopool.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^29","~$goog.structs.PriorityPool"]]],["^19","goog/structs/queue.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P"]]],["^19","goog/labs/useragent/engine.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1K","^1L"]]],["^19","taoensso/timbre/appenders/core.cljs"],[1630228119105,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^1O","~$taoensso.encore"]]],["^19","cljs/reader.cljs"],[1630228118934,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^1T","^2I","^25","^27"]]],["^19","goog/asserts/asserts.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^19","goog/debug/logbuffer.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q","~$goog.debug.LogRecord"]]],["^19","goog/uri/uri.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1Q","^1L","^2<","^2P","^2Q","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^19","goog/net/errorcode.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/disposable/idisposable.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/promise/promise.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","~$goog.Thenable","^1Q","^2@","~$goog.async.run","^22","^34","~$goog.promise.Resolver"]]],["^19","goog/debug/logrecord.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/base.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",[]]],["^19","goog/json/hybrid.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q","~$goog.json"]]],["^19","goog/structs/structs.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1T"]]],["^19","cljs/tools/reader/impl/errors.cljs"],[1630228358603,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^2F","^1O","~$cljs.tools.reader.impl.inspect"]]],["^19","clojure/string.cljs"],[1630228118934,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^1L","^27"]]],["^19","goog/structs/pool.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^2T","~$goog.structs.Queue","~$goog.structs.Set"]]],["^19","goog/net/httpstatus.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/structs/heap.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1T","~$goog.structs.Node"]]],["^19","goog/debug/entrypointregistry.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q"]]],["^19","goog/string/string.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1U"]]],["^19","goog/reflect/reflect.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/labs/useragent/util.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1U"]]],["^19","goog/debug/debug.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","~$goog.debug.errorcontext","^1S"]]],["^19","goog/string/stringbuffer.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/debug/errorcontext.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","cljs/tools/reader/reader_types.cljs"],[1630228358603,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^2G","^1L","^27"]]],["^19","goog/iter/iter.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1Q","~$goog.functions","~$goog.math"]]],["^19","goog/async/nexttick.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^2A","~$goog.dom.TagName","^3B","^1V","^1W"]]],["^19","goog/debug/logger.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1Q","~$goog.debug","~$goog.debug.LogBuffer","^36"]]],["^19","goog/events/event.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^2T","~$goog.events.EventId"]]],["^19","cljs/tools/reader/impl/commons.cljs"],[1630228358603,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^2E","^2F","^2G"]]],["^19","goog/dom/htmlelement.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","cljs/core.cljs"],[1630228118934,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["~$goog.math.Long","~$goog.math.Integer","^1L","^1T","^1P","~$goog.Uri","^27"]]],["^19","goog/log/log.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^3E","~$goog.debug.LogManager","^36","~$goog.debug.Logger"]]],["^19","goog/structs/collection.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/events/browserevent.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^3E","^1R","^2U","~$goog.events.EventType","^1Y","^1S"]]],["^19","goog/math/integer.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/structs/node.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","clojure/set.cljs"],[1630228118934,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D"]]],["^19","goog/uri/utils.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1P","^1Q","^1L"]]],["^19","taoensso/timbre.cljs"],[1630228119105,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^D","^1O","^33","~$taoensso.timbre.appenders.core"]]],["^19","goog/json/json.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]],["^19","goog/events/listenable.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^3G"]]],["^19","goog/net/xmlhttpfactory.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^2R"]]],["^19","goog/net/xmlhttp.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X","^1Q","~$goog.net.WrapperXmlHttpFactory","^2S"]]],["^19","goog/net/xhrlike.js"],[1630228359392,"^1F",["^ ","^1G",null,"^1H",["^O",[]],"^1I",["^X"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/encore/2.94.0/encore-2.94.0.jar!/taoensso/encore.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/edn.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Namespace with support for finding plug-in algorithms on the app. Avoids circular references\n  within the library itself.","^7","com/fulcrologic/fulcro/algorithms/lookup.cljc","^8",1,"^9",5,"^:",1,"^;",45],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L"],"^M",null,"^N",["^O",[]],"^P","^Q","^T",null,"^U",["^ ","^V","^V","^W","^V","^D","^D","^X","^X"],"^Y",["^O",["^Z"]],"^[",null,"~:defs",["^ ","~$app-algorithm",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/lookup.cljc","^8",7,"^9",7,"^:",7,"^;",20,"~:arglists",["^12",["~$quote",["^12",[[["^ ","~:com.fulcrologic.fulcro.application/keys",["~$algorithms"],"^14","~$app"],"~$k"]]]]],"^6","Get the current value of a particular Fulcro plugin algorithm.  These are set by default and can be overridden\n  when you create your fulcro app.\n\n  `app` - The application\n  `k` - the algorithm to obtain. This can be a plain keyword or a symbol of the algorithm desired.\n\n  Supported algorithms that can be obtained/overridden in Fulcro (check the source of app/fulcro-app if you suspect this is out\n  of date):\n\n  - `:tx!` - Internal implementation of transaction submission. Default `app/default-tx!`\n  - `:global-eql-transform` - A `(fn [tx] tx')` that is applied to all outgoing requests (when using default `tx!`).\n     Defaults to stripping things like `:ui/*` and form state config joins.\n  - `:remote-error?` - A `(fn [result] boolean)` that defines what a remote error is.\n  - `:global-error-action` - A `(fn [env] ...)` that is run on any remote error (as defined by `remote-error?`).\n  - `:optimized-render!` - The concrete render algorithm for optimized renders (not root refreshes)\n  - `:render!` - The top-level render function. Calls root render or optimized render by default. Renders on the calling thread.\n  - `:schedule-render!` - The call that schedules a render. Defaults to using `js/requestAnimationFrame`.\n  - `:default-result-action!` -  The action used for remote results in all mutations that do not have a `result-action` section.\n  - `:index-root!` - The algorithm that scans the current query from root an indexes all classes by their queries.\n  - `:index-component!` - The algorithm that adds a component to indexes when it mounts.\n  - `:drop-component!` - The algorithm that removes a component from indexes when it unmounts.\n  - `:props-middleware` - Middleware that can modify `props` for all components.\n  - `:render-middleware` - Middlware that wraps all `render` methods of `defsc` components.\n\n  Returns nil if the algorithm is currently undefined.\n  "],"^P","~$com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","^7","com/fulcrologic/fulcro/algorithms/lookup.cljc","^;",20,"~:method-params",["^12",[["~$p__73389","~$k"]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^9",1,"~:variadic?",false,"^8",7,"~:ret-tag",["^O",["~$any","~$clj-nil"]],"^:",7,"~:max-fixed-arity",2,"~:fn-var",true,"^4O",["^12",["^4P",["^12",[[["^ ","^4Q",["^4R"],"^14","^4S"],"~$k"]]]]],"^6","Get the current value of a particular Fulcro plugin algorithm.  These are set by default and can be overridden\n  when you create your fulcro app.\n\n  `app` - The application\n  `k` - the algorithm to obtain. This can be a plain keyword or a symbol of the algorithm desired.\n\n  Supported algorithms that can be obtained/overridden in Fulcro (check the source of app/fulcro-app if you suspect this is out\n  of date):\n\n  - `:tx!` - Internal implementation of transaction submission. Default `app/default-tx!`\n  - `:global-eql-transform` - A `(fn [tx] tx')` that is applied to all outgoing requests (when using default `tx!`).\n     Defaults to stripping things like `:ui/*` and form state config joins.\n  - `:remote-error?` - A `(fn [result] boolean)` that defines what a remote error is.\n  - `:global-error-action` - A `(fn [env] ...)` that is run on any remote error (as defined by `remote-error?`).\n  - `:optimized-render!` - The concrete render algorithm for optimized renders (not root refreshes)\n  - `:render!` - The top-level render function. Calls root render or optimized render by default. Renders on the calling thread.\n  - `:schedule-render!` - The call that schedules a render. Defaults to using `js/requestAnimationFrame`.\n  - `:default-result-action!` -  The action used for remote results in all mutations that do not have a `result-action` section.\n  - `:index-root!` - The algorithm that scans the current query from root an indexes all classes by their queries.\n  - `:index-component!` - The algorithm that adds a component to indexes when it mounts.\n  - `:drop-component!` - The algorithm that removes a component from indexes when it unmounts.\n  - `:props-middleware` - Middleware that can modify `props` for all components.\n  - `:render-middleware` - Middlware that wraps all `render` methods of `defsc` components.\n\n  Returns nil if the algorithm is currently undefined.\n  "]],"^10",["^ ","^D","^D","^V","^V","^W","^V"],"~:cljs.analyzer/constants",["^ ","^Y",["^O",["~:com.fulcrologic.fulcro.application/algorithms"]],"~:order",["^54"]],"^15",["^ ","^Z",["^O",[]]],"^16",["^ "],"^17",["^X","^D","^V"]],"^S","^Q","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1E",[["^58","~:static-fns"],true,["^58","~:elide-asserts"],true,["^58","~:optimize-constants"],null,["^58","^1<"],null,["^58","~:external-config"],null,["^58","~:tooling-config"],null,["^58","~:emit-constants"],null,["^58","~:load-tests"],false,["^58","~:form-size-threshold"],null,["^58","~:infer-externs"],true,["^58","^1>"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^58","~:fn-invoke-direct"],null,["^58","~:source-map"],"/dev/null"]]]