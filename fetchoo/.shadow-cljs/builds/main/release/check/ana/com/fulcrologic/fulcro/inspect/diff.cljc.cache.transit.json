["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.inspect.diff');\ncom.fulcrologic.fulcro.inspect.diff.updates = (function com$fulcrologic$fulcro$inspect$diff$updates(a,b){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (adds,p__74992){\nvar vec__74995 = p__74992;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74995,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74995,(1),null);\nvar va = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a,k,new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"unset\",\"fulcro.inspect.lib.diff/unset\",-1153887743));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,va)){\nreturn adds;\n} else {\nif(((cljs.core.map_QMARK_(v)) && (cljs.core.map_QMARK_(va)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(adds,k,(com.fulcrologic.fulcro.inspect.diff.updates.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.inspect.diff.updates.cljs$core$IFn$_invoke$arity$2(va,v) : com.fulcrologic.fulcro.inspect.diff.updates.call(null,va,v)));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(adds,k,v);\n}\n}\n}),cljs.core.PersistentArrayMap.EMPTY,b);\n});\ncom.fulcrologic.fulcro.inspect.diff.removals = (function com$fulcrologic$fulcro$inspect$diff$removals(a,b){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (rems,p__75007){\nvar vec__75009 = p__75007;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75009,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75009,(1),null);\nvar temp__5751__auto__ = cljs.core.find(b,k);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar vec__75013 = temp__5751__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75013,(0),null);\nvar vb = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75013,(1),null);\nif(((cljs.core.map_QMARK_(v)) && (cljs.core.map_QMARK_(vb)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(v,vb)))){\nvar childs = (com.fulcrologic.fulcro.inspect.diff.removals.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.inspect.diff.removals.cljs$core$IFn$_invoke$arity$2(v,vb) : com.fulcrologic.fulcro.inspect.diff.removals.call(null,v,vb));\nif(cljs.core.seq(childs)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rems,cljs.core.PersistentArrayMap.createAsIfByAssoc([k,childs]));\n} else {\nreturn rems;\n}\n} else {\nreturn rems;\n}\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rems,(function (){var G__75020 = k;\nif(cljs.core.map_QMARK_(k)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__75020,new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"key?\",\"fulcro.inspect.lib.diff/key?\",325118813),true);\n} else {\nreturn G__75020;\n}\n})());\n}\n}),cljs.core.PersistentVector.EMPTY,a);\n});\ncom.fulcrologic.fulcro.inspect.diff.diff = (function com$fulcrologic$fulcro$inspect$diff$diff(a,b){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"updates\",\"fulcro.inspect.lib.diff/updates\",221795125),com.fulcrologic.fulcro.inspect.diff.updates(a,b),new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"removals\",\"fulcro.inspect.lib.diff/removals\",-1638817439),com.fulcrologic.fulcro.inspect.diff.removals(a,b)], null);\n});\ncom.fulcrologic.fulcro.inspect.diff.deep_merge = (function com$fulcrologic$fulcro$inspect$diff$deep_merge(x,y){\nif(((cljs.core.map_QMARK_(x)) && (cljs.core.map_QMARK_(y)))){\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(com.fulcrologic.fulcro.inspect.diff.deep_merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x,y], 0));\n} else {\nreturn y;\n}\n});\ncom.fulcrologic.fulcro.inspect.diff.patch_updates = (function com$fulcrologic$fulcro$inspect$diff$patch_updates(x,p__75041){\nvar map__75043 = p__75041;\nvar map__75043__$1 = (((((!((map__75043 == null))))?(((((map__75043.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75043.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75043):map__75043);\nvar updates = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75043__$1,new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"updates\",\"fulcro.inspect.lib.diff/updates\",221795125));\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(com.fulcrologic.fulcro.inspect.diff.deep_merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x,updates], 0));\n});\ncom.fulcrologic.fulcro.inspect.diff.patch_removals = (function com$fulcrologic$fulcro$inspect$diff$patch_removals(x,p__75050){\nvar map__75052 = p__75050;\nvar map__75052__$1 = (((((!((map__75052 == null))))?(((((map__75052.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75052.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75052):map__75052);\nvar removals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75052__$1,new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"removals\",\"fulcro.inspect.lib.diff/removals\",-1638817439));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (map__75052,map__75052__$1,removals){\nreturn (function (final$,rem){\nif(cljs.core.truth_(new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"key?\",\"fulcro.inspect.lib.diff/key?\",325118813).cljs$core$IFn$_invoke$arity$1(rem))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(final$,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(rem,new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"key?\",\"fulcro.inspect.lib.diff/key?\",325118813)));\n} else {\nif(cljs.core.map_QMARK_(rem)){\nvar vec__75065 = cljs.core.first(rem);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75065,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75065,(1),null);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(final$,k,((function (vec__75065,k,v,map__75052,map__75052__$1,removals){\nreturn (function (p1__75049_SHARP_){\nvar G__75073 = p1__75049_SHARP_;\nvar G__75074 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro.inspect.lib.diff\",\"removals\",\"fulcro.inspect.lib.diff/removals\",-1638817439),v], null);\nreturn (com.fulcrologic.fulcro.inspect.diff.patch_removals.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.inspect.diff.patch_removals.cljs$core$IFn$_invoke$arity$2(G__75073,G__75074) : com.fulcrologic.fulcro.inspect.diff.patch_removals.call(null,G__75073,G__75074));\n});})(vec__75065,k,v,map__75052,map__75052__$1,removals))\n);\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(final$,rem);\n\n}\n}\n});})(map__75052,map__75052__$1,removals))\n,x,removals);\n});\ncom.fulcrologic.fulcro.inspect.diff.patch = (function com$fulcrologic$fulcro$inspect$diff$patch(x,diff){\nreturn com.fulcrologic.fulcro.inspect.diff.patch_removals(com.fulcrologic.fulcro.inspect.diff.patch_updates(x,diff),diff);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Internal algorithms for sending db diffs to Inspect tool.","~:file","com/fulcrologic/fulcro/inspect/diff.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",40],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.inspect.diff","~:op","~:ns","~:imports",null,"~:requires",["^ ","^?","^@","~$s","^@","^D","^D","~$goog","^V","^@","^@"],"~:seen",["^O",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D","^?","^@","~$s","^@","^@","^@"],"~:form",["~#list",["~$ns","^Q","Internal algorithms for sending db diffs to Inspect tool.",["^10",["^X",["^?","~:as","~$s"]]]]],"~:flags",["^ ","^X",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^V","^D","^@"]],"^S","^Q","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/inspect/diff.cljc"],"~:compiled-at",1630228761395,"~:resource-name","com/fulcrologic/fulcro/inspect/diff.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.inspect.diff\n  \"Internal algorithms for sending db diffs to Inspect tool.\"\n  (:require [clojure.spec.alpha :as s]))\n\n(defn updates [a b]\n  (reduce\n    (fn [adds [k v]]\n      (let [va (get a k :fulcro.inspect.lib.diff/unset)]\n        (if (= v va)\n          adds\n          (if (and (map? v) (map? va))\n            (assoc adds k (updates va v))\n            (assoc adds k v)))))\n    {}\n    b))\n\n(defn removals [a b]\n  (reduce\n    (fn [rems [k v]]\n      (if-let [[_ vb] (find b k)]\n        (if (and (map? v) (map? vb) (not= v vb))\n          (let [childs (removals v vb)]\n            (if (seq childs)\n              (conj rems {k childs})\n              rems))\n          rems)\n        (conj rems (cond-> k (map? k) (assoc :fulcro.inspect.lib.diff/key? true)))))\n    []\n    a))\n\n(defn diff [a b]\n  {:fulcro.inspect.lib.diff/updates  (updates a b)\n   :fulcro.inspect.lib.diff/removals (removals a b)})\n\n(defn deep-merge [x y]\n  (if (and (map? x) (map? y))\n    (merge-with deep-merge x y)\n    y))\n\n(defn patch-updates [x {:fulcro.inspect.lib.diff/keys [updates]}]\n  (merge-with deep-merge x updates))\n\n(defn patch-removals [x {:fulcro.inspect.lib.diff/keys [removals]}]\n  (reduce\n    (fn [final rem]\n      (cond\n        (:fulcro.inspect.lib.diff/key? rem)\n        (dissoc final (dissoc rem :fulcro.inspect.lib.diff/key?))\n\n        (map? rem)\n        (let [[k v] (first rem)]\n          (update final k #(patch-removals % {:fulcro.inspect.lib.diff/removals v})))\n\n        :else\n        (dissoc final rem)))\n    x\n    removals))\n\n(defn patch [x diff]\n  (-> x\n      (patch-updates diff)\n      (patch-removals diff)))\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["com.fulcrologic.fulcro.inspect.diff/updates","a","b","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__74992","vec__74995","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","adds","k","v","va","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/map?","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.inspect.diff/removals","p__75007","vec__75009","rems","temp__5751__auto__","vec__75013","_","vb","cljs.core/find","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","childs","cljs.core/seq","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","G__75020","com.fulcrologic.fulcro.inspect.diff/diff","com.fulcrologic.fulcro.inspect.diff/deep-merge","x","y","cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic","p__75041","map__75043","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.inspect.diff/patch-updates","updates","p__75050","map__75052","com.fulcrologic.fulcro.inspect.diff/patch-removals","removals","final","rem","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","vec__75065","cljs.core/first","p1__75049#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","G__75073","G__75074","com.fulcrologic.fulcro.inspect.diff/patch","diff"]]],"~:cache-keys",["~#cmap",[["^17","cljs/spec/gen/alpha.cljs"],[1630228118934,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^V","^D","~$goog.Uri"]]],["^17","goog/math/math.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","~$goog.array","~$goog.asserts"]]],["^17","goog/array/array.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^1J"]]],["^17","goog/debug/error.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],["^17","goog/dom/nodetype.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],["^17","goog/object/object.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^17","goog/math/long.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^1J","~$goog.reflect"]]],["^17","goog/string/internal.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],["^17","goog/functions/functions.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],["^17","clojure/walk.cljs"],[1630228118934,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^D"]]],["^17","goog/structs/map.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^17","goog/asserts/asserts.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^17","goog/uri/uri.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^1I","^1J","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^17","cljs/spec/alpha.cljs"],[1630228118934,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^D","~$goog.object","~$clojure.walk","^H","~$clojure.string"]]],["^17","goog/base.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",[]]],["^17","goog/structs/structs.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^1I","^1W"]]],["^17","clojure/string.cljs"],[1630228118934,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^D","^1Q","~$goog.string.StringBuffer"]]],["^17","com/fulcrologic/fulcro/inspect/diff.cljc"],[1630228119420,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^D","^@"]]],["^17","goog/string/string.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","~$goog.string.internal"]]],["^17","goog/reflect/reflect.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],["^17","goog/string/stringbuffer.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],["^17","goog/iter/iter.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^1I","^1J","~$goog.functions","~$goog.math"]]],["^17","cljs/core.cljs"],[1630228118934,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["~$goog.math.Long","~$goog.math.Integer","^1Q","^1W","^1I","^1H","^1Z"]]],["^17","goog/math/integer.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V"]]],["^17","goog/uri/utils.js"],[1630228359392,"^1D",["^ ","^1E",null,"^1F",["^O",[]],"^1G",["^V","^1I","^1J","^1Q"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Internal algorithms for sending db diffs to Inspect tool.","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",1,"^9",5,"^:",1,"^;",40],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L"],"^M",null,"^N",["^O",[]],"^P","^Q","^T",null,"^U",["^ ","^?","^@","~$s","^@","^D","^D","^V","^V","^@","^@"],"^W",["^O",["^X"]],"^Y",null,"~:defs",["^ ","~$updates",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",5,"^9",7,"^:",5,"^;",14,"~:arglists",["^10",["~$quote",["^10",[["~$a","~$b"]]]]]],"^P","~$com.fulcrologic.fulcro.inspect.diff/updates","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^;",14,"~:method-params",["^10",[["~$a","~$b"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^9",1,"~:variadic?",false,"^8",5,"~:ret-tag",["^O",[null,"~$any"]],"^:",5,"~:max-fixed-arity",2,"~:fn-var",true,"^2U",["^10",["^2V",["^10",[["~$a","~$b"]]]]]],"~$removals",["^ ","^2T",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",17,"^9",7,"^:",17,"^;",15,"^2U",["^10",["^2V",["^10",[["~$a","~$b"]]]]]],"^P","~$com.fulcrologic.fulcro.inspect.diff/removals","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^;",15,"^2X",["^10",[["~$a","~$b"]]],"^2Y",null,"^2Z",["^10",[null,null]],"^9",1,"^2[",false,"^8",17,"^30",["^O",[null,"^31"]],"^:",17,"^32",2,"^33",true,"^2U",["^10",["^2V",["^10",[["~$a","~$b"]]]]]],"~$diff",["^ ","^2T",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",31,"^9",7,"^:",31,"^;",11,"^2U",["^10",["^2V",["^10",[["~$a","~$b"]]]]]],"^P","~$com.fulcrologic.fulcro.inspect.diff/diff","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^;",11,"^2X",["^10",[["~$a","~$b"]]],"^2Y",null,"^2Z",["^10",[null,null]],"^9",1,"^2[",false,"^8",31,"^30","~$cljs.core/IMap","^:",31,"^32",2,"^33",true,"^2U",["^10",["^2V",["^10",[["~$a","~$b"]]]]]],"~$deep-merge",["^ ","^2T",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",35,"^9",7,"^:",35,"^;",17,"^2U",["^10",["^2V",["^10",[["~$x","~$y"]]]]]],"^P","~$com.fulcrologic.fulcro.inspect.diff/deep-merge","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^;",17,"^2X",["^10",[["~$x","~$y"]]],"^2Y",null,"^2Z",["^10",[null,null]],"^9",1,"^2[",false,"^8",35,"^30",["^O",[null,"^31","~$clj-nil"]],"^:",35,"^32",2,"^33",true,"^2U",["^10",["^2V",["^10",[["~$x","~$y"]]]]]],"~$patch-updates",["^ ","^2T",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",40,"^9",7,"^:",40,"^;",20,"^2U",["^10",["^2V",["^10",[["~$x",["^ ","~:fulcro.inspect.lib.diff/keys",["^2S"]]]]]]]],"^P","~$com.fulcrologic.fulcro.inspect.diff/patch-updates","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^;",20,"^2X",["^10",[["~$x","~$p__75041"]]],"^2Y",null,"^2Z",["^10",[null,null]],"^9",1,"^2[",false,"^8",40,"^30",["^O",["^31","^3;"]],"^:",40,"^32",2,"^33",true,"^2U",["^10",["^2V",["^10",[["~$x",["^ ","^3=",["^2S"]]]]]]]],"~$patch-removals",["^ ","^2T",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",43,"^9",7,"^:",43,"^;",21,"^2U",["^10",["^2V",["^10",[["~$x",["^ ","^3=",["^34"]]]]]]]],"^P","~$com.fulcrologic.fulcro.inspect.diff/patch-removals","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^;",21,"^2X",["^10",[["~$x","~$p__75050"]]],"^2Y",null,"^2Z",["^10",[null,null]],"^9",1,"^2[",false,"^8",43,"^30",["^O",[null,"^31"]],"^:",43,"^32",2,"^33",true,"^2U",["^10",["^2V",["^10",[["~$x",["^ ","^3=",["^34"]]]]]]]],"~$patch",["^ ","^2T",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^8",59,"^9",7,"^:",59,"^;",12,"^2U",["^10",["^2V",["^10",[["~$x","^36"]]]]]],"^P","~$com.fulcrologic.fulcro.inspect.diff/patch","^7","com/fulcrologic/fulcro/inspect/diff.cljc","^;",12,"^2X",["^10",[["~$x","^36"]]],"^2Y",null,"^2Z",["^10",[null,null]],"^9",1,"^2[",false,"^8",59,"^30",["^O",[null,"^31"]],"^:",59,"^32",2,"^33",true,"^2U",["^10",["^2V",["^10",[["~$x","^36"]]]]]]],"^Z",["^ ","^D","^D","^?","^@","~$s","^@","^@","^@"],"~:cljs.analyzer/constants",["^ ","^W",["^O",["~:fulcro.inspect.lib.diff/removals","~:fulcro.inspect.lib.diff/unset","~:else","~:fulcro.inspect.lib.diff/updates","~:fulcro.inspect.lib.diff/key?"]],"~:order",["^3G","^3J","^3I","^3F","^3H"]],"^13",["^ ","^X",["^O",[]]],"^14",["^ "],"^15",["^V","^D","^@"]],"^S","^Q","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1C",[["^3N","~:static-fns"],true,["^3N","~:elide-asserts"],true,["^3N","~:optimize-constants"],null,["^3N","^1:"],null,["^3N","~:external-config"],null,["^3N","~:tooling-config"],null,["^3N","~:emit-constants"],null,["^3N","~:load-tests"],false,["^3N","~:form-size-threshold"],null,["^3N","~:infer-externs"],true,["^3N","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^3N","~:fn-invoke-direct"],null,["^3N","~:source-map"],"/dev/null"]]]