["^ ","~:output",["^ ","~:js","goog.provide('ghostwheel.logging');\nghostwheel.logging._STAR_nesting = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(\"\");\nghostwheel.logging._STAR_report_output_STAR_ = new cljs.core.Keyword(null,\"js-console\",\"js-console\",1240105791);\nghostwheel.logging.ghostwheel_colors = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"base1\",\"base1\",-1379049855),new cljs.core.Keyword(null,\"orange\",\"orange\",73816386),new cljs.core.Keyword(null,\"purple1\",\"purple1\",1665392325),new cljs.core.Keyword(null,\"base3\",\"base3\",-1172895995),new cljs.core.Keyword(null,\"purple0\",\"purple0\",-1668477083),new cljs.core.Keyword(null,\"orange0\",\"orange0\",1459969095),new cljs.core.Keyword(null,\"yellow\",\"yellow\",-881035449),new cljs.core.Keyword(null,\"base2\",\"base2\",1736987560),new cljs.core.Keyword(null,\"green0\",\"green0\",935416937),new cljs.core.Keyword(null,\"green\",\"green\",-945526839),new cljs.core.Keyword(null,\"green1\",\"green1\",1162170698),new cljs.core.Keyword(null,\"cyan\",\"cyan\",1118839274),new cljs.core.Keyword(null,\"violet\",\"violet\",-1351470549),new cljs.core.Keyword(null,\"purple2\",\"purple2\",-1568108659),new cljs.core.Keyword(null,\"base0\",\"base0\",128742798),new cljs.core.Keyword(null,\"orange1\",\"orange1\",1540366992),new cljs.core.Keyword(null,\"red\",\"red\",-969428204),new cljs.core.Keyword(null,\"blue\",\"blue\",-622100620),new cljs.core.Keyword(null,\"base00\",\"base00\",-1549387019),new cljs.core.Keyword(null,\"magenta\",\"magenta\",1687937081),new cljs.core.Keyword(null,\"base01\",\"base01\",277019065),new cljs.core.Keyword(null,\"base03\",\"base03\",269270489),new cljs.core.Keyword(null,\"base02\",\"base02\",-1734030562),new cljs.core.Keyword(null,\"black\",\"black\",1294279647)],[\"#93a1a1\",\"#cb4b16\",\"#b87a93\",\"#fdf6e3\",\"#967a93\",\"#fe8709\",\"#b58900\",\"#eee8d5\",\"#82da38\",\"#859900\",\"#54a627\",\"#2aa198\",\"#6c71c4\",\"#7d9cf8\",\"#839496\",\"#f17d3e\",\"#dc322f\",\"#268bd2\",\"#657b83\",\"#d33682\",\"#586e75\",\"#002b36\",\"#073642\",\"#002b36\"]);\nghostwheel.logging.ops_with_bindings = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 21, [new cljs.core.Symbol(null,\"deftype\",\"deftype\",1980826088,null),null,new cljs.core.Symbol(null,\"defmethod\",\"defmethod\",-579171823,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"extend-protocol\",\"ghostwheel.tracer/extend-protocol\",-1387613853,null),null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),null,new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"defmethod\",\"ghostwheel.tracer/defmethod\",41043138,null),null,new cljs.core.Symbol(null,\"extend-protocol\",\"extend-protocol\",306378578,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"defn-\",\"ghostwheel.tracer/defn-\",410431175,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"let\",\"ghostwheel.tracer/let\",-1135560835,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"defn\",\"ghostwheel.tracer/defn\",-1888156609,null),null,new cljs.core.Symbol(null,\"extend-type\",\"extend-type\",1123355921,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"reify\",\"ghostwheel.tracer/reify\",-914829536,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"fn\",\"ghostwheel.tracer/fn\",-1296883590,null),null,new cljs.core.Symbol(null,\"reify\",\"reify\",1885539699,null),null,new cljs.core.Symbol(null,\"let\",\"let\",358118826,null),null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null,new cljs.core.Symbol(null,\"defrecord\",\"defrecord\",273038109,null),null,new cljs.core.Symbol(null,\"defn-\",\"defn-\",1097765044,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"deftype\",\"ghostwheel.tracer/deftype\",-1592147015,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"defrecord\",\"ghostwheel.tracer/defrecord\",-917570066,null),null,new cljs.core.Symbol(\"ghostwheel.tracer\",\"extend-type\",\"ghostwheel.tracer/extend-type\",704466912,null),null], null), null);\nghostwheel.logging.wrap_line = (function ghostwheel$logging$wrap_line(size,text){\nreturn cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(null,[\"~{~<~%~1,\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(size),\":;~A~> ~}\"].join(''),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clojure.string.split.cljs$core$IFn$_invoke$arity$2(text,/ /)], 0));\n});\nghostwheel.logging.wrap = (function ghostwheel$logging$wrap(line){\nreturn ghostwheel.logging.wrap_line((80),line);\n});\nghostwheel.logging.truncate_string = (function ghostwheel$logging$truncate_string(long_string,limit){\nif((cljs.core.count(long_string) > limit)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(long_string,(0),limit)),\"...\"].join('');\n} else {\nreturn long_string;\n}\n});\n/**\n * @param {...*} var_args\n */\nghostwheel.logging.get_styled_label = (function ghostwheel$logging$get_styled_label(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___71774 = arguments.length;\nvar i__4731__auto___71775 = (0);\nwhile(true){\nif((i__4731__auto___71775 < len__4730__auto___71774)){\nargs__4736__auto__.push((arguments[i__4731__auto___71775]));\n\nvar G__71777 = (i__4731__auto___71775 + (1));\ni__4731__auto___71775 = G__71777;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((3) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((3)),(0),null)):null);\nreturn ghostwheel.logging.get_styled_label.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4737__auto__);\n});\n\nghostwheel.logging.get_styled_label.cljs$core$IFn$_invoke$arity$variadic = (function (label,p__71531,output,p__71532){\nvar map__71533 = p__71531;\nvar map__71533__$1 = (((((!((map__71533 == null))))?(((((map__71533.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__71533.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__71533):map__71533);\nvar style = map__71533__$1;\nvar foreground = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71533__$1,new cljs.core.Keyword(\"ghostwheel.logging\",\"foreground\",\"ghostwheel.logging/foreground\",-473507023));\nvar background = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71533__$1,new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606));\nvar weight = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71533__$1,new cljs.core.Keyword(\"ghostwheel.logging\",\"weight\",\"ghostwheel.logging/weight\",-88030216));\nvar vec__71534 = p__71532;\nvar length = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71534,(0),null);\nif(cljs.core.not(style)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [label], null);\n} else {\nvar label__$1 = (function (){var G__71539 = (cljs.core.truth_(length)?ghostwheel.logging.truncate_string(label,length):label);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(output,new cljs.core.Keyword(null,\"js-console\",\"js-console\",1240105791))){\nreturn [\"%c\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71539)].join('');\n} else {\nreturn G__71539;\n}\n})();\nvar style__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(output,new cljs.core.Keyword(null,\"js-console\",\"js-console\",1240105791)))?[\"color: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(foreground)?foreground:(cljs.core.truth_(background)?\"white\":new cljs.core.Keyword(null,\"black\",\"black\",1294279647).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)\n))),\";\",\"background: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(background)?background:\"white\")),\";\",\"font-weight: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(weight)?weight:\"500\")),\";\",(cljs.core.truth_(background)?\"text-shadow: 0.5px 0.5px black;\":null),(cljs.core.truth_(background)?\"padding: 2px 6px; border-radius: 2px;\":null)].join(''):null);\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [label__$1,style__$1], null)));\n}\n});\n\nghostwheel.logging.get_styled_label.cljs$lang$maxFixedArity = (3);\n\n/** @this {Function} */\nghostwheel.logging.get_styled_label.cljs$lang$applyTo = (function (seq71522){\nvar G__71524 = cljs.core.first(seq71522);\nvar seq71522__$1 = cljs.core.next(seq71522);\nvar G__71525 = cljs.core.first(seq71522__$1);\nvar seq71522__$2 = cljs.core.next(seq71522__$1);\nvar G__71526 = cljs.core.first(seq71522__$2);\nvar seq71522__$3 = cljs.core.next(seq71522__$2);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__71524,G__71525,G__71526,seq71522__$3);\n});\n\nghostwheel.logging.plain_log = (function ghostwheel$logging$plain_log(msg){\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__71546_SHARP_){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(ghostwheel.logging._STAR_nesting)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__71546_SHARP_)].join('');\n}),clojure.string.split_lines(((typeof msg === 'string')?msg:(function (){var sb__4661__auto__ = (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR__orig_val__71553_71807 = cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR__orig_val__71554_71808 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_newline_STAR__temp_val__71555_71809 = true;\nvar _STAR_print_fn_STAR__temp_val__71556_71810 = ((function (_STAR_print_newline_STAR__orig_val__71553_71807,_STAR_print_fn_STAR__orig_val__71554_71808,_STAR_print_newline_STAR__temp_val__71555_71809,sb__4661__auto__){\nreturn (function (x__4662__auto__){\nreturn sb__4661__auto__.append(x__4662__auto__);\n});})(_STAR_print_newline_STAR__orig_val__71553_71807,_STAR_print_fn_STAR__orig_val__71554_71808,_STAR_print_newline_STAR__temp_val__71555_71809,sb__4661__auto__))\n;\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__71555_71809;\n\ncljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__71556_71810;\n\ntry{cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(msg);\n}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__71554_71808;\n\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__71553_71807;\n}\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);\n})()))))], 0));\n});\n/**\n * @param {...*} var_args\n */\nghostwheel.logging.log = (function ghostwheel$logging$log(var_args){\nvar G__71561 = arguments.length;\nswitch (G__71561) {\ncase 0:\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2(\"\",null);\n});\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1 = (function (msg){\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2(msg,null);\n});\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2 = (function (msg,style){\nvar styled_msg = ghostwheel.logging.get_styled_label(msg,style,ghostwheel.logging._STAR_report_output_STAR_);\nvar G__71565 = ghostwheel.logging._STAR_report_output_STAR_;\nvar G__71565__$1 = (((G__71565 instanceof cljs.core.Keyword))?G__71565.fqn:null);\nswitch (G__71565__$1) {\ncase \"repl\":\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging.plain_log,styled_msg);\n\nbreak;\ncase \"js-console\":\nreturn console.log.apply(console,cljs.core.to_array(styled_msg));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71565__$1)].join('')));\n\n}\n});\n\nghostwheel.logging.log.cljs$lang$maxFixedArity = 2;\n\n/**\n * @param {...*} var_args\n */\nghostwheel.logging.DBG = (function ghostwheel$logging$DBG(var_args){\nvar G__71574 = arguments.length;\nswitch (G__71574) {\ncase 0:\nreturn ghostwheel.logging.DBG.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nvar args_arr__4751__auto__ = [];\nvar len__4730__auto___71835 = arguments.length;\nvar i__4731__auto___71836 = (0);\nwhile(true){\nif((i__4731__auto___71836 < len__4730__auto___71835)){\nargs_arr__4751__auto__.push((arguments[i__4731__auto___71836]));\n\nvar G__71837 = (i__4731__auto___71836 + (1));\ni__4731__auto___71836 = G__71837;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4752__auto__ = (new cljs.core.IndexedSeq(args_arr__4751__auto__.slice((0)),(0),null));\nreturn ghostwheel.logging.DBG.cljs$core$IFn$_invoke$arity$variadic(argseq__4752__auto__);\n\n}\n});\n\nghostwheel.logging.DBG.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(\"#> MARK\");\n});\n\nghostwheel.logging.DBG.cljs$core$IFn$_invoke$arity$variadic = (function (msgs){\nvar seq__71588_71839 = cljs.core.seq(msgs);\nvar chunk__71589_71840 = null;\nvar count__71590_71841 = (0);\nvar i__71591_71842 = (0);\nwhile(true){\nif((i__71591_71842 < count__71590_71841)){\nvar msg_71844 = chunk__71589_71840.cljs$core$IIndexed$_nth$arity$2(null,i__71591_71842);\nif((msg_71844 == null)){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(\"nil\");\n} else {\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(msg_71844);\n}\n\n\nvar G__71850 = seq__71588_71839;\nvar G__71851 = chunk__71589_71840;\nvar G__71852 = count__71590_71841;\nvar G__71853 = (i__71591_71842 + (1));\nseq__71588_71839 = G__71850;\nchunk__71589_71840 = G__71851;\ncount__71590_71841 = G__71852;\ni__71591_71842 = G__71853;\ncontinue;\n} else {\nvar temp__5753__auto___71857 = cljs.core.seq(seq__71588_71839);\nif(temp__5753__auto___71857){\nvar seq__71588_71858__$1 = temp__5753__auto___71857;\nif(cljs.core.chunked_seq_QMARK_(seq__71588_71858__$1)){\nvar c__4550__auto___71859 = cljs.core.chunk_first(seq__71588_71858__$1);\nvar G__71860 = cljs.core.chunk_rest(seq__71588_71858__$1);\nvar G__71861 = c__4550__auto___71859;\nvar G__71862 = cljs.core.count(c__4550__auto___71859);\nvar G__71863 = (0);\nseq__71588_71839 = G__71860;\nchunk__71589_71840 = G__71861;\ncount__71590_71841 = G__71862;\ni__71591_71842 = G__71863;\ncontinue;\n} else {\nvar msg_71866 = cljs.core.first(seq__71588_71858__$1);\nif((msg_71866 == null)){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(\"nil\");\n} else {\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(msg_71866);\n}\n\n\nvar G__71867 = cljs.core.next(seq__71588_71858__$1);\nvar G__71868 = null;\nvar G__71869 = (0);\nvar G__71870 = (0);\nseq__71588_71839 = G__71867;\nchunk__71589_71840 = G__71868;\ncount__71590_71841 = G__71869;\ni__71591_71842 = G__71870;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.last(msgs);\n});\n\n/** @this {Function} */\nghostwheel.logging.DBG.cljs$lang$applyTo = (function (seq71569){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq71569));\n});\n\nghostwheel.logging.DBG.cljs$lang$maxFixedArity = (0);\n\n/**\n * @param {...*} var_args\n */\nghostwheel.logging.log_raw = (function ghostwheel$logging$log_raw(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___71874 = arguments.length;\nvar i__4731__auto___71875 = (0);\nwhile(true){\nif((i__4731__auto___71875 < len__4730__auto___71874)){\nargs__4736__auto__.push((arguments[i__4731__auto___71875]));\n\nvar G__71880 = (i__4731__auto___71875 + (1));\ni__4731__auto___71875 = G__71880;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn ghostwheel.logging.log_raw.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nghostwheel.logging.log_raw.cljs$core$IFn$_invoke$arity$variadic = (function (format_strings,objs){\nvar G__71624 = ghostwheel.logging._STAR_report_output_STAR_;\nvar G__71624__$1 = (((G__71624 instanceof cljs.core.Keyword))?G__71624.fqn:null);\nswitch (G__71624__$1) {\ncase \"repl\":\nvar seq__71626 = cljs.core.seq(objs);\nvar chunk__71627 = null;\nvar count__71628 = (0);\nvar i__71629 = (0);\nwhile(true){\nif((i__71629 < count__71628)){\nvar obj = chunk__71627.cljs$core$IIndexed$_nth$arity$2(null,i__71629);\nghostwheel.logging.plain_log(obj);\n\n\nvar G__71892 = seq__71626;\nvar G__71893 = chunk__71627;\nvar G__71894 = count__71628;\nvar G__71895 = (i__71629 + (1));\nseq__71626 = G__71892;\nchunk__71627 = G__71893;\ncount__71628 = G__71894;\ni__71629 = G__71895;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__71626);\nif(temp__5753__auto__){\nvar seq__71626__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__71626__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__71626__$1);\nvar G__71901 = cljs.core.chunk_rest(seq__71626__$1);\nvar G__71902 = c__4550__auto__;\nvar G__71903 = cljs.core.count(c__4550__auto__);\nvar G__71904 = (0);\nseq__71626 = G__71901;\nchunk__71627 = G__71902;\ncount__71628 = G__71903;\ni__71629 = G__71904;\ncontinue;\n} else {\nvar obj = cljs.core.first(seq__71626__$1);\nghostwheel.logging.plain_log(obj);\n\n\nvar G__71910 = cljs.core.next(seq__71626__$1);\nvar G__71911 = null;\nvar G__71912 = (0);\nvar G__71913 = (0);\nseq__71626 = G__71910;\nchunk__71627 = G__71911;\ncount__71628 = G__71912;\ni__71629 = G__71913;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n\nbreak;\ncase \"js-console\":\nreturn console.log.apply(console,cljs.core.to_array(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(format_strings,objs)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71624__$1)].join('')));\n\n}\n});\n\nghostwheel.logging.log_raw.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nghostwheel.logging.log_raw.cljs$lang$applyTo = (function (seq71612){\nvar G__71613 = cljs.core.first(seq71612);\nvar seq71612__$1 = cljs.core.next(seq71612);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__71613,seq71612__$1);\n});\n\nghostwheel.logging.error = (function ghostwheel$logging$error(msg){\nvar G__71661 = ghostwheel.logging._STAR_report_output_STAR_;\nvar G__71661__$1 = (((G__71661 instanceof cljs.core.Keyword))?G__71661.fqn:null);\nswitch (G__71661__$1) {\ncase \"repl\":\nghostwheel.logging.plain_log(\"ERROR:\");\n\nreturn ghostwheel.logging.plain_log(msg);\n\nbreak;\ncase \"js-console\":\nreturn console.error(msg);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71661__$1)].join('')));\n\n}\n});\nghostwheel.logging.plain_group = (function ghostwheel$logging$plain_group(label){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0();\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1([\"|> \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(label)].join(''));\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging._STAR_nesting,(function (p1__71665_SHARP_){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__71665_SHARP_),\"| \"].join('');\n}));\n});\n/**\n * @param {...*} var_args\n */\nghostwheel.logging.group_STAR_ = (function ghostwheel$logging$group_STAR_(var_args){\nvar G__71679 = arguments.length;\nswitch (G__71679) {\ncase 2:\nreturn ghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn ghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (open_QMARK_,label){\nreturn ghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$3(open_QMARK_,label,null);\n});\n\nghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$3 = (function (open_QMARK_,label,style){\nvar styled_label = ghostwheel.logging.get_styled_label(label,style,ghostwheel.logging._STAR_report_output_STAR_);\nvar G__71683 = ghostwheel.logging._STAR_report_output_STAR_;\nvar G__71683__$1 = (((G__71683 instanceof cljs.core.Keyword))?G__71683.fqn:null);\nswitch (G__71683__$1) {\ncase \"repl\":\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging.plain_group,styled_label);\n\nbreak;\ncase \"js-console\":\nreturn (cljs.core.truth_(open_QMARK_)?console.group:console.groupCollapsed).apply(console,cljs.core.to_array(styled_label));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71683__$1)].join('')));\n\n}\n});\n\nghostwheel.logging.group_STAR_.cljs$lang$maxFixedArity = 3;\n\n/**\n * @param {...*} var_args\n */\nghostwheel.logging.group = (function ghostwheel$logging$group(var_args){\nvar G__71688 = arguments.length;\nswitch (G__71688) {\ncase 1:\nreturn ghostwheel.logging.group.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn ghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nghostwheel.logging.group.cljs$core$IFn$_invoke$arity$1 = (function (label){\nreturn ghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2(label,null);\n});\n\nghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2 = (function (label,style){\nreturn ghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$3(true,label,style);\n});\n\nghostwheel.logging.group.cljs$lang$maxFixedArity = 2;\n\n/**\n * @param {...*} var_args\n */\nghostwheel.logging.group_collapsed = (function ghostwheel$logging$group_collapsed(var_args){\nvar G__71699 = arguments.length;\nswitch (G__71699) {\ncase 1:\nreturn ghostwheel.logging.group_collapsed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn ghostwheel.logging.group_collapsed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nghostwheel.logging.group_collapsed.cljs$core$IFn$_invoke$arity$1 = (function (label){\nreturn ghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2(label,null);\n});\n\nghostwheel.logging.group_collapsed.cljs$core$IFn$_invoke$arity$2 = (function (label,style){\nreturn ghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$3(false,label,style);\n});\n\nghostwheel.logging.group_collapsed.cljs$lang$maxFixedArity = 2;\n\nvar plain_group_end_71971 = (function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging._STAR_nesting,(function (p1__71707_SHARP_){\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$3(p1__71707_SHARP_,(0),(function (){var x__4219__auto__ = (0);\nvar y__4220__auto__ = (cljs.core.count(p1__71707_SHARP_) - (2));\nreturn ((x__4219__auto__ > y__4220__auto__) ? x__4219__auto__ : y__4220__auto__);\n})());\n}));\n});\nghostwheel.logging.group_end = ((function (plain_group_end_71971){\nreturn (function ghostwheel$logging$group_end(){\nvar G__71718 = ghostwheel.logging._STAR_report_output_STAR_;\nvar G__71718__$1 = (((G__71718 instanceof cljs.core.Keyword))?G__71718.fqn:null);\nswitch (G__71718__$1) {\ncase \"repl\":\nreturn plain_group_end_71971();\n\nbreak;\ncase \"js-console\":\nreturn console.groupEnd();\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71718__$1)].join('')));\n\n}\n});})(plain_group_end_71971))\n;\nghostwheel.logging.log_bold = (function ghostwheel$logging$log_bold(msg){\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2(msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"weight\",\"ghostwheel.logging/weight\",-88030216),\"bold\"], null));\n});\nghostwheel.logging.clog = (function ghostwheel$logging$clog(data){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(data);\n\nreturn data;\n});\n/**\n * Pretty console log\n * @param {...*} var_args\n */\nghostwheel.logging.pr_clog = (function ghostwheel$logging$pr_clog(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___71992 = arguments.length;\nvar i__4731__auto___71993 = (0);\nwhile(true){\nif((i__4731__auto___71993 < len__4730__auto___71992)){\nargs__4736__auto__.push((arguments[i__4731__auto___71993]));\n\nvar G__71997 = (i__4731__auto___71993 + (1));\ni__4731__auto___71993 = G__71997;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn ghostwheel.logging.pr_clog.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\nghostwheel.logging.pr_clog.cljs$core$IFn$_invoke$arity$variadic = (function (label,data,p__71744){\nvar vec__71745 = p__71744;\nvar style = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71745,(0),null);\nif(cljs.core.truth_(data)){\nghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2(label,style);\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(data);\n\nghostwheel.logging.group_end();\n} else {\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2(label,style);\n}\n\nreturn data;\n});\n\nghostwheel.logging.pr_clog.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\nghostwheel.logging.pr_clog.cljs$lang$applyTo = (function (seq71738){\nvar G__71739 = cljs.core.first(seq71738);\nvar seq71738__$1 = cljs.core.next(seq71738);\nvar G__71740 = cljs.core.first(seq71738__$1);\nvar seq71738__$2 = cljs.core.next(seq71738__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__71739,G__71740,seq71738__$2);\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","The primary purpose of this is to provide a simple\n  cross-platform console-logging API – inspired by JavaScript's\n  console.log/group/groupCollapsed/groupEnd – which makes sure that\n  structured/styled information is displayed to the best of the output\n  destination's abilities, be it a simple REPL or a browser-based JS console.","~:file","ghostwheel/logging.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",23],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$ghostwheel.logging","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^V","~$string","^V","^I","^J","~$pprint","^J","^D","^D","~$goog","^Y","^J","^J"],"~:seen",["^O",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D","^I","^J","^X","^J","^J","^J"],"~:form",["~#list",["~$ns","^Q","The primary purpose of this is to provide a simple\n  cross-platform console-logging API – inspired by JavaScript's\n  console.log/group/groupCollapsed/groupEnd – which makes sure that\n  structured/styled information is displayed to the best of the output\n  destination's abilities, be it a simple REPL or a browser-based JS console.",["^13",["^[",["^V","~:as","^W"],["^I","^15","^X"]]]]],"~:flags",["^ ","^[",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^D","^V","^J"]],"^S","^Q","~:resource-id",["~:shadow.build.classpath/resource","ghostwheel/logging.cljc"],"~:compiled-at",1630228760905,"~:resource-name","ghostwheel/logging.cljc","~:warnings",[],"~:source",";; Copyright (c) George Lipov. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 2.0 (https://choosealicense.com/licenses/epl-2.0/)\n;; which can be found in the file LICENSE at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n\n(ns ghostwheel.logging\n  \"The primary purpose of this is to provide a simple\n  cross-platform console-logging API – inspired by JavaScript's\n  console.log/group/groupCollapsed/groupEnd – which makes sure that\n  structured/styled information is displayed to the best of the output\n  destination's abilities, be it a simple REPL or a browser-based JS console.\"\n  (:require [clojure.string :as string]\n            [clojure.pprint :as pprint]))\n\n\n(def *nesting (atom \"\"))\n\n\n(def ^:dynamic *report-output* #?(:clj  :repl\n                                  :cljs :js-console))\n\n\n(def ghostwheel-colors\n  {:purple0 \"#967a93\"\n   :purple1 \"#b87a93\"\n   :purple2 \"#7d9cf8\"\n   :orange0 \"#fe8709\"\n   :orange1 \"#f17d3e\"\n   :green0  \"#82da38\"\n   :green1  \"#54a627\"\n   ;; Solarized colours\n   :base03  \"#002b36\"\n   :black   \"#002b36\"\n   :base02  \"#073642\"\n   :base01  \"#586e75\"\n   :base00  \"#657b83\"\n   :base0   \"#839496\"\n   :base1   \"#93a1a1\"\n   :base2   \"#eee8d5\"\n   :base3   \"#fdf6e3\"\n   :yellow  \"#b58900\"\n   :orange  \"#cb4b16\"\n   :red     \"#dc322f\"\n   :magenta \"#d33682\"\n   :violet  \"#6c71c4\"\n   :blue    \"#268bd2\"\n   :cyan    \"#2aa198\"\n   :green   \"#859900\"})\n\n\n(def ops-with-bindings\n  #{'fn*\n    'fn\n    'ghostwheel.tracer/fn\n    'defn\n    'ghostwheel.tracer/defn\n    'defn-\n    'ghostwheel.tracer/defn-\n    'defmethod\n    'ghostwheel.tracer/defmethod\n    'deftype\n    'ghostwheel.tracer/deftype\n    'defrecord\n    'ghostwheel.tracer/defrecord\n    'reify\n    'ghostwheel.tracer/reify\n    'let\n    'ghostwheel.tracer/let\n    'extend-type\n    'ghostwheel.tracer/extend-type\n    'extend-protocol\n    'ghostwheel.tracer/extend-protocol})\n\n\n;; Borrowed from Rosetta Code\n(defn wrap-line [size text]\n  (pprint/cl-format nil\n                    (str \"~{~<~%~1,\" size \":;~A~> ~}\")\n                    (string/split text #\" \")))\n\n\n(defn wrap [line]\n  (wrap-line 80 line))\n\n\n(defn truncate-string\n  [long-string limit]\n  (if (> (count long-string) limit)\n    (str (subs long-string 0 limit) \"...\")\n    long-string))\n\n\n(defn get-styled-label\n  [label {:keys [::foreground ::background ::weight] :as style} output & [length]]\n  (if-not style\n    [label]\n    (let [label (cond->> (if length\n                           (truncate-string label length)\n                           label)\n                         (= output :js-console) (str \"%c\"))\n          style (when (= output :js-console)\n                  (str \"color: \" (cond foreground foreground\n                                       background \"white\"\n                                       :else (:black ghostwheel-colors)) \";\"\n                       \"background: \" (if background background \"white\") \";\"\n                       \"font-weight: \" (if weight weight \"500\") \";\"\n                       (when background \"text-shadow: 0.5px 0.5px black;\")\n                       (when background \"padding: 2px 6px; border-radius: 2px;\")))]\n      (vec (remove nil? [label style])))))\n\n\n(defn- plain-log [msg]\n  (println (->> (if (string? msg)\n                  msg\n                  (with-out-str (pprint/pprint msg)))\n                string/split-lines\n                (map #(str @*nesting %))\n                (string/join \"\\n\"))))\n\n\n(defn log\n  ([]\n   (log \"\" nil))\n  ([msg]\n   (log msg nil))\n  ([msg style]\n   (let [styled-msg (get-styled-label msg style *report-output*)]\n     (case *report-output*\n       :repl (apply plain-log styled-msg)\n       :js-console #?(:cljs (.apply js/console.log js/console (to-array styled-msg))\n                      :clj  nil)))))\n\n\n(defn DBG\n  ([]\n   (log \"#> MARK\"))\n  ([& msgs]\n   (do\n     (doseq [msg msgs]\n       #?(:clj  (.println System/err (pprint/pprint msg))\n          :cljs (if (nil? msg) (log \"nil\") (log msg))))\n     (last msgs))))\n\n\n(defn log-raw\n  [format-strings & objs]\n  (case *report-output*\n    :repl (doseq [obj objs] (plain-log obj))\n    :js-console #?(:cljs (.apply js/console.log js/console (to-array (concat format-strings objs)))\n                   :clj  nil)))\n\n\n(defn error [msg]\n  (case *report-output*\n    :repl (do (plain-log \"ERROR:\") (plain-log msg))\n    :js-console #?(:cljs (js/console.error msg)\n                   :clj  nil)))\n\n\n(defn- plain-group [label]\n  (do\n    (log)\n    (log (str \"|> \" label))\n    (swap! *nesting #(str % \"| \"))))\n\n\n(defn- group*\n  ([open? label]\n   (group* open? label nil))\n  ([open? label style]\n   (let [styled-label (get-styled-label label style *report-output*)]\n     (case *report-output*\n       :repl (apply plain-group styled-label)\n       :js-console #?(:cljs (.apply (if open?\n                                      js/console.group\n                                      js/console.groupCollapsed)\n                                    js/console\n                                    (to-array styled-label))\n                      :clj  nil)))))\n\n\n(defn group\n  ([label]\n   (group label nil))\n  ([label style]\n   (group* true label style)))\n\n\n(defn group-collapsed\n  ([label]\n   (group label nil))\n  ([label style]\n   (group* false label style)))\n\n\n(let [plain-group-end\n      (fn [] (swap! *nesting #(subs % 0 (max 0 (- (count %) 2)))))]\n  (defn group-end []\n    (case *report-output*\n      :repl (plain-group-end)\n      :js-console #?(:cljs (js/console.groupEnd)\n                     :clj  nil))))\n\n\n(defn log-bold [msg]\n  (log msg {::weight \"bold\"}))\n\n\n(defn clog [data]\n  (do\n    (log data)\n    data))\n\n\n(defn pr-clog\n  \"Pretty console log\"\n  [label data & [style]]\n  (if data\n    (do\n      (group label style)\n      (log data)\n      (group-end))\n    (log label style))\n  data)\n\n\n\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAkBA,AAAKA,AAAS,AAAA,AAACC;AAGf,AAAA,AAAeC;AAIf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AA4BL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAyBL,AAAA,AAAMC,AAAWC,AAAKC;AAAtB,AACE,AAAA,AAACC,AACiB,AAAA,AAAA,AAAiBF,AACjB,AAAA,AAACG,AAAaF;;AAGlC,AAAA,AAAMG,AAAMC;AAAZ,AACE,AAAA,AAACN,AAAaM;;AAGhB,AAAA,AAAMC,AACHC,AAAYC;AADf,AAEE,AAAI,AAAG,AAACC,AAAMF,AAAaC;AACzB,AAAA,AAAK,AAAA,AAACE,AAAKH,AAAcC;;AACzBD;;;AAGJ,AAAA;;;AAAA,AAAAI,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAMF,AACHoB,AAA6DE;AADhE,AAAA,AAAAnB,AAAAF;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AACyDkB;AADzDd,AAAA,AAAAC,AAAAL,AAAA;AAAAM,AAAA,AAAAD,AAAAL,AAAA;AAAAO,AAAA,AAAAF,AAAAL,AAAA;AAAAQ,AAAAT;AAAA,AAAAU,AAAAD,AAAA,AAAA,AAC0EY;AAD1E,AAEE,AAAA,AAAAC,AAAQH;AAAR,AACGD;;AACD,AAAMA,AAAM,AAAAK,AAAS,AAAIF,AACF,AAAClC,AAAgB+B,AAAMG,AACvBH;AAFX,AAAA,AAGS,AAAA,AAACM,AAAEJ;AAAoB,AAAA,AAAAG;;AAHhCA;;;AAINJ,AAAM,AAAA,AAAM,AAAA,AAACK,AAAEJ,AACP,AAAA,AAAe,AAAA,AAAA,AAAA,AAAMf,AAAWA,AACXE,AACM,AAAA,AAAQ7B;AAHrC,AACE,AAAA,AAAA,AAAA,AAAA,AAGoB,AAAA,AAAI6B,AAAWA,AACd,AAAA,AAAIC,AAAOA,AAC3B,AAAA,AAAA,AAAA,AAAMD,AACN,AAAA,AAAA,AAAA,AAAMA;AAXzB,AAYE,AAACkB,AAAI,AAAA,AAACC,AAAOC,AAAMT,AAAMC;;;;AAhB/B,AAAA,AAAA,AAAMrB;;AAAN;AAAA,AAAA,AAAA,AAAAa,AAAMb;AAAN,AAAA,AAAAc,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAK,AAAA,AAAAH,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAM,AAAA;AAAA,AAAA,AAAAA,AAAAL,AAAAG,AAAAC,AAAAL;;;AAAA,AAmBA,AAAA,AAAOiB,AAAWC;AAAlB,AACE,AAACC,AAIa,AAAA,AAAAY,AAACC,AACD,AAAA,AAACE;AADD,AAAM,AAAA,AAAAD,AAAAF,AAAMnE;AAJZ,AAAI,AAASsD,AACXA,AACA,AAAAE,AAAA,AAAAC,AACFS,AACA;AAFE,AAAA,AAAAR,AAAAC;AAAAC,AAAAC;AAAAC,AAAA;AAAAC,AAAA;AAAAC;AAAA,AAAA,AAAAR,AAAAQ;;;AAAA,AAAA,AAAAL,AAAAG;;AAAA,AAAAD,AAAAE;;AAAA,AAAA,AAAc,AAACE,AAAcX;AAA7B,AAAA,AAAAO,AAAAD;;AAAA,AAAAD,AAAAD;;AAAA,AAAAF;;;AAMlB,AAAA;;;AAAA,AAAAvC,AAAMuD;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AAEG,AAAA,AAAA,AAACE;;;AAFJ,AAAA,AAAA,AAAMF,AAGFlB;AAHJ,AAIG,AAAA,AAACoB,AAAIpB;;;AAJR,AAAA,AAAA,AAAMkB,AAKFlB,AAAIV;AALR,AAMG,AAAM+B,AAAW,AAACpD,AAAiB+B,AAAIV,AAAM1C;AAA7C,AACE,AAAA0E,AAAM1E;AAAN0E,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AACQ,AAAChD,AAAMyB,AAAUsB;;;AADzB;AAEuB,AAAQG,AAAeC,AAAW,AAACC,AAASL;;;;AAFnE,AAAA,AAAAF,AAAA,AAAA,AAAAG;;;;;AAPL,AAAA,AAAA,AAAMJ;;AAAN,AAaA,AAAA;;;AAAA,AAAAvD,AAAMiE;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;;AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAhE,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAgE,AAAA,AAAA,AAAA/D;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAgE,AAAA,AAAA9D,AAAA,AAAA6D,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAE;;;;;AAAA,AAAA,AAAA,AAAMF;AAAN,AAEG,AAAA,AAACM;;;AAFJ,AAAA,AAAA,AAAA,AAAMN,AAGAO;AAHN,AAIG,AACE,AAAAC,AAAA,AAAAH,AAAYE;AAAZE,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQvC;AAAR,AAAA,AAEW,AAAI,AAAA,AAAMA;AAAK,AAAA,AAACkC;;AAAW,AAACA,AAAIlC;;;AAF3C;AAAA,AAAAoC;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAP,AAAAG;AAAA,AAAA,AAAAI;AAAA,AAAA,AAAAJ,AAAAI;AAAA,AAAA,AAAA,AAAAC,AAAAL;AAAA,AAAAM,AAAA,AAAAC,AAAAP;AAAA,AAAA,AAAA,AAAAQ,AAAAR;AAAAM;AAAA,AAAAjF,AAAAiF;AAAA;;;;;;;AAAA,AAAA,AAAA1D,AAAAoD,AAAQpC;AAAR,AAAA,AAEW,AAAI,AAAA,AAAMA;AAAK,AAAA,AAACkC;;AAAW,AAACA,AAAIlC;;;AAF3C;AAAA,AAAA,AAAAf,AAAAmD;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAGA,AAACS,AAAKV;;;AARX;AAAA,AAAA,AAAA,AAAAJ,AAAMH;AAAN,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AAAA,AAAA,AAAMH;;AAAN,AAWA,AAAA;;;AAAA,AAAAjE,AAAMmF;AAAN,AAAA,AAAAlF,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAkF,AAAA,AAAA,AAAA,AAAA/E;;;AAAA,AAAA,AAAA,AAAA,AAAM+E,AACHG,AAAiBC;AADpB,AAEE,AAAAC,AAAMvG;AAANuG,AAAA,AAAA,AAAAA,AAAA5B,AAAA,AAAA4B,AAAA;AAAA,AAAA,AAAAA;AAAA;AACQ,AAAAC,AAAA,AAAAnB,AAAYiB;AAAZG,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQC;AAAR,AAAA,AAAkB,AAACzD,AAAUyD;;AAA7B;AAAA,AAAAJ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAf,AAAA,AAAAP,AAAAmB;AAAA,AAAA,AAAAZ;AAAA,AAAA,AAAAY,AAAAZ;AAAA,AAAA,AAAA,AAAAC,AAAAW;AAAA,AAAAV,AAAA,AAAAC,AAAAS;AAAA,AAAA,AAAA,AAAAR,AAAAQ;AAAAV;AAAA,AAAAjF,AAAAiF;AAAA;;;;;;;AAAA,AAAA,AAAA1D,AAAAoE,AAAQI;AAAR,AAAA,AAAkB,AAACzD,AAAUyD;;AAA7B;AAAA,AAAA,AAAAvE,AAAAmE;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AADR;AAEuB,AAAQ5B,AAAeC,AAAW,AAACC,AAAS,AAAC+B,AAAOR,AAAeC;;;;AAF1F,AAAA,AAAA/B,AAAA,AAAA,AAAAgC;;;;;AAFF,AAAA,AAAA,AAAML;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAhE,AAAA+D;AAAAA,AAAA,AAAA9D,AAAA8D;AAAA,AAAA,AAAA3D,AAAA;AAAA,AAAA,AAAAA,AAAA4D,AAAAD;;;AAAA,AAQA,AAAA,AAAMW,AAAO1D;AAAb,AACE,AAAA2D,AAAM/G;AAAN+G,AAAA,AAAA,AAAAA,AAAApC,AAAA,AAAAoC,AAAA;AAAA,AAAA,AAAAA;AAAA;AACQ,AAAI,AAAA,AAAC5D;;AAAoB,AAACA,AAAUC;;;AAD5C;AAEuB,AAAC4D,AAAiB5D;;;;AAFzC,AAAA,AAAAmB,AAAA,AAAA,AAAAwC;;;;AAMF,AAAA,AAAOE,AAAaxE;AAApB,AACE,AACE,AAACyE;;AACD,AAAC5B,AAAI,AAAA,AAAW7C;;AAChB,AAAA,AAAA0E,AAACC,AAAMtH;AAAP,AAAiB,AAAAqH,AAAA;;;AAGrB,AAAA;;;AAAA,AAAApG,AAAOuG;AAAP,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA/C,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAO+C,AACHC,AAAM9E;AADV,AAEG,AAAA,AAAC+E,AAAOD,AAAM9E;;;AAFjB,AAAA,AAAA,AAAO6E,AAGHC,AAAM9E,AAAMC;AAHhB,AAIG,AAAM+E,AAAa,AAACpG,AAAiBoB,AAAMC,AAAM1C;AAAjD,AACE,AAAA0H,AAAM1H;AAAN0H,AAAA,AAAA,AAAAA,AAAA/C,AAAA,AAAA+C,AAAA;AAAA,AAAA,AAAAA;AAAA;AACQ,AAAChG,AAAMuF,AAAYQ;;;AAD3B;AAEuB,AAAQ,AAAIF,AACFI,AACAC,AACF/C,AACA,AAACC,AAAS2C;;;;AANzC,AAAA,AAAAlD,AAAA,AAAA,AAAAmD;;;;;AALL,AAAA,AAAA,AAAOJ;;AAAP,AAeA,AAAA;;;AAAA,AAAAvG,AAAM+G;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAvD,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMuD,AACFrF;AADJ,AAEG,AAAA,AAACsF,AAAMtF;;;AAFV,AAAA,AAAA,AAAMqF,AAGFrF,AAAMC;AAHV,AAIG,AAAA,AAAC8E,AAAY/E,AAAMC;;;AAJtB,AAAA,AAAA,AAAMoF;;AAAN,AAOA,AAAA;;;AAAA,AAAA/G,AAAMkH;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA1D,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAM0D,AACFxF;AADJ,AAEG,AAAA,AAACsF,AAAMtF;;;AAFV,AAAA,AAAA,AAAMwF,AAGFxF,AAAMC;AAHV,AAIG,AAAA,AAAC8E,AAAa/E,AAAMC;;;AAJvB,AAAA,AAAA,AAAMuF;;AAAN,AAOA,AAAMC,AACA;AAAA,AAAO,AAAA,AAAAC,AAACf,AAAMtH;AAAP,AAAiB,AAAAqI,AAAA,AAACrH,AAAS,AAAAsH,AAAA;AAAAC,AAAO,AAAA,AAAG,AAAAF,AAACtH;AAAX,AAAA,AAAAuH,AAAAC,AAAAD,AAAAC;;;;AADxC,AAEE,AAAA,AAAMC;;AAAN,AACE,AAAAC,AAAMvI;AAANuI,AAAA,AAAA,AAAAA,AAAA5D,AAAA,AAAA4D,AAAA;AAAA,AAAA,AAAAA;AAAA;AACQ,AAACL;;;AADT;AAEuB,AAACM;;;;AAFxB,AAAA,AAAAjE,AAAA,AAAA,AAAAgE;;;;;AAMJ,AAAA,AAAME,AAAUrF;AAAhB,AACE,AAAA,AAAA,AAAA,AAACoB,AAAIpB;;AAGP,AAAA,AAAMsF,AAAMC;AAAZ,AACE,AACE,AAACrD,AAAIqD;;AACLA;;AAGJ,AAAA;;;;AAAA,AAAA5H,AAAM6H;AAAN,AAAA,AAAA5H,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA4H,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAzH;;;AAAA,AAAA,AAAA,AAAA,AAAA0H,AAAMD,AAEHnG,AAAMkG;AAFT,AAAA,AAAAG,AAAAD;AAAA,AAAA5G,AAAA6G,AAAA,AAAA,AAEiBpG;AAFjB,AAGE,AAAIiG;AACF,AACE,AAACZ,AAAMtF,AAAMC;;AACb,AAAC4C,AAAIqD;;AACL,AAACL;;AACH,AAAC9D,AAAI/B,AAAMC;;;AACbiG;;;AATF,AAAA,AAAA,AAAMC;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAA5G,AAAA2G;AAAAA,AAAA,AAAA1G,AAAA0G;AAAAE,AAAA,AAAA7G,AAAA2G;AAAAA,AAAA,AAAA1G,AAAA0G;AAAA,AAAA,AAAAvG,AAAA;AAAA,AAAA,AAAAA,AAAAwG,AAAAC,AAAAF;;;AAAA","names",["ghostwheel.logging/*nesting","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","ghostwheel.logging/*report-output*","ghostwheel.logging/ghostwheel-colors","ghostwheel.logging/ops-with-bindings","ghostwheel.logging/wrap-line","size","text","cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic","clojure.string.split.cljs$core$IFn$_invoke$arity$2","ghostwheel.logging/wrap","line","ghostwheel.logging/truncate-string","long-string","limit","cljs.core/count","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","ghostwheel.logging/get-styled-label","p__71531","p__71532","map__71533","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","foreground","cljs.core.get.cljs$core$IFn$_invoke$arity$2","background","weight","vec__71534","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq71522","G__71524","cljs.core/first","cljs.core/next","G__71525","G__71526","self__4717__auto__","label","style","output","length","cljs.core/not","G__71539","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/vec","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","ghostwheel.logging/plain-log","msg","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","sb__4661__auto__","goog.string/StringBuffer","*print-newline*-orig-val__71553","cljs.core/*print-newline*","*print-fn*-orig-val__71554","cljs.core/*print-fn*","*print-newline*-temp-val__71555","*print-fn*-temp-val__71556","x__4662__auto__","cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1","clojure.string/split-lines","p1__71546#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/deref","clojure.string.join.cljs$core$IFn$_invoke$arity$2","G__71561","ghostwheel.logging/log","js/Error","ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2","styled-msg","G__71565","cljs.core/Keyword","js/console.log","js/console","cljs.core/to-array","G__71574","ghostwheel.logging/DBG","args-arr__4751__auto__","argseq__4752__auto__","seq71569","self__4718__auto__","cljs.core/seq","ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1","msgs","seq__71588","chunk__71589","count__71590","i__71591","temp__5753__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/last","ghostwheel.logging/log-raw","seq71612","G__71613","format-strings","objs","G__71624","seq__71626","chunk__71627","count__71628","i__71629","obj","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","ghostwheel.logging/error","G__71661","js/console.error","ghostwheel.logging/plain-group","ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0","p1__71665#","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","G__71679","ghostwheel.logging/group*","open?","ghostwheel.logging.group_STAR_.cljs$core$IFn$_invoke$arity$3","styled-label","G__71683","js/console.group","js/console.groupCollapsed","G__71688","ghostwheel.logging/group","ghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2","G__71699","ghostwheel.logging/group-collapsed","plain-group-end","p1__71707#","x__4219__auto__","y__4220__auto__","ghostwheel.logging/group-end","G__71718","js/console.groupEnd","ghostwheel.logging/log-bold","ghostwheel.logging/clog","data","ghostwheel.logging/pr-clog","p__71744","vec__71745","seq71738","G__71739","G__71740"]]],"~:cache-keys",["~#cmap",[["^1:","goog/math/math.js"],[1630228359392,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^Y","~$goog.array","~$goog.asserts"]]],["^1:","goog/array/array.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^1L"]]],["^1:","goog/debug/error.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],["^1:","goog/dom/nodetype.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],["^1:","cljs/pprint.cljs"],[1630228118934,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^D","^V","~$goog.string","~$goog.string.StringBuffer"]]],["^1:","goog/object/object.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^1:","goog/math/long.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^1L","~$goog.reflect"]]],["^1:","goog/string/internal.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],["^1:","goog/functions/functions.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],["^1:","goog/structs/map.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1:","goog/asserts/asserts.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1:","goog/uri/uri.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^1K","^1L","^1M","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1:","ghostwheel/logging.cljc"],[1630228119285,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^D","^V","^J"]]],["^1:","goog/base.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",[]]],["^1:","goog/structs/structs.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^1K","~$goog.object"]]],["^1:","clojure/string.cljs"],[1630228118934,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^D","^1M","^1N"]]],["^1:","goog/string/string.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","~$goog.string.internal"]]],["^1:","goog/reflect/reflect.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],["^1:","goog/string/stringbuffer.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],["^1:","goog/iter/iter.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^1K","^1L","~$goog.functions","~$goog.math"]]],["^1:","cljs/core.cljs"],[1630228118934,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["~$goog.math.Long","~$goog.math.Integer","^1M","^1Z","^1K","~$goog.Uri","^1N"]]],["^1:","goog/math/integer.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y"]]],["^1:","goog/uri/utils.js"],[1630228359392,"^1G",["^ ","^1H",null,"^1I",["^O",[]],"^1J",["^Y","^1K","^1L","^1M"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","The primary purpose of this is to provide a simple\n  cross-platform console-logging API – inspired by JavaScript's\n  console.log/group/groupCollapsed/groupEnd – which makes sure that\n  structured/styled information is displayed to the best of the output\n  destination's abilities, be it a simple REPL or a browser-based JS console.","^7","ghostwheel/logging.cljc","^8",9,"^9",5,"^:",9,"^;",23],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L"],"^M",null,"^N",["^O",[]],"^P","^Q","^T",null,"^U",["^ ","^V","^V","^W","^V","^I","^J","^X","^J","^D","^D","^Y","^Y","^J","^J"],"^Z",["^O",["^["]],"~:shadow/js-access-global",["^O",["Error"]],"^10",null,"~:defs",["^ ","~$*report-output*",["^ ","^5",["^ ","^7","ghostwheel/logging.cljc","^8",22,"^9",16,"^:",22,"^;",31,"~:dynamic",true],"^P","~$ghostwheel.logging/*report-output*","^7","ghostwheel/logging.cljc","^;",31,"^9",1,"^2U",true,"^8",22,"^:",22,"~:tag","~$cljs.core/Keyword"],"~$log",["^ ","~:protocol-inline",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",124,"^9",7,"^:",124,"^;",10,"~:arglists",["^13",["~$quote",["^13",[[],["~$msg"],["^31","~$style"]]]]],"~:jsdoc",["^13",["@param {...*} var_args"]],"~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",["^13",[[],["^31"],["^31","^32"]]],"^2[",["^13",[[],["^31"],["^31","^32"]]],"~:arglists-meta",["^13",[null,null,null]]]],"^P","~$ghostwheel.logging/log","^7","ghostwheel/logging.cljc","^;",10,"^34",["^ ","^35",false,"^36",2,"^37",2,"^38",["^13",[[],["^31"],["^31","^32"]]],"^2[",["^13",[[],["^31"],["^31","^32"]]],"^39",["^13",[null,null,null]]],"^38",["^13",[[],["^31"],["^31","^32"]]],"~:protocol-impl",null,"^36",2,"^39",["^13",[null,null,null]],"^9",1,"^35",false,"~:methods",[["^ ","^36",0,"^35",false,"^2W","~$any"],["^ ","^36",1,"^35",false,"^2W","^3="],["^ ","^36",2,"^35",false]],"^8",124,"^:",124,"^37",2,"~:fn-var",true,"^2[",["^13",[[],["^31"],["^31","^32"]]],"^33",["^13",["@param {...*} var_args"]]],"~$clog",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",212,"^9",7,"^:",212,"^;",11,"^2[",["^13",["^30",["^13",[["~$data"]]]]]],"^P","~$ghostwheel.logging/clog","^7","ghostwheel/logging.cljc","^;",11,"^38",["^13",[["^3@"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",212,"^:",212,"^37",1,"^3>",true,"^2[",["^13",["^30",["^13",[["^3@"]]]]]],"~$ops-with-bindings",["^ ","^P","~$ghostwheel.logging/ops-with-bindings","^7","ghostwheel/logging.cljc","^8",54,"^9",1,"^:",54,"^;",23,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",54,"^9",6,"^:",54,"^;",23],"^2W","~$cljs.core/ISet"],"~$plain-log",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",115,"^9",8,"^:",115,"^;",17,"~:private",true,"^2[",["^13",["^30",["^13",[["^31"]]]]]],"^3F",true,"^P","~$ghostwheel.logging/plain-log","^7","ghostwheel/logging.cljc","^;",17,"^38",["^13",[["^31"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",115,"~:ret-tag","~$clj-nil","^:",115,"^37",1,"^3>",true,"^2[",["^13",["^30",["^13",[["^31"]]]]]],"~$wrap",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",85,"^9",7,"^:",85,"^;",11,"^2[",["^13",["^30",["^13",[["~$line"]]]]]],"^P","~$ghostwheel.logging/wrap","^7","ghostwheel/logging.cljc","^;",11,"^38",["^13",[["^3K"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",85,"^3H","^3=","^:",85,"^37",1,"^3>",true,"^2[",["^13",["^30",["^13",[["^3K"]]]]]],"~$group",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",185,"^9",7,"^:",185,"^;",12,"^2[",["^13",["^30",["^13",[["~$label"],["^3N","^32"]]]]],"^33",["^13",["@param {...*} var_args"]],"^34",["^ ","^35",false,"^36",2,"^37",2,"^38",["^13",[["^3N"],["^3N","^32"]]],"^2[",["^13",[["^3N"],["^3N","^32"]]],"^39",["^13",[null,null]]]],"^P","~$ghostwheel.logging/group","^7","ghostwheel/logging.cljc","^;",12,"^34",["^ ","^35",false,"^36",2,"^37",2,"^38",["^13",[["^3N"],["^3N","^32"]]],"^2[",["^13",[["^3N"],["^3N","^32"]]],"^39",["^13",[null,null]]],"^38",["^13",[["^3N"],["^3N","^32"]]],"^3;",null,"^36",2,"^39",["^13",[null,null]],"^9",1,"^35",false,"^3<",[["^ ","^36",1,"^35",false,"^2W","^3="],["^ ","^36",2,"^35",false,"^2W","^3="]],"^8",185,"^:",185,"^37",2,"^3>",true,"^2[",["^13",[["^3N"],["^3N","^32"]]],"^33",["^13",["@param {...*} var_args"]]],"~$pr-clog",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^;",14,"^34",["^ ","^35",true,"^36",2,"^37",2,"^38",[["^13",["^3N","^3@",["^32"]]]],"^2[",["^13",[["^3N","^3@","~$&",["^32"]]]],"^39",["^13",[null]]],"^9",7,"^8",218,"^:",218,"^2[",["^13",["^30",["^13",[["^3N","^3@","~$&",["^32"]]]]]],"^6","Pretty console log","^33",["^13",["@param {...*} var_args"]]],"^P","~$ghostwheel.logging/pr-clog","^7","ghostwheel/logging.cljc","^;",14,"^34",["^ ","^35",true,"^36",2,"^37",2,"^38",[["^13",["^3N","^3@",["^32"]]]],"^2[",["^13",[["^3N","^3@","~$&",["^32"]]]],"^39",["^13",[null]]],"^38",[["^13",["^3N","^3@",["^32"]]]],"^3;",null,"^36",2,"^39",["^13",[null]],"^9",1,"^35",true,"^3<",[["^ ","^36",2,"^35",true]],"^8",218,"^3H","^3=","^:",218,"^37",2,"^3>",true,"^2[",["^13",[["^3N","^3@","~$&",["^32"]]]],"^6","Pretty console log","^33",["^13",["@param {...*} var_args"]]],"~$truncate-string",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",89,"^9",7,"^:",89,"^;",22,"^2[",["^13",["^30",["^13",[["~$long-string","~$limit"]]]]]],"^P","~$ghostwheel.logging/truncate-string","^7","ghostwheel/logging.cljc","^;",22,"^38",["^13",[["^3S","^3T"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",89,"^3H",["^O",[null,"^W"]],"^:",89,"^37",2,"^3>",true,"^2[",["^13",["^30",["^13",[["^3S","^3T"]]]]]],"~$*nesting",["^ ","^P","~$ghostwheel.logging/*nesting","^7","ghostwheel/logging.cljc","^8",19,"^9",1,"^:",19,"^;",14,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",19,"^9",6,"^:",19,"^;",14],"^2W","~$cljs.core/Atom"],"~$plain-group",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",163,"^9",8,"^:",163,"^;",19,"^3F",true,"^2[",["^13",["^30",["^13",[["^3N"]]]]]],"^3F",true,"^P","~$ghostwheel.logging/plain-group","^7","ghostwheel/logging.cljc","^;",19,"^38",["^13",[["^3N"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",163,"^3H",["^O",[null,"^3="]],"^:",163,"^37",1,"^3>",true,"^2[",["^13",["^30",["^13",[["^3N"]]]]]],"~$DBG",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",137,"^9",7,"^:",137,"^;",10,"^2[",["^13",["^30",["^13",[[],["~$&","~$msgs"]]]]],"^33",["^13",["@param {...*} var_args"]],"^34",["^ ","^35",true,"^36",0,"^37",0,"^38",["^13",[[]]],"^2[",["^13",[[],["~$&","^40"]]],"^39",["^13",[null,null]]]],"^P","~$ghostwheel.logging/DBG","^7","ghostwheel/logging.cljc","^;",10,"^34",["^ ","^35",true,"^36",0,"^37",0,"^38",["^13",[[]]],"^2[",["^13",[[],["~$&","^40"]]],"^39",["^13",[null,null]]],"^38",["^13",[[]]],"^3;",null,"^36",0,"^39",["^13",[null,null]],"^9",1,"^35",true,"^3<",[["^ ","^36",0,"^35",false,"^2W","^3="],["^ ","^36",0,"^35",true,"^2W",["^O",["^3=","^3I"]]]],"^8",137,"^:",137,"^37",0,"^3>",true,"^2[",["^13",[[],["~$&","^40"]]],"^33",["^13",["@param {...*} var_args"]]],"~$log-bold",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",208,"^9",7,"^:",208,"^;",15,"^2[",["^13",["^30",["^13",[["^31"]]]]]],"^P","~$ghostwheel.logging/log-bold","^7","ghostwheel/logging.cljc","^;",15,"^38",["^13",[["^31"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",208,"^3H","^3=","^:",208,"^37",1,"^3>",true,"^2[",["^13",["^30",["^13",[["^31"]]]]]],"~$log-raw",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",148,"^9",7,"^:",148,"^;",14,"^2[",["^13",["^30",["^13",[["~$format-strings","~$&","~$objs"]]]]],"^33",["^13",["@param {...*} var_args"]],"^34",["^ ","^35",true,"^36",1,"^37",1,"^38",[["^13",["^45","^46"]]],"^2[",["^13",[["^45","~$&","^46"]]],"^39",["^13",[null]]]],"^P","~$ghostwheel.logging/log-raw","^7","ghostwheel/logging.cljc","^;",14,"^34",["^ ","^35",true,"^36",1,"^37",1,"^38",[["^13",["^45","^46"]]],"^2[",["^13",[["^45","~$&","^46"]]],"^39",["^13",[null]]],"^38",[["^13",["^45","^46"]]],"^3;",null,"^36",1,"^39",["^13",[null]],"^9",1,"^35",true,"^3<",[["^ ","^36",1,"^35",true]],"^8",148,"^3H","^3=","^:",148,"^37",1,"^3>",true,"^2[",["^13",[["^45","~$&","^46"]]],"^33",["^13",["@param {...*} var_args"]]],"~$ghostwheel-colors",["^ ","^P","~$ghostwheel.logging/ghostwheel-colors","^7","ghostwheel/logging.cljc","^8",26,"^9",1,"^:",26,"^;",23,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",26,"^9",6,"^:",26,"^;",23],"^2W","~$cljs.core/IMap"],"~$group-collapsed",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",192,"^9",7,"^:",192,"^;",22,"^2[",["^13",["^30",["^13",[["^3N"],["^3N","^32"]]]]],"^33",["^13",["@param {...*} var_args"]],"^34",["^ ","^35",false,"^36",2,"^37",2,"^38",["^13",[["^3N"],["^3N","^32"]]],"^2[",["^13",[["^3N"],["^3N","^32"]]],"^39",["^13",[null,null]]]],"^P","~$ghostwheel.logging/group-collapsed","^7","ghostwheel/logging.cljc","^;",22,"^34",["^ ","^35",false,"^36",2,"^37",2,"^38",["^13",[["^3N"],["^3N","^32"]]],"^2[",["^13",[["^3N"],["^3N","^32"]]],"^39",["^13",[null,null]]],"^38",["^13",[["^3N"],["^3N","^32"]]],"^3;",null,"^36",2,"^39",["^13",[null,null]],"^9",1,"^35",false,"^3<",[["^ ","^36",1,"^35",false,"^2W","^3="],["^ ","^36",2,"^35",false,"^2W","^3="]],"^8",192,"^:",192,"^37",2,"^3>",true,"^2[",["^13",[["^3N"],["^3N","^32"]]],"^33",["^13",["@param {...*} var_args"]]],"~$group-end",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",201,"^9",9,"^:",201,"^;",18,"^2[",["^13",["^30",["^13",[[]]]]]],"^P","~$ghostwheel.logging/group-end","^7","ghostwheel/logging.cljc","^;",18,"^38",["^13",[[]]],"^3;",null,"^39",["^13",[null,null]],"^9",3,"^35",false,"^8",201,"^:",201,"^37",0,"^3>",true,"^2[",["^13",["^30",["^13",[[]]]]]],"~$get-styled-label",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",96,"^9",7,"^:",96,"^;",23,"^2[",["^13",["^30",["^13",[["^3N",["^ ","~:keys",["~:ghostwheel.logging/foreground","~:ghostwheel.logging/background","~:ghostwheel.logging/weight"],"^15","^32"],"~$output","~$&",["~$length"]]]]]],"^33",["^13",["@param {...*} var_args"]],"^34",["^ ","^35",true,"^36",3,"^37",3,"^38",[["^13",["^3N",["^ ","^4@",["^4A","^4B","^4C"],"^15","^32"],"^4D",["^4E"]]]],"^2[",["^13",[["^3N",["^ ","^4@",["^4A","^4B","^4C"],"^15","^32"],"^4D","~$&",["^4E"]]]],"^39",["^13",[null]]]],"^P","~$ghostwheel.logging/get-styled-label","^7","ghostwheel/logging.cljc","^;",23,"^34",["^ ","^35",true,"^36",3,"^37",3,"^38",[["^13",["^3N",["^ ","^4@",["^4A","^4B","^4C"],"^15","^32"],"^4D",["^4E"]]]],"^2[",["^13",[["^3N",["^ ","^4@",["^4A","^4B","^4C"],"^15","^32"],"^4D","~$&",["^4E"]]]],"^39",["^13",[null]]],"^38",[["^13",["^3N",["^ ","^4@",["^4A","^4B","^4C"],"^15","^32"],"^4D",["^4E"]]]],"^3;",null,"^36",3,"^39",["^13",[null]],"^9",1,"^35",true,"^3<",[["^ ","^36",3,"^35",true,"^2W",["^O",["~$clj","~$cljs.core/IVector","^3=","~$cljs.core/MetaFn","^3I"]]]],"^8",96,"^3H","^3=","^:",96,"^37",3,"^3>",true,"^2[",["^13",[["^3N",["^ ","^4@",["^4A","^4B","^4C"],"^15","^32"],"^4D","~$&",["^4E"]]]],"^33",["^13",["@param {...*} var_args"]]],"~$wrap-line",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",79,"^9",7,"^:",79,"^;",16,"^2[",["^13",["^30",["^13",[["~$size","~$text"]]]]]],"^P","~$ghostwheel.logging/wrap-line","^7","ghostwheel/logging.cljc","^;",16,"^38",["^13",[["^4K","^4L"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",79,"^3H","^3=","^:",79,"^37",2,"^3>",true,"^2[",["^13",["^30",["^13",[["^4K","^4L"]]]]]],"~$error",["^ ","^2Z",null,"^5",["^ ","^7","ghostwheel/logging.cljc","^8",156,"^9",7,"^:",156,"^;",12,"^2[",["^13",["^30",["^13",[["^31"]]]]]],"^P","~$ghostwheel.logging/error","^7","ghostwheel/logging.cljc","^;",12,"^38",["^13",[["^31"]]],"^3;",null,"^39",["^13",[null,null]],"^9",1,"^35",false,"^8",156,"^:",156,"^37",1,"^3>",true,"^2[",["^13",["^30",["^13",[["^31"]]]]]],"~$group*",["^ ","^2Z",null,"^5",["^ ","^3F",true,"^7","ghostwheel/logging.cljc","^;",14,"^34",["^ ","^35",false,"^36",3,"^37",3,"^38",["^13",[["~$open?","^3N"],["^4Q","^3N","^32"]]],"^2[",["^13",[["^4Q","^3N"],["^4Q","^3N","^32"]]],"^39",["^13",[null,null]]],"^9",8,"^8",170,"^:",170,"^2[",["^13",["^30",["^13",[["^4Q","^3N"],["^4Q","^3N","^32"]]]]],"^33",["^13",["@param {...*} var_args"]]],"^3F",true,"^P","~$ghostwheel.logging/group*","^7","ghostwheel/logging.cljc","^;",14,"^34",["^ ","^35",false,"^36",3,"^37",3,"^38",["^13",[["^4Q","^3N"],["^4Q","^3N","^32"]]],"^2[",["^13",[["^4Q","^3N"],["^4Q","^3N","^32"]]],"^39",["^13",[null,null]]],"^38",["^13",[["^4Q","^3N"],["^4Q","^3N","^32"]]],"^3;",null,"^36",3,"^39",["^13",[null,null]],"^9",1,"^35",false,"^3<",[["^ ","^36",2,"^35",false,"^2W","^3="],["^ ","^36",3,"^35",false]],"^8",170,"^:",170,"^37",3,"^3>",true,"^2[",["^13",[["^4Q","^3N"],["^4Q","^3N","^32"]]],"^33",["^13",["@param {...*} var_args"]]]],"^11",["^ ","^D","^D","^I","^J","^X","^J","^J","^J"],"~:cljs.analyzer/constants",["^ ","^Z",["^O",["~$ghostwheel.tracer/reify","~$ghostwheel.tracer/extend-type","~:base1","~$ghostwheel.tracer/defmethod","~:orange","~$ghostwheel.tracer/extend-protocol","~:purple1","~:base3","~:purple0","~:else","^4B","~:orange0","~$ghostwheel.tracer/defn-","~:yellow","~$deftype","~:base2","~:green0","~:green","~:green1","~$let","~:cyan","~:violet","~$fn","~:purple2","~:base0","~$ghostwheel.tracer/defrecord","~$defn","~:orange1","~$extend-type","~$defmethod","^4A","~$extend-protocol","~$reify","~$fn*","~$defn-","~:red","~:blue","~:base00","^4C","~:magenta","~:base01","~:base03","~$ghostwheel.tracer/deftype","~$ghostwheel.tracer/fn","~$defrecord","~$ghostwheel.tracer/let","~:base02","~$ghostwheel.tracer/defn","~:js-console","~:black"]],"~:order",["^5U","^4V","^4X","^4Z","^4[","^50","^52","^54","^56","^57","^58","^59","^5;","^5<","^5>","^5?","^5B","^5I","^5J","^5K","^5L","^5M","^5N","^5S","^5V","^55","^5D","^4Y","^5G","^5A","^4W","^5E","^53","^5R","^5T","^5C","^4T","^5P","^5F","^5:","^5=","^5Q","^5H","^5O","^5@","^4U","^4A","^4B","^4C","^51"]],"^16",["^ ","^[",["^O",[]]],"^17",["^ "],"^18",["^Y","^D","^V","^J"]],"^S","^Q","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1F",[["^5Z","~:static-fns"],true,["^5Z","~:elide-asserts"],true,["^5Z","~:optimize-constants"],null,["^5Z","^1="],null,["^5Z","~:external-config"],null,["^5Z","~:tooling-config"],null,["^5Z","~:emit-constants"],null,["^5Z","~:load-tests"],false,["^5Z","~:form-size-threshold"],null,["^5Z","~:infer-externs"],true,["^5Z","^1?"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^5Z","~:fn-invoke-direct"],null,["^5Z","~:source-map"],"/dev/null"]]]