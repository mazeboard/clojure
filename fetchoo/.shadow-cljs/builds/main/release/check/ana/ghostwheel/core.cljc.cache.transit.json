["^ ","~:output",["^ ","~:js","goog.provide('ghostwheel.core');\nvar temp__5753__auto___78930 = new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996).cljs$core$IFn$_invoke$arity$1(ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$1(false));\nif(cljs.core.truth_(temp__5753__auto___78930)){\nvar expound_cfg_78933 = temp__5753__auto___78930;\ncljs.spec.alpha._STAR_explain_out_STAR_ = expound.alpha.custom_printer(expound_cfg_78933);\n} else {\n}\nghostwheel.core.test_suffix = \"__ghostwheel-test\";\nghostwheel.core._STAR_after_check_callbacks = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nghostwheel.core._STAR_unsafe_bound_ops_STAR_ = cljs.core.PersistentHashSet.EMPTY;\nghostwheel.core._STAR_global_trace_allowed_QMARK__STAR_ = true;\nghostwheel.core._STAR_global_check_allowed_QMARK__STAR_ = true;\nghostwheel.core.set_trace = (function ghostwheel$core$set_trace(enabled){\nreturn ghostwheel.core._STAR_global_trace_allowed_QMARK__STAR_ = enabled;\n});\nghostwheel.core.enable_trace_BANG_ = (function ghostwheel$core$enable_trace_BANG_(){\nghostwheel.core.set_trace(true);\n\nreturn \"Tracing enabled.\";\n});\nghostwheel.core.disable_trace_BANG_ = (function ghostwheel$core$disable_trace_BANG_(){\nghostwheel.core.set_trace(false);\n\nreturn \"Tracing disabled.\";\n});\nghostwheel.core.set_check = (function ghostwheel$core$set_check(enabled){\nreturn ghostwheel.core._STAR_global_check_allowed_QMARK__STAR_ = enabled;\n});\nghostwheel.core.enable_check_BANG_ = (function ghostwheel$core$enable_check_BANG_(){\nghostwheel.core.set_check(true);\n\nreturn \"Check enabled.\";\n});\nghostwheel.core.disable_check_BANG_ = (function ghostwheel$core$disable_check_BANG_(){\nghostwheel.core.set_check(false);\n\nreturn \"Check disabled.\";\n});\n/**\n * Returns a tuple with the number of regular and non-variadic arguments.\n */\nghostwheel.core.count_args = (function ghostwheel$core$count_args(conformed_args){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(conformed_args)),(cljs.core.truth_(new cljs.core.Keyword(null,\"varargs\",\"varargs\",1030150858).cljs$core$IFn$_invoke$arity$1(conformed_args))?(1):(0))], null);\n});\nghostwheel.core.resolve_trace_color = (function ghostwheel$core$resolve_trace_color(color){\nvar vec__77521 = cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640),color);\nvar color_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77521,(0),null);\nvar color_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77521,(1),null);\nvar G__77524 = color_type;\nvar G__77524__$1 = (((G__77524 instanceof cljs.core.Keyword))?G__77524.fqn:null);\nswitch (G__77524__$1) {\ncase \"literal\":\nreturn color_value;\n\nbreak;\ncase \"keyword\":\nvar temp__5751__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging.ghostwheel_colors,color);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar color_value__$1 = temp__5751__auto__;\nreturn color_value__$1;\n} else {\nreturn new cljs.core.Keyword(null,\"black\",\"black\",1294279647).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors);\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__77524__$1)].join('')));\n\n}\n});\nghostwheel.core._EQ__GT_ = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814);\nghostwheel.core._BAR_ = new cljs.core.Keyword(null,\"st\",\"st\",1455255828);\nghostwheel.core._LT__ = new cljs.core.Keyword(null,\"gen\",\"gen\",142575302);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [(0),\"null\",(1),\"null\",(4),\"null\",true,\"null\",(6),\"null\",(3),\"null\",(2),\"null\",(5),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [(0),null,(1),null,(4),null,true,null,(6),null,(3),null,(2),null,(5),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Keyword(null,\"literal\",\"literal\",1664775605),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77527#\",\"p1__77527#\",1315686112,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"re-matches\",\"cljs.core/re-matches\",2013608485,null),/#[a-fA-F0-9]+/,new cljs.core.Symbol(null,\"p1__77527#\",\"p1__77527#\",1315686112,null))),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77528#\",\"p1__77528#\",-589142739,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__77528#\",\"p1__77528#\",-589142739,null)),(7)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__77528#\",\"p1__77528#\",-589142739,null)),(4)))))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"literal\",\"literal\",1664775605)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77527#\",\"p1__77527#\",1315686112,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"re-matches\",\"cljs.core/re-matches\",2013608485,null),/#[a-fA-F0-9]+/,new cljs.core.Symbol(null,\"p1__77527#\",\"p1__77527#\",1315686112,null))),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77528#\",\"p1__77528#\",-589142739,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__77528#\",\"p1__77528#\",-589142739,null)),(7)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__77528#\",\"p1__77528#\",-589142739,null)),(4)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword_QMARK_,cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"re-matches\",\"cljs.core/re-matches\",2013608485,null),/#[a-fA-F0-9]+/,new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(7)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(4))))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__77527_SHARP_){\nreturn cljs.core.re_matches(/#[a-fA-F0-9]+/,p1__77527_SHARP_);\n}),(function (p1__77528_SHARP_){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(p1__77528_SHARP_),(7))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(p1__77528_SHARP_),(4))));\n})], null),null)], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501),new cljs.core.Symbol(\"cljs.core\",\"nat-int?\",\"cljs.core/nat-int?\",-164364171,null),cljs.core.nat_int_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687),new cljs.core.Symbol(\"cljs.core\",\"nat-int?\",\"cljs.core/nat-int?\",-164364171,null),cljs.core.nat_int_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.nilable_impl(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),cljs.core.boolean_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))),cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(null,\"qualified-symbol?\",\"qualified-symbol?\",98763807,null),cljs.core.qualified_symbol_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77548){\nreturn cljs.core.vector_QMARK_(G__77548);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Symbol(null,\"keyword?\",\"keyword?\",1917797069,null),new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword_QMARK_,cljs.core.any_QMARK_], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77550){\nreturn cljs.core.map_QMARK_(G__77550);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),(function (i__12903__auto__,v__12904__auto__){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__12904__auto__,(0));\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null),null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"repl\",\"repl\",-35398667),\"null\",new cljs.core.Keyword(null,\"js-console\",\"js-console\",1240105791),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"repl\",\"repl\",-35398667),null,new cljs.core.Keyword(null,\"js-console\",\"js-console\",1240105791),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel-config\",\"ghostwheel.core/ghostwheel-config\",1650780442),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664),new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640),new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241),new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921),new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687),new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415),new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684),new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197),new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347),new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355),new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996),new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991)], null))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664),new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640),new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241),new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921),new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687),new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415),new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684),new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197),new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347),new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355),new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996),new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991)], null))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__77561){\nreturn cljs.core.map_QMARK_(G__77561);\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996));\n}),(function (G__77561){\nreturn cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991));\n})], null),(function (G__77561){\nreturn ((cljs.core.map_QMARK_(G__77561)) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996))) && (cljs.core.contains_QMARK_(G__77561,new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664),new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640),new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241),new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921),new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687),new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415),new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684),new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197),new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347),new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355),new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996),new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991)], null),new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664),new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640),new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241),new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921),new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687),new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415),new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684),new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197),new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347),new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355),new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996),new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991)], null),new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664),new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640),new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241),new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921),new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687),new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415),new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684),new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197),new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347),new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355),new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996),new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"expound\",\"ghostwheel.core/expound\",2100442996))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991)))], null),null]))], null),null));\nif(cljs.spec.alpha._STAR_compile_asserts_STAR_){\nif(cljs.core.truth_(cljs.core.deref(new cljs.core.Var(function(){return cljs.spec.alpha._STAR_runtime_asserts_STAR_;},new cljs.core.Symbol(\"cljs.spec.alpha\",\"*runtime-asserts*\",\"cljs.spec.alpha/*runtime-asserts*\",-1060443587,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null),new cljs.core.Symbol(null,\"*runtime-asserts*\",\"*runtime-asserts*\",1632801956,null),\"cljs/spec/alpha.cljs\",20,1,true,1477,1479,cljs.core.List.EMPTY,null,((cljs.spec.alpha._STAR_runtime_asserts_STAR_)?cljs.spec.alpha._STAR_runtime_asserts_STAR_.cljs$lang$test:null)]))))){\ncljs.spec.alpha.assert_STAR_(new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel-config\",\"ghostwheel.core/ghostwheel-config\",1650780442),ghostwheel.utils.ghostwheel_default_config);\n} else {\n}\n} else {\n}\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77701#\",\"p1__77701#\",-396858218,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not=\",\"cljs.core/not=\",1017572457,null),cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),new cljs.core.Symbol(null,\"p1__77701#\",\"p1__77701#\",-396858218,null)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not=\",\"cljs.core/not=\",1017572457,null),cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.simple_symbol_QMARK_,(function (p1__77701_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),p1__77701_SHARP_);\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"seq-binding-form\",\"ghostwheel.core/seq-binding-form\",-481563241),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"elems\",\"elems\",-547490822),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048))),new cljs.core.Keyword(null,\"as\",\"as\",1148689641),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"elems\",\"elems\",-547490822),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048))),new cljs.core.Keyword(null,\"as\",\"as\",1148689641),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vector_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"elems\",\"elems\",-547490822),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(null,\"as\",\"as\",1148689641)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.rep_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),cljs.spec.alpha.maybe_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),null], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048))),cljs.spec.alpha.maybe_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\"], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"keys\",\"ghostwheel.core/keys\",-1620169737),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(null,\"ident?\",\"ident?\",-2061359468,null),cljs.core.ident_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77724){\nreturn cljs.core.vector_QMARK_(G__77724);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"syms\",\"ghostwheel.core/syms\",30481199),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(null,\"symbol?\",\"symbol?\",1820680511,null),cljs.core.symbol_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77729){\nreturn cljs.core.vector_QMARK_(G__77729);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"strs\",\"ghostwheel.core/strs\",-1514244000),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(null,\"simple-symbol?\",\"simple-symbol?\",1408454822,null),cljs.core.simple_symbol_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77741){\nreturn cljs.core.vector_QMARK_(G__77741);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"or\",\"ghostwheel.core/or\",-1387391536),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Symbol(null,\"simple-symbol?\",\"simple-symbol?\",1408454822,null),new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.simple_symbol_QMARK_,cljs.core.any_QMARK_], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77745){\nreturn cljs.core.map_QMARK_(G__77745);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),(function (i__12903__auto__,v__12904__auto__){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__12904__auto__,(0));\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"as\",\"ghostwheel.core/as\",1681836816),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"map-special-binding\",\"ghostwheel.core/map-special-binding\",915495335),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"as\",\"ghostwheel.core/as\",1681836816),new cljs.core.Keyword(\"ghostwheel.core\",\"or\",\"ghostwheel.core/or\",-1387391536),new cljs.core.Keyword(\"ghostwheel.core\",\"keys\",\"ghostwheel.core/keys\",-1620169737),new cljs.core.Keyword(\"ghostwheel.core\",\"syms\",\"ghostwheel.core/syms\",30481199),new cljs.core.Keyword(\"ghostwheel.core\",\"strs\",\"ghostwheel.core/strs\",-1514244000)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"as\",\"ghostwheel.core/as\",1681836816),new cljs.core.Keyword(\"ghostwheel.core\",\"or\",\"ghostwheel.core/or\",-1387391536),new cljs.core.Keyword(\"ghostwheel.core\",\"keys\",\"ghostwheel.core/keys\",-1620169737),new cljs.core.Keyword(\"ghostwheel.core\",\"syms\",\"ghostwheel.core/syms\",30481199),new cljs.core.Keyword(\"ghostwheel.core\",\"strs\",\"ghostwheel.core/strs\",-1514244000)], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__77750){\nreturn cljs.core.map_QMARK_(G__77750);\n})], null),(function (G__77750){\nreturn cljs.core.map_QMARK_(G__77750);\n}),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.Keyword(null,\"or\",\"or\",235744169),new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.Keyword(null,\"syms\",\"syms\",-1575891762),new cljs.core.Keyword(null,\"strs\",\"strs\",1175537277)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"as\",\"ghostwheel.core/as\",1681836816),new cljs.core.Keyword(\"ghostwheel.core\",\"or\",\"ghostwheel.core/or\",-1387391536),new cljs.core.Keyword(\"ghostwheel.core\",\"keys\",\"ghostwheel.core/keys\",-1620169737),new cljs.core.Keyword(\"ghostwheel.core\",\"syms\",\"ghostwheel.core/syms\",30481199),new cljs.core.Keyword(\"ghostwheel.core\",\"strs\",\"ghostwheel.core/strs\",-1514244000)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding\",\"ghostwheel.core/map-binding\",-1440838446),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),cljs.core.any_QMARK_], null)));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"ns-keys\",\"ghostwheel.core/ns-keys\",-168509117),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77768#\",\"p1__77768#\",331247437,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),new cljs.core.Symbol(null,\"p1__77768#\",\"p1__77768#\",331247437,null),new cljs.core.Symbol(\"cljs.core\",\"name\",\"cljs.core/name\",-260873443,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"syms\",\"null\",\"keys\",\"null\"], null), null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77768#\",\"p1__77768#\",331247437,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),new cljs.core.Symbol(null,\"p1__77768#\",\"p1__77768#\",331247437,null),new cljs.core.Symbol(\"cljs.core\",\"name\",\"cljs.core/name\",-260873443,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"syms\",\"null\",\"keys\",\"null\"], null), null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Symbol(\"cljs.core\",\"name\",\"cljs.core/name\",-260873443,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"syms\",\"null\",\"keys\",\"null\"], null), null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.qualified_keyword_QMARK_,(function (p1__77768_SHARP_){\nvar G__77793 = cljs.core.name(p1__77768_SHARP_);\nvar fexpr__77792 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"syms\",null,\"keys\",null], null), null);\nreturn (fexpr__77792.cljs$core$IFn$_invoke$arity$1 ? fexpr__77792.cljs$core$IFn$_invoke$arity$1(G__77793) : fexpr__77792.call(null,G__77793));\n})], null),null),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(null,\"simple-symbol?\",\"simple-symbol?\",1408454822,null),cljs.core.simple_symbol_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77796){\nreturn cljs.core.vector_QMARK_(G__77796);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null)], null)));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"map-bindings\",\"ghostwheel.core/map-bindings\",2118362277),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"every\",\"cljs.spec.alpha/every\",123912744,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"mb\",\"mb\",1534459853),new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding\",\"ghostwheel.core/map-binding\",-1440838446),new cljs.core.Keyword(null,\"nsk\",\"nsk\",-939952068),new cljs.core.Keyword(\"ghostwheel.core\",\"ns-keys\",\"ghostwheel.core/ns-keys\",-168509117),new cljs.core.Keyword(null,\"msb\",\"msb\",-1623778966),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\",new cljs.core.Keyword(null,\"or\",\"or\",235744169),\"null\",new cljs.core.Keyword(null,\"syms\",\"syms\",-1575891762),\"null\",new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),\"null\",new cljs.core.Keyword(null,\"strs\",\"strs\",1175537277),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"s\",\"or\",\"s/or\",1876282981,null),new cljs.core.Keyword(null,\"mb\",\"mb\",1534459853),new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding\",\"ghostwheel.core/map-binding\",-1440838446),new cljs.core.Keyword(null,\"nsk\",\"nsk\",-939952068),new cljs.core.Keyword(\"ghostwheel.core\",\"ns-keys\",\"ghostwheel.core/ns-keys\",-168509117),new cljs.core.Keyword(null,\"msb\",\"msb\",-1623778966),cljs.core.list(new cljs.core.Symbol(\"s\",\"tuple\",\"s/tuple\",1167863840,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\",new cljs.core.Keyword(null,\"or\",\"or\",235744169),\"null\",new cljs.core.Keyword(null,\"syms\",\"syms\",-1575891762),\"null\",new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),\"null\",new cljs.core.Keyword(null,\"strs\",\"strs\",1175537277),\"null\"], null), null),new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"mb\",\"mb\",1534459853),new cljs.core.Keyword(null,\"nsk\",\"nsk\",-939952068),new cljs.core.Keyword(null,\"msb\",\"msb\",-1623778966)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding\",\"ghostwheel.core/map-binding\",-1440838446),new cljs.core.Keyword(\"ghostwheel.core\",\"ns-keys\",\"ghostwheel.core/ns-keys\",-168509117),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\",new cljs.core.Keyword(null,\"or\",\"or\",235744169),\"null\",new cljs.core.Keyword(null,\"syms\",\"syms\",-1575891762),\"null\",new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),\"null\",new cljs.core.Keyword(null,\"strs\",\"strs\",1175537277),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding\",\"ghostwheel.core/map-binding\",-1440838446),new cljs.core.Keyword(\"ghostwheel.core\",\"ns-keys\",\"ghostwheel.core/ns-keys\",-168509117),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\",new cljs.core.Keyword(null,\"or\",\"or\",235744169),\"null\",new cljs.core.Keyword(null,\"syms\",\"syms\",-1575891762),\"null\",new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),\"null\",new cljs.core.Keyword(null,\"strs\",\"strs\",1175537277),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null,new cljs.core.Keyword(null,\"or\",\"or\",235744169),null,new cljs.core.Keyword(null,\"syms\",\"syms\",-1575891762),null,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),null,new cljs.core.Keyword(null,\"strs\",\"strs\",1175537277),null], null), null),cljs.core.any_QMARK_], null))], null),null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__77803){\nreturn cljs.core.coll_QMARK_(G__77803);\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"every\",\"cljs.spec.alpha/every\",123912744,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"mb\",\"mb\",1534459853),new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding\",\"ghostwheel.core/map-binding\",-1440838446),new cljs.core.Keyword(null,\"nsk\",\"nsk\",-939952068),new cljs.core.Keyword(\"ghostwheel.core\",\"ns-keys\",\"ghostwheel.core/ns-keys\",-168509117),new cljs.core.Keyword(null,\"msb\",\"msb\",-1623778966),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),\"null\",new cljs.core.Keyword(null,\"or\",\"or\",235744169),\"null\",new cljs.core.Keyword(null,\"syms\",\"syms\",-1575891762),\"null\",new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),\"null\",new cljs.core.Keyword(null,\"strs\",\"strs\",1175537277),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY)], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding-form\",\"ghostwheel.core/map-binding-form\",584016902),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"merge\",\"cljs.spec.alpha/merge\",1420080689,null),new cljs.core.Keyword(\"ghostwheel.core\",\"map-bindings\",\"ghostwheel.core/map-bindings\",2118362277),new cljs.core.Keyword(\"ghostwheel.core\",\"map-special-binding\",\"ghostwheel.core/map-special-binding\",915495335)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"map-bindings\",\"ghostwheel.core/map-bindings\",2118362277),new cljs.core.Keyword(\"ghostwheel.core\",\"map-special-binding\",\"ghostwheel.core/map-special-binding\",915495335)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"map-bindings\",\"ghostwheel.core/map-bindings\",2118362277),new cljs.core.Keyword(\"ghostwheel.core\",\"map-special-binding\",\"ghostwheel.core/map-special-binding\",915495335)], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562),new cljs.core.Keyword(null,\"seq\",\"seq\",-1817803783),new cljs.core.Keyword(\"ghostwheel.core\",\"seq-binding-form\",\"ghostwheel.core/seq-binding-form\",-481563241),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding-form\",\"ghostwheel.core/map-binding-form\",584016902)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"seq\",\"seq\",-1817803783),new cljs.core.Keyword(null,\"map\",\"map\",1371690461)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562),new cljs.core.Keyword(\"ghostwheel.core\",\"seq-binding-form\",\"ghostwheel.core/seq-binding-form\",-481563241),new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding-form\",\"ghostwheel.core/map-binding-form\",584016902)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562),new cljs.core.Keyword(\"ghostwheel.core\",\"seq-binding-form\",\"ghostwheel.core/seq-binding-form\",-481563241),new cljs.core.Keyword(\"ghostwheel.core\",\"map-binding-form\",\"ghostwheel.core/map-binding-form\",584016902)], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),new cljs.core.Keyword(null,\"varargs\",\"varargs\",1030150858),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),new cljs.core.Keyword(null,\"varargs\",\"varargs\",1030150858),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vector_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"varargs\",\"varargs\",1030150858)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.rep_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),cljs.spec.alpha.maybe_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),null], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"amp\",\"amp\",271690571),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048)))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"pred-arg-list\",\"ghostwheel.core/pred-arg-list\",-1859741678),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vector_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.rep_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)], null),null))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(\"ghostwheel.core\",\"local-name\",\"ghostwheel.core/local-name\",266201562)))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.spec.alpha.rep_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null)));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"anon-fn\",\"ghostwheel.core/anon-fn\",-2090915871),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347)))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null], null), null),cljs.spec.alpha.maybe_impl(cljs.core.simple_symbol_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),cljs.spec.alpha.rep_PLUS_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),null,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347)))], null))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"anon-args+body\",\"ghostwheel.core/anon-args+body\",250033347))))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-arg-list\",\"ghostwheel.core/pred-arg-list\",-1859741678),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-arg-list\",\"ghostwheel.core/pred-arg-list\",-1859741678),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null], null), null),cljs.spec.alpha.maybe_impl(cljs.core.simple_symbol_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-arg-list\",\"ghostwheel.core/pred-arg-list\",-1859741678),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-arg-list\",\"ghostwheel.core/pred-arg-list\",-1859741678),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Symbol(\"cljs.core\",\"set?\",\"cljs.core/set?\",-1176684971,null),new cljs.core.Keyword(null,\"pred-sym\",\"pred-sym\",1132481576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"complement\",\"cljs.core/complement\",-498493640,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"|\",\"ghostwheel.core/|\",-284833618,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"=>\",\"ghostwheel.core/=>\",1874940758,null)),\"null\"], null), null)),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77907#\",\"p1__77907#\",2105535495,null)], null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"ends-with?\",\"clojure.string/ends-with?\",-745964149,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"p1__77907#\",\"p1__77907#\",2105535495,null)),\"?\"))),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nilable-gspec\",\"nilable-gspec\",-925413839),new cljs.core.Keyword(\"ghostwheel.core\",\"nilable-gspec\",\"ghostwheel.core/nilable-gspec\",-392952748),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)),new cljs.core.Keyword(null,\"spec-key\",\"spec-key\",-1928172992),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Keyword(null,\"pred-sym\",\"pred-sym\",1132481576),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),new cljs.core.Keyword(null,\"spec-key\",\"spec-key\",-1928172992),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(null,\"list\",\"list\",765357683)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"set?\",\"cljs.core/set?\",-1176684971,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"complement\",\"cljs.core/complement\",-498493640,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"|\",\"ghostwheel.core/|\",-284833618,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"=>\",\"ghostwheel.core/=>\",1874940758,null)),\"null\"], null), null)),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__77907#\",\"p1__77907#\",2105535495,null)], null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"ends-with?\",\"clojure.string/ends-with?\",-745964149,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"p1__77907#\",\"p1__77907#\",2105535495,null)),\"?\"))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nilable-gspec\",\"nilable-gspec\",-925413839),new cljs.core.Keyword(\"ghostwheel.core\",\"nilable-gspec\",\"ghostwheel.core/nilable-gspec\",-392952748),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.set_QMARK_,cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"complement\",\"cljs.core/complement\",-498493640,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"|\",\"ghostwheel.core/|\",-284833618,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"=>\",\"ghostwheel.core/=>\",1874940758,null)),\"null\"], null), null)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"ends-with?\",\"clojure.string/ends-with?\",-745964149,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),\"?\"))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,cljs.core.complement(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"=>\",\"=>\",-813269641,null),null,new cljs.core.Symbol(null,\"|\",\"|\",1288119951,null),null], null), null)),(function (p1__77907_SHARP_){\nreturn clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__77907_SHARP_),\"?\");\n})], null),null),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nilable-gspec\",\"nilable-gspec\",-925413839),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"nilable-gspec\",\"ghostwheel.core/nilable-gspec\",-392952748),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"nilable-gspec\",\"ghostwheel.core/nilable-gspec\",-392952748),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)], null),null),cljs.core.qualified_keyword_QMARK_,new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244),cljs.core.seq_QMARK_], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"|\",\"|\",1288119951,null)),\"null\",new cljs.core.Keyword(null,\"st\",\"st\",1455255828),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"|\",\"|\",1288119951,null),null,new cljs.core.Keyword(null,\"st\",\"st\",1455255828),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"ret-op\",\"ghostwheel.core/ret-op\",-1588105243),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"=>\",\"=>\",-813269641,null)),\"null\",new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"=>\",\"=>\",-813269641,null),null,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"gen-op\",\"ghostwheel.core/gen-op\",1022229533),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"gen\",\"gen\",142575302),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"<-\",\"<-\",-1894022771,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"gen\",\"gen\",142575302),null,new cljs.core.Symbol(null,\"<-\",\"<-\",-1894022771,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350)),new cljs.core.Keyword(null,\"args-such-that\",\"args-such-that\",1913142965),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))))),new cljs.core.Keyword(null,\"ret-op\",\"ret-op\",26616262),new cljs.core.Keyword(\"ghostwheel.core\",\"ret-op\",\"ghostwheel.core/ret-op\",-1588105243),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),new cljs.core.Keyword(null,\"fn-such-that\",\"fn-such-that\",1755729726),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))),new cljs.core.Keyword(null,\"gen\",\"gen\",142575302),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"gen-op\",\"ghostwheel.core/gen-op\",1022229533),new cljs.core.Keyword(null,\"gen-fn\",\"gen-fn\",1212304428),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"some-fn\",\"cljs.core/some-fn\",-905373668,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null))))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350)),new cljs.core.Keyword(null,\"args-such-that\",\"args-such-that\",1913142965),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))))),new cljs.core.Keyword(null,\"ret-op\",\"ret-op\",26616262),new cljs.core.Keyword(\"ghostwheel.core\",\"ret-op\",\"ghostwheel.core/ret-op\",-1588105243),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),new cljs.core.Keyword(null,\"fn-such-that\",\"fn-such-that\",1755729726),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))),new cljs.core.Keyword(null,\"gen\",\"gen\",142575302),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"gen-op\",\"ghostwheel.core/gen-op\",1022229533),new cljs.core.Keyword(null,\"gen-fn\",\"gen-fn\",1212304428),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"some-fn\",\"cljs.core/some-fn\",-905373668,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null))))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vector_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"ret-op\",\"ret-op\",26616262),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(null,\"fn-such-that\",\"fn-such-that\",1755729726),new cljs.core.Keyword(null,\"gen\",\"gen\",142575302)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.maybe_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"args-such-that\",\"args-such-that\",1913142965)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.rep_PLUS_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350)),cljs.spec.alpha.maybe_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),cljs.spec.alpha.rep_PLUS_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244))], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244))))], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350)),new cljs.core.Keyword(null,\"args-such-that\",\"args-such-that\",1913142965),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))))),new cljs.core.Keyword(\"ghostwheel.core\",\"ret-op\",\"ghostwheel.core/ret-op\",-1588105243),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),cljs.spec.alpha.maybe_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),cljs.spec.alpha.rep_PLUS_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244))], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))),cljs.spec.alpha.maybe_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"gen-fn\",\"gen-fn\",1212304428)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"gen-op\",\"ghostwheel.core/gen-op\",1022229533),cljs.spec.alpha.maybe_impl(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,cljs.core.symbol_QMARK_),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"some-fn\",\"cljs.core/some-fn\",-905373668,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"gen-op\",\"ghostwheel.core/gen-op\",1022229533),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"some-fn\",\"cljs.core/some-fn\",-905373668,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)))], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"gen-op\",\"ghostwheel.core/gen-op\",1022229533),new cljs.core.Keyword(null,\"gen-fn\",\"gen-fn\",1212304428),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"some-fn\",\"cljs.core/some-fn\",-905373668,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)))))], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350)),new cljs.core.Keyword(null,\"args-such-that\",\"args-such-that\",1913142965),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))))),new cljs.core.Keyword(\"ghostwheel.core\",\"ret-op\",\"ghostwheel.core/ret-op\",-1588105243),new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"such-that-op\",\"ghostwheel.core/such-that-op\",438919133),new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"pred-fn\",\"ghostwheel.core/pred-fn\",1366777244)))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(\"ghostwheel.core\",\"gen-op\",\"ghostwheel.core/gen-op\",1022229533),new cljs.core.Keyword(null,\"gen-fn\",\"gen-fn\",1212304428),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"some-fn\",\"cljs.core/some-fn\",-905373668,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)))))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"nilable-gspec\",\"ghostwheel.core/nilable-gspec\",-392952748),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"maybe\",\"maybe\",-314397560),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"?\",\"ghostwheel.core/?\",-1668973707,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"maybe\",\"maybe\",-314397560),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"ghostwheel.core\",\"?\",\"ghostwheel.core/?\",-1668973707,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vector_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"maybe\",\"maybe\",-314397560),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"s\",\"nilable\",\"s/nilable\",-812128520,null),null,new cljs.core.Symbol(null,\"?\",\"?\",-62633706,null),null], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"s\",\"nilable\",\"s/nilable\",-812128520,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"?\",\"?\",-62633706,null)),\"null\"], null), null),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pre\",\"pre\",2118456869),\"null\",new cljs.core.Keyword(null,\"post\",\"post\",269697687),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(null,\"distinct\",\"distinct\",-1788879121),true)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",-415901908,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pre\",\"pre\",2118456869),\"null\",new cljs.core.Keyword(null,\"post\",\"post\",269697687),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"s\",\"coll-of\",\"s/coll-of\",-1705285349,null),new cljs.core.Symbol(null,\"seq?\",\"seq?\",-1951934719,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(null,\"vector?\",\"vector?\",-61367869,null),new cljs.core.Keyword(null,\"distinct\",\"distinct\",-1788879121),true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pre\",\"pre\",2118456869),\"null\",new cljs.core.Keyword(null,\"post\",\"post\",269697687),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(null,\"distinct\",\"distinct\",-1788879121),true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pre\",\"pre\",2118456869),null,new cljs.core.Keyword(null,\"post\",\"post\",269697687),null], null), null),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(null,\"seq?\",\"seq?\",-1951934719,null),cljs.core.seq_QMARK_,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__78021){\nvar and__4120__auto__ = cljs.core.vector_QMARK_(G__78021);\nif(and__4120__auto__){\nvar or__4131__auto__ = cljs.core.empty_QMARK_(G__78021);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct_QMARK_,G__78021);\n}\n} else {\nreturn and__4120__auto__;\n}\n}),new cljs.core.Keyword(null,\"distinct\",\"distinct\",-1788879121),true,new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(null,\"distinct\",\"distinct\",-1788879121),true,new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null))], null),null)], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"into\",\"into\",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__78019){\nreturn cljs.core.map_QMARK_(G__78019);\n}),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",672643897),(function (i__12903__auto__,v__12904__auto__){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__12904__auto__,(0));\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",153715093,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pre\",\"pre\",2118456869),\"null\",new cljs.core.Keyword(null,\"post\",\"post\",269697687),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),new cljs.core.Keyword(null,\"distinct\",\"distinct\",-1788879121),true))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"prepost+body\",\"prepost+body\",1703890068),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prepost+body\",\"prepost+body\",1703890068),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),cljs.spec.alpha.rep_PLUS_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null)),cljs.spec.alpha.rep_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"prepost+body\",\"prepost+body\",1703890068),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))], null)));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"&\",\"cljs.spec.alpha/&\",1635809823,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"prepost+body\",\"prepost+body\",1703890068),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.Symbol(null,\"arg-specs-match-param-count?\",\"arg-specs-match-param-count?\",-1821902262,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),new cljs.core.Symbol(null,\"gspec\",\"gspec\",-1372275507,null)], null)], null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"if-not\",\"cljs.core/if-not\",-1997686824,null),new cljs.core.Symbol(null,\"gspec\",\"gspec\",-1372275507,null),true,cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"argcount\",\"argcount\",-1682303943,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->>\",\"cljs.core/->>\",-1207871206,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),new cljs.core.Symbol(\"ghostwheel.core\",\"count-args\",\"ghostwheel.core/count-args\",-409439507,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",1757277831,null),new cljs.core.Symbol(\"cljs.core\",\"+\",\"cljs.core/+\",-342754435,null))),new cljs.core.Symbol(null,\"spec-args\",\"spec-args\",-1253869619,null),cljs.core.list(new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Symbol(null,\"gspec\",\"gspec\",-1372275507,null))], null),cljs.core.list(new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),new cljs.core.Symbol(null,\"spec-args\",\"spec-args\",-1253869619,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),new cljs.core.Symbol(null,\"spec-args\",\"spec-args\",-1253869619,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Symbol(null,\"argcount\",\"argcount\",-1682303943,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Symbol(null,\"argcount\",\"argcount\",-1682303943,null),(0))))))),cljs.spec.alpha.amp_impl(cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757),null),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prepost+body\",\"prepost+body\",1703890068),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),cljs.spec.alpha.rep_PLUS_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null)),cljs.spec.alpha.rep_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"prepost+body\",\"prepost+body\",1703890068),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757)),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"prepost+body\",\"prepost+body\",1703890068),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712),new cljs.core.Keyword(\"ghostwheel.core\",\"prepost\",\"ghostwheel.core/prepost\",-1428637065),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function ghostwheel$core$arg_specs_match_param_count_QMARK_(p__78133){\nvar map__78134 = p__78133;\nvar map__78134__$1 = (((((!((map__78134 == null))))?(((((map__78134.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78134.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78134):map__78134);\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78134__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar gspec = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78134__$1,new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262));\nif(cljs.core.not(gspec)){\nreturn true;\n} else {\nvar argcount = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,ghostwheel.core.count_args(args));\nvar spec_args = new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(gspec);\nif(cljs.core.truth_(spec_args)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(spec_args)),argcount);\n} else {\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(argcount,(0));\n}\n}\n})], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.Symbol(null,\"arg-specs-match-param-count?\",\"arg-specs-match-param-count?\",-1821902262,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),new cljs.core.Symbol(null,\"gspec\",\"gspec\",-1372275507,null)], null)], null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"if-not\",\"cljs.core/if-not\",-1997686824,null),new cljs.core.Symbol(null,\"gspec\",\"gspec\",-1372275507,null),true,cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"argcount\",\"argcount\",-1682303943,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->>\",\"cljs.core/->>\",-1207871206,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),new cljs.core.Symbol(\"ghostwheel.core\",\"count-args\",\"ghostwheel.core/count-args\",-409439507,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",1757277831,null),new cljs.core.Symbol(\"cljs.core\",\"+\",\"cljs.core/+\",-342754435,null))),new cljs.core.Symbol(null,\"spec-args\",\"spec-args\",-1253869619,null),cljs.core.list(new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Symbol(null,\"gspec\",\"gspec\",-1372275507,null))], null),cljs.core.list(new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),new cljs.core.Symbol(null,\"spec-args\",\"spec-args\",-1253869619,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),new cljs.core.Symbol(null,\"spec-args\",\"spec-args\",-1253869619,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Symbol(null,\"argcount\",\"argcount\",-1682303943,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",-1891498332,null),new cljs.core.Symbol(null,\"argcount\",\"argcount\",-1682303943,null),(0))))))], null)));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"defn\",\"ghostwheel.core/defn\",905285158),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"defn\",\"cljs.core/defn\",-1606493717,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"defn-\",\"cljs.core/defn-\",1764521227,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"docstring\",\"docstring\",879233117),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"bodies\",\"bodies\",-1295887172),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854))),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"defn\",\"cljs.core/defn\",-1606493717,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"defn-\",\"cljs.core/defn-\",1764521227,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"docstring\",\"docstring\",879233117),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"bodies\",\"bodies\",-1295887172),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854))),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"docstring\",\"docstring\",879233117),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null),null,new cljs.core.Symbol(null,\"defn-\",\"defn-\",1097765044,null),null], null), null),cljs.core.simple_symbol_QMARK_,cljs.spec.alpha.maybe_impl(cljs.core.string_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.maybe_impl(cljs.core.map_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bodies\",\"bodies\",-1295887172),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.rep_PLUS_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),null,null)),cljs.spec.alpha.maybe_impl(cljs.core.map_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null))], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"bodies\",\"bodies\",-1295887172),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854))),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)))], null))], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn-\",\"defn-\",1097765044,null)),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"bodies\",\"bodies\",-1295887172),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+body\",\"ghostwheel.core/args+body\",1117874854))),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null))))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"deftest\",\"ghostwheel.core/deftest\",904093253),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.test\",\"deftest\",\"cljs.test/deftest\",-271367143,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.test\",\"deftest\",\"cljs.test/deftest\",-271367143,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.test\",\"deftest\",\"cljs.test/deftest\",-271367143,null),null,new cljs.core.Symbol(\"clojure.test\",\"deftest\",\"clojure.test/deftest\",-437170741,null),null], null), null),cljs.core.symbol_QMARK_,cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.test\",\"deftest\",\"cljs.test/deftest\",-271367143,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"clojure.test\",\"deftest\",\"clojure.test/deftest\",-437170741,null)),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null))], null),null));\nghostwheel.core.threading_macro_syms = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Symbol(null,\"*as->\",\"*as->\",1583021072,null),null,new cljs.core.Symbol(null,\"*some->>\",\"*some->>\",-54074160,null),null,new cljs.core.Symbol(null,\"*cond->\",\"*cond->\",2142572517,null),null,new cljs.core.Symbol(null,\"->>\",\"->>\",-1874332161,null),null,new cljs.core.Symbol(null,\"*cond->>\",\"*cond->>\",-377155425,null),null,new cljs.core.Symbol(null,\"cond->>\",\"cond->>\",348844960,null),null,new cljs.core.Symbol(null,\"some->>\",\"some->>\",-1499987794,null),null,new cljs.core.Symbol(null,\"some->\",\"some->\",-1011172200,null),null,new cljs.core.Symbol(null,\"*->>\",\"*->>\",309247818,null),null,new cljs.core.Symbol(null,\"*->\",\"*->\",1332248959,null),null,new cljs.core.Symbol(null,\"cond->\",\"cond->\",561741875,null),null,new cljs.core.Symbol(null,\"->\",\"->\",-2139605430,null),null,new cljs.core.Symbol(null,\"as->\",\"as->\",1430690540,null),null,new cljs.core.Symbol(null,\"*some->\",\"*some->\",-418200066,null),null], null), null);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"threading-macro-op\",\"ghostwheel.core/threading-macro-op\",-772235119),new cljs.core.Symbol(\"ghostwheel.core\",\"threading-macro-syms\",\"ghostwheel.core/threading-macro-syms\",1825908,null),ghostwheel.core.threading_macro_syms);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"binding-op\",\"ghostwheel.core/binding-op\",-889409442),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"doseq\",\"doseq\",221164135,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"for\",\"for\",316745208,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"let\",\"let\",358118826,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"binding\",\"binding\",-2114503176,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\"doseq\",\"doseq\",221164135,null),null,new cljs.core.Symbol(null,\"for\",\"for\",316745208,null),null,new cljs.core.Symbol(null,\"let\",\"let\",358118826,null),null,new cljs.core.Symbol(null,\"binding\",\"binding\",-2114503176,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"single-function-composition\",\"ghostwheel.core/single-function-composition\",1698463537),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fnil\",\"fnil\",-187395162,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"partial\",\"partial\",1881673272,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"fnil\",\"fnil\",-187395162,null),null,new cljs.core.Symbol(null,\"partial\",\"partial\",1881673272,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"safe-single-function-composition\",\"ghostwheel.core/safe-single-function-composition\",1616563011),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"complement\",\"complement\",-913606051,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"memoize\",\"memoize\",2019341169,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"complement\",\"complement\",-913606051,null),null,new cljs.core.Symbol(null,\"memoize\",\"memoize\",2019341169,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"multi-function-composition\",\"ghostwheel.core/multi-function-composition\",674118850),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"comp\",\"comp\",-1462482139,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"comp\",\"comp\",-1462482139,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"safe-multi-function-composition\",\"ghostwheel.core/safe-multi-function-composition\",-1510374343),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"some-fn\",\"some-fn\",-490044165,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"juxt\",\"juxt\",671085604,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"every-pred\",\"every-pred\",-1346958247,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"some-fn\",\"some-fn\",-490044165,null),null,new cljs.core.Symbol(null,\"juxt\",\"juxt\",671085604,null),null,new cljs.core.Symbol(null,\"every-pred\",\"every-pred\",-1346958247,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fmap\",\"fmap\",55293788,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"apply\",\"apply\",-1334050276,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"map\",\"map\",-1282745308,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"reduce\",\"reduce\",1358839360,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"map-indexed\",\"map-indexed\",-1391025435,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol(null,\"fmap\",\"fmap\",55293788,null),null,new cljs.core.Symbol(null,\"apply\",\"apply\",-1334050276,null),null,new cljs.core.Symbol(null,\"map\",\"map\",-1282745308,null),null,new cljs.core.Symbol(null,\"reduce\",\"reduce\",1358839360,null),null,new cljs.core.Symbol(null,\"map-indexed\",\"map-indexed\",-1391025435,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 17, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"reduce-kv\",\"reduce-kv\",1856296400,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"sort-by\",\"sort-by\",1317932224,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"drop-while\",\"drop-while\",719206685,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"take-while\",\"take-while\",2007268328,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"sort\",\"sort\",-1700969851,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"keep\",\"keep\",-492807003,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"group-by\",\"group-by\",1261391725,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"keep-indexed\",\"keep-indexed\",-2020916352,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"mapv\",\"mapv\",-241595241,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"iterate\",\"iterate\",694501410,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"mapcat\",\"mapcat\",-601348859,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"filterv\",\"filterv\",1977739179,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"reductions\",\"reductions\",549963952,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"sorted-map-by\",\"sorted-map-by\",218894812,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"filter\",\"filter\",691993593,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"merge-with\",\"merge-with\",1025434534,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"remove\",\"remove\",1509103113,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 17, [new cljs.core.Symbol(null,\"reduce-kv\",\"reduce-kv\",1856296400,null),null,new cljs.core.Symbol(null,\"sort-by\",\"sort-by\",1317932224,null),null,new cljs.core.Symbol(null,\"drop-while\",\"drop-while\",719206685,null),null,new cljs.core.Symbol(null,\"take-while\",\"take-while\",2007268328,null),null,new cljs.core.Symbol(null,\"sort\",\"sort\",-1700969851,null),null,new cljs.core.Symbol(null,\"keep\",\"keep\",-492807003,null),null,new cljs.core.Symbol(null,\"group-by\",\"group-by\",1261391725,null),null,new cljs.core.Symbol(null,\"keep-indexed\",\"keep-indexed\",-2020916352,null),null,new cljs.core.Symbol(null,\"mapv\",\"mapv\",-241595241,null),null,new cljs.core.Symbol(null,\"iterate\",\"iterate\",694501410,null),null,new cljs.core.Symbol(null,\"mapcat\",\"mapcat\",-601348859,null),null,new cljs.core.Symbol(null,\"filterv\",\"filterv\",1977739179,null),null,new cljs.core.Symbol(null,\"reductions\",\"reductions\",549963952,null),null,new cljs.core.Symbol(null,\"sorted-map-by\",\"sorted-map-by\",218894812,null),null,new cljs.core.Symbol(null,\"filter\",\"filter\",691993593,null),null,new cljs.core.Symbol(null,\"merge-with\",\"merge-with\",1025434534,null),null,new cljs.core.Symbol(null,\"remove\",\"remove\",1509103113,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-block\",\"ghostwheel.core/unsafe-clj-block\",687448612),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"doseq\",\"doseq\",221164135,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"dotimes\",\"dotimes\",-818708397,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,new cljs.core.Symbol(null,\"doseq\",\"doseq\",221164135,null),null,new cljs.core.Symbol(null,\"dotimes\",\"dotimes\",-818708397,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-call\",\"ghostwheel.core/unsafe-clj-call\",-1958349551),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"dispatch\",\"dispatch\",-1335098760,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"js-delete\",\"js-delete\",170306730,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"dorun\",\"dorun\",560426022,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"repeatedly\",\"repeatedly\",1199964457,null)),\"null\"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol(null,\"dispatch\",\"dispatch\",-1335098760,null),null,new cljs.core.Symbol(null,\"js-delete\",\"js-delete\",170306730,null),null,new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),null,new cljs.core.Symbol(null,\"dorun\",\"dorun\",560426022,null),null,new cljs.core.Symbol(null,\"repeatedly\",\"repeatedly\",1199964457,null),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"single-fn\",\"single-fn\",-1461539472),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"composition\",\"composition\",1834198617),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"single-function-composition\",\"ghostwheel.core/single-function-composition\",1698463537),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-single-function-composition\",\"ghostwheel.core/safe-single-function-composition\",1616563011)),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),new cljs.core.Keyword(null,\"multi-fn\",\"multi-fn\",-1122370209),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"composition\",\"composition\",1834198617),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"multi-function-composition\",\"ghostwheel.core/multi-function-composition\",674118850),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-multi-function-composition\",\"ghostwheel.core/safe-multi-function-composition\",-1510374343)),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"single-fn\",\"single-fn\",-1461539472),new cljs.core.Keyword(null,\"multi-fn\",\"multi-fn\",-1122370209)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"composition\",\"composition\",1834198617),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"single-function-composition\",\"ghostwheel.core/single-function-composition\",1698463537),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-single-function-composition\",\"ghostwheel.core/safe-single-function-composition\",1616563011)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"single-function-composition\",\"ghostwheel.core/single-function-composition\",1698463537),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-single-function-composition\",\"ghostwheel.core/safe-single-function-composition\",1616563011)], null)),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"single-function-composition\",\"ghostwheel.core/single-function-composition\",1698463537),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-single-function-composition\",\"ghostwheel.core/safe-single-function-composition\",1616563011)),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"composition\",\"composition\",1834198617),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"multi-function-composition\",\"ghostwheel.core/multi-function-composition\",674118850),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-multi-function-composition\",\"ghostwheel.core/safe-multi-function-composition\",-1510374343)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"multi-function-composition\",\"ghostwheel.core/multi-function-composition\",674118850),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-multi-function-composition\",\"ghostwheel.core/safe-multi-function-composition\",-1510374343)], null)),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"multi-function-composition\",\"ghostwheel.core/multi-function-composition\",674118850),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-multi-function-composition\",\"ghostwheel.core/safe-multi-function-composition\",-1510374343)),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"composition\",\"composition\",1834198617),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"single-function-composition\",\"ghostwheel.core/single-function-composition\",1698463537),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-single-function-composition\",\"ghostwheel.core/safe-single-function-composition\",1616563011)),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"composition\",\"composition\",1834198617),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"multi-function-composition\",\"ghostwheel.core/multi-function-composition\",674118850),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-multi-function-composition\",\"ghostwheel.core/safe-multi-function-composition\",-1510374343)),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))], null)));\nvar bang_suffix_QMARK__79139 = (function (p1__78169_SHARP_){\nreturn clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__78169_SHARP_),\"!\");\n});\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"bang-suffix\",\"ghostwheel.core/bang-suffix\",909060836),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every-pred\",\"cljs.core/every-pred\",1081452798,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(null,\"bang-suffix?\",\"bang-suffix?\",-1283080164,null)),cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,bang_suffix_QMARK__79139));\n\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"bang-suffix\",\"bang-suffix\",-706224947),new cljs.core.Keyword(\"ghostwheel.core\",\"bang-suffix\",\"ghostwheel.core/bang-suffix\",909060836),new cljs.core.Keyword(null,\"unsafe-anon-fn\",\"unsafe-anon-fn\",-13864978),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"unsafe-body\",\"unsafe-body\",8389259),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499)),new cljs.core.Keyword(null,\"unsafe-name\",\"unsafe-name\",1150744053),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every-pred\",\"cljs.core/every-pred\",1081452798,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(null,\"bang-suffix?\",\"bang-suffix?\",-1283080164,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))),new cljs.core.Keyword(null,\"unsafe-clj-call\",\"unsafe-clj-call\",-1408826574),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-call\",\"ghostwheel.core/unsafe-clj-call\",-1958349551),new cljs.core.Keyword(null,\"unsafe-clj-comp\",\"unsafe-clj-comp\",-176805153),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696)),new cljs.core.Keyword(null,\"unsafe-bound-call\",\"unsafe-bound-call\",572215860),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__78170#\",\"p1__78170#\",1415362998,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(\"ghostwheel.core\",\"*unsafe-bound-ops*\",\"ghostwheel.core/*unsafe-bound-ops*\",-441019349,null),new cljs.core.Symbol(null,\"p1__78170#\",\"p1__78170#\",1415362998,null))),new cljs.core.Keyword(null,\"multi-form-op\",\"multi-form-op\",1344024909),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-let\",\"cljs.core/when-let\",-2049838349,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-some\",\"cljs.core/when-some\",1033431610,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-first\",\"cljs.core/when-first\",-667185267,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-not\",\"cljs.core/when-not\",-556141047,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"pred-or-bindings\",\"pred-or-bindings\",-1496416130),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bang-suffix\",\"bang-suffix\",-706224947),new cljs.core.Keyword(null,\"unsafe-anon-fn\",\"unsafe-anon-fn\",-13864978),new cljs.core.Keyword(null,\"unsafe-clj-call\",\"unsafe-clj-call\",-1408826574),new cljs.core.Keyword(null,\"unsafe-clj-comp\",\"unsafe-clj-comp\",-176805153),new cljs.core.Keyword(null,\"unsafe-bound-call\",\"unsafe-bound-call\",572215860),new cljs.core.Keyword(null,\"multi-form-op\",\"multi-form-op\",1344024909)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"bang-suffix\",\"ghostwheel.core/bang-suffix\",909060836),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"unsafe-body\",\"unsafe-body\",8389259),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499)),new cljs.core.Keyword(null,\"unsafe-name\",\"unsafe-name\",1150744053),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every-pred\",\"cljs.core/every-pred\",1081452798,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(null,\"bang-suffix?\",\"bang-suffix?\",-1283080164,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"unsafe-body\",\"unsafe-body\",8389259),new cljs.core.Keyword(null,\"unsafe-name\",\"unsafe-name\",1150744053)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null], null), null),cljs.spec.alpha.maybe_impl(cljs.core.simple_symbol_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499)], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null], null), null),cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.simple_symbol_QMARK_,bang_suffix_QMARK__79139),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every-pred\",\"cljs.core/every-pred\",1081452798,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(null,\"bang-suffix?\",\"bang-suffix?\",-1283080164,null)),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every-pred\",\"cljs.core/every-pred\",1081452798,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(null,\"bang-suffix?\",\"bang-suffix?\",-1283080164,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null))], null),null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-call\",\"ghostwheel.core/unsafe-clj-call\",-1958349551),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696),null,null),((function (bang_suffix_QMARK__79139){\nreturn (function (p1__78170_SHARP_){\nreturn cljs.core.contains_QMARK_(ghostwheel.core._STAR_unsafe_bound_ops_STAR_,p1__78170_SHARP_);\n});})(bang_suffix_QMARK__79139))\n,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"pred-or-bindings\",\"pred-or-bindings\",-1496416130),new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"when-first\",\"when-first\",821699168,null),null,new cljs.core.Symbol(null,\"when-not\",\"when-not\",-1223136340,null),null,new cljs.core.Symbol(null,\"when\",\"when\",1064114221,null),null,new cljs.core.Symbol(null,\"when-some\",\"when-some\",1700415903,null),null,new cljs.core.Symbol(null,\"when-let\",\"when-let\",-1383043480,null),null,new cljs.core.Symbol(null,\"let\",\"let\",358118826,null),null,new cljs.core.Symbol(null,\"binding\",\"binding\",-2114503176,null),null], null), null),cljs.core.any_QMARK_,cljs.spec.alpha.rep_PLUS_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"when-first\",\"when-first\",821699168,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"when-not\",\"when-not\",-1223136340,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"when\",\"when\",1064114221,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"when-some\",\"when-some\",1700415903,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"when-let\",\"when-let\",-1383043480,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"let\",\"let\",358118826,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"binding\",\"binding\",-2114503176,null)),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null))], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"bang-suffix\",\"ghostwheel.core/bang-suffix\",909060836),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"unsafe-body\",\"unsafe-body\",8389259),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499)),new cljs.core.Keyword(null,\"unsafe-name\",\"unsafe-name\",1150744053),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"every-pred\",\"cljs.core/every-pred\",1081452798,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(null,\"bang-suffix?\",\"bang-suffix?\",-1283080164,null)),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\"arg-list\",\"ghostwheel.core/arg-list\",1922485784),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)))),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-call\",\"ghostwheel.core/unsafe-clj-call\",-1958349551),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696)),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(\"ghostwheel.core\",\"*unsafe-bound-ops*\",\"ghostwheel.core/*unsafe-bound-ops*\",-441019349,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-let\",\"cljs.core/when-let\",-2049838349,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-some\",\"cljs.core/when-some\",1033431610,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-first\",\"cljs.core/when-first\",-667185267,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"when-not\",\"cljs.core/when-not\",-556141047,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"pred-or-bindings\",\"pred-or-bindings\",-1496416130),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null))], null)));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",100665144,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"valid?\",\"cljs.spec.alpha/valid?\",-142132235,null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"list\",\"cljs.core/list\",-1331406371,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))))),(function (p1__78192_SHARP_){\nreturn (!(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),(new cljs.core.List(null,p1__78192_SHARP_,null,(1),null)))));\n}));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"skipped-ops\",\"skipped-ops\",169829810),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741)),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940))),cljs.spec.alpha.rep_PLUS_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"skipped-ops\",\"skipped-ops\",169829810),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741)),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"skipped-ops\",\"skipped-ops\",169829810),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.rep_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741)),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741)),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940)], null))));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.rep_impl(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-bindings\",\"ghostwheel.core/some-unsafe-bindings\",-227050609),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"skipped-bindings\",\"skipped-bindings\",1607538132),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741))),new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"vector?\",\"cljs.core/vector?\",-1550392028,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"skipped-bindings\",\"skipped-bindings\",1607538132),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741))),new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vector_QMARK_,cljs.spec.alpha.rep_PLUS_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"skipped-bindings\",\"skipped-bindings\",1607538132),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741))),new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"skipped-bindings\",\"skipped-bindings\",1607538132),new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.rep_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"value\",\"value\",305978217)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"value\",\"value\",305978217)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940))], null)))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"unsafe-block\",\"unsafe-block\",76367673),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"unsafe-clj-block\",\"unsafe-clj-block\",-935817213),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-block\",\"ghostwheel.core/unsafe-clj-block\",687448612),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))),new cljs.core.Keyword(null,\"unsafe-call\",\"unsafe-call\",-1482953262),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"direct\",\"direct\",-1775717856),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"application\",\"application\",551185447),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887))),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),new cljs.core.Keyword(null,\"threading\",\"threading\",1396900726),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"threading-macro-op\",\"threading-macro-op\",1907853940),new cljs.core.Keyword(\"ghostwheel.core\",\"threading-macro-op\",\"ghostwheel.core/threading-macro-op\",-772235119),new cljs.core.Keyword(null,\"threaded-form\",\"threaded-form\",-358975981),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),new cljs.core.Keyword(null,\"update\",\"update\",1045576396),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"update\",\"update\",1045576396),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update\",\"cljs.core/update\",-908565906,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update-in\",\"cljs.core/update-in\",-2120854498,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)))),new cljs.core.Keyword(null,\"unsafe-composition\",\"unsafe-composition\",1351794059),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696)),new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding-op\",\"binding-op\",716913917),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-op\",\"ghostwheel.core/binding-op\",-889409442),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-bindings\",\"ghostwheel.core/some-unsafe-bindings\",-227050609),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))),new cljs.core.Keyword(null,\"unsafe-argument\",\"unsafe-argument\",1281466596),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"unsafe-block\",\"unsafe-block\",76367673),new cljs.core.Keyword(null,\"unsafe-call\",\"unsafe-call\",-1482953262),new cljs.core.Keyword(null,\"unsafe-composition\",\"unsafe-composition\",1351794059),new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510),new cljs.core.Keyword(null,\"unsafe-argument\",\"unsafe-argument\",1281466596)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"unsafe-clj-block\",\"unsafe-clj-block\",-935817213),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-block\",\"ghostwheel.core/unsafe-clj-block\",687448612),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"direct\",\"direct\",-1775717856),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"application\",\"application\",551185447),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887))),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),new cljs.core.Keyword(null,\"threading\",\"threading\",1396900726),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"threading-macro-op\",\"threading-macro-op\",1907853940),new cljs.core.Keyword(\"ghostwheel.core\",\"threading-macro-op\",\"ghostwheel.core/threading-macro-op\",-772235119),new cljs.core.Keyword(null,\"threaded-form\",\"threaded-form\",-358975981),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),new cljs.core.Keyword(null,\"update\",\"update\",1045576396),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"update\",\"update\",1045576396),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update\",\"cljs.core/update\",-908565906,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update-in\",\"cljs.core/update-in\",-2120854498,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding-op\",\"binding-op\",716913917),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-op\",\"ghostwheel.core/binding-op\",-889409442),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-bindings\",\"ghostwheel.core/some-unsafe-bindings\",-227050609),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)))], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"unsafe-clj-block\",\"unsafe-clj-block\",-935817213),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-block\",\"ghostwheel.core/unsafe-clj-block\",687448612),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"unsafe-clj-block\",\"unsafe-clj-block\",-935817213),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-block\",\"ghostwheel.core/unsafe-clj-block\",687448612),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-block\",\"ghostwheel.core/unsafe-clj-block\",687448612),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null))], null),null),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"direct\",\"direct\",-1775717856),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"application\",\"application\",551185447),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887))),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),new cljs.core.Keyword(null,\"threading\",\"threading\",1396900726),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"threading-macro-op\",\"threading-macro-op\",1907853940),new cljs.core.Keyword(\"ghostwheel.core\",\"threading-macro-op\",\"ghostwheel.core/threading-macro-op\",-772235119),new cljs.core.Keyword(null,\"threaded-form\",\"threaded-form\",-358975981),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),new cljs.core.Keyword(null,\"update\",\"update\",1045576396),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"update\",\"update\",1045576396),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update\",\"cljs.core/update\",-908565906,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update-in\",\"cljs.core/update-in\",-2120854498,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"direct\",\"direct\",-1775717856),new cljs.core.Keyword(null,\"threading\",\"threading\",1396900726),new cljs.core.Keyword(null,\"update\",\"update\",1045576396)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"application\",\"application\",551185447),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.maybe_impl(cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887)], null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887))),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887))),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"threading-macro-op\",\"threading-macro-op\",1907853940),new cljs.core.Keyword(null,\"threaded-form\",\"threaded-form\",-358975981),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"threading-macro-op\",\"ghostwheel.core/threading-macro-op\",-772235119),cljs.core.any_QMARK_,new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"threading-macro-op\",\"ghostwheel.core/threading-macro-op\",-772235119),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"update\",\"update\",1045576396),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"update-in\",\"update-in\",-1445516941,null),null,new cljs.core.Symbol(null,\"update\",\"update\",-1608859373,null),null], null), null),cljs.core.any_QMARK_,cljs.core.any_QMARK_,new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"update-in\",\"update-in\",-1445516941,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"update\",\"update\",-1608859373,null)),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"application\",\"application\",551185447),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"generic\",\"generic\",-1245036524),new cljs.core.Keyword(\"ghostwheel.core\",\"function-application\",\"ghostwheel.core/function-application\",1185754138),new cljs.core.Keyword(null,\"safe\",\"safe\",-125058214),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-function-application\",\"ghostwheel.core/safe-function-application\",2124434887))),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"threading-macro-op\",\"threading-macro-op\",1907853940),new cljs.core.Keyword(\"ghostwheel.core\",\"threading-macro-op\",\"ghostwheel.core/threading-macro-op\",-772235119),new cljs.core.Keyword(null,\"threaded-form\",\"threaded-form\",-358975981),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"update\",\"update\",1045576396),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update\",\"cljs.core/update\",-908565906,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(\"cljs.core\",\"update-in\",\"cljs.core/update-in\",-2120854498,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"unsafe-op\",\"unsafe-op\",1938139865),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-op\",\"ghostwheel.core/unsafe-op\",323402940),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))], null))], null),null),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-clj-comp\",\"ghostwheel.core/unsafe-clj-comp\",-1795621696)], null),null),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"binding-op\",\"binding-op\",716913917),new cljs.core.Keyword(\"ghostwheel.core\",\"binding-op\",\"ghostwheel.core/binding-op\",-889409442),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-bindings\",\"ghostwheel.core/some-unsafe-bindings\",-227050609),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"binding-op\",\"binding-op\",716913917),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-op\",\"ghostwheel.core/binding-op\",-889409442),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-bindings\",\"ghostwheel.core/some-unsafe-bindings\",-227050609),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"binding-op\",\"ghostwheel.core/binding-op\",-889409442),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-bindings\",\"ghostwheel.core/some-unsafe-bindings\",-227050609),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null))], null),null),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fun\",\"fun\",-1265158045),new cljs.core.Keyword(null,\"some-unsafe-ops\",\"some-unsafe-ops\",628056639),new cljs.core.Keyword(null,\"rest\",\"rest\",-1241696419)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"safe-op\",\"ghostwheel.core/safe-op\",1623943741),new cljs.core.Keyword(\"ghostwheel.core\",\"some-unsafe-ops\",\"ghostwheel.core/some-unsafe-ops\",53359648),new cljs.core.Keyword(\"ghostwheel.core\",\"rest\",\"ghostwheel.core/rest\",1438240064)], null))], null),null)], null),null));\nvar find_fx_79206 = (function ghostwheel$core$find_fx(form){\nvar maybe_fx = cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499),form);\nvar vec__78255 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(maybe_fx,new cljs.core.Keyword(\"cljs.spec.alpha\",\"invalid\",\"cljs.spec.alpha/invalid\",-1220295119)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,maybe_fx),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.key(maybe_fx),new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510)))?new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192).cljs$core$IFn$_invoke$arity$1(cljs.core.val(maybe_fx)):null)], null));\nvar found_fx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78255,(0),null);\nvar unsafe_bindings = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78255,(1),null);\nvar unsafe_binding_set = (cljs.core.truth_(unsafe_bindings)?cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (maybe_fx,vec__78255,found_fx,unsafe_bindings){\nreturn (function (p1__78246_SHARP_){\nreturn cljs.core.val(new cljs.core.Keyword(null,\"binding\",\"binding\",539932593).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"unsafe-binding\",\"unsafe-binding\",-196739510).cljs$core$IFn$_invoke$arity$1(p1__78246_SHARP_)));\n});})(maybe_fx,vec__78255,found_fx,unsafe_bindings))\n,unsafe_bindings)):null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [found_fx,cljs.core.vec((function (){var iter__4523__auto__ = ((function (maybe_fx,vec__78255,found_fx,unsafe_bindings,unsafe_binding_set){\nreturn (function ghostwheel$core$find_fx_$_iter__78259(s__78260){\nreturn (new cljs.core.LazySeq(null,((function (maybe_fx,vec__78255,found_fx,unsafe_bindings,unsafe_binding_set){\nreturn (function (){\nvar s__78260__$1 = s__78260;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__78260__$1);\nif(temp__5753__auto__){\nvar s__78260__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__78260__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__78260__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__78262 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__78261 = (0);\nwhile(true){\nif((i__78261 < size__4522__auto__)){\nvar nested_form = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__78261);\nif(cljs.core.coll_QMARK_(nested_form)){\ncljs.core.chunk_append(b__78262,(function (){var _STAR_unsafe_bound_ops_STAR__orig_val__78269 = ghostwheel.core._STAR_unsafe_bound_ops_STAR_;\nvar _STAR_unsafe_bound_ops_STAR__temp_val__78270 = (function (){var G__78271 = ghostwheel.core._STAR_unsafe_bound_ops_STAR_;\nif(cljs.core.truth_(unsafe_bindings)){\nreturn clojure.set.union.cljs$core$IFn$_invoke$arity$2(G__78271,unsafe_binding_set);\n} else {\nreturn G__78271;\n}\n})();\nghostwheel.core._STAR_unsafe_bound_ops_STAR_ = _STAR_unsafe_bound_ops_STAR__temp_val__78270;\n\ntry{return ghostwheel$core$find_fx(nested_form);\n}finally {ghostwheel.core._STAR_unsafe_bound_ops_STAR_ = _STAR_unsafe_bound_ops_STAR__orig_val__78269;\n}})());\n\nvar G__79213 = (i__78261 + (1));\ni__78261 = G__79213;\ncontinue;\n} else {\nvar G__79214 = (i__78261 + (1));\ni__78261 = G__79214;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78262),ghostwheel$core$find_fx_$_iter__78259(cljs.core.chunk_rest(s__78260__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78262),null);\n}\n} else {\nvar nested_form = cljs.core.first(s__78260__$2);\nif(cljs.core.coll_QMARK_(nested_form)){\nreturn cljs.core.cons((function (){var _STAR_unsafe_bound_ops_STAR__orig_val__78272 = ghostwheel.core._STAR_unsafe_bound_ops_STAR_;\nvar _STAR_unsafe_bound_ops_STAR__temp_val__78273 = (function (){var G__78274 = ghostwheel.core._STAR_unsafe_bound_ops_STAR_;\nif(cljs.core.truth_(unsafe_bindings)){\nreturn clojure.set.union.cljs$core$IFn$_invoke$arity$2(G__78274,unsafe_binding_set);\n} else {\nreturn G__78274;\n}\n})();\nghostwheel.core._STAR_unsafe_bound_ops_STAR_ = _STAR_unsafe_bound_ops_STAR__temp_val__78273;\n\ntry{return ghostwheel$core$find_fx(nested_form);\n}finally {ghostwheel.core._STAR_unsafe_bound_ops_STAR_ = _STAR_unsafe_bound_ops_STAR__orig_val__78272;\n}})(),ghostwheel$core$find_fx_$_iter__78259(cljs.core.rest(s__78260__$2)));\n} else {\nvar G__79220 = cljs.core.rest(s__78260__$2);\ns__78260__$1 = G__79220;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(maybe_fx,vec__78255,found_fx,unsafe_bindings,unsafe_binding_set))\n,null,null));\n});})(maybe_fx,vec__78255,found_fx,unsafe_bindings,unsafe_binding_set))\n;\nreturn iter__4523__auto__(form);\n})())], null);\n});\nvar check_arity_fx_79207 = ((function (find_fx_79206){\nreturn (function (unformed_args_gspec_body){\nvar effects = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.flatten(find_fx_79206(unformed_args_gspec_body)))));\nvar G__78275 = (function (){var iter__4523__auto__ = ((function (effects,find_fx_79206){\nreturn (function ghostwheel$core$iter__78276(s__78277){\nreturn (new cljs.core.LazySeq(null,((function (effects,find_fx_79206){\nreturn (function (){\nvar s__78277__$1 = s__78277;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__78277__$1);\nif(temp__5753__auto__){\nvar s__78277__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__78277__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__78277__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__78279 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__78278 = (0);\nwhile(true){\nif((i__78278 < size__4522__auto__)){\nvar fx = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__78278);\ncljs.core.chunk_append(b__78279,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.key(fx))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,cljs.spec.alpha.unform(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499),fx))),cljs.core.vec(clojure.walk.postwalk(((function (i__78278,fx,c__4521__auto__,size__4522__auto__,b__78279,s__78277__$2,temp__5753__auto__,effects,find_fx_79206){\nreturn (function (p1__78247_SHARP_){\nif(cljs.core.qualified_keyword_QMARK_(p1__78247_SHARP_)){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.name(p1__78247_SHARP_));\n} else {\nreturn p1__78247_SHARP_;\n}\n});})(i__78278,fx,c__4521__auto__,size__4522__auto__,b__78279,s__78277__$2,temp__5753__auto__,effects,find_fx_79206))\n,cljs.core.val(fx)))], null));\n\nvar G__79230 = (i__78278 + (1));\ni__78278 = G__79230;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78279),ghostwheel$core$iter__78276(cljs.core.chunk_rest(s__78277__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78279),null);\n}\n} else {\nvar fx = cljs.core.first(s__78277__$2);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.key(fx))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,cljs.spec.alpha.unform(new cljs.core.Keyword(\"ghostwheel.core\",\"unsafe-form\",\"ghostwheel.core/unsafe-form\",139358499),fx))),cljs.core.vec(clojure.walk.postwalk(((function (fx,s__78277__$2,temp__5753__auto__,effects,find_fx_79206){\nreturn (function (p1__78247_SHARP_){\nif(cljs.core.qualified_keyword_QMARK_(p1__78247_SHARP_)){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.name(p1__78247_SHARP_));\n} else {\nreturn p1__78247_SHARP_;\n}\n});})(fx,s__78277__$2,temp__5753__auto__,effects,find_fx_79206))\n,cljs.core.val(fx)))], null),ghostwheel$core$iter__78276(cljs.core.rest(s__78277__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(effects,find_fx_79206))\n,null,null));\n});})(effects,find_fx_79206))\n;\nreturn iter__4523__auto__(effects);\n})();\nif(cljs.core.next(unformed_args_gspec_body)){\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"multiple-body-forms\",\"multiple-body-forms\",423092789)], null),G__78275);\n} else {\nreturn G__78275;\n}\n});})(find_fx_79206))\n;\nghostwheel.core.generate_test = ((function (find_fx_79206,check_arity_fx_79207){\nreturn (function ghostwheel$core$generate_test(fn_name,fspecs,body_forms,config,cljs_QMARK_){\nvar map__78293 = config;\nvar map__78293__$1 = (((((!((map__78293 == null))))?(((((map__78293.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78293.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78293):map__78293);\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78293__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nvar num_tests = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78293__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests\",\"ghostwheel.core/num-tests\",-646548501));\nvar num_tests_ext = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78293__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"num-tests-ext\",\"ghostwheel.core/num-tests-ext\",-1546795687));\nvar extensive_tests = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78293__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"extensive-tests\",\"ghostwheel.core/extensive-tests\",-1219157415));\nvar check_coverage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78293__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921));\nvar ignore_fx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78293__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"ignore-fx\",\"ghostwheel.core/ignore-fx\",-1650876390));\nvar num_tests__$1 = (cljs.core.truth_(extensive_tests)?num_tests_ext:num_tests);\nvar marked_unsafe = cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"ghostwheel.core\",\"bang-suffix\",\"ghostwheel.core/bang-suffix\",909060836),fn_name);\nvar found_fx = (cljs.core.truth_(ignore_fx)?cljs.core.PersistentVector.EMPTY:cljs.core.vec(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(check_arity_fx_79207,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__78293,map__78293__$1,check,num_tests,num_tests_ext,extensive_tests,check_coverage,ignore_fx,num_tests__$1,marked_unsafe,find_fx_79206,check_arity_fx_79207){\nreturn (function (p1__78248_SHARP_){\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),cljs.spec.alpha.unform(new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),p1__78248_SHARP_));\n});})(map__78293,map__78293__$1,check,num_tests,num_tests_ext,extensive_tests,check_coverage,ignore_fx,num_tests__$1,marked_unsafe,find_fx_79206,check_arity_fx_79207))\n,(function (){var G__78298 = cljs.core.key(body_forms);\nvar G__78298__$1 = (((G__78298 instanceof cljs.core.Keyword))?G__78298.fqn:null);\nswitch (G__78298__$1) {\ncase \"arity-1\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.val(body_forms)], null);\n\nbreak;\ncase \"arity-n\":\nreturn cljs.core.val(body_forms);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78298__$1)].join('')));\n\n}\n})())], 0)))));\nvar unexpected_fx = cljs.core.boolean$(((cljs.core.not(ignore_fx)) && ((!(marked_unsafe))) && (cljs.core.seq(found_fx))));\nvar unexpected_safety = cljs.core.boolean$(((cljs.core.not(ignore_fx)) && (marked_unsafe) && (cljs.core.empty_QMARK_(found_fx))));\nvar spec_keyword_ns = (cljs.core.truth_(cljs_QMARK_)?new cljs.core.Symbol(null,\"clojure.test.check\",\"clojure.test.check\",-2057571184,null):new cljs.core.Symbol(null,\"clojure.spec.test.check\",\"clojure.spec.test.check\",1035440515,null));\nvar spec_checks = (function (){var defined_fspecs = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,fspecs));\nif(((cljs.core.seq(defined_fspecs)) && ((!(marked_unsafe))) && (cljs.core.empty_QMARK_(found_fx)) && ((num_tests__$1 > (0))))){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"for\",\"cljs.core/for\",-89947499,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"spec__78249__auto__\",\"spec__78249__auto__\",1464049608,null),null,(1),null)),(new cljs.core.List(null,defined_fspecs,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"check-fn\",\"cljs.spec.test.alpha/check-fn\",-1852617833,null),null,(1),null)),(new cljs.core.List(null,fn_name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"spec__78249__auto__\",\"spec__78249__auto__\",1464049608,null),null,(1),null)),(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec_keyword_ns),\"opts\"),null,(1),null)),(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"num-tests\",\"num-tests\",2050041354),null,(1),null)),(new cljs.core.List(null,num_tests__$1,null,(1),null)))))),null,(1),null)))))),null,(1),null))], 0)))),null,(1),null))], 0))));\n} else {\nreturn null;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [unexpected_fx,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"deftest\",\"cljs.test/deftest\",-271367143,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name),ghostwheel.core.test_suffix].join('')),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"spec-checks__78251__auto__\",\"spec-checks__78251__auto__\",1075978177,null),null,(1),null)),(new cljs.core.List(null,spec_checks,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"is\",\"cljs.test/is\",261278235,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",-6692549,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"every?\",\"cljs.core/every?\",1416822717,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(null,\"p1__78250__78252__auto__\",\"p1__78250__78252__auto__\",1368996297,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"p1__78250__78252__auto__\",\"p1__78250__78252__auto__\",1368996297,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec_keyword_ns),\"ret\"),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"pass?\",\"pass?\",-424635753),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"spec-checks__78251__auto__\",\"spec-checks__78251__auto__\",1075978177,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,(!(unexpected_fx)),null,(1),null)),(new cljs.core.List(null,(!(unexpected_safety)),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"fn-name\",\"ghostwheel.reporting/fn-name\",466254528),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,fn_name,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"fspec\",\"ghostwheel.reporting/fspec\",-1190332275),null,(1),null)),(new cljs.core.List(null,cljs.core.every_QMARK_(cljs.core.some_QMARK_,fspecs),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"spec-checks\",\"ghostwheel.reporting/spec-checks\",-803336688),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"spec-checks__78251__auto__\",\"spec-checks__78251__auto__\",1075978177,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"check-coverage\",\"ghostwheel.reporting/check-coverage\",-1277601858),null,(1),null)),(new cljs.core.List(null,check_coverage,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"failure\",\"ghostwheel.reporting/failure\",-713780845),null,(1),null)),(new cljs.core.List(null,((unexpected_fx)?new cljs.core.Keyword(\"ghostwheel.reporting\",\"unexpected-fx\",\"ghostwheel.reporting/unexpected-fx\",2001868748):((unexpected_safety)?new cljs.core.Keyword(\"ghostwheel.reporting\",\"unexpected-safety\",\"ghostwheel.reporting/unexpected-safety\",1624988204):new cljs.core.Keyword(\"ghostwheel.reporting\",\"spec-failure\",\"ghostwheel.reporting/spec-failure\",511958367)\n)),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"found-fx\",\"ghostwheel.reporting/found-fx\",-263226799),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,found_fx,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"marked-unsafe\",\"ghostwheel.reporting/marked-unsafe\",-275678850),null,(1),null)),(new cljs.core.List(null,marked_unsafe,null,(1),null))], 0))))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))))], null);\n});})(find_fx_79206,check_arity_fx_79207))\n;\n/**\n * Half-arsed workaround for spec bugs CLJ-2003 and CLJ-2021.\n */\nghostwheel.core.unscrew_vec_unform = (function ghostwheel$core$unscrew_vec_unform(unformed_arg){\nif((!(cljs.core.sequential_QMARK_(unformed_arg)))){\nreturn unformed_arg;\n} else {\nvar malformed_seq_destructuring_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),null,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null], null), null),cljs.core.first));\nvar vec__78314 = cljs.core.split_with(cljs.core.complement(malformed_seq_destructuring_QMARK_),unformed_arg);\nvar unformed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78314,(0),null);\nvar malformed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78314,(1),null);\nreturn cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(unformed,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,malformed)));\n}\n});\nghostwheel.core.gspec__GT_fspec_STAR_ = (function ghostwheel$core$gspec__GT_fspec_STAR_(conformed_arg_list,conformed_gspec,anon_fspec_QMARK_,multi_arity_args_QMARK_,nilable_QMARK_){\nvar map__78323 = conformed_gspec;\nvar map__78323__$1 = (((((!((map__78323 == null))))?(((((map__78323.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78323.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78323):map__78323);\nvar argspec_def = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78323__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar retspec = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78323__$1,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814));\nvar fn_such_that = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78323__$1,new cljs.core.Keyword(null,\"fn-such-that\",\"fn-such-that\",1755729726));\nvar map__78325 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78323__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",142575302));\nvar map__78325__$1 = (((((!((map__78325 == null))))?(((((map__78325.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78325.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78325):map__78325);\nvar gen = map__78325__$1;\nvar gen_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78325__$1,new cljs.core.Keyword(null,\"gen-fn\",\"gen-fn\",1212304428));\nif(cljs.core.truth_((function (){var and__4120__auto__ = anon_fspec_QMARK_;\nif(cljs.core.truth_(and__4120__auto__)){\nvar and__4120__auto____$1 = argspec_def;\nif(cljs.core.truth_(and__4120__auto____$1)){\nvar and__4120__auto____$2 = cljs.core.not(gen);\nif(and__4120__auto____$2){\nreturn cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null),null], null), null),cljs.core.vals(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(argspec_def)));\n} else {\nreturn and__4120__auto____$2;\n}\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())){\nif(cljs.core.truth_(nilable_QMARK_)){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"ifn?\",\"cljs.core/ifn?\",1573873861,null),null,(1),null)))));\n} else {\nreturn new cljs.core.Symbol(\"cljs.core\",\"ifn?\",\"cljs.core/ifn?\",1573873861,null);\n}\n} else {\nvar extract_spec = ((function (map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function ghostwheel$core$gspec__GT_fspec_STAR__$_extract_spec(p__78330){\nvar vec__78331 = p__78330;\nvar spec_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78331,(0),null);\nvar spec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78331,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(spec_type,new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.key(spec),new cljs.core.Keyword(null,\"nilable-gspec\",\"nilable-gspec\",-925413839))){\nvar G__78334 = null;\nvar G__78335 = new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262).cljs$core$IFn$_invoke$arity$1(cljs.core.val(spec));\nvar G__78336 = true;\nvar G__78337 = false;\nvar G__78338 = true;\nreturn (ghostwheel.core.gspec__GT_fspec_STAR_.cljs$core$IFn$_invoke$arity$5 ? ghostwheel.core.gspec__GT_fspec_STAR_.cljs$core$IFn$_invoke$arity$5(G__78334,G__78335,G__78336,G__78337,G__78338) : ghostwheel.core.gspec__GT_fspec_STAR_.call(null,G__78334,G__78335,G__78336,G__78337,G__78338));\n} else {\nvar G__78340 = null;\nvar G__78341 = cljs.core.val(spec);\nvar G__78342 = true;\nvar G__78343 = false;\nvar G__78344 = false;\nreturn (ghostwheel.core.gspec__GT_fspec_STAR_.cljs$core$IFn$_invoke$arity$5 ? ghostwheel.core.gspec__GT_fspec_STAR_.cljs$core$IFn$_invoke$arity$5(G__78340,G__78341,G__78342,G__78343,G__78344) : ghostwheel.core.gspec__GT_fspec_STAR_.call(null,G__78340,G__78341,G__78342,G__78343,G__78344));\n}\n} else {\nreturn spec;\n}\n});})(map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n;\nvar named_conformed_args = (cljs.core.truth_(argspec_def)?(function (){var all_args = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(conformed_arg_list),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"varargs\",\"varargs\",1030150858).cljs$core$IFn$_invoke$arity$1(conformed_arg_list))], null)));\nvar gen_arg_name = ((function (all_args,extract_spec,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function (index){\nreturn [\"arg\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((index + (1)))].join('');\n});})(all_args,extract_spec,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n;\nvar gen_name = ((function (all_args,gen_arg_name,extract_spec,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function (index,p__78350){\nvar vec__78352 = p__78350;\nvar arg_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78352,(0),null);\nvar arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78352,(1),null);\nvar full_arg = vec__78352;\nvar arg_name = ((cljs.core.not(arg_type))?gen_arg_name(index):(function (){var G__78355 = arg_type;\nvar G__78355__$1 = (((G__78355 instanceof cljs.core.Keyword))?G__78355.fqn:null);\nswitch (G__78355__$1) {\ncase \"sym\":\nreturn arg;\n\nbreak;\ncase \"seq\":\nvar or__4131__auto__ = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"as\",\"as\",1148689641).cljs$core$IFn$_invoke$arity$1(arg));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn gen_arg_name(index);\n}\n\nbreak;\ncase \"map\":\nvar or__4131__auto__ = new cljs.core.Keyword(null,\"as\",\"as\",1148689641).cljs$core$IFn$_invoke$arity$1(arg);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn gen_arg_name(index);\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78355__$1)].join('')));\n\n}\n})());\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arg_name),full_arg], null);\n});})(all_args,gen_arg_name,extract_spec,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n;\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(gen_name,(function (){var or__4131__auto__ = cljs.core.seq(all_args);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(argspec_def)),null);\n}\n})());\n})():null);\nvar arg_binding_map = ((cljs.core.not(conformed_arg_list))?cljs.core.PersistentArrayMap.EMPTY:((cljs.core.every_QMARK_(((function (extract_spec,named_conformed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function (p1__78320_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.key(cljs.core.second(p1__78320_SHARP_)),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305));\n});})(extract_spec,named_conformed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n,named_conformed_args))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (extract_spec,named_conformed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function (p1__78321_SHARP_){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(p1__78321_SHARP_)));\n});})(extract_spec,named_conformed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n,named_conformed_args)),null,(1),null)))))):cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (extract_spec,named_conformed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function (p__78369){\nvar vec__78370 = p__78369;\nvar arg_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78370,(0),null);\nvar conformed_arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78370,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ghostwheel.core.unscrew_vec_unform(cljs.spec.alpha.unform(new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),conformed_arg)),arg_key], null);\n});})(extract_spec,named_conformed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n,named_conformed_args))));\nvar process_arg_pred = ((function (extract_spec,named_conformed_args,arg_binding_map,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function ghostwheel$core$gspec__GT_fspec_STAR__$_process_arg_pred(p__78374){\nvar map__78375 = p__78374;\nvar map__78375__$1 = (((((!((map__78375 == null))))?(((((map__78375.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78375.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78375):map__78375);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78375__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78375__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78375__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar bindings = (function (){var temp__5751__auto__ = (function (){var G__78379 = args;\nvar G__78379__$1 = (((G__78379 == null))?null:new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(G__78379));\nvar G__78379__$2 = (((G__78379__$1 == null))?null:cljs.core.first(G__78379__$1));\nif((G__78379__$2 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__78379__$2);\n}\n})();\nif(cljs.core.truth_(temp__5751__auto__)){\nvar anon_arg = temp__5751__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arg_binding_map,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),anon_arg);\n} else {\nreturn arg_binding_map;\n}\n})();\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,bindings,null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,body,null,(1),null))], 0)))));\n});})(extract_spec,named_conformed_args,arg_binding_map,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n;\nvar processed_args = ((cljs.core.not(argspec_def))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),null,(1),null))))):(function (){var wrapped_params = cljs.core.cons(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,named_conformed_args),cljs.core.map.cljs$core$IFn$_invoke$arity$2(extract_spec,new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(argspec_def))));\nvar temp__5751__auto__ = new cljs.core.Keyword(null,\"args-such-that\",\"args-such-that\",1913142965).cljs$core$IFn$_invoke$arity$1(argspec_def);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar args_such_that = temp__5751__auto__;\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),wrapped_params,cljs.core.map.cljs$core$IFn$_invoke$arity$2(process_arg_pred,new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750).cljs$core$IFn$_invoke$arity$1(args_such_that)));\n} else {\nreturn wrapped_params;\n}\n})());\nvar process_ret_pred = ((function (extract_spec,named_conformed_args,arg_binding_map,process_arg_pred,processed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn){\nreturn (function ghostwheel$core$gspec__GT_fspec_STAR__$_process_ret_pred(p__78383){\nvar map__78384 = p__78383;\nvar map__78384__$1 = (((((!((map__78384 == null))))?(((((map__78384.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78384.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78384):map__78384);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78384__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78384__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78384__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar anon_arg = (function (){var G__78387 = args;\nvar G__78387__$1 = (((G__78387 == null))?null:new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(G__78387));\nvar G__78387__$2 = (((G__78387__$1 == null))?null:cljs.core.first(G__78387__$1));\nif((G__78387__$2 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__78387__$2);\n}\n})();\nvar ret_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"ret__\");\nvar bindings = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([(cljs.core.truth_(multi_arity_args_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),arg_binding_map], null):arg_binding_map),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),ret_sym,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)])], null);\nvar processed_body = (cljs.core.truth_(anon_arg)?clojure.walk.postwalk_replace(cljs.core.PersistentArrayMap.createAsIfByAssoc([anon_arg,ret_sym]),body):body);\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,bindings,null,(1),null)),(new cljs.core.List(null,processed_body,null,(1),null))], 0)))));\n});})(extract_spec,named_conformed_args,arg_binding_map,process_arg_pred,processed_args,map__78323,map__78323__$1,argspec_def,retspec,fn_such_that,map__78325,map__78325__$1,gen,gen_fn))\n;\nvar fn_spec = (cljs.core.truth_(fn_such_that)?(function (){var processed_ret_preds = cljs.core.map.cljs$core$IFn$_invoke$arity$2(process_ret_pred,new cljs.core.Keyword(null,\"preds\",\"preds\",-1489609750).cljs$core$IFn$_invoke$arity$1(fn_such_that));\nif(cljs.core.next(processed_ret_preds)){\nreturn cljs.core.cons(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),processed_ret_preds);\n} else {\nreturn cljs.core.first(processed_ret_preds);\n}\n})():null);\nvar final_fspec = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((cljs.core.truth_(anon_fspec_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null)], null):null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),processed_args], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),extract_spec(retspec)], null),(cljs.core.truth_(fn_spec)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),fn_spec], null):null),(cljs.core.truth_(gen_fn)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"gen\",\"gen\",142575302),gen_fn], null):null)], 0));\nif(cljs.core.truth_(nilable_QMARK_)){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable\",\"cljs.spec.alpha/nilable\",1628308748,null),null,(1),null)),(new cljs.core.List(null,final_fspec,null,(1),null)))));\n} else {\nreturn final_fspec;\n}\n}\n});\nvar get_fspecs_79315 = (function (fn_body){\nvar vec__78399 = ghostwheel.core.count_args(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(fn_body));\nvar param_count = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78399,(0),null);\nvar variadic = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78399,(1),null);\nvar gspec = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262).cljs$core$IFn$_invoke$arity$1(fn_body);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\"gspec\",\"ghostwheel.core/gspec\",1848558757),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(param_count,new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null)),(((variadic > (0)))?cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",-1238084288,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,(1),null))))),null,(1),null)))))):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"=>\",\"=>\",-813269641,null),new cljs.core.Symbol(null,\"any?\",\"any?\",-318999933,null)], null)], 0))));\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([\"arity-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((((variadic > (0)))?\"n\":param_count))].join('')),ghostwheel.core.gspec__GT_fspec_STAR_(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(fn_body),gspec,false,true,false)], null);\n});\nvar get_spec_part_79316 = ((function (get_fspecs_79315){\nreturn (function (part,spec){\nreturn cljs.core.second(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(cljs.core.PersistentHashSet.createAsIfByAssoc([part])),spec));\n});})(get_fspecs_79315))\n;\nghostwheel.core.generate_fspec_body = ((function (get_fspecs_79315,get_spec_part_79316){\nreturn (function ghostwheel$core$generate_fspec_body(fn_bodies){\nvar G__78405 = cljs.core.key(fn_bodies);\nvar G__78405__$1 = (((G__78405 instanceof cljs.core.Keyword))?G__78405.fqn:null);\nswitch (G__78405__$1) {\ncase \"arity-1\":\nvar temp__5753__auto__ = new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262).cljs$core$IFn$_invoke$arity$1(cljs.core.val(fn_bodies));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar gspec = temp__5753__auto__;\nreturn ghostwheel.core.gspec__GT_fspec_STAR_(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(cljs.core.val(fn_bodies)),gspec,false,false,false);\n} else {\nreturn null;\n}\n\nbreak;\ncase \"arity-n\":\nif(cljs.core.truth_(cljs.core.some(new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262),cljs.core.val(fn_bodies)))){\nvar fspecs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(get_fspecs_79315,cljs.core.val(fn_bodies));\nvar arg_specs = cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (fspecs,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316){\nreturn (function (p__78409){\nvar vec__78410 = p__78409;\nvar arity = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78410,(0),null);\nvar spec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78410,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arity,(function (){var or__4131__auto__ = get_spec_part_79316(new cljs.core.Keyword(null,\"args\",\"args\",1315556576),spec);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Symbol(\"cljs.core\",\"empty?\",\"cljs.core/empty?\",1866613644,null);\n}\n})()], null);\n});})(fspecs,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fspecs], 0));\nvar fn_param = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"p1__\");\nvar multi_ret_specs = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (fspecs,arg_specs,fn_param,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316){\nreturn (function (p1__78397_SHARP_){\nreturn get_spec_part_79316(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.second(p1__78397_SHARP_));\n});})(fspecs,arg_specs,fn_param,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316))\n,fspecs)))))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (fspecs,arg_specs,fn_param,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316){\nreturn (function (p__78416){\nvar vec__78418 = p__78416;\nvar arity = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78418,(0),null);\nvar spec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78418,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arity,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"valid?\",\"cljs.spec.alpha/valid?\",-142132235,null),null,(1),null)),(new cljs.core.List(null,get_spec_part_79316(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),spec),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),null,(1),null)),(new cljs.core.List(null,fn_param,null,(1),null))))),null,(1),null))], 0))))], null);\n});})(fspecs,arg_specs,fn_param,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fspecs], 0)):null);\nvar get_fn_clause = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(get_spec_part_79316,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar fn_specs = (cljs.core.truth_(cljs.core.some(get_fn_clause,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second,fspecs)))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (fspecs,arg_specs,fn_param,multi_ret_specs,get_fn_clause,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316){\nreturn (function (p__78426){\nvar vec__78428 = p__78426;\nvar arity = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78428,(0),null);\nvar spec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78428,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arity,(function (){var temp__5751__auto__ = (get_fn_clause.cljs$core$IFn$_invoke$arity$1 ? get_fn_clause.cljs$core$IFn$_invoke$arity$1(spec) : get_fn_clause.call(null,spec));\nif(cljs.core.truth_(temp__5751__auto__)){\nvar fn_spec = temp__5751__auto__;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"valid?\",\"cljs.spec.alpha/valid?\",-142132235,null),null,(1),null)),(new cljs.core.List(null,fn_spec,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,fn_param,null,(1),null))], 0))));\n} else {\nreturn true;\n}\n})()], null);\n});})(fspecs,arg_specs,fn_param,multi_ret_specs,get_fn_clause,G__78405,G__78405__$1,get_fspecs_79315,get_spec_part_79316))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fspecs], 0)):null);\nvar multi_ret_clause = (cljs.core.truth_(multi_ret_specs)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"valid-multi-arity-ret?\",\"valid-multi-arity-ret?\",-2088255426,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,fn_param,null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"case\",\"cljs.core/case\",-1674122212,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),null,(1),null)),(new cljs.core.List(null,fn_param,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"key\",\"cljs.core/key\",799303703,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([multi_ret_specs], 0)))),null,(1),null))], 0)))):null);\nvar multi_fn_clause = (cljs.core.truth_(fn_specs)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"valid-multi-arity-fn?\",\"valid-multi-arity-fn?\",995683820,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,fn_param,null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"case\",\"cljs.core/case\",-1674122212,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),null,(1),null)),(new cljs.core.List(null,fn_param,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"key\",\"cljs.core/key\",799303703,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_specs], 0)))),null,(1),null))], 0)))):null);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),null,(1),null)),arg_specs)))], null),(cljs.core.truth_(multi_ret_clause)?null:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),get_spec_part_79316(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.second(cljs.core.first(fspecs)))], null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_((function (){var or__4131__auto__ = multi_ret_clause;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn multi_fn_clause;\n}\n})())?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),(cljs.core.truth_(multi_fn_clause)?(cljs.core.truth_(multi_ret_clause)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),null,(1),null)),(new cljs.core.List(null,multi_ret_clause,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,multi_fn_clause,null,(1),null))], 0)))):multi_fn_clause):multi_ret_clause)], null):null)], 0));\n} else {\nreturn null;\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78405__$1)].join('')));\n\n}\n});})(get_fspecs_79315,get_spec_part_79316))\n;\nghostwheel.core.spec_op__GT_type = (function (){var map_prot = \"cljs.core.IMap\";\nvar coll_prot = \"cljs.core.ICollection\";\nvar seqable_prot = \"(cljs.core.ISeqable|string)\";\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,\"keys\",\"keys\",-1586012071,null),new cljs.core.Symbol(null,\"int-in\",\"int-in\",664882605,null),new cljs.core.Symbol(null,\"merge\",\"merge\",-163787882,null),new cljs.core.Symbol(null,\"int?\",\"int?\",1799729645,null),new cljs.core.Symbol(null,\"every\",\"every\",-419764351,null),new cljs.core.Symbol(null,\"float?\",\"float?\",673884616,null),new cljs.core.Symbol(null,\"ifn?\",\"ifn?\",-2106461064,null),new cljs.core.Symbol(null,\"map?\",\"map?\",-1780568534,null),new cljs.core.Symbol(null,\"vector?\",\"vector?\",-61367869,null),new cljs.core.Symbol(null,\"associative?\",\"associative?\",-141666771,null),new cljs.core.Symbol(null,\"tuple\",\"tuple\",1167864243,null),new cljs.core.Symbol(null,\"neg-int?\",\"neg-int?\",-1610409390,null),new cljs.core.Symbol(null,\"map-of\",\"map-of\",-1464753414,null),new cljs.core.Symbol(null,\"coll-of\",\"coll-of\",-1705285400,null),new cljs.core.Symbol(null,\"keyword?\",\"keyword?\",1917797069,null),new cljs.core.Symbol(null,\"double-in\",\"double-in\",-303226659,null),new cljs.core.Symbol(null,\"integer?\",\"integer?\",1303791671,null),new cljs.core.Symbol(null,\"atom?\",\"atom?\",-1007535292,null),new cljs.core.Symbol(null,\"string?\",\"string?\",-1129175764,null),new cljs.core.Symbol(null,\"seq?\",\"seq?\",-1951934719,null),new cljs.core.Symbol(null,\"nat-int?\",\"nat-int?\",-1879663400,null),new cljs.core.Symbol(null,\"set?\",\"set?\",1636014792,null),new cljs.core.Symbol(null,\"boolean?\",\"boolean?\",1790940868,null),new cljs.core.Symbol(null,\"fn?\",\"fn?\",1820990818,null),new cljs.core.Symbol(null,\"number?\",\"number?\",-1747282210,null),new cljs.core.Symbol(null,\"double?\",\"double?\",-2146564276,null),new cljs.core.Symbol(null,\"seqable?\",\"seqable?\",72462495,null),new cljs.core.Symbol(null,\"pos-int?\",\"pos-int?\",-1205815015,null)],[map_prot,\"number\",map_prot,\"number\",coll_prot,\"number\",\"cljs.core.IFn\",map_prot,\"cljs.core.IVector\",\"cljs.core.IAssociative\",\"cljs.core.IVector\",\"number\",map_prot,coll_prot,\"cljs.core.Keyword\",\"number\",\"number\",\"cljs.core.IAtom\",\"string\",\"cljs.core.ISeq\",\"number\",\"cljs.core.ISet\",\"boolean\",\"Function\",\"number\",\"number\",seqable_prot,\"number\"]);\n})();\nghostwheel.core.get_type = (function ghostwheel$core$get_type(recursive_call,conformed_spec_elem){\nvar vec__78442 = conformed_spec_elem;\nvar spec_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78442,(0),null);\nvar spec_def = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78442,(1),null);\nvar spec_op = (function (){var G__78445 = spec_type;\nvar G__78445__$1 = (((G__78445 instanceof cljs.core.Keyword))?G__78445.fqn:null);\nswitch (G__78445__$1) {\ncase \"list\":\nvar op = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(spec_def)));\nif(cljs.core.truth_((function (){var fexpr__78449 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"nilable\",\"nilable\",-812128667,null),null,new cljs.core.Symbol(null,\"?\",\"?\",-62633706,null),null], null), null);\nreturn (fexpr__78449.cljs$core$IFn$_invoke$arity$1 ? fexpr__78449.cljs$core$IFn$_invoke$arity$1(op) : fexpr__78449.call(null,op));\n})())){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var G__78450 = true;\nvar G__78451 = cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),cljs.core.second(spec_def));\nreturn (ghostwheel.core.get_type.cljs$core$IFn$_invoke$arity$2 ? ghostwheel.core.get_type.cljs$core$IFn$_invoke$arity$2(G__78450,G__78451) : ghostwheel.core.get_type.call(null,G__78450,G__78451));\n})(),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"nilable\",\"ghostwheel.core/nilable\",1309444607)], null));\n} else {\nif(cljs.core.truth_((function (){var fexpr__78452 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"+\",\"+\",-740910886,null),null,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null),null], null), null);\nreturn (fexpr__78452.cljs$core$IFn$_invoke$arity$1 ? fexpr__78452.cljs$core$IFn$_invoke$arity$1(op) : fexpr__78452.call(null,op));\n})())){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var G__78453 = true;\nvar G__78454 = cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\"spec-elem\",\"ghostwheel.core/spec-elem\",-1137344350),cljs.core.second(spec_def));\nreturn (ghostwheel.core.get_type.cljs$core$IFn$_invoke$arity$2 ? ghostwheel.core.get_type.cljs$core$IFn$_invoke$arity$2(G__78453,G__78454) : ghostwheel.core.get_type.call(null,G__78453,G__78454));\n})(),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"variadic\",\"ghostwheel.core/variadic\",-740424724)], null));\n} else {\nif(cljs.core.truth_((function (){var fexpr__78455 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),null], null), null);\nreturn (fexpr__78455.cljs$core$IFn$_invoke$arity$1 ? fexpr__78455.cljs$core$IFn$_invoke$arity$1(op) : fexpr__78455.call(null,op));\n})())){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second(spec_def)], null);\n} else {\nif(cljs.core.truth_((function (){var fexpr__78457 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"every\",\"every\",-419764351,null),null,new cljs.core.Symbol(null,\"coll-of\",\"coll-of\",-1705285400,null),null], null), null);\nreturn (fexpr__78457.cljs$core$IFn$_invoke$arity$1 ? fexpr__78457.cljs$core$IFn$_invoke$arity$1(op) : fexpr__78457.call(null,op));\n})())){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = cljs.core.second(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"kind\",\"kind\",-717265803),null], null), null)),spec_def));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn op;\n}\n})()], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [op], null);\n\n}\n}\n}\n}\n\nbreak;\ncase \"gspec\":\nvar gspec_def = cljs.core.val(spec_def);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.key(spec_def),new cljs.core.Keyword(null,\"nilable-gspec\",\"nilable-gspec\",-925413839))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__78459 = new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262).cljs$core$IFn$_invoke$arity$1(gspec_def);\nreturn (ghostwheel.core.get_gspec_type.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.core.get_gspec_type.cljs$core$IFn$_invoke$arity$1(G__78459) : ghostwheel.core.get_gspec_type.call(null,G__78459));\n})(),new cljs.core.Keyword(\"ghostwheel.core\",\"nilable\",\"ghostwheel.core/nilable\",1309444607)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(ghostwheel.core.get_gspec_type.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.core.get_gspec_type.cljs$core$IFn$_invoke$arity$1(gspec_def) : ghostwheel.core.get_gspec_type.call(null,gspec_def))], null);\n}\n\nbreak;\ncase \"pred-sym\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec_def], null);\n\nbreak;\ndefault:\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null);\n\n}\n})();\nif(cljs.core.truth_(recursive_call)){\nreturn spec_op;\n} else {\nvar temp__5751__auto__ = (function (){var G__78460 = cljs.core.first(spec_op);\nreturn (ghostwheel.core.spec_op__GT_type.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.core.spec_op__GT_type.cljs$core$IFn$_invoke$arity$1(G__78460) : ghostwheel.core.spec_op__GT_type.call(null,G__78460));\n})();\nif(cljs.core.truth_(temp__5751__auto__)){\nvar js_type = temp__5751__auto__;\nvar modifiers = cljs.core.set(cljs.core.rest(spec_op));\nvar t = js_type;\nvar t__$1 = [(cljs.core.truth_(new cljs.core.Keyword(\"ghostwheel.core\",\"nilable\",\"ghostwheel.core/nilable\",1309444607).cljs$core$IFn$_invoke$arity$1(modifiers))?\"?\":\"!\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(t)].join('');\nreturn [(cljs.core.truth_(new cljs.core.Keyword(\"ghostwheel.core\",\"variadic\",\"ghostwheel.core/variadic\",-740424724).cljs$core$IFn$_invoke$arity$1(modifiers))?\"...\":null),t__$1].join('');\n} else {\nreturn \"*\";\n}\n}\n});\nghostwheel.core.get_gspec_type = (function ghostwheel$core$get_gspec_type(conformed_gspec){\nvar argspec_def = new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(conformed_gspec);\nvar args_jstype = ((cljs.core.not(argspec_def))?\"\":clojure.string.join.cljs$core$IFn$_invoke$arity$2(\", \",cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(ghostwheel.core.get_type,false),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(conformed_gspec)))));\nvar ret_jstype = ghostwheel.core.get_type(false,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(conformed_gspec));\nreturn [\"function(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(args_jstype),\"): \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret_jstype)].join('');\n});\nghostwheel.core.generate_type_annotations = (function ghostwheel$core$generate_type_annotations(env,conformed_bs){\nif(ghostwheel.utils.cljs_env_QMARK_(env)){\nvar G__78474 = cljs.core.key(conformed_bs);\nvar G__78474__$1 = (((G__78474 instanceof cljs.core.Keyword))?G__78474.fqn:null);\nswitch (G__78474__$1) {\ncase \"arity-1\":\nvar temp__5753__auto__ = new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262).cljs$core$IFn$_invoke$arity$1(cljs.core.val(conformed_bs));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar gspec = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\"@type {\",ghostwheel.core.get_gspec_type(gspec),\"}\"].join('')], null)], null);\n} else {\nreturn null;\n}\n\nbreak;\ncase \"arity-n\":\nreturn null;\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78474__$1)].join('')));\n\n}\n} else {\nreturn null;\n}\n});\nghostwheel.core.merge_config = (function ghostwheel$core$merge_config(metadata){\nif(cljs.spec.alpha._STAR_compile_asserts_STAR_){\nif(cljs.core.truth_(cljs.core.deref(new cljs.core.Var(function(){return cljs.spec.alpha._STAR_runtime_asserts_STAR_;},new cljs.core.Symbol(\"cljs.spec.alpha\",\"*runtime-asserts*\",\"cljs.spec.alpha/*runtime-asserts*\",-1060443587,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null),new cljs.core.Symbol(null,\"*runtime-asserts*\",\"*runtime-asserts*\",1632801956,null),\"cljs/spec/alpha.cljs\",20,1,true,1477,1479,cljs.core.List.EMPTY,null,((cljs.spec.alpha._STAR_runtime_asserts_STAR_)?cljs.spec.alpha._STAR_runtime_asserts_STAR_.cljs$lang$test:null)]))))){\nreturn cljs.spec.alpha.assert_STAR_(new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel-config\",\"ghostwheel.core/ghostwheel-config\",1650780442),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__78475_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(cljs.core.key(p1__78475_SHARP_)),cljs.core.name(new cljs.core.Symbol(null,\"ghostwheel.core\",\"ghostwheel.core\",-938309931,null)));\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0(),cljs.core.meta(cljs.core._STAR_ns_STAR_),metadata], 0)))));\n} else {\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__78475_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(cljs.core.key(p1__78475_SHARP_)),cljs.core.name(new cljs.core.Symbol(null,\"ghostwheel.core\",\"ghostwheel.core\",-938309931,null)));\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0(),cljs.core.meta(cljs.core._STAR_ns_STAR_),metadata], 0))));\n}\n} else {\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__78475_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(cljs.core.key(p1__78475_SHARP_)),cljs.core.name(new cljs.core.Symbol(null,\"ghostwheel.core\",\"ghostwheel.core\",-938309931,null)));\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0(),cljs.core.meta(cljs.core._STAR_ns_STAR_),metadata], 0))));\n}\n});\nghostwheel.core.get_quoted_qualified_fn_name = (function ghostwheel$core$get_quoted_qualified_fn_name(fn_name){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_ns_STAR_.name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name)),null,(1),null)))));\n});\nghostwheel.core.trace_threading_macros = (function ghostwheel$core$trace_threading_macros(forms,trace){\nif((trace < (4))){\nreturn forms;\n} else {\nvar threading_macros_mappings = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"->\",\"->\",-2139605430,null),new cljs.core.Symbol(\"ghostwheel.threading-macros\",\"*->\",\"ghostwheel.threading-macros/*->\",-2124596743,null),new cljs.core.Symbol(null,\"->>\",\"->>\",-1874332161,null),new cljs.core.Symbol(\"ghostwheel.threading-macros\",\"*->>\",\"ghostwheel.threading-macros/*->>\",-931584052,null),new cljs.core.Symbol(null,\"as->\",\"as->\",1430690540,null),new cljs.core.Symbol(\"ghostwheel.threading-macros\",\"*as->\",\"ghostwheel.threading-macros/*as->\",342987922,null),new cljs.core.Symbol(null,\"cond->\",\"cond->\",561741875,null),new cljs.core.Symbol(\"ghostwheel.threading-macros\",\"*cond->\",\"ghostwheel.threading-macros/*cond->\",833202023,null),new cljs.core.Symbol(null,\"cond->>\",\"cond->>\",348844960,null),new cljs.core.Symbol(\"ghostwheel.threading-macros\",\"*cond->>\",\"ghostwheel.threading-macros/*cond->>\",-1548644383,null),new cljs.core.Symbol(null,\"some->\",\"some->\",-1011172200,null),new cljs.core.Symbol(\"ghostwheel.threading-macros\",\"*some->\",\"ghostwheel.threading-macros/*some->\",-1660441536,null),new cljs.core.Symbol(null,\"some->>\",\"some->>\",-1499987794,null),new cljs.core.Symbol(\"ghostwheel.threading-macros\",\"*some->>\",\"ghostwheel.threading-macros/*some->>\",-1496087726,null)], null);\nvar G__78489 = clojure.walk.postwalk_replace(threading_macros_mappings,forms);\nif((trace < (5))){\nreturn clojure.walk.postwalk(((function (G__78489,threading_macros_mappings){\nreturn (function (p1__78485_SHARP_){\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core.list_QMARK_(p1__78485_SHARP_);\nif(and__4120__auto__){\nvar G__78494 = cljs.core.first(p1__78485_SHARP_);\nvar fexpr__78493 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null], null), null);\nreturn (fexpr__78493.cljs$core$IFn$_invoke$arity$1 ? fexpr__78493.cljs$core$IFn$_invoke$arity$1(G__78494) : fexpr__78493.call(null,G__78494));\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn clojure.walk.postwalk_replace(clojure.set.map_invert(threading_macros_mappings),p1__78485_SHARP_);\n} else {\nreturn p1__78485_SHARP_;\n}\n});})(G__78489,threading_macros_mappings))\n,G__78489);\n} else {\nreturn G__78489;\n}\n}\n});\nghostwheel.core.clairvoyant_trace = (function ghostwheel$core$clairvoyant_trace(forms,trace,color,env){\nvar clairvoyant = new cljs.core.Symbol(\"clairvoyant.core\",\"trace-forms\",\"clairvoyant.core/trace-forms\",-388977351,null);\nvar tracer = new cljs.core.Symbol(\"ghostwheel.tracer\",\"tracer\",\"ghostwheel.tracer/tracer\",-1697592191,null);\nvar exclude = (function (){var G__78501 = trace;\nswitch (G__78501) {\ncase (2):\nreturn new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"let\",\"let\",358118826,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\"], null), null);\n\nbreak;\ncase (3):\nreturn new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\"], null), null);\n\nbreak;\ncase (4):\nreturn new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\"], null), null);\n\nbreak;\ndefault:\nreturn null;\n\n}\n})();\nvar inline_trace_QMARK_ = ((function (clairvoyant,tracer,exclude){\nreturn (function (form){\nvar and__4120__auto__ = cljs.core.seq_QMARK_(form);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = (cljs.core.first(form) instanceof cljs.core.Symbol);\nif(and__4120__auto____$1){\nvar sym = cljs.core.first(form);\nvar qualified_sym = ((ghostwheel.utils.cljs_env_QMARK_(env))?new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.api.resolve(env,sym)):null);\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"ghostwheel.core\",\"tr\",\"ghostwheel.core/tr\",1822156400,null),null,new cljs.core.Symbol(\"ghostwheel.core\",\"|>\",\"ghostwheel.core/|>\",-1141080636,null),null], null), null),qualified_sym);\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n});})(clairvoyant,tracer,exclude))\n;\nvar forms__$1 = clojure.walk.postwalk(((function (clairvoyant,tracer,exclude,inline_trace_QMARK_){\nreturn (function (p1__78498_SHARP_){\nif(inline_trace_QMARK_(p1__78498_SHARP_)){\nreturn cljs.core.second(p1__78498_SHARP_);\n} else {\nreturn p1__78498_SHARP_;\n}\n});})(clairvoyant,tracer,exclude,inline_trace_QMARK_))\n,forms);\n\nif((trace < (2))){\nreturn forms__$1;\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,clairvoyant,null,(1),null)),(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Keyword(null,\"enabled\",\"enabled\",1195909756),null,(1),null)),(new cljs.core.List(null,true,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"tracer\",\"tracer\",-1844475765),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,tracer,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"#fff\",null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"background\",\"background\",-863952629),null,(1),null)),(new cljs.core.List(null,color,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"expand\",\"expand\",595248157),null,(1),null)),(new cljs.core.List(null,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(trace,(6)))?new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null)),\"null\",new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"let\",\"let\",358118826,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn-\",\"defn-\",1097765044,null)),\"null\"], null), null):(((trace >= (3)))?new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null)),\"null\",new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"let\",\"let\",358118826,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn-\",\"defn-\",1097765044,null)),\"null\"], null), null):new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null)),\"null\",cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"defn-\",\"defn-\",1097765044,null)),\"null\"], null), null)\n)),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334),null,(1),null)),(new cljs.core.List(null,exclude,null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,forms__$1,null,(1),null))], 0))));\n}\n});\nghostwheel.core.generate_fdef = (function ghostwheel$core$generate_fdef(forms){\nvar map__78524 = cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\">fdef-args\",\"ghostwheel.core/>fdef-args\",1116814851),forms);\nvar map__78524__$1 = (((((!((map__78524 == null))))?(((((map__78524.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78524.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78524):map__78524);\nvar vec__78525 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78524__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78525,(0),null);\nvar fn_name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78525,(1),null);\nvar bs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78524__$1,new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559));\nvar G__78530 = type;\nvar G__78530__$1 = (((G__78530 instanceof cljs.core.Keyword))?G__78530.fqn:null);\nswitch (G__78530__$1) {\ncase \"sym\":\nvar quoted_qualified_fn_name = ghostwheel.core.get_quoted_qualified_fn_name(fn_name);\nvar map__78532 = ghostwheel.core.merge_config(cljs.core.meta(fn_name));\nvar map__78532__$1 = (((((!((map__78532 == null))))?(((((map__78532.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78532.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78532):map__78532);\nvar instrument = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78532__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197));\nvar outstrument = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78532__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347));\nvar instrumentation = (cljs.core.truth_(outstrument)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"orchestra-cljs.spec.test\",\"instrument\",\"orchestra-cljs.spec.test/instrument\",782467554,null),null,(1),null)),(new cljs.core.List(null,quoted_qualified_fn_name,null,(1),null))))):(cljs.core.truth_(instrument)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument\",\"cljs.spec.test.alpha/instrument\",1447464690,null),null,(1),null)),(new cljs.core.List(null,quoted_qualified_fn_name,null,(1),null))))):null\n));\nvar fdef = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"fdef\",\"cljs.spec.alpha/fdef\",-1174458600,null),null,(1),null)),(new cljs.core.List(null,fn_name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.core.generate_fspec_body(bs)], 0))));\nif(cljs.core.truth_(instrumentation)){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,fdef,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,instrumentation,null,(1),null))], 0))));\n} else {\nreturn fdef;\n}\n\nbreak;\ncase \"key\":\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"def\",\"cljs.spec.alpha/def\",1122970404,null),null,(1),null)),(new cljs.core.List(null,fn_name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),null,(1),null)),ghostwheel.core.generate_fspec_body(bs)))),null,(1),null))], 0))));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78530__$1)].join('')));\n\n}\n});\nghostwheel.core.process_defn_body = (function ghostwheel$core$process_defn_body(cfg,fspec,args_PLUS_gspec_PLUS_body){\nvar map__78557 = cfg;\nvar map__78557__$1 = (((((!((map__78557 == null))))?(((((map__78557.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78557.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78557):map__78557);\nvar env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78557__$1,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235));\nvar fn_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78557__$1,new cljs.core.Keyword(null,\"fn-name\",\"fn-name\",-766594004));\nvar traced_fn_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78557__$1,new cljs.core.Keyword(null,\"traced-fn-name\",\"traced-fn-name\",-1714875011));\nvar trace = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78557__$1,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415));\nvar color = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78557__$1,new cljs.core.Keyword(null,\"color\",\"color\",1011675173));\nvar unexpected_fx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78557__$1,new cljs.core.Keyword(null,\"unexpected-fx\",\"unexpected-fx\",-1327631624));\nvar map__78558 = args_PLUS_gspec_PLUS_body;\nvar map__78558__$1 = (((((!((map__78558 == null))))?(((((map__78558.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78558.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78558):map__78558);\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78558__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78558__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar vec__78559 = (function (){var G__78568 = cljs.core.key(body);\nvar G__78568__$1 = (((G__78568 instanceof cljs.core.Keyword))?G__78568.fqn:null);\nswitch (G__78568__$1) {\ncase \"prepost+body\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prepost\",\"prepost\",1251610712).cljs$core$IFn$_invoke$arity$1(cljs.core.val(body)),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(cljs.core.val(body))], null);\n\nbreak;\ncase \"body\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.val(body)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78568__$1)].join('')));\n\n}\n})();\nvar prepost = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78559,(0),null);\nvar orig_body_forms = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78559,(1),null);\nvar process_arg = ((function (map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms){\nreturn (function (p__78571){\nvar vec__78572 = p__78571;\nvar arg_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78572,(0),null);\nvar arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78572,(1),null);\nvar arg__$1 = arg;\nvar G__78576 = arg_type;\nvar G__78576__$1 = (((G__78576 instanceof cljs.core.Keyword))?G__78576.fqn:null);\nswitch (G__78576__$1) {\ncase \"sym\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg_type,arg__$1], null);\n\nbreak;\ncase \"seq\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg_type,cljs.core.update.cljs$core$IFn$_invoke$arity$3(arg__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((function (G__78576,G__78576__$1,arg__$1,vec__78572,arg_type,arg,map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms){\nreturn (function (p1__78545_SHARP_){\nvar or__4131__auto__ = p1__78545_SHARP_;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"arg_\")], null);\n}\n});})(G__78576,G__78576__$1,arg__$1,vec__78572,arg_type,arg,map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms))\n)], null);\n\nbreak;\ncase \"map\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg_type,cljs.core.update.cljs$core$IFn$_invoke$arity$3(arg__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((function (G__78576,G__78576__$1,arg__$1,vec__78572,arg_type,arg,map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms){\nreturn (function (p1__78546_SHARP_){\nvar or__4131__auto__ = p1__78546_SHARP_;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"arg_\");\n}\n});})(G__78576,G__78576__$1,arg__$1,vec__78572,arg_type,arg,map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms))\n)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78576__$1)].join('')));\n\n}\n});})(map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms))\n;\nvar extract_arg = ((function (map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms,process_arg){\nreturn (function (p__78579){\nvar vec__78580 = p__78579;\nvar arg_type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78580,(0),null);\nvar arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78580,(1),null);\nvar G__78585 = arg_type;\nvar G__78585__$1 = (((G__78585 instanceof cljs.core.Keyword))?G__78585.fqn:null);\nswitch (G__78585__$1) {\ncase \"sym\":\nreturn arg;\n\nbreak;\ncase \"seq\":\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arg,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null));\n\nbreak;\ncase \"map\":\nreturn new cljs.core.Keyword(null,\"as\",\"as\",1148689641).cljs$core$IFn$_invoke$arity$1(arg);\n\nbreak;\ndefault:\nreturn null;\n\n}\n});})(map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms,process_arg))\n;\nvar unform_arg = ((function (map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms,process_arg,extract_arg){\nreturn (function (p1__78548_SHARP_){\nreturn ghostwheel.core.unscrew_vec_unform(cljs.spec.alpha.unform(new cljs.core.Keyword(\"ghostwheel.core\",\"binding-form\",\"ghostwheel.core/binding-form\",-1986710048),p1__78548_SHARP_));\n});})(map__78557,map__78557__$1,env,fn_name,traced_fn_name,trace,color,unexpected_fx,map__78558,map__78558__$1,args,body,vec__78559,prepost,orig_body_forms,process_arg,extract_arg))\n;\nvar reg_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2(process_arg,new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(args));\nvar var_arg = (function (){var G__78588 = args;\nvar G__78588__$1 = (((G__78588 == null))?null:new cljs.core.Keyword(null,\"varargs\",\"varargs\",1030150858).cljs$core$IFn$_invoke$arity$1(G__78588));\nvar G__78588__$2 = (((G__78588__$1 == null))?null:new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(G__78588__$1));\nif((G__78588__$2 == null)){\nreturn null;\n} else {\nreturn process_arg(G__78588__$2);\n}\n})();\nvar arg_list = cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(unform_arg,reg_args),(cljs.core.truth_(var_arg)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),unform_arg(var_arg)], null):null)));\nvar body_forms = (cljs.core.truth_((function (){var and__4120__auto__ = fspec;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.every_QMARK_(cljs.core.nil_QMARK_,orig_body_forms);\n} else {\nreturn and__4120__auto__;\n}\n})())?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",1757277831,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"->\",\"cljs.core/->\",1488366311,null),null,(1),null)),(new cljs.core.List(null,fspec,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"gen\",\"cljs.spec.alpha/gen\",147877780,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"generate\",\"cljs.spec.gen.alpha/generate\",-1135206536,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(extract_arg,reg_args),(new cljs.core.List(null,extract_arg(var_arg),null,(1),null))], 0))))], null):(cljs.core.truth_(unexpected_fx)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,((ghostwheel.utils.cljs_env_QMARK_(env))?new cljs.core.Symbol(\"js\",\"Error.\",\"js/Error.\",750655924,null):new cljs.core.Symbol(null,\"Exception.\",\"Exception.\",-981206655,null)),null,(1),null)),(new cljs.core.List(null,[\"Calling function `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name),\"` which has unexpected side effects.\"].join(''),null,(1),null))))),null,(1),null)))))], null):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009)))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.core\",\"*global-trace-allowed?*\",\"ghostwheel.core/*global-trace-allowed?*\",-1100865526,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",1757277831,null),null,(1),null)),(new cljs.core.List(null,traced_fn_name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(extract_arg,reg_args),(new cljs.core.List(null,extract_arg(var_arg),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),orig_body_forms))),null,(1),null))], 0))))], null):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(trace,(1)))?cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"pr-clog\",\"ghostwheel.logging/pr-clog\",-1989385842,null),null,(1),null)),(new cljs.core.List(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,fn_name,(new cljs.core.List(null,arg_list,null,(1),null)),(2),null))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,null,null,(1),null)),(new cljs.core.List(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Keyword(\"ghostwheel.reporting\",\"background\",\"ghostwheel.reporting/background\",355272247),null,(1),null)),(new cljs.core.List(null,color,null,(1),null)))))),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([orig_body_forms], 0)))),null,(1),null)))))):(((trace >= (4)))?ghostwheel.core.trace_threading_macros(orig_body_forms,trace):orig_body_forms\n)))));\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,arg_list,null,(1),null)),(new cljs.core.List(null,prepost,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body_forms], 0)))));\n});\nghostwheel.core.generate_defn = (function ghostwheel$core$generate_defn(forms,private$,env){\nvar cljs_QMARK_ = ghostwheel.utils.cljs_env_QMARK_(env);\nvar conformed_gdefn = cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),forms);\nvar fn_bodies = new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559).cljs$core$IFn$_invoke$arity$1(conformed_gdefn);\nvar empty_bodies = cljs.core.every_QMARK_(cljs.core.empty_QMARK_,(function (){var G__78625 = cljs.core.key(fn_bodies);\nvar G__78625__$1 = (((G__78625 instanceof cljs.core.Keyword))?G__78625.fqn:null);\nswitch (G__78625__$1) {\ncase \"arity-1\":\nreturn (new cljs.core.List(null,cljs.core.val(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(cljs.core.val(fn_bodies))),null,(1),null));\n\nbreak;\ncase \"arity-n\":\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.val,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.val(fn_bodies)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78625__$1)].join('')));\n\n}\n})());\nvar arity = cljs.core.key(fn_bodies);\nvar fn_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(conformed_gdefn);\nvar quoted_qualified_fn_name = ghostwheel.core.get_quoted_qualified_fn_name(fn_name);\nvar traced_fn_name = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name),\"__\"].join(''));\nvar docstring = new cljs.core.Keyword(null,\"docstring\",\"docstring\",879233117).cljs$core$IFn$_invoke$arity$1(conformed_gdefn);\nvar meta_map = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(conformed_gdefn),ghostwheel.core.generate_type_annotations(env,fn_bodies),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel\",\"ghostwheel.core/ghostwheel\",-1377143027),true], null)], 0));\nvar config = ghostwheel.core.merge_config(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(fn_name),meta_map], 0)));\nvar color = ghostwheel.core.resolve_trace_color(new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640).cljs$core$IFn$_invoke$arity$1(config));\nvar map__78620 = config;\nvar map__78620__$1 = (((((!((map__78620 == null))))?(((((map__78620.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78620.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78620):map__78620);\nvar defn_macro = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78620__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"defn-macro\",\"ghostwheel.core/defn-macro\",-493811684));\nvar instrument = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78620__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"instrument\",\"ghostwheel.core/instrument\",-427699197));\nvar outstrument = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78620__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"outstrument\",\"ghostwheel.core/outstrument\",-653830347));\nvar trace = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78620__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664));\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78620__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nvar defn_sym = (cljs.core.truth_(defn_macro)?cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(defn_macro),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"private\",\"private\",-558947994),private$], null)):(cljs.core.truth_(private$)?new cljs.core.Symbol(null,\"defn-\",\"defn-\",1097765044,null):new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null)\n));\nvar trace__$1 = ((ghostwheel.utils.cljs_env_QMARK_(env))?((empty_bodies)?(0):((trace === true)?(4):trace\n)):(0));\nvar fdef_body = ghostwheel.core.generate_fspec_body(fn_bodies);\nvar fdef = (cljs.core.truth_(fdef_body)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"fdef\",\"cljs.spec.alpha/fdef\",-1174458600,null),null,(1),null)),(new cljs.core.List(null,fn_name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fdef_body], 0)))):null);\nvar instrumentation = (((!(empty_bodies)))?(cljs.core.truth_(outstrument)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"orchestra-cljs.spec.test\",\"instrument\",\"orchestra-cljs.spec.test/instrument\",782467554,null),null,(1),null)),(new cljs.core.List(null,quoted_qualified_fn_name,null,(1),null))))):(cljs.core.truth_(instrument)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument\",\"cljs.spec.test.alpha/instrument\",1447464690,null),null,(1),null)),(new cljs.core.List(null,quoted_qualified_fn_name,null,(1),null))))):null\n)):null);\nvar individual_arity_fspecs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (cljs_QMARK_,conformed_gdefn,fn_bodies,empty_bodies,arity,fn_name,quoted_qualified_fn_name,traced_fn_name,docstring,meta_map,config,color,map__78620,map__78620__$1,defn_macro,instrument,outstrument,trace,check,defn_sym,trace__$1,fdef_body,fdef,instrumentation){\nreturn (function (p__78640){\nvar map__78641 = p__78640;\nvar map__78641__$1 = (((((!((map__78641 == null))))?(((((map__78641.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78641.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78641):map__78641);\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78641__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar gspec = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78641__$1,new cljs.core.Keyword(null,\"gspec\",\"gspec\",1282160262));\nif(cljs.core.truth_(gspec)){\nreturn ghostwheel.core.gspec__GT_fspec_STAR_(args,gspec,true,false,false);\n} else {\nreturn null;\n}\n});})(cljs_QMARK_,conformed_gdefn,fn_bodies,empty_bodies,arity,fn_name,quoted_qualified_fn_name,traced_fn_name,docstring,meta_map,config,color,map__78620,map__78620__$1,defn_macro,instrument,outstrument,trace,check,defn_sym,trace__$1,fdef_body,fdef,instrumentation))\n,cljs.core.val(fn_bodies));\nvar vec__78621 = (cljs.core.truth_((function (){var and__4120__auto__ = check;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn (!(empty_bodies));\n} else {\nreturn and__4120__auto__;\n}\n})())?(function (){var fspecs = (function (){var G__78646 = arity;\nvar G__78646__$1 = (((G__78646 instanceof cljs.core.Keyword))?G__78646.fqn:null);\nswitch (G__78646__$1) {\ncase \"arity-1\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fdef_body)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),null,(1),null)),fdef_body))):null)], null);\n\nbreak;\ncase \"arity-n\":\nreturn individual_arity_fspecs;\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78646__$1)].join('')));\n\n}\n})();\nreturn ghostwheel.core.generate_test(fn_name,fspecs,fn_bodies,config,cljs_QMARK_);\n})():null);\nvar unexpected_fx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78621,(0),null);\nvar generated_test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78621,(1),null);\nvar process_fn_bodies = ((function (cljs_QMARK_,conformed_gdefn,fn_bodies,empty_bodies,arity,fn_name,quoted_qualified_fn_name,traced_fn_name,docstring,meta_map,config,color,map__78620,map__78620__$1,defn_macro,instrument,outstrument,trace,check,defn_sym,trace__$1,fdef_body,fdef,instrumentation,individual_arity_fspecs,vec__78621,unexpected_fx,generated_test){\nreturn (function (trace__$2){\nvar process_cfg = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"fn-name\",\"fn-name\",-766594004),fn_name,new cljs.core.Keyword(null,\"traced-fn-name\",\"traced-fn-name\",-1714875011),traced_fn_name,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),trace__$2,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),color,new cljs.core.Keyword(null,\"unexpected-fx\",\"unexpected-fx\",-1327631624),unexpected_fx], null);\nvar G__78657 = arity;\nvar G__78657__$1 = (((G__78657 instanceof cljs.core.Keyword))?G__78657.fqn:null);\nswitch (G__78657__$1) {\ncase \"arity-1\":\nreturn ghostwheel.core.process_defn_body(process_cfg,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),null,(1),null)),fdef_body))),cljs.core.val(fn_bodies));\n\nbreak;\ncase \"arity-n\":\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(ghostwheel.core.process_defn_body,process_cfg),individual_arity_fspecs,cljs.core.val(fn_bodies));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78657__$1)].join('')));\n\n}\n});})(cljs_QMARK_,conformed_gdefn,fn_bodies,empty_bodies,arity,fn_name,quoted_qualified_fn_name,traced_fn_name,docstring,meta_map,config,color,map__78620,map__78620__$1,defn_macro,instrument,outstrument,trace,check,defn_sym,trace__$1,fdef_body,fdef,instrumentation,individual_arity_fspecs,vec__78621,unexpected_fx,generated_test))\n;\nvar main_defn = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,defn_sym,null,(1),null)),(new cljs.core.List(null,fn_name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,docstring,null,(1),null)),(new cljs.core.List(null,meta_map,null,(1),null)),process_fn_bodies((((trace__$1 > (0)))?new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009):(0)))], 0)))));\nvar traced_defn = (((trace__$1 > (0)))?(function (){var traced_defn = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,defn_sym,null,(1),null)),(new cljs.core.List(null,traced_fn_name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([process_fn_bodies(trace__$1)], 0)))));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(trace__$1,(1))){\nreturn traced_defn;\n} else {\nreturn ghostwheel.core.clairvoyant_trace(traced_defn,trace__$1,color,env);\n}\n})():null);\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,fdef,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,traced_defn,null,(1),null)),(new cljs.core.List(null,main_defn,null,(1),null)),(new cljs.core.List(null,instrumentation,null,(1),null)),(new cljs.core.List(null,generated_test,null,(1),null))], 0))));\n});\nghostwheel.core.after_check_async = (function ghostwheel$core$after_check_async(done){\nvar success = cljs.core.deref(ghostwheel.reporting._STAR_all_tests_successful);\nif(cljs.core.truth_(success)){\nvar seq__78678_79545 = cljs.core.seq(cljs.core.deref(ghostwheel.core._STAR_after_check_callbacks));\nvar chunk__78679_79546 = null;\nvar count__78680_79547 = (0);\nvar i__78681_79548 = (0);\nwhile(true){\nif((i__78681_79548 < count__78680_79547)){\nvar f_79551 = chunk__78679_79546.cljs$core$IIndexed$_nth$arity$2(null,i__78681_79548);\n(f_79551.cljs$core$IFn$_invoke$arity$0 ? f_79551.cljs$core$IFn$_invoke$arity$0() : f_79551.call(null));\n\n\nvar G__79552 = seq__78678_79545;\nvar G__79553 = chunk__78679_79546;\nvar G__79554 = count__78680_79547;\nvar G__79555 = (i__78681_79548 + (1));\nseq__78678_79545 = G__79552;\nchunk__78679_79546 = G__79553;\ncount__78680_79547 = G__79554;\ni__78681_79548 = G__79555;\ncontinue;\n} else {\nvar temp__5753__auto___79556 = cljs.core.seq(seq__78678_79545);\nif(temp__5753__auto___79556){\nvar seq__78678_79557__$1 = temp__5753__auto___79556;\nif(cljs.core.chunked_seq_QMARK_(seq__78678_79557__$1)){\nvar c__4550__auto___79559 = cljs.core.chunk_first(seq__78678_79557__$1);\nvar G__79561 = cljs.core.chunk_rest(seq__78678_79557__$1);\nvar G__79562 = c__4550__auto___79559;\nvar G__79563 = cljs.core.count(c__4550__auto___79559);\nvar G__79564 = (0);\nseq__78678_79545 = G__79561;\nchunk__78679_79546 = G__79562;\ncount__78680_79547 = G__79563;\ni__78681_79548 = G__79564;\ncontinue;\n} else {\nvar f_79567 = cljs.core.first(seq__78678_79557__$1);\n(f_79567.cljs$core$IFn$_invoke$arity$0 ? f_79567.cljs$core$IFn$_invoke$arity$0() : f_79567.call(null));\n\n\nvar G__79574 = cljs.core.next(seq__78678_79557__$1);\nvar G__79575 = null;\nvar G__79576 = (0);\nvar G__79577 = (0);\nseq__78678_79545 = G__79574;\nchunk__78679_79546 = G__79575;\ncount__78680_79547 = G__79576;\ni__78681_79548 = G__79577;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\n}\n\ncljs.core.reset_BANG_(ghostwheel.reporting._STAR_all_tests_successful,true);\n\ncljs.core.reset_BANG_(ghostwheel.core._STAR_after_check_callbacks,cljs.core.PersistentVector.EMPTY);\n\nif(cljs.core.truth_(success)){\nreturn (done.cljs$core$IFn$_invoke$arity$0 ? done.cljs$core$IFn$_invoke$arity$0() : done.call(null));\n} else {\nreturn null;\n}\n});\nghostwheel.core.generate_coverage_check = (function ghostwheel$core$generate_coverage_check(env,nspace){\nvar cljs_QMARK_ = ghostwheel.utils.cljs_env_QMARK_(env);\nvar map__78720 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0(),((cljs_QMARK_)?new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1(nspace)):null)], 0));\nvar map__78720__$1 = (((((!((map__78720 == null))))?(((((map__78720.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78720.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78720):map__78720);\nvar check_coverage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78720__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921));\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78720__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nvar get_intern_meta = cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,((cljs_QMARK_)?cljs.core.key:cljs.core.val));\nvar all_checked_fns = (cljs.core.truth_(check_coverage)?(function (){var G__78725 = ((cljs_QMARK_)?cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1(nspace):null);\nvar G__78725__$1 = (((G__78725 == null))?null:cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (G__78725,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta){\nreturn (function (p1__78710_SHARP_){\nif(cljs_QMARK_){\nreturn new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(cljs.core.val(p1__78710_SHARP_));\n} else {\nreturn null;\n}\n});})(G__78725,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta))\n,G__78725));\nvar G__78725__$2 = (((G__78725__$1 == null))?null:cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (G__78725,G__78725__$1,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta){\nreturn (function (p1__78711_SHARP_){\nreturn clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.key(p1__78711_SHARP_)),ghostwheel.core.test_suffix);\n});})(G__78725,G__78725__$1,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta))\n,G__78725__$1));\nif((G__78725__$2 == null)){\nreturn null;\n} else {\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (G__78725,G__78725__$1,G__78725__$2,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta){\nreturn (function (p1__78712_SHARP_){\nreturn new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921).cljs$core$IFn$_invoke$arity$1((get_intern_meta.cljs$core$IFn$_invoke$arity$1 ? get_intern_meta.cljs$core$IFn$_invoke$arity$1(p1__78712_SHARP_) : get_intern_meta.call(null,p1__78712_SHARP_))) === false;\n});})(G__78725,G__78725__$1,G__78725__$2,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta))\n,G__78725__$2);\n}\n})():null);\nvar plain_defns = (cljs.core.truth_(check_coverage)?(function (){var G__78729 = all_checked_fns;\nvar G__78729__$1 = (((G__78729 == null))?null:cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (G__78729,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta,all_checked_fns){\nreturn (function (p1__78713_SHARP_){\nreturn new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel\",\"ghostwheel.core/ghostwheel\",-1377143027).cljs$core$IFn$_invoke$arity$1((get_intern_meta.cljs$core$IFn$_invoke$arity$1 ? get_intern_meta.cljs$core$IFn$_invoke$arity$1(p1__78713_SHARP_) : get_intern_meta.call(null,p1__78713_SHARP_)));\n});})(G__78729,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta,all_checked_fns))\n,G__78729));\nvar G__78729__$2 = (((G__78729__$1 == null))?null:cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.key),G__78729__$1));\nif((G__78729__$2 == null)){\nreturn null;\n} else {\nreturn cljs.core.vec(G__78729__$2);\n}\n})():null);\nvar unchecked_defns = (cljs.core.truth_(check_coverage)?(function (){var G__78732 = all_checked_fns;\nvar G__78732__$1 = (((G__78732 == null))?null:cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (G__78732,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta,all_checked_fns,plain_defns){\nreturn (function (p1__78715_SHARP_){\nreturn new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel\",\"ghostwheel.core/ghostwheel\",-1377143027).cljs$core$IFn$_invoke$arity$1((get_intern_meta.cljs$core$IFn$_invoke$arity$1 ? get_intern_meta.cljs$core$IFn$_invoke$arity$1(p1__78715_SHARP_) : get_intern_meta.call(null,p1__78715_SHARP_)));\n});})(G__78732,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta,all_checked_fns,plain_defns))\n,G__78732));\nvar G__78732__$2 = (((G__78732__$1 == null))?null:cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (G__78732,G__78732__$1,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta,all_checked_fns,plain_defns){\nreturn (function (p1__78716_SHARP_){\nreturn new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241).cljs$core$IFn$_invoke$arity$1((get_intern_meta.cljs$core$IFn$_invoke$arity$1 ? get_intern_meta.cljs$core$IFn$_invoke$arity$1(p1__78716_SHARP_) : get_intern_meta.call(null,p1__78716_SHARP_))) === false;\n});})(G__78732,G__78732__$1,cljs_QMARK_,map__78720,map__78720__$1,check_coverage,check,get_intern_meta,all_checked_fns,plain_defns))\n,G__78732__$1));\nvar G__78732__$3 = (((G__78732__$2 == null))?null:cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.key),G__78732__$2));\nif((G__78732__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.vec(G__78732__$3);\n}\n})():null);\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,((cljs.core.not(check))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"group\",\"ghostwheel.logging/group\",-1097089404,null),null,(1),null)),(new cljs.core.List(null,[\"WARNING: \",\"`::g/check` disabled for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(nspace),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"incomplete-coverage\",\"ghostwheel.reporting/incomplete-coverage\",1228796498).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets))].join(''),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,ghostwheel.reporting.warning_style,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"group-end\",\"ghostwheel.logging/group-end\",92620769,null),null,(1),null))))),null,(1),null))], 0)))):null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,(cljs.core.truth_(cljs.core.not_empty(plain_defns))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"group\",\"ghostwheel.logging/group\",-1097089404,null),null,(1),null)),(new cljs.core.List(null,[\"WARNING: \",\"Plain `defn` functions detected in \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(nspace),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"incomplete-coverage\",\"ghostwheel.reporting/incomplete-coverage\",1228796498).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets))].join(''),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,ghostwheel.reporting.warning_style,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"log\",\"ghostwheel.logging/log\",2024238598,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"mapv\",\"cljs.core/mapv\",433728488,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"symbol\",\"cljs.core/symbol\",195265748,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,plain_defns,null,(1),null))], 0)))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"log-bold\",\"ghostwheel.logging/log-bold\",1265390995,null),null,(1),null)),(new cljs.core.List(null,\"=> Use `>defn` instead.\",null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"group-end\",\"ghostwheel.logging/group-end\",92620769,null),null,(1),null))))),null,(1),null))], 0)))):null),null,(1),null)),(new cljs.core.List(null,(cljs.core.truth_(cljs.core.not_empty(unchecked_defns))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"group\",\"ghostwheel.logging/group\",-1097089404,null),null,(1),null)),(new cljs.core.List(null,[\"WARNING: \",\"`::g/check` disabled for some functions in \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(nspace),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"incomplete-coverage\",\"ghostwheel.reporting/incomplete-coverage\",1228796498).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets))].join(''),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,ghostwheel.reporting.warning_style,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"log\",\"ghostwheel.logging/log\",2024238598,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"mapv\",\"cljs.core/mapv\",433728488,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"symbol\",\"cljs.core/symbol\",195265748,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,unchecked_defns,null,(1),null))], 0)))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"group-end\",\"ghostwheel.logging/group-end\",92620769,null),null,(1),null))))),null,(1),null))], 0)))):null),null,(1),null))], 0))));\n});\nghostwheel.core.generate_check = (function ghostwheel$core$generate_check(env,targets){\nvar base_config = ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0();\nvar cljs_QMARK_ = ghostwheel.utils.cljs_env_QMARK_(env);\nvar map__78744 = base_config;\nvar map__78744__$1 = (((((!((map__78744 == null))))?(((((map__78744.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78744.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78744):map__78744);\nvar extrument = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78744__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"extrument\",\"ghostwheel.core/extrument\",-1845043355));\nvar report_output = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78744__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"report-output\",\"ghostwheel.core/report-output\",-1945560991));\nvar conformed_targets = (function (){var conformed_targets = cljs.spec.alpha.conform(new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972),targets);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.key(conformed_targets),new cljs.core.Keyword(null,\"multi\",\"multi\",-190293005))){\nreturn cljs.core.val(conformed_targets);\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.val(conformed_targets)], null);\n}\n})();\nvar processed_targets = cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets){\nreturn (function (p__78758){\nvar vec__78760 = p__78758;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78760,(0),null);\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78760,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\"regex\",\"regex\",939488856))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(target)], null)], null);\n} else {\nvar iter__4523__auto__ = ((function (vec__78760,type,target,base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets){\nreturn (function ghostwheel$core$generate_check_$_iter__78763(s__78764){\nreturn (new cljs.core.LazySeq(null,((function (vec__78760,type,target,base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets){\nreturn (function (){\nvar s__78764__$1 = s__78764;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__78764__$1);\nif(temp__5753__auto__){\nvar s__78764__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__78764__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__78764__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__78766 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__78765 = (0);\nwhile(true){\nif((i__78765 < size__4522__auto__)){\nvar ns = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__78765);\nif(cljs.core.truth_(cljs.core.re_matches(target,cljs.core.str.cljs$core$IFn$_invoke$arity$1(((cljs_QMARK_)?ns:null))))){\ncljs.core.chunk_append(b__78766,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns], null));\n\nvar G__79642 = (i__78765 + (1));\ni__78765 = G__79642;\ncontinue;\n} else {\nvar G__79644 = (i__78765 + (1));\ni__78765 = G__79644;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78766),ghostwheel$core$generate_check_$_iter__78763(cljs.core.chunk_rest(s__78764__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78766),null);\n}\n} else {\nvar ns = cljs.core.first(s__78764__$2);\nif(cljs.core.truth_(cljs.core.re_matches(target,cljs.core.str.cljs$core$IFn$_invoke$arity$1(((cljs_QMARK_)?ns:null))))){\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns], null),ghostwheel$core$generate_check_$_iter__78763(cljs.core.rest(s__78764__$2)));\n} else {\nvar G__79650 = cljs.core.rest(s__78764__$2);\ns__78764__$1 = G__79650;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(vec__78760,type,target,base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets))\n,null,null));\n});})(vec__78760,type,target,base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets))\n;\nreturn iter__4523__auto__(((cljs_QMARK_)?cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0():null));\n}\n});})(base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([conformed_targets], 0));\nvar errors = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,(function (){var iter__4523__auto__ = ((function (base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets){\nreturn (function ghostwheel$core$generate_check_$_iter__78775(s__78776){\nreturn (new cljs.core.LazySeq(null,((function (base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets){\nreturn (function (){\nvar s__78776__$1 = s__78776;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__78776__$1);\nif(temp__5753__auto__){\nvar s__78776__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__78776__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__78776__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__78778 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__78777 = (0);\nwhile(true){\nif((i__78777 < size__4522__auto__)){\nvar target = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__78777);\nvar vec__78791 = target;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78791,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78791,(1),null);\ncljs.core.chunk_append(b__78778,(function (){var G__78795 = type;\nvar G__78795__$1 = (((G__78795 instanceof cljs.core.Keyword))?G__78795.fqn:null);\nswitch (G__78795__$1) {\ncase \"fn\":\nvar fn_data = ((cljs_QMARK_)?cljs.analyzer.api.resolve(env,sym):null);\nvar metadata = ((cljs_QMARK_)?new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(fn_data):null);\nvar map__78797 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0(),cljs.core.meta(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(fn_data)),metadata], 0));\nvar map__78797__$1 = (((((!((map__78797 == null))))?(((((map__78797.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78797.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78797):map__78797);\nvar check_coverage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78797__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921));\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78797__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nif(cljs.core.not(fn_data)){\nreturn [\"Cannot resolve `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"`\"].join('');\n} else {\nif(cljs.core.not(((cljs_QMARK_)?new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(fn_data):null))){\nreturn [\"`\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` is not a function.\"].join('');\n} else {\nif(cljs.core.not(new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel\",\"ghostwheel.core/ghostwheel\",-1377143027).cljs$core$IFn$_invoke$arity$1(metadata))){\nreturn [\"`\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` is not a Ghostwheel function => Use `>defn` to define it.\"].join('');\n} else {\nif(cljs.core.not(check)){\nreturn [\"Checking disabled for `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` => Set `{:ghostwheel.core/check true}` to enable.\"].join('');\n} else {\nreturn null;\n\n}\n}\n}\n}\n\nbreak;\ncase \"ns\":\nvar ns_data = ((cljs_QMARK_)?cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1(sym):null);\nvar metadata = ((cljs_QMARK_)?new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(ns_data):null);\nvar map__78800 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([base_config,metadata], 0));\nvar map__78800__$1 = (((((!((map__78800 == null))))?(((((map__78800.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78800.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78800):map__78800);\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78800__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nif(cljs.core.not(ns_data)){\nreturn [\"Cannot resolve `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"`\"].join('');\n} else {\nif(cljs.core.not(check)){\nreturn [\"Checking disabled for `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` => Set `{:ghostwheel.core/check true}` to enable.\"].join('');\n} else {\nreturn null;\n\n}\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78795__$1)].join('')));\n\n}\n})());\n\nvar G__79672 = (i__78777 + (1));\ni__78777 = G__79672;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78778),ghostwheel$core$generate_check_$_iter__78775(cljs.core.chunk_rest(s__78776__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78778),null);\n}\n} else {\nvar target = cljs.core.first(s__78776__$2);\nvar vec__78806 = target;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78806,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78806,(1),null);\nreturn cljs.core.cons((function (){var G__78809 = type;\nvar G__78809__$1 = (((G__78809 instanceof cljs.core.Keyword))?G__78809.fqn:null);\nswitch (G__78809__$1) {\ncase \"fn\":\nvar fn_data = ((cljs_QMARK_)?cljs.analyzer.api.resolve(env,sym):null);\nvar metadata = ((cljs_QMARK_)?new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(fn_data):null);\nvar map__78810 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0(),cljs.core.meta(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(fn_data)),metadata], 0));\nvar map__78810__$1 = (((((!((map__78810 == null))))?(((((map__78810.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78810.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78810):map__78810);\nvar check_coverage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78810__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check-coverage\",\"ghostwheel.core/check-coverage\",195314921));\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78810__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nif(cljs.core.not(fn_data)){\nreturn [\"Cannot resolve `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"`\"].join('');\n} else {\nif(cljs.core.not(((cljs_QMARK_)?new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(fn_data):null))){\nreturn [\"`\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` is not a function.\"].join('');\n} else {\nif(cljs.core.not(new cljs.core.Keyword(\"ghostwheel.core\",\"ghostwheel\",\"ghostwheel.core/ghostwheel\",-1377143027).cljs$core$IFn$_invoke$arity$1(metadata))){\nreturn [\"`\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` is not a Ghostwheel function => Use `>defn` to define it.\"].join('');\n} else {\nif(cljs.core.not(check)){\nreturn [\"Checking disabled for `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` => Set `{:ghostwheel.core/check true}` to enable.\"].join('');\n} else {\nreturn null;\n\n}\n}\n}\n}\n\nbreak;\ncase \"ns\":\nvar ns_data = ((cljs_QMARK_)?cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1(sym):null);\nvar metadata = ((cljs_QMARK_)?new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(ns_data):null);\nvar map__78813 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([base_config,metadata], 0));\nvar map__78813__$1 = (((((!((map__78813 == null))))?(((((map__78813.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78813.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78813):map__78813);\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78813__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nif(cljs.core.not(ns_data)){\nreturn [\"Cannot resolve `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"`\"].join('');\n} else {\nif(cljs.core.not(check)){\nreturn [\"Checking disabled for `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),\"` => Set `{:ghostwheel.core/check true}` to enable.\"].join('');\n} else {\nreturn null;\n\n}\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78809__$1)].join('')));\n\n}\n})(),ghostwheel$core$generate_check_$_iter__78775(cljs.core.rest(s__78776__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets))\n,null,null));\n});})(base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets))\n;\nreturn iter__4523__auto__(processed_targets);\n})());\nif(cljs.core.truth_(cljs.core.not_empty(errors))){\nreturn ghostwheel.utils.gen_exception(env,[\"\\n\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",errors))].join(''));\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.core\",\"*global-check-allowed?*\",\"ghostwheel.core/*global-check-allowed?*\",1676244250,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.core\",\"*global-trace-allowed?*\",\"ghostwheel.core/*global-trace-allowed?*\",-1100865526,null),null,(1),null)),(new cljs.core.List(null,false,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"*report-output*\",\"ghostwheel.logging/*report-output*\",1796652551,null),null,(1),null)),(new cljs.core.List(null,((cljs_QMARK_)?report_output:new cljs.core.Keyword(null,\"repl\",\"repl\",-35398667)),null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,(cljs.core.truth_(extrument)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument\",\"cljs.spec.test.alpha/instrument\",1447464690,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,extrument,null,(1),null))))),null,(1),null))))):null),null,(1),null)),(function (){var iter__4523__auto__ = ((function (base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors){\nreturn (function ghostwheel$core$generate_check_$_iter__78839(s__78840){\nreturn (new cljs.core.LazySeq(null,((function (base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors){\nreturn (function (){\nvar s__78840__$1 = s__78840;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__78840__$1);\nif(temp__5753__auto__){\nvar s__78840__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__78840__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__78840__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__78842 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__78841 = (0);\nwhile(true){\nif((i__78841 < size__4522__auto__)){\nvar target = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__78841);\nvar vec__78849 = target;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78849,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78849,(1),null);\ncljs.core.chunk_append(b__78842,(function (){var G__78852 = type;\nvar G__78852__$1 = (((G__78852 instanceof cljs.core.Keyword))?G__78852.fqn:null);\nswitch (G__78852__$1) {\ncase \"fn\":\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"report\",\"cljs.test/report\",-1933655233,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.reporting\",\"report\",\"ghostwheel.reporting/report\",-312183203,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),ghostwheel.core.test_suffix].join('')),null,(1),null))))),null,(1),null))], 0))));\n\nbreak;\ncase \"ns\":\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"report\",\"cljs.test/report\",-1933655233,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.reporting\",\"report\",\"ghostwheel.reporting/report\",-312183203,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"run-tests\",\"cljs.test/run-tests\",-878084023,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))))),null,(1),null))], 0))));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78852__$1)].join('')));\n\n}\n})());\n\nvar G__79721 = (i__78841 + (1));\ni__78841 = G__79721;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78842),ghostwheel$core$generate_check_$_iter__78839(cljs.core.chunk_rest(s__78840__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78842),null);\n}\n} else {\nvar target = cljs.core.first(s__78840__$2);\nvar vec__78856 = target;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78856,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78856,(1),null);\nreturn cljs.core.cons((function (){var G__78859 = type;\nvar G__78859__$1 = (((G__78859 instanceof cljs.core.Keyword))?G__78859.fqn:null);\nswitch (G__78859__$1) {\ncase \"fn\":\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"report\",\"cljs.test/report\",-1933655233,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.reporting\",\"report\",\"ghostwheel.reporting/report\",-312183203,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),ghostwheel.core.test_suffix].join('')),null,(1),null))))),null,(1),null))], 0))));\n\nbreak;\ncase \"ns\":\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"report\",\"cljs.test/report\",-1933655233,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.reporting\",\"report\",\"ghostwheel.reporting/report\",-312183203,null),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.test\",\"run-tests\",\"cljs.test/run-tests\",-878084023,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))))),null,(1),null))], 0))));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__78859__$1)].join('')));\n\n}\n})(),ghostwheel$core$generate_check_$_iter__78839(cljs.core.rest(s__78840__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors))\n,null,null));\n});})(base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors))\n;\nreturn iter__4523__auto__(processed_targets);\n})(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,(function (){var iter__4523__auto__ = ((function (base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors){\nreturn (function ghostwheel$core$generate_check_$_iter__78861(s__78862){\nreturn (new cljs.core.LazySeq(null,((function (base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors){\nreturn (function (){\nvar s__78862__$1 = s__78862;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__78862__$1);\nif(temp__5753__auto__){\nvar s__78862__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__78862__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__78862__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__78864 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__78863 = (0);\nwhile(true){\nif((i__78863 < size__4522__auto__)){\nvar target = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__78863);\nvar vec__78869 = target;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78869,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78869,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\ncljs.core.chunk_append(b__78864,ghostwheel.core.generate_coverage_check(env,sym));\n\nvar G__79740 = (i__78863 + (1));\ni__78863 = G__79740;\ncontinue;\n} else {\nvar G__79742 = (i__78863 + (1));\ni__78863 = G__79742;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78864),ghostwheel$core$generate_check_$_iter__78861(cljs.core.chunk_rest(s__78862__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__78864),null);\n}\n} else {\nvar target = cljs.core.first(s__78862__$2);\nvar vec__78873 = target;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78873,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__78873,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\nreturn cljs.core.cons(ghostwheel.core.generate_coverage_check(env,sym),ghostwheel$core$generate_check_$_iter__78861(cljs.core.rest(s__78862__$2)));\n} else {\nvar G__79746 = cljs.core.rest(s__78862__$2);\ns__78862__$1 = G__79746;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors))\n,null,null));\n});})(base_config,cljs_QMARK_,map__78744,map__78744__$1,extrument,report_output,conformed_targets,processed_targets,errors))\n;\nreturn iter__4523__auto__(processed_targets);\n})()),(new cljs.core.List(null,(cljs.core.truth_(extrument)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"unstrument\",\"cljs.spec.test.alpha/unstrument\",-512915776,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,extrument,null,(1),null))))),null,(1),null))))):null),null,(1),null))], 0))))))))),null,(1),null))], 0)))),null,(1),null))], 0))));\n}\n});\nghostwheel.core.generate_after_check = (function ghostwheel$core$generate_after_check(callbacks){\nvar map__78878 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0(),cljs.core.meta(cljs.core._STAR_ns_STAR_)], 0));\nvar map__78878__$1 = (((((!((map__78878 == null))))?(((((map__78878.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__78878.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__78878):map__78878);\nvar check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__78878__$1,new cljs.core.Keyword(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",-379901241));\nif(cljs.core.truth_((function (){var and__4120__auto__ = check;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.seq(callbacks);\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"swap!\",\"cljs.core/swap!\",-2144679919,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.core\",\"*after-check-callbacks\",\"ghostwheel.core/*after-check-callbacks\",40404473,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"comp\",\"cljs.core/comp\",-2137591872,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"vec\",\"cljs.core/vec\",307622519,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"concat\",\"cljs.core/concat\",-1133584918,null),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(callbacks),null,(1),null))], 0))));\n} else {\nreturn null;\n}\n});\nghostwheel.core.generate_traced_expr = (function ghostwheel$core$generate_traced_expr(expr,env){\nif(((cljs.core.seq_QMARK_(expr)) && (((cljs.core.contains_QMARK_(ghostwheel.logging.ops_with_bindings,cljs.core.first(expr))) || (cljs.core.contains_QMARK_(ghostwheel.core.threading_macro_syms,cljs.core.first(expr))))))){\nvar cfg = ghostwheel.core.merge_config(cljs.core.meta(expr));\nvar color = ghostwheel.core.resolve_trace_color(new cljs.core.Keyword(\"ghostwheel.core\",\"trace-color\",\"ghostwheel.core/trace-color\",-2040710640).cljs$core$IFn$_invoke$arity$1(cfg));\nvar trace = (function (){var trace = new cljs.core.Keyword(\"ghostwheel.core\",\"trace\",\"ghostwheel.core/trace\",531995664).cljs$core$IFn$_invoke$arity$1(cfg);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(trace,(0))){\nreturn (5);\n} else {\nreturn trace;\n}\n})();\nvar G__78883 = ghostwheel.core.trace_threading_macros(expr,trace);\nif(ghostwheel.utils.cljs_env_QMARK_(env)){\nreturn ghostwheel.core.clairvoyant_trace(G__78883,trace,color,env);\n} else {\nreturn G__78883;\n}\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"ghostwheel.logging\",\"clog\",\"ghostwheel.logging/clog\",-1062332663,null),null,(1),null)),(new cljs.core.List(null,expr,null,(1),null)))));\n}\n});\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"docstring\",\"docstring\",879233117),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Keyword(null,\"docstring\",\"docstring\",879233117),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"docstring\",\"docstring\",879233117),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.simple_symbol_QMARK_,cljs.spec.alpha.maybe_impl(cljs.core.string_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.maybe_impl(cljs.core.map_QMARK_,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),cljs.spec.alpha.rep_PLUS_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)], null),null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)))], null))], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555))))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"ghostwheel.core\",\">defn\",\"ghostwheel.core/>defn\",429050871,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),null,null),new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"ghostwheel.core\",\">defn-\",\"ghostwheel.core/>defn-\",1940929029,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),null,null),new cljs.core.Keyword(\"ghostwheel.core\",\">defn-args\",\"ghostwheel.core/>defn-args\",1037178121),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null))], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\"/\"),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",100665144,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\".\")))))))),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null))),new cljs.core.Keyword(null,\"regex\",\"regex\",939488856),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"regex\",\"regex\",939488856)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null))], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\"/\"),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",100665144,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\".\")))))))),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null))),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null))], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\"/\"),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",100665144,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\".\")))))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null], null), null),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\"/\"),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",100665144,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\".\")))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,(function (p1__78905_SHARP_){\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__78905_SHARP_);\nreturn ((clojure.string.includes_QMARK_(s,\"/\")) || ((!(clojure.string.includes_QMARK_(s,\".\")))));\n})], null),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",-1971828991,null),new cljs.core.Symbol(null,\"p1__78905#\",\"p1__78905#\",1368166093,null))], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",1201033885,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\"/\"),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",100665144,null),cljs.core.list(new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null),\".\"))))))], null))], null),null),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null], null), null),cljs.core.symbol_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null)], null))], null),null),cljs.core.regexp_QMARK_], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"single\",\"single\",1551466437),new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550),new cljs.core.Keyword(null,\"multi\",\"multi\",-190293005),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550)))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"single\",\"single\",1551466437),new cljs.core.Keyword(null,\"multi\",\"multi\",-190293005)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550)),cljs.spec.alpha.rep_PLUS_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550),new cljs.core.Keyword(\"ghostwheel.core\",\"check-target\",\"ghostwheel.core/check-target\",1695676550)),null,null)], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"ghostwheel.core\",\"check\",\"ghostwheel.core/check\",1260630286,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972)))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972)),cljs.spec.alpha.maybe_impl(new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972),new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972)),null,null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",-707298191,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"?\",\"cljs.spec.alpha/?\",1605136319,null),new cljs.core.Keyword(\"ghostwheel.core\",\"check-targets\",\"ghostwheel.core/check-targets\",889192972))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"ghostwheel.core\",\">fdef-args\",\"ghostwheel.core/>fdef-args\",1116814851),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)))))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null)),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"bs\",\"bs\",1748393559)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,cljs.core.qualified_keyword_QMARK_], null),null),cljs.spec.alpha.alt_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),cljs.spec.alpha.rep_PLUS_impl(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq_QMARK_,new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)], null),null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555)))], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null)),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt\",\"cljs.spec.alpha/alt\",-2130750332,null),new cljs.core.Keyword(null,\"arity-1\",\"arity-1\",105892478),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555),new cljs.core.Keyword(null,\"arity-n\",\"arity-n\",-1049811975),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"+\",\"cljs.spec.alpha/+\",2101263265,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Keyword(\"ghostwheel.core\",\"args+gspec+body\",\"ghostwheel.core/args+gspec+body\",1576771555))))], null))], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"ghostwheel.core\",\">fdef\",\"ghostwheel.core/>fdef\",2103584527,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"ghostwheel.core\",\">fdef-args\",\"ghostwheel.core/>fdef-args\",1116814851)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"ghostwheel.core\",\">fdef-args\",\"ghostwheel.core/>fdef-args\",1116814851),new cljs.core.Keyword(\"ghostwheel.core\",\">fdef-args\",\"ghostwheel.core/>fdef-args\",1116814851),null,null),new cljs.core.Keyword(\"ghostwheel.core\",\">fdef-args\",\"ghostwheel.core/>fdef-args\",1116814851),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","ghostwheel/core.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",20],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$>defn-",["^ ","~:arglists",["~#list",[["~$name","~$doc-string?","~$attr-map?",["~$params*"],"~$gspec","~$prepost-map?","~$body?"],["^S","^T","^U",["^R",[["^V"],"^W","^X","^Y"]],"~$+","^U"]]],"~:doc","Like defn-, but requires a (nilable) gspec definition and generates\n  additional `s/fdef`, generative tests, instrumentation code, an\n  fspec-based stub, and/or tracing code, depending on the configuration\n  metadata and the existence of a valid gspec and non-nil body.","^7",1263,"^8",1,"^6","ghostwheel/core.cljc","~:name","~$ghostwheel.core/>defn-","~:ns","~$ghostwheel.core","~:macro",true],"~$|>",["^ ","^Q",["^R",[["~$expr"]]],"^Z","Traces or logs+returns the wrapped expression, depending on its type","^7",1353,"^8",1,"^6","ghostwheel/core.cljc","^[","~$ghostwheel.core/|>","^11","^12","^13",true],"~$>fdef",["^ ","^Q",["^R",[["^S",["^V"],"^W"],["^S",["^R",[["^V"],"^W"]],"~$+"]]],"^Z","Defines an fspec using gspec syntax – pretty much a `>defn` without the body.\n\n  `name` can be a symbol or a qualified keyword, depending on whether the\n  fspec is meant to be registered as a top-level fspec (=> s/fdef fn-sym\n  ...) or used in other specs (=> s/def ::spec-keyword (s/fspec ...)).\n\n  When defining global fspecs, instrumentation can be directly enabled by\n  setting the `^::g/instrument` or `^::g/outstrument` metadata on the symbol.","^7",1336,"^8",1,"^6","ghostwheel/core.cljc","^[","~$ghostwheel.core/>fdef","^11","^12","^13",true],"~$check",["^ ","^Q",["^R",[[],["~$ns-regex-or-quoted-ns-or-fn"],[["~$ns-regex-or-quoted-ns-or-fn+"]]]],"^Z","Runs Ghostwheel checks on the given namespaces and/or functions.\n  Checks the current namespace if called without arguments.","^7",1309,"^8",1,"^6","ghostwheel/core.cljc","^[","~$ghostwheel.core/check","^11","^12","^13",true],"~$tr",["^ ","^Q",["^R",[["^15"]]],"^Z","Alias for |>","^7",1361,"^8",1,"^6","ghostwheel/core.cljc","^[","~$ghostwheel.core/tr","^11","^12","^13",true],"~$?",["^ ","^Q",["^R",[["~$&","~$forms"]]],"^7",116,"^8",1,"^6","ghostwheel/core.cljc","^[","~$ghostwheel.core/?","^11","^12","^13",true],"~$>defn",["^ ","^Q",["^R",[["^S","^T","^U",["^V"],"^W","^X","^Y"],["^S","^T","^U",["^R",[["^V"],"^W","^X","^Y"]],"~$+","^U"]]],"^Z","Like defn, but requires a (nilable) gspec definition and generates\n  additional `s/fdef`, generative tests, instrumentation code, an\n  fspec-based stub, and/or tracing code, depending on the configuration\n  metadata and the existence of a valid gspec and non-nil body.","^7",1246,"^8",1,"^6","ghostwheel/core.cljc","^[","~$ghostwheel.core/>defn","^11","^12","^13",true],"~$after-check",["^ ","^Q",["^R",[["~$&","~$callbacks"]]],"^Z","Takes a number of 0-arity functions to run\n  after all checks are completed successfully.\n\n  Meant to be used in a hot-reloading environment by putting it at the bottom\n  of a `(g/check)`-ed namespace and calling `ghostwheel.core/after-check-async`\n  correctly in the build system post-reload hooks.","^7",1277,"^8",1,"^6","ghostwheel/core.cljc","^[","~$ghostwheel.core/after-check","^11","^12","^13",true]],"^[","^12","~:op","^11","~:imports",null,"~:requires",["^ ","~$t","^A","^>","^?","~$ost","~$orchestra-cljs.spec.test","~$u","~$ghostwheel.utils","^1J","^1J","^1K","^1K","~$r","~$ghostwheel.reporting","~$expound.alpha","^1M","^C","^C","^@","^A","~$clojure.test.check.generators","^1N","^A","^A","~$goog","^1O","^D","^E","~$walk","~$clojure.walk","~$cljs.analyzer.api","^1R","~$gen","^G","~$clojure.test.check","^1T","~$clojure.set","^1U","~$exp","^1M","~$s","^?","~$string","~$clojure.string","~$l","~$ghostwheel.logging","~$ghostwheel.threading-macros","^1Z","~$clojure.test.check.properties","^1[","^1Y","^1Y","^F","^G","~$ghostwheel.unghost","^20","^E","^E","^1X","^1X","~$st","^E","^?","^?","^1Q","^1Q","^G","^G","^1L","^1L","~$ana-api","^1R"],"~:seen",["^N",["~:require","~:require-macros"]],"~:uses",["^ ","~$union","^1U","~$difference","^1U","~$map-invert","^1U","~$clean-defn","^20","~$cljs-env?","^1K","~$clj->cljs","^1K"],"^25",["^ ","~$t","^A","^>","^?","^1I","^1J","~$u","^1K","^1J","^1J","^1K","^1K","^C","^C","^@","^A","^1N","^1N","^A","^A","^D","^E","^1S","^G","~$s","^?","^12","^12","^1Z","^1Z","^1[","^1[","^F","^G","^E","^E","^21","^E","^?","^?","^G","^G"],"~:form",["^R",["~$ns","^12",["^R",["^25","^12"]],["^R",["^24",["^1X","~:as","^1W"],["^1U","~:refer",["^27","^28","^29"]],["^1Q","^2?","^1P"],["^@","^2?","~$t"],["^1T"],["^1N"],["^1["],["^>","^2?","~$s"],["^D","^2?","^21"],["^F","^2?","^1S"],["^1L","^2?","~$r"],["^20","^2@",["^2:"]],["^1K","^2?","~$u","^2@",["^2;","^2<"]],["^1Y","^2?","~$l"],["^1Z","~:include-macros",true],["^1M","^2?","^1V"],["^1R","^2?","^22"],["^1J","^2?","^1I"]]]]],"~:flags",["^ ","^25",["^N",[]],"^24",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^1O","^C","^1X","^1U","^1Q","^A","^1T","^1N","^1[","^?","^E","^G","^1L","^20","^1K","^1Y","^1Z","^1M","^1R","^1J"]],"^11","^12","~:resource-id",["~:shadow.build.classpath/resource","ghostwheel/core.cljc"],"~:compiled-at",1630228762398,"~:resource-name","ghostwheel/core.cljc","~:warnings",[],"~:source",";; Copyright (c) George Lipov. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 2.0 (https://choosealicense.com/licenses/epl-2.0/)\n;; which can be found in the file LICENSE at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n\n(ns ghostwheel.core\n  #?(:cljs (:require-macros ghostwheel.core))\n  (:require [clojure.string :as string]\n            [clojure.set :refer [union difference map-invert]]\n            [clojure.walk :as walk]\n            [clojure.test :as t]\n            [clojure.test.check]\n            [clojure.test.check.generators]\n            [clojure.test.check.properties]\n            [clojure.spec.alpha :as s]\n            [clojure.spec.test.alpha :as st]\n            [clojure.spec.gen.alpha :as gen]\n            [ghostwheel.reporting :as r]\n            [ghostwheel.unghost :refer [clean-defn]]\n            [ghostwheel.utils :as u :refer [cljs-env? clj->cljs]]\n            [ghostwheel.logging :as l]\n            [ghostwheel.threading-macros :include-macros true]\n            [expound.alpha :as exp]\n   ;; REVIEW: Not requiring the clojure.core.specs.alpha\n   ;; namespaces for now because they break a lot\n   ;; of older code including lein-figwheel <0.5.18\n            #?@(:clj  [;[clojure.core.specs.alpha]\n                       [orchestra.spec.test :as ost]]\n                :cljs [;[cljs.core.specs.alpha :include-macros true]\n                       [cljs.analyzer.api :as ana-api]\n                       [orchestra-cljs.spec.test :as ost]])))\n\n\n;; REVIEW: Replace this pattern:\n;; `(let [fn-name (fn  ...)] (defn ...))` with\n;; `letfn` when the ClojureScript bug is fixed:\n;; https://dev.clojure.org/jira/browse/CLJS-1965\n\n\n;;;; Global vars and state\n\n\n;; This isn't particularly pretty, but it's how we avoid\n;; having ClojureScript as a required dependency on Clojure\n#?(:clj (try\n          (do\n            (ns-unalias (find-ns 'ghostwheel.core) 'ana-api)\n            (require '[cljs.analyzer.api :as ana-api]))\n          (catch Exception _ (require '[ghostwheel.stubs.ana-api :as ana-api]))))\n\n\n(when-let [expound-cfg (::expound (u/get-base-config false))]\n  #?(:clj  (alter-var-root #'s/*explain-out* (constantly (exp/custom-printer expound-cfg)))\n     :cljs (set! s/*explain-out* (exp/custom-printer expound-cfg))))\n\n\n(def ^:private test-suffix \"__ghostwheel-test\")\n(def ^:private *after-check-callbacks (atom []))\n(def ^:private ^:dynamic *unsafe-bound-ops* #{})\n\n\n(def ^:dynamic *global-trace-allowed?* true)\n(def ^:dynamic *global-check-allowed?* true)          ; REVIEW: Is anyone using this?\n\n\n;;;; Misc helper functions\n\n\n(defn- set-trace [enabled]\n  #?(:clj  (alter-var-root #'*global-trace-allowed?* (constantly enabled))\n     :cljs (set! *global-trace-allowed?* enabled)))\n\n\n(defn enable-trace! [] (set-trace true) \"Tracing enabled.\")\n(defn disable-trace! [] (set-trace false) \"Tracing disabled.\")\n\n\n(defn- set-check [enabled]\n  #?(:clj  (alter-var-root #'*global-check-allowed?* (constantly enabled))\n     :cljs (set! *global-check-allowed?* enabled)))\n\n\n(defn enable-check! [] (set-check true) \"Check enabled.\")\n(defn disable-check! [] (set-check false) \"Check disabled.\")\n\n\n(defn- count-args\n  \"Returns a tuple with the number of regular and non-variadic arguments.\"\n  [conformed-args]\n  [(count (:args conformed-args))\n   (if (:varargs conformed-args) 1 0)])\n\n\n(defn- resolve-trace-color [color]\n  (let [[color-type color-value] (s/conform ::trace-color color)]\n    (case color-type\n      :literal color-value\n      :keyword (if-let [color-value (get l/ghostwheel-colors color)]\n                 color-value\n                 (:black l/ghostwheel-colors)))))\n\n;;;; Operators\n\n\n;; It doesn't actually matter what these are bound to, they are stripped by\n;; the macros they're used in and never end up in the final code. This is just\n;; so they can be used without '=> cannot be resolved' errors in the IDE.\n(def => :ret)\n(def | :st)\n(def <- :gen)\n\n\n(defmacro ? [& forms]\n  (cond-> `(s/nilable ~@forms)\n          (cljs-env? &env) clj->cljs))\n\n\n;;;; Specs\n\n\n(s/def ::trace #{0 1 2 3 4 5 6 true})\n(s/def ::trace-color (s/or :keyword keyword?\n                           :literal (s/and string?\n                                           #(re-matches #\"#[a-fA-F0-9]+\" %)\n                                           #(or (= (count %) 7)\n                                                (= (count %) 4)))))\n(s/def ::check boolean?)\n(s/def ::check-coverage boolean?)\n(s/def ::ignore-fx boolean?)\n(s/def ::num-tests nat-int?)\n(s/def ::num-tests-ext nat-int?)\n(s/def ::extensive-tests boolean?)\n(s/def ::defn-macro (s/nilable string?))\n(s/def ::instrument boolean?)\n(s/def ::outstrument boolean?)\n(s/def ::extrument (s/nilable (s/coll-of qualified-symbol? :kind vector?)))\n(s/def ::expound (s/nilable (s/map-of keyword? any?)))\n(s/def ::report-output #{:repl :js-console})\n\n;; TODO: Integrate bhauman/spell-spec\n(s/def ::ghostwheel-config\n  (s/and (s/keys :req [::trace ::trace-color ::check ::check-coverage ::ignore-fx\n                       ::num-tests ::num-tests-ext ::extensive-tests ::defn-macro\n                       ::instrument ::outstrument ::extrument ::expound ::report-output])))\n\n(s/assert ::ghostwheel-config u/ghostwheel-default-config)\n;; TODO: Add check to make sure instrument and outstrument aren't both on\n\n\n;; These are lifted straight from clojure.core.specs.alpha, because it\n;; didn't seem possible to access them directly in the original namespace.\n\n(s/def ::local-name (s/and simple-symbol? #(not= '& %)))\n\n;; sequential destructuring\n\n(s/def ::seq-binding-form\n  (s/and vector?\n         (s/cat :elems (s/* ::binding-form)\n                :rest (s/? (s/cat :amp #{'&} :form ::binding-form))\n                :as (s/? (s/cat :as #{:as} :sym ::local-name)))))\n\n;; map destructuring\n\n(s/def ::keys (s/coll-of ident? :kind vector?))\n(s/def ::syms (s/coll-of symbol? :kind vector?))\n(s/def ::strs (s/coll-of simple-symbol? :kind vector?))\n(s/def ::or (s/map-of simple-symbol? any?))\n(s/def ::as ::local-name)\n\n(s/def ::map-special-binding\n  (s/keys :opt-un [::as ::or ::keys ::syms ::strs]))\n\n(s/def ::map-binding (s/tuple ::binding-form any?))\n\n(s/def ::ns-keys\n  (s/tuple\n   (s/and qualified-keyword? #(-> % name #{\"keys\" \"syms\"}))\n   (s/coll-of simple-symbol? :kind vector?)))\n\n(s/def ::map-bindings\n  (s/every (s/or :mb ::map-binding\n                 :nsk ::ns-keys\n                 :msb (s/tuple #{:as :or :keys :syms :strs} any?))\n           :into {}))\n\n(s/def ::map-binding-form (s/merge ::map-bindings ::map-special-binding))\n\n(s/def ::binding-form\n  (s/or :sym ::local-name\n        :seq ::seq-binding-form\n        :map ::map-binding-form))\n\n;;; Function and >defn specs\n\n(s/def ::arg-list\n  (s/and vector?\n         (s/cat :args (s/* ::binding-form)\n                :varargs (s/? (s/cat :amp #{'&} :form ::binding-form)))))\n\n(s/def ::pred-arg-list\n  (s/and vector?\n         (s/cat :args (s/* (s/or :sym ::local-name)))))\n\n(s/def ::anon-args+body\n  (s/cat :args ::arg-list\n         :body (s/* any?)))\n\n(s/def ::anon-fn\n  (s/and seq?\n         (s/cat :op #{'fn* 'fn}\n                :name (s/? simple-symbol?)\n                :bs (s/alt :arity-1 ::anon-args+body\n                           :arity-n (s/+ (s/spec ::anon-args+body))))))\n\n(s/def ::pred-fn\n  (s/and seq?\n         (s/cat :op #{'fn* 'fn}\n                :name (s/? simple-symbol?)\n                :args ::pred-arg-list\n                :body any?)))\n\n(s/def ::spec-elem\n  (s/or :set set?\n        :pred-sym (s/and symbol?\n                         (complement #{'| '=>})\n                         ;; REVIEW: should the `?` be a requirement?\n                         #(string/ends-with? (str %) \"?\"))\n        :gspec (s/or :nilable-gspec ::nilable-gspec :gspec ::gspec)\n        :spec-key qualified-keyword?\n        :fun ::pred-fn\n        :list seq?))\n\n(s/def ::such-that-op #{:st '|})\n(s/def ::ret-op #{:ret '=>})\n(s/def ::gen-op #{:gen '<-})\n\n(s/def ::gspec\n  (s/and vector?\n         (s/cat :args (s/? (s/cat :args (s/+ ::spec-elem)\n                                  :args-such-that (s/? (s/cat :op ::such-that-op\n                                                              :preds (s/+ ::pred-fn)))))\n                :ret-op ::ret-op\n                :ret ::spec-elem\n                :fn-such-that (s/? (s/cat :op ::such-that-op\n                                          :preds (s/+ ::pred-fn)))\n                :gen (s/? (s/cat :op ::gen-op\n                                 :gen-fn (s/? (some-fn seq? symbol?)))))))\n\n(s/def ::nilable-gspec\n  (s/and vector?\n         (s/cat :maybe #{'? 's/nilable}\n                :gspec ::gspec)))\n\n(s/def ::prepost (s/map-of #{:pre :post}\n                           (s/coll-of seq?\n                                      :kind vector?\n                                      :distinct true)))\n\n(s/def ::args+body\n  (s/cat :args ::arg-list\n         :body (s/alt :prepost+body (s/cat :prepost ::prepost\n                                           :body (s/+ any?))\n                      :body (s/* any?))))\n\n(s/def ::args+gspec+body\n  (s/&\n   (s/cat :args ::arg-list\n          :gspec (s/nilable ::gspec)\n          :body (s/alt :prepost+body (s/cat :prepost ::prepost\n                                            :body (s/+ any?))\n                       :body (s/* any?)))\n   (fn arg-specs-match-param-count? [{:keys [args gspec]}]\n     (if-not gspec\n       true\n       (let [argcount  (->> args count-args (apply +))\n             spec-args (:args gspec)]\n         (if spec-args\n           (-> spec-args :args count (= argcount))\n           (= argcount 0)))))))\n\n\n(s/def ::defn\n  (s/and seq?\n         (s/cat :op #{'defn 'defn-}\n                :name simple-symbol?\n                :docstring (s/? string?)\n                :meta (s/? map?)\n                :bs (s/alt :arity-1 ::args+body\n                           :arity-n (s/cat :bodies (s/+ (s/spec ::args+body))\n                                           :attr (s/? map?))))))\n\n\n(s/def ::deftest\n  (s/and seq?\n         (s/cat :op #{'clojure.test/deftest 'cljs.test/deftest}\n                :name symbol?\n                :body any?)))\n\n\n;;; Side effect detection specs\n\n(def threading-macro-syms\n  #{'-> '->> 'as-> 'cond-> 'cond->> 'some-> 'some->>\n    '*-> '*->> '*as-> '*cond-> '*cond->> '*some-> '*some->>})\n\n(s/def ::threading-macro-op threading-macro-syms)\n\n(s/def ::binding-op\n  #{'let 'for 'doseq 'binding})\n\n(s/def ::single-function-composition\n  #{'partial 'fnil})\n\n(s/def ::safe-single-function-composition\n  #{'memoize 'complement})\n\n(s/def ::multi-function-composition\n  #{'comp})\n\n(s/def ::safe-multi-function-composition\n  #{'juxt 'every-pred 'some-fn})\n\n(s/def ::function-application\n  #{'apply 'map 'fmap 'map-indexed 'reduce})\n\n(s/def ::safe-function-application\n  #{'mapcat 'reduce-kv 'mapv 'reductions 'iterate 'keep 'keep-indexed\n    'remove 'filter 'filterv 'take-while 'drop-while\n    'sort 'sort-by 'sorted-map-by 'group-by 'merge-with})\n\n(s/def ::unsafe-clj-block #{'do\n                            'doseq\n                            'dotimes})\n\n;; REVIEW: maybe move the re-frame stuff out of here\n(s/def ::unsafe-clj-call #{'dorun\n                           'repeatedly\n                           'dispatch\n                           'js-delete\n                           'aset})\n\n(s/def ::unsafe-clj-comp\n  (s/alt :single-fn (s/cat :composition (s/alt :generic ::single-function-composition\n                                               :safe ::safe-single-function-composition)\n                           :unsafe-op ::unsafe-op\n                           :rest ::rest)\n         :multi-fn (s/cat :composition (s/alt :generic ::multi-function-composition\n                                              :safe ::safe-multi-function-composition)\n                          :some-unsafe-ops ::some-unsafe-ops\n                          :rest ::rest)))\n\n(let [bang-suffix? #(string/ends-with? (str %) \"!\")]\n  (s/def ::bang-suffix (every-pred symbol? bang-suffix?))\n  (s/def ::unsafe-op\n    (s/alt :bang-suffix ::bang-suffix\n           :unsafe-anon-fn (s/and seq?\n                                  (s/alt :unsafe-body (s/cat :fun #{'fn 'fn*}\n                                                             :name (s/? simple-symbol?)\n                                                             :args ::arg-list\n                                                             :body ::unsafe-form)\n                                         :unsafe-name (s/cat :fun #{'fn 'fn*}\n                                                             :name (every-pred simple-symbol?\n                                                                               bang-suffix?)\n                                                             :args ::arg-list\n                                                             :body any?)))\n           :unsafe-clj-call ::unsafe-clj-call\n           :unsafe-clj-comp (s/spec ::unsafe-clj-comp)\n           :unsafe-bound-call #(contains? *unsafe-bound-ops* %)\n           :multi-form-op (s/cat :op #{'when 'when-not 'when-let 'when-first\n                                       'when-some 'let 'binding}\n                                 :pred-or-bindings any?\n                                 :fx (s/+ any?)\n                                 :return any?))))\n\n(s/def ::safe-op #(not (s/valid? ::unsafe-op (list %))))\n\n(s/def ::some-unsafe-ops (s/+ (s/cat :skipped-ops (s/* ::safe-op)\n                                     :unsafe-op ::unsafe-op)))\n\n(s/def ::rest (s/* any?))\n\n(s/def ::some-unsafe-bindings\n  (s/and vector?\n         (s/+ (s/cat :skipped-bindings (s/* (s/cat :binding ::binding-form\n                                                   :value ::safe-op))\n                     :unsafe-binding (s/cat :binding ::binding-form\n                                            :value ::unsafe-op)))))\n\n(s/def ::unsafe-form\n  ;; REVIEW: maybe make sure we are only matching on the simple symbol part\n  (s/or :unsafe-block (s/and seq?\n                             (s/cat :unsafe-clj-block ::unsafe-clj-block\n                                    :rest ::rest))\n\n        :unsafe-call\n        (s/and seq?\n               (s/alt :direct (s/cat :application\n                                     (s/? (s/alt :generic ::function-application\n                                                 :safe ::safe-function-application))\n                                     :unsafe-op ::unsafe-op\n                                     :rest ::rest)\n                      :threading (s/cat :threading-macro-op ::threading-macro-op\n                                        :threaded-form any?\n                                        :some-unsafe-ops ::some-unsafe-ops\n                                        :rest ::rest)\n                      :update (s/cat :update #{'update 'update-in}\n                                     :map any?\n                                     :path any?\n                                     :unsafe-op ::unsafe-op\n                                     :rest ::rest)))\n\n        :unsafe-composition (s/and seq? ::unsafe-clj-comp)\n        :unsafe-binding (s/and seq?\n                               (s/cat :binding-op ::binding-op\n                                      :bindings ::some-unsafe-bindings\n                                      :rest ::rest))\n        :unsafe-argument (s/and seq?\n                                (s/cat :fun ::safe-op\n                                       :some-unsafe-ops ::some-unsafe-ops\n                                       :rest ::rest))\n        #_::unsafe-something #_(s/spec (s/cat ::some-unsafe-ops ::some-unsafe-ops\n                                              ::rest ::rest))))\n\n\n;;;; Main code generating functions\n\n\n(let [find-fx\n      (fn find-fx [form]\n        (let [maybe-fx           (s/conform ::unsafe-form form)\n              [found-fx\n               unsafe-bindings] (if (= maybe-fx ::s/invalid)\n                                  [nil nil]\n                                  [(conj {} maybe-fx)\n                                   (when (= (key maybe-fx) :unsafe-binding)\n                                     (-> maybe-fx\n                                         val\n                                         :bindings))])\n              ;; TODO implement map and vec destructuring support for bindings\n              unsafe-binding-set (when unsafe-bindings\n                                   (->> unsafe-bindings\n                                        (map #(-> % :unsafe-binding :binding val))\n                                        (set)))]\n          [found-fx (vec\n                     (for [nested-form form\n                           :when (and (coll? nested-form))]\n                       ;; REVIEW go into nested anon-fns or not?\n                       ;(not (contains? #{'fn 'fn*} (first nested-form))))]\n                       (binding [*unsafe-bound-ops* (cond-> *unsafe-bound-ops*\n                                                            unsafe-bindings (union unsafe-binding-set))]\n                         (find-fx nested-form))))]))\n\n      check-arity-fx\n      (fn [unformed-args-gspec-body]\n        (let [effects (->> (find-fx unformed-args-gspec-body)\n                           (flatten)\n                           (remove nil?)\n                           (map first)\n                           (vec))]\n          (-> (for [fx effects]\n                [(-> fx key name keyword)\n                 (->> fx\n                      (s/unform ::unsafe-form)\n                      (apply list)\n                      (str))\n                 (->> fx\n                      val\n                      (walk/postwalk #(if (qualified-keyword? %)\n                                        (keyword (name %))\n                                        %))\n                      vec)])\n              (cond->> (next unformed-args-gspec-body) (cons [:multiple-body-forms])))))]\n  (defn- generate-test [fn-name fspecs body-forms config cljs?]\n    (let [{:keys [::check ::num-tests ::num-tests-ext ::extensive-tests\n                  ::check-coverage ::ignore-fx]}\n          config\n\n          num-tests         (if extensive-tests num-tests-ext num-tests)\n          marked-unsafe     (s/valid? ::bang-suffix fn-name)\n          found-fx          (if ignore-fx\n                              []\n                              (->> (case (key body-forms)\n                                     :arity-1 [(val body-forms)]\n                                     :arity-n (val body-forms))\n                                   (map #(->> % (s/unform ::args+gspec+body) (drop 2)))\n                                   (mapcat check-arity-fx)\n                                   distinct\n                                   vec))\n          unexpected-fx     (boolean (and (not ignore-fx)\n                                          (not marked-unsafe)\n                                          (seq found-fx)))\n          unexpected-safety (boolean (and (not ignore-fx)\n                                          marked-unsafe\n                                          (empty? found-fx)))\n          spec-keyword-ns   (if cljs? 'clojure.test.check 'clojure.spec.test.check)\n          spec-checks       (let [defined-fspecs (->> fspecs (remove nil?) vec)]\n                              (when (and (seq defined-fspecs)\n                                         (not marked-unsafe)\n                                         (empty? found-fx)\n                                         (> num-tests 0))\n                                `(for [spec# ~defined-fspecs]\n                                   (st/check-fn\n                                    ~fn-name\n                                    spec#\n                                    {~(keyword (str spec-keyword-ns) \"opts\")\n                                     {:num-tests ~num-tests}}))))]\n      [unexpected-fx\n       `(t/deftest ~(symbol (str fn-name test-suffix))\n          (let [spec-checks# ~spec-checks]\n            ;; TODO The `spec-checks#` thing trips up clairvoyant\n            ;; and prevents tracing during ghostwheel development\n            (t/is (and (every? #(-> %\n                                    ~(keyword (str spec-keyword-ns) \"ret\")\n                                    :pass?)\n                               spec-checks#)\n                       ~(not unexpected-fx)\n                       ~(not unexpected-safety))\n                  {::r/fn-name        (quote ~fn-name)\n                   ::r/fspec          ~(every? some? fspecs)\n                   ::r/spec-checks    spec-checks#\n                   ::r/check-coverage ~check-coverage\n                   ::r/failure        ~(cond unexpected-fx ::r/unexpected-fx\n                                             unexpected-safety ::r/unexpected-safety\n                                             :else ::r/spec-failure)\n                   ::r/found-fx       (quote ~found-fx)\n                   ::r/marked-unsafe  ~marked-unsafe})))])))\n\n\n(defn- unscrew-vec-unform\n  \"Half-arsed workaround for spec bugs CLJ-2003 and CLJ-2021.\"\n  [unformed-arg]\n  (if-not (sequential? unformed-arg)\n    unformed-arg\n    (let [malformed-seq-destructuring? (every-pred seq? (comp #{:as '&} first))\n          [unformed malformed] (split-with (complement malformed-seq-destructuring?) unformed-arg)]\n      (vec (concat unformed (apply concat malformed))))))\n\n\n(defn- gspec->fspec*\n  [conformed-arg-list conformed-gspec anon-fspec? multi-arity-args? nilable?]\n  (let [{argspec-def              :args\n         retspec                  :ret\n         fn-such-that             :fn-such-that\n         {:keys [gen-fn] :as gen} :gen}\n        conformed-gspec]\n    (if (and anon-fspec?\n             argspec-def\n             (not gen)\n             (some #{'any?} (-> argspec-def :args vals)))\n      (if nilable? `(s/nilable ifn?) `ifn?)\n      (let [extract-spec\n            (fn extract-spec [[spec-type spec]]\n              (if (= spec-type :gspec)\n                (if (= (key spec) :nilable-gspec)\n                  (gspec->fspec* nil (-> spec val :gspec) true false true)\n                  (gspec->fspec* nil (val spec) true false false))\n                spec))\n\n            named-conformed-args\n            (when argspec-def\n              (let [all-args     (remove nil? (concat (:args conformed-arg-list)\n                                                      [(-> conformed-arg-list :varargs :form)]))\n                    gen-arg-name (fn [index] (str \"arg\" (inc index)))\n                    gen-name     (fn [index [arg-type arg :as full-arg]]\n                                   (let [arg-name (if-not arg-type\n                                                    (gen-arg-name index)\n                                                    (case arg-type\n                                                      :sym arg\n                                                      :seq (or (-> arg :as :sym)\n                                                               (gen-arg-name index))\n                                                      :map (or (-> arg :as)\n                                                               (gen-arg-name index))))]\n                                     [(keyword arg-name) full-arg]))]\n                (map-indexed gen-name (or (seq all-args)\n                                          (-> argspec-def :args count (repeat nil))))))\n\n            arg-binding-map\n            (if-not conformed-arg-list\n              {}\n              (if (every? #(= (-> % second key) :sym) named-conformed-args)\n                `{:keys ~(vec (map #(-> % first name symbol) named-conformed-args))}\n                (->> named-conformed-args\n                     (map (fn [[arg-key conformed-arg]]\n                            [(->> conformed-arg (s/unform ::binding-form) unscrew-vec-unform)\n                             arg-key]))\n                     (into {}))))\n\n            process-arg-pred\n            (fn process-arg-pred [{:keys [name args body]}]\n              (let [bindings (if-let [anon-arg (some-> args :args first second)]\n                               (assoc arg-binding-map :as anon-arg)\n                               arg-binding-map)]\n                (remove nil? `(fn ~name [~bindings] ~body))))\n\n            processed-args\n            (if-not argspec-def\n              `(s/cat)\n              (let [wrapped-params (->> argspec-def\n                                        :args\n                                        (map extract-spec)\n                                        (interleave (map first named-conformed-args))\n                                        (cons `s/cat))]\n                (if-let [args-such-that (:args-such-that argspec-def)]\n                  (->> args-such-that\n                       :preds\n                       (map process-arg-pred)\n                       (list* `s/and wrapped-params))\n                  wrapped-params)))\n\n            process-ret-pred\n            (fn process-ret-pred [{:keys [name args body]}]\n              (let [anon-arg       (some-> args :args first second)\n                    ret-sym        (gensym \"ret__\")\n                    bindings       [{(if multi-arity-args?\n                                       ['_ arg-binding-map]\n                                       arg-binding-map) :args\n                                     ret-sym            :ret}]\n                    processed-body (if anon-arg\n                                     (walk/postwalk-replace {anon-arg ret-sym} body)\n                                     body)]\n                (remove nil? `(fn ~name ~bindings ~processed-body))))\n\n            fn-spec\n            (when fn-such-that\n              (let [processed-ret-preds (map process-ret-pred (:preds fn-such-that))]\n                (if (next processed-ret-preds)\n                  (cons `s/and processed-ret-preds)\n                  (first processed-ret-preds))))\n\n            final-fspec\n            (concat (when anon-fspec? [`s/fspec])\n                    [:args processed-args]\n                    [:ret (extract-spec retspec)]\n                    (when fn-spec [:fn fn-spec])\n                    (when gen-fn [:gen gen-fn]))]\n        (if nilable? `(s/nilable ~final-fspec) final-fspec)))))\n\n\n;; TODO make sure we check whether the variadic bodies are legit\n;; Can not have more than one\n;; Can not have one with more regular args than the variadic one\n;; To what extent does the compiler already check this?\n(let [get-fspecs    (fn [fn-body]\n                      (let [[param-count variadic] (-> fn-body :args count-args)\n                            gspec (or (:gspec fn-body)\n                                      (s/conform ::gspec\n                                                 (vec (concat (repeat param-count 'any?)\n                                                              (when (> variadic 0)\n                                                                `[(s/* any?)])\n                                                              '[=> any?]))))]\n                        [(->> (if (> variadic 0) \"n\" param-count)\n                              (str \"arity-\")\n                              keyword)\n                         (gspec->fspec* (:args fn-body) gspec false true false)]))\n      get-spec-part (fn [part spec]\n                      (->> spec\n                           (drop-while (complement #{part}))\n                           second))]\n  (defn- generate-fspec-body [fn-bodies]\n    (case (key fn-bodies)\n      :arity-1\n      (when-let [gspec (-> fn-bodies val :gspec)]\n        (gspec->fspec* (-> fn-bodies val :args) gspec false false false))\n\n      :arity-n\n      (when (some :gspec (val fn-bodies))\n        (let [fspecs           (map get-fspecs (val fn-bodies))\n              arg-specs        (mapcat (fn [[arity spec]]\n                                         [arity (or (get-spec-part :args spec) `empty?)])\n                                       fspecs)\n              fn-param         (gensym \"p1__\")\n              multi-ret-specs  (when (->> fspecs\n                                          (map #(get-spec-part :ret (second %)))\n                                          distinct\n                                          count\n                                          (not= 1))\n                                 (mapcat (fn [[arity spec]]\n                                           [arity `(s/valid? ~(get-spec-part :ret spec)\n                                                             (:ret ~fn-param))])\n                                         fspecs))\n              get-fn-clause    (partial get-spec-part :fn)\n              fn-specs         (when (->> fspecs (map second) (some get-fn-clause))\n                                 (mapcat (fn [[arity spec]]\n                                           [arity (if-let [fn-spec (get-fn-clause spec)]\n                                                    `(s/valid? ~fn-spec ~fn-param)\n                                                    true)])\n                                         fspecs))\n              ;; NOTE: destructure args and ret in the arg vec\n              multi-ret-clause (when multi-ret-specs\n                                 `(fn ~'valid-multi-arity-ret? [~fn-param]\n                                    (case (-> ~fn-param :args key)\n                                      ~@multi-ret-specs)))\n              multi-fn-clause  (when fn-specs\n                                 `(fn ~'valid-multi-arity-fn? [~fn-param]\n                                    (case (-> ~fn-param :args key)\n                                      ~@fn-specs)))]\n          ;; Using s/or here even though s/alt seems to be more common\n          ;; for multi-arity specs in the wild. The spec error reporting\n          ;; is much better and it's immediately clear what didn't match.\n          (concat [:args `(s/or ~@arg-specs)]\n                  (when-not multi-ret-clause\n                    [:ret (get-spec-part :ret (-> fspecs first second))])\n                  (when (or multi-ret-clause multi-fn-clause)\n                    [:fn (if multi-fn-clause\n                           (if multi-ret-clause\n                             `(s/and ~multi-ret-clause ~multi-fn-clause)\n                             multi-fn-clause)\n                           multi-ret-clause)])))))))\n\n\n(def ^:private spec-op->type\n  (let [map-prot     \"cljs.core.IMap\"\n        coll-prot    \"cljs.core.ICollection\"\n        ;; Needed because Closure compiler/JS doesn't consider strings seqable\n        seqable-prot \"(cljs.core.ISeqable|string)\"]\n    {'number?      \"number\"\n     'integer?     \"number\"\n     'int?         \"number\"\n     'nat-int?     \"number\"\n     'pos-int?     \"number\"\n     'neg-int?     \"number\"\n     'float?       \"number\"\n     'double?      \"number\"\n     'int-in       \"number\"\n     'double-in    \"number\"\n\n     'string?      \"string\"\n\n     'boolean?     \"boolean\"\n\n     'keys         map-prot\n     'map-of       map-prot\n     'map?         map-prot\n     'merge        map-prot\n\n     'set?         \"cljs.core.ISet\"\n     'vector?      \"cljs.core.IVector\"\n     'tuple        \"cljs.core.IVector\"\n     'seq?         \"cljs.core.ISeq\"\n     'seqable?     seqable-prot\n     'associative? \"cljs.core.IAssociative\"\n     'atom?        \"cljs.core.IAtom\"\n\n     'coll-of      coll-prot\n     'every        coll-prot\n\n     'keyword?     \"cljs.core.Keyword\"\n     'ifn?         \"cljs.core.IFn\"\n     'fn?          \"Function\"}))\n\n\n(declare get-gspec-type)\n\n\n(defn- get-type [recursive-call conformed-spec-elem]\n  (let [[spec-type spec-def] conformed-spec-elem\n\n        spec-op\n        ;; REVIEW: This kinda wants to be a multi-method when it grows up.\n        (case spec-type\n          :list (let [op (-> spec-def first name symbol)]\n                  (cond\n                    (#{'nilable '?} op) (concat (->> spec-def\n                                                     second\n                                                     (s/conform ::spec-elem)\n                                                     (get-type true))\n                                                [::nilable])\n                    (#{'* '+} op) (concat (->> spec-def\n                                               second\n                                               (s/conform ::spec-elem)\n                                               (get-type true))\n                                          [::variadic])\n                    (#{'and} op) [(-> spec-def second)] ; TODO\n                    (#{'coll-of 'every} op) [(or (->> spec-def\n                                                      (drop-while (complement #{:kind}))\n                                                      second)\n                                                 op)]\n                    :else [op]))\n          ;;TODO support (some-fn and (s/or\n          :gspec (let [gspec-def (val spec-def)]\n                   (if (= (key spec-def) :nilable-gspec)\n                     [(get-gspec-type (:gspec gspec-def)) ::nilable]\n                     [(get-gspec-type gspec-def)]))\n          :pred-sym [spec-def]\n          [nil])]\n    (if recursive-call\n      spec-op\n      (if-let [js-type (spec-op->type (first spec-op))]\n        (let [modifiers (set (rest spec-op))]\n          (as-> js-type t\n                (str (if (::nilable modifiers) \"?\" \"!\") t)\n                (str (when (::variadic modifiers) \"...\") t)))\n        \"*\"))))\n\n\n(defn- get-gspec-type [conformed-gspec]\n  (let [argspec-def (:args conformed-gspec)\n        args-jstype (if-not argspec-def\n                      \"\"\n                      (->> (-> conformed-gspec :args :args)\n                           (map (partial get-type false))\n                           (string/join \", \")))\n        ret-jstype  (get-type false (:ret conformed-gspec))]\n    (str \"function(\" args-jstype \"): \" ret-jstype)))\n\n\n(defn- generate-type-annotations [env conformed-bs]\n  (when (cljs-env? env)\n    (case (key conformed-bs)\n      :arity-1 (when-let [gspec (-> conformed-bs val :gspec)]\n                 {:jsdoc [(str \"@type {\" (get-gspec-type gspec) \"}\")]})\n      ;; REVIEW: There doesn't seem to be a way to get valid annotations for args of\n      ;; multi-arity functions and attempts to just annotate the return value(s) failed\n      ;; as well. It wasn't possible to put together an annotation which was both\n      ;; considered valid and resulted in a successful type check.\n      :arity-n nil #_(when-let [ret-types (as-> (val conformed-bs) x\n                                                (map #(get-type false (-> % :gspec :ret)) x)\n                                                (distinct x)\n                                                (when (not-any? #{\"*\" \"?\"} x) x))]\n                       {:jsdoc [(str \"@return {\" (string/join \"|\" ret-types) \"}\")]}))))\n\n\n(defn- merge-config [metadata]\n  (s/assert ::ghostwheel-config\n            (->> (merge (u/get-base-config)\n                        (meta *ns*)\n                        metadata)\n                 (filter #(= (-> % key namespace) (name `ghostwheel.core)))\n                 (into {}))))\n\n\n(defn- get-quoted-qualified-fn-name [fn-name]\n  `(quote ~(symbol (str (.-name *ns*)) (str fn-name))))\n\n\n(defn- trace-threading-macros [forms trace]\n  (if (< trace 4)\n    forms\n    (let [threading-macros-mappings\n          {'->      'ghostwheel.threading-macros/*->\n           '->>     'ghostwheel.threading-macros/*->>\n           'as->    'ghostwheel.threading-macros/*as->\n           'cond->  'ghostwheel.threading-macros/*cond->\n           'cond->> 'ghostwheel.threading-macros/*cond->>\n           'some->  'ghostwheel.threading-macros/*some->\n           'some->> 'ghostwheel.threading-macros/*some->>}]\n      (cond->> (walk/postwalk-replace threading-macros-mappings forms)\n\n               ;; Make sure we don't trace threading macros in anon-fns\n               ;; when anon-fns themselves aren't traced\n               (< trace 5)\n               (walk/postwalk\n                #(if (and (list? %)\n                          (#{'fn 'fn*} (first %)))\n                   (walk/postwalk-replace (map-invert threading-macros-mappings) %)\n                   %))))))\n\n\n(defn- clairvoyant-trace [forms trace color env]\n  (let [clairvoyant   'clairvoyant.core/trace-forms\n        tracer        'ghostwheel.tracer/tracer\n        exclude       (case trace\n                        2 '#{'fn 'fn* 'let}\n                        3 '#{'fn 'fn*}\n                        4 '#{'fn 'fn*}\n                        nil)\n        inline-trace? (fn [form]\n                        (and (seq? form)\n                             (symbol? (first form))\n                             (let [sym (first form)\n\n                                   qualified-sym\n                                       (if (cljs-env? env)\n                                         (:name (ana-api/resolve env sym))\n                                         ;; REVIEW: Clairvoyant doesn't work on\n                                         ;; Clojure yet – check this when it does\n                                         #?(:clj (name (resolve sym))))]\n                               (contains? #{'ghostwheel.core/|> 'ghostwheel.core/tr} qualified-sym))))\n        forms         (walk/postwalk\n                       #(if (inline-trace? %) (second %) %)\n                       forms)]\n    ;; REVIEW: This doesn't quite work right and seems to cause issues for some people. Disabling for now.\n    (comment\n     #?(:clj (if cljs?\n               (when-not (and (find-ns (symbol (namespace clairvoyant)))\n                              (find-ns (symbol (namespace tracer))))\n                 (throw (Exception. \"Can't find tracing namespaces. Either add `gnl/ghostwheel-tracer` artifact and `(:require [ghostwheel.tracer])`, or disable tracing in order to compile.\")))\n               (throw (Exception. \"Tracing is not yet implemented for Clojure.\")))))\n    (if (< trace 2)\n      forms\n      `(~clairvoyant\n        {:enabled true\n         :tracer  (~tracer\n                   :color \"#fff\"\n                   :background ~color\n                   :expand ~(cond (= trace 6) '#{:bindings 'let 'defn 'defn- 'fn 'fn*}\n                                  (>= trace 3) '#{:bindings 'let 'defn 'defn-}\n                                  :else '#{'defn 'defn-}))\n         :exclude ~exclude}\n        ~forms))))\n\n\n(defn- generate-fdef\n  [forms]\n  (let [{[type fn-name] :name bs :bs} (s/conform ::>fdef-args forms)]\n    (case type\n      :sym (let [quoted-qualified-fn-name (get-quoted-qualified-fn-name fn-name)\n                 {:keys [::instrument ::outstrument]} (merge-config (meta fn-name))\n                 instrumentation          (cond outstrument `(ost/instrument ~quoted-qualified-fn-name)\n                                                instrument `(st/instrument ~quoted-qualified-fn-name)\n                                                :else nil)\n                 fdef                     `(s/fdef ~fn-name ~@(generate-fspec-body bs))]\n             (if instrumentation\n               `(do ~fdef ~instrumentation)\n               fdef))\n      :key `(s/def ~fn-name (s/fspec ~@(generate-fspec-body bs))))))\n\n\n(defn- process-defn-body\n  [cfg fspec args+gspec+body]\n  (let [{:keys [env fn-name traced-fn-name trace color unexpected-fx]} cfg\n        {:keys [args body]} args+gspec+body\n        [prepost orig-body-forms] (case (key body)\n                                    :prepost+body [(-> body val :prepost)\n                                                   (-> body val :body)]\n                                    :body [nil (val body)])\n        process-arg (fn [[arg-type arg]]\n                      (as-> arg arg\n                            (case arg-type\n                              :sym [arg-type arg]\n                              :seq [arg-type (update arg :as #(or % {:as :as :sym (gensym \"arg_\")}))]\n                              :map [arg-type (update arg :as #(or % (gensym \"arg_\")))])))\n        ;; NOTE: usage of extract-arg isn't elegant, there's duplication, refactor\n        extract-arg (fn [[arg-type arg]]\n                      (case arg-type\n                        :sym arg\n                        :seq (get-in arg [:as :sym])\n                        :map (:as arg)\n                        nil))\n        unform-arg  #(->> % (s/unform ::binding-form) unscrew-vec-unform)\n        reg-args    (->> args :args (map process-arg))\n        var-arg     (some-> args :varargs :form process-arg)\n        arg-list    (vec (concat (map unform-arg reg-args)\n                                 (when var-arg ['& (unform-arg var-arg)])))\n        body-forms  (if (and fspec (every? nil? orig-body-forms))\n                      ;; TODO error handling when specs too fancy for stub auto-generation\n                      [`(apply (-> ~fspec s/gen gen/generate)\n                               ~@(map extract-arg reg-args) ~(extract-arg var-arg))]\n\n                      (cond unexpected-fx\n                            [`(throw (~(if (cljs-env? env) 'js/Error. 'Exception.)\n                                      ~(str \"Calling function `\"\n                                            fn-name\n                                            \"` which has unexpected side effects.\")))]\n\n                            (= trace :dispatch)\n                            [`(if *global-trace-allowed?*\n                                (apply ~traced-fn-name\n                                       ~@(map extract-arg reg-args)\n                                       ~(extract-arg var-arg))\n                                (do ~@orig-body-forms))]\n\n                            (= trace 1)\n                            `[(do\n                                (l/pr-clog ~(str (list fn-name arg-list))\n                                           nil\n                                           {::r/background ~color})\n                                ~@orig-body-forms)]\n\n                            (>= trace 4)\n                            (trace-threading-macros orig-body-forms trace)\n\n                            :else\n                            orig-body-forms))]\n    (remove nil? `(~arg-list ~prepost ~@body-forms))))\n\n\n(defn- generate-defn\n  [forms private env]\n  (let [cljs?             (cljs-env? env)\n        conformed-gdefn   (s/conform ::>defn-args forms)\n        fn-bodies         (:bs conformed-gdefn)\n        empty-bodies      (every? empty?\n                                  (case (key fn-bodies)\n                                    :arity-1 (list (-> fn-bodies val :body val))\n                                    :arity-n (->> fn-bodies\n                                                  val\n                                                  (map :body)\n                                                  (map val))))\n        arity             (key fn-bodies)\n        fn-name           (:name conformed-gdefn)\n        quoted-qualified-fn-name\n                          (get-quoted-qualified-fn-name fn-name)\n        traced-fn-name    (gensym (str fn-name \"__\"))\n        docstring         (:docstring conformed-gdefn)\n        meta-map          (merge (:meta conformed-gdefn)\n                                 (generate-type-annotations env fn-bodies)\n                                 {::ghostwheel true})\n        ;;; Assemble the config\n        config            (merge-config (merge (meta fn-name) meta-map))\n        color             (resolve-trace-color (::trace-color config))\n        {:keys [::defn-macro ::instrument ::outstrument ::trace ::check]} config\n        defn-sym          (cond defn-macro (with-meta (symbol defn-macro) {:private private})\n                                private 'defn-\n                                :else 'defn)\n        trace             (if (cljs-env? env)\n                            (cond empty-bodies 0\n                                  (true? trace) 4\n                                  :else trace)\n                            0)                        ; TODO: Clojure\n        ;;; Code generation\n        fdef-body         (generate-fspec-body fn-bodies)\n        fdef              (when fdef-body `(s/fdef ~fn-name ~@fdef-body))\n        instrumentation   (when (not empty-bodies)\n                            (cond outstrument `(ost/instrument ~quoted-qualified-fn-name)\n                                  instrument `(st/instrument ~quoted-qualified-fn-name)\n                                  :else nil))\n        individual-arity-fspecs\n                          (map (fn [{:keys [args gspec]}]\n                                 (when gspec\n                                   (gspec->fspec* args gspec true false false)))\n                               (val fn-bodies))\n        [unexpected-fx generated-test] (when (and check (not empty-bodies))\n                                         (let [fspecs (case arity\n                                                        :arity-1 [(when fdef-body `(s/fspec ~@fdef-body))]\n                                                        :arity-n individual-arity-fspecs)]\n                                           (generate-test fn-name fspecs fn-bodies config cljs?)))\n        process-fn-bodies (fn [trace]\n                            (let [process-cfg {:env            env\n                                               :fn-name        fn-name\n                                               :traced-fn-name traced-fn-name\n                                               :trace          trace\n                                               :color          color\n                                               :unexpected-fx  unexpected-fx}]\n                              (case arity\n                                :arity-1 (->> fn-bodies val (process-defn-body process-cfg `(s/fspec ~@fdef-body)))\n                                :arity-n (map (partial process-defn-body process-cfg)\n                                              individual-arity-fspecs\n                                              (val fn-bodies)))))\n        main-defn         (remove nil? `(~defn-sym\n                                         ~fn-name\n                                         ~docstring\n                                         ~meta-map\n                                         ~@(process-fn-bodies (if (> trace 0) :dispatch 0))))\n        traced-defn       (when (> trace 0)\n                            (let [traced-defn (remove nil? `(~defn-sym\n                                                             ~traced-fn-name\n                                                             ~@(process-fn-bodies trace)))]\n                              (if (= trace 1)\n                                traced-defn\n                                (clairvoyant-trace traced-defn trace color env))))]\n    `(do ~fdef ~traced-defn ~main-defn ~instrumentation ~generated-test)))\n\n\n(defn after-check-async [done]\n  (let [success @r/*all-tests-successful]\n    (when success (doseq [f @*after-check-callbacks] (f)))\n    (reset! r/*all-tests-successful true)\n    (reset! *after-check-callbacks [])\n    (when success (done))))\n\n\n(defn- generate-coverage-check [env nspace]\n  (let [cljs?           (cljs-env? env)\n        {:keys [::check-coverage ::check]} (merge (u/get-base-config)\n                                                  (if cljs?\n                                                    (:meta (ana-api/find-ns nspace))\n                                                    #?(:clj (meta nspace))))\n        get-intern-meta (comp meta (if cljs? key val))\n        all-checked-fns (when check-coverage\n                          (some->> (if cljs? (ana-api/ns-interns nspace) #?(:clj (ns-interns nspace)))\n                                   (filter #(if cljs? (-> % val :fn-var) #?(:clj (t/function? (key %)))))\n                                   (remove #(-> % key str (string/ends-with? test-suffix)))\n                                   (remove #(-> % get-intern-meta ::check-coverage false?))))\n        plain-defns     (when check-coverage\n                          (some->> all-checked-fns\n                                   (remove #(-> % get-intern-meta ::ghostwheel))\n                                   (map (comp str key))\n                                   vec))\n        unchecked-defns (when check-coverage\n                          (some->> all-checked-fns\n                                   (filter #(-> % get-intern-meta ::ghostwheel))\n                                   (filter #(-> % get-intern-meta ::check false?))\n                                   (map (comp str key))\n                                   vec))]\n    `(do\n       ~(when (not check)\n          `(do\n             (l/group ~(str \"WARNING: \"\n                            \"`::g/check` disabled for \"\n                            nspace\n                            (::r/incomplete-coverage r/snippets))\n                      ~r/warning-style)\n             (l/group-end)))\n       ~(when (not-empty plain-defns)\n          `(do\n             (l/group ~(str \"WARNING: \"\n                            \"Plain `defn` functions detected in \"\n                            nspace\n                            (::r/incomplete-coverage r/snippets))\n                      ~r/warning-style)\n             (l/log (mapv symbol ~plain-defns))\n             (l/log-bold \"=> Use `>defn` instead.\")\n             (l/group-end)))\n       ~(when (not-empty unchecked-defns)\n          `(do\n             (l/group ~(str \"WARNING: \"\n                            \"`::g/check` disabled for some functions in \"\n                            nspace\n                            (::r/incomplete-coverage r/snippets))\n                      ~r/warning-style)\n             (l/log (mapv symbol ~unchecked-defns))\n             (l/group-end))))))\n\n\n(defn- generate-check [env targets]\n  (let [base-config\n        (u/get-base-config)\n\n        cljs?\n        (cljs-env? env)\n\n        {:keys [::extrument ::report-output]}\n        base-config\n\n        conformed-targets\n        (let [conformed-targets (s/conform ::check-targets targets)]\n          (if (= (key conformed-targets) :multi)\n            (val conformed-targets)\n            [(val conformed-targets)]))\n\n        processed-targets\n        (mapcat (fn [[type target]]\n                  (if (not= type :regex)\n                    [[type (:sym target)]]\n                    (for [ns (if cljs? (ana-api/all-ns) #?(:clj (all-ns)))\n                          :when (re-matches target (str (if cljs? ns #?(:clj (ns-name ns)))))]\n                      [:ns ns])))\n                conformed-targets)\n\n        errors\n        (->> (for [target processed-targets\n                   :let [[type sym] target]]\n               (case type\n                 :fn (let [fn-data  (if cljs? (ana-api/resolve env sym) #?(:clj (resolve sym)))\n                           metadata (if cljs? (:meta fn-data) #?(:clj (meta fn-data)))\n\n                           {:keys [::check-coverage ::check]}\n                           (merge (u/get-base-config)\n                                  (meta (:ns fn-data))\n                                  metadata)]\n                       (cond (not fn-data)\n                             (str \"Cannot resolve `\" (str sym) \"`\")\n\n                             (not (if cljs? (:fn-var fn-data) #?(:clj (t/function? sym))))\n                             (str \"`\" sym \"` is not a function.\")\n\n                             (not (::ghostwheel metadata))\n                             (str \"`\" sym \"` is not a Ghostwheel function => Use `>defn` to define it.\")\n\n                             (not check)\n                             (str \"Checking disabled for `\" sym \"` => Set `{:ghostwheel.core/check true}` to enable.\")\n\n                             :else\n                             nil))\n                 :ns (let [ns-data  (if cljs? (ana-api/find-ns sym) #?(:clj sym))\n                           metadata (if cljs? (:meta ns-data) #?(:clj (meta ns-data)))\n                           {:keys [::check]} (merge base-config metadata)]\n                       (cond (not ns-data)\n                             (str \"Cannot resolve `\" (str sym) \"`\")\n\n                             (not check)\n                             (str \"Checking disabled for `\" sym \"` => Set `{:ghostwheel.core/check true}` to enable.\")\n\n                             :else\n                             nil))))\n             (remove nil?))]\n    (if (not-empty errors)\n      (u/gen-exception env (str \"\\n\" (string/join \"\\n\" errors)))\n      `(when *global-check-allowed?*\n         (binding [*global-trace-allowed?* false\n                   l/*report-output*       ~(if cljs? report-output :repl)]\n           (do\n             ~@(remove nil?\n                       `[~(when extrument\n                            `(st/instrument (quote ~extrument)))\n                         ~@(for [target processed-targets\n                                 :let [[type sym] target]]\n                             (case type\n                               :fn `(binding [t/report r/report]\n                                      (~(symbol (str sym test-suffix))))\n                               :ns `(binding [t/report r/report]\n                                      (t/run-tests (quote ~sym)))))\n                         ~@(->> (for [target processed-targets\n                                      :let [[type sym] target]\n                                      :when (= type :ns)]\n                                  (generate-coverage-check env sym))\n                                (remove nil?))\n                         ~(when extrument\n                            `(st/unstrument (quote ~extrument)))])))))))\n\n\n(defn- generate-after-check [callbacks]\n  (let [{:keys [::check]}\n        (merge (u/get-base-config)\n               (meta *ns*))]\n    ;; TODO implement for clj\n    (when (and check (seq callbacks))\n      `(swap! *after-check-callbacks (comp vec concat) ~(vec callbacks)))))\n\n\n(defn- generate-traced-expr\n  [expr env]\n  (if (and (seq? expr)\n           (or (contains? l/ops-with-bindings (first expr))\n               (contains? threading-macro-syms (first expr))))\n    (let [cfg   (merge-config (meta expr))\n          color (resolve-trace-color (::trace-color cfg))\n          trace (let [trace (::trace cfg)]\n                  (if (= trace 0) 5 trace))]\n      (cond-> (trace-threading-macros expr trace)\n              ;; REVIEW: Clairvoyant doesn't work on Clojure yet\n              (cljs-env? env) (clairvoyant-trace trace color env)))\n    `(l/clog ~expr)))\n\n\n;;;; Main macros and public API\n\n\n(s/def ::>defn-args\n  (s/and seq?                                         ; REVIEW\n         (s/cat :name simple-symbol?\n                :docstring (s/? string?)\n                :meta (s/? map?)\n                :bs (s/alt :arity-1 ::args+gspec+body\n                           ;; TODO: add tail-attr-map support after this\n                           :arity-n (s/+ (s/and seq? ::args+gspec+body))))))\n\n\n(s/fdef >defn :args ::>defn-args)\n\n(defmacro >defn\n  \"Like defn, but requires a (nilable) gspec definition and generates\n  additional `s/fdef`, generative tests, instrumentation code, an\n  fspec-based stub, and/or tracing code, depending on the configuration\n  metadata and the existence of a valid gspec and non-nil body.\"\n  {:arglists '([name doc-string? attr-map? [params*] gspec prepost-map? body?]\n               [name doc-string? attr-map? ([params*] gspec prepost-map? body?) + attr-map?])}\n  [& forms]\n  (if (u/get-env-config)\n    (cond-> (remove nil? (generate-defn forms false &env))\n            (cljs-env? &env) clj->cljs)\n    (clean-defn 'defn forms)))\n\n\n(s/fdef >defn- :args ::>defn-args)\n\n;; NOTE: lots of duplication - refactor this to set/pass ^:private differently and call >defn\n(defmacro >defn-\n  \"Like defn-, but requires a (nilable) gspec definition and generates\n  additional `s/fdef`, generative tests, instrumentation code, an\n  fspec-based stub, and/or tracing code, depending on the configuration\n  metadata and the existence of a valid gspec and non-nil body.\"\n  {:arglists '([name doc-string? attr-map? [params*] gspec prepost-map? body?]\n               [name doc-string? attr-map? ([params*] gspec prepost-map? body?) + attr-map?])}\n  [& forms]\n  (if (u/get-env-config)\n    (cond-> (remove nil? (generate-defn forms true &env))\n            (cljs-env? &env) clj->cljs)\n    (clean-defn 'defn- forms)))\n\n\n(defmacro after-check\n  \"Takes a number of 0-arity functions to run\n  after all checks are completed successfully.\n\n  Meant to be used in a hot-reloading environment by putting it at the bottom\n  of a `(g/check)`-ed namespace and calling `ghostwheel.core/after-check-async`\n  correctly in the build system post-reload hooks.\"\n  [& callbacks]\n  (when (u/get-env-config)\n    (cond-> (generate-after-check callbacks)\n            (cljs-env? &env) (clj->cljs false))))\n\n\n(s/def ::check-target\n  (s/or :fn (s/and seq?\n                   (s/cat :quote #{'quote}\n                          :sym (s/and symbol?\n                                      #(let [s (str %)]\n                                         (or (string/includes? s \"/\")\n                                             (not (string/includes? s \".\")))))))\n        :ns (s/and seq? (s/cat :quote #{'quote} :sym symbol?))\n        :regex #?(:clj  #(instance? java.util.regex.Pattern %)\n                  :cljs regexp?)))\n\n(s/def ::check-targets\n  (s/or :single ::check-target\n        :multi (s/spec (s/+ ::check-target))))\n\n\n(s/fdef check\n  :args (s/spec (s/? ::check-targets)))\n\n(defmacro check\n  \"Runs Ghostwheel checks on the given namespaces and/or functions.\n  Checks the current namespace if called without arguments.\"\n  {:arglists '([]\n               [ns-regex-or-quoted-ns-or-fn]\n               [[ns-regex-or-quoted-ns-or-fn+]])}\n  ([]\n   `(check (quote ~(.-name *ns*))))\n  ([things]\n   (if (u/get-env-config)\n     (cond-> (generate-check &env things)\n             (cljs-env? &env) (clj->cljs false))\n     (str \"Ghostwheel disabled => \"\n          (if (cljs-env? &env)\n            \"Add `:external-config {:ghostwheel {}}` to your compiler options to enable.\"\n            \"Start the REPL with the `-Dghostwheel.enabled=true` JVM system property to enable.\")))))\n\n\n(s/def ::>fdef-args\n  (s/and seq?                                         ;REVIEW\n         (s/cat :name (s/or :sym symbol? :key qualified-keyword?)\n                :bs (s/alt :arity-1 ::args+gspec+body\n                           :arity-n (s/+ (s/and seq? ::args+gspec+body))))))\n\n\n(s/fdef >fdef :args ::>fdef-args)\n\n(defmacro >fdef\n  \"Defines an fspec using gspec syntax – pretty much a `>defn` without the body.\n\n  `name` can be a symbol or a qualified keyword, depending on whether the\n  fspec is meant to be registered as a top-level fspec (=> s/fdef fn-sym\n  ...) or used in other specs (=> s/def ::spec-keyword (s/fspec ...)).\n\n  When defining global fspecs, instrumentation can be directly enabled by\n  setting the `^::g/instrument` or `^::g/outstrument` metadata on the symbol.\"\n  {:arglists '([name [params*] gspec]\n               [name ([params*] gspec) +])}\n  [& forms]\n  (when (u/get-env-config)\n    (cond-> (remove nil? (generate-fdef forms))\n            (cljs-env? &env) clj->cljs)))\n\n\n(defmacro |>\n  \"Traces or logs+returns the wrapped expression, depending on its type\"\n  [expr]\n  (if (u/get-env-config)\n    (cond-> (generate-traced-expr expr &env)\n            (cljs-env? &env) clj->cljs)\n    expr))\n\n(defmacro tr \"Alias for |>\" [expr] `(|> ~expr))\n\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["temp__5753__auto__","expound-cfg","ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$1","cljs.spec.alpha/*explain-out*","expound.alpha/custom-printer","ghostwheel.core/test-suffix","ghostwheel.core/*after-check-callbacks","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","ghostwheel.core/*unsafe-bound-ops*","ghostwheel.core/*global-trace-allowed?*","ghostwheel.core/*global-check-allowed?*","ghostwheel.core/set-trace","enabled","ghostwheel.core/enable-trace!","ghostwheel.core/disable-trace!","ghostwheel.core/set-check","ghostwheel.core/enable-check!","ghostwheel.core/disable-check!","ghostwheel.core/count-args","conformed-args","cljs.core/count","ghostwheel.core/resolve-trace-color","color","vec__77521","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","color-type","color-value","cljs.spec.alpha/conform","G__77524","cljs.core/Keyword","js/Error","temp__5751__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$2","ghostwheel.logging/ghostwheel-colors","ghostwheel.core/=>","ghostwheel.core/|","ghostwheel.core/<-","cljs.spec.alpha/def-impl","cljs.spec.alpha/or-spec-impl","cljs.core/keyword?","cljs.spec.alpha/and-spec-impl","p1__77527#","p1__77528#","cljs.core/string?","cljs.core/re-matches","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/boolean?","cljs.core/nat-int?","cljs.spec.alpha/nilable-impl","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4","G__77548","cljs.core/qualified-symbol?","cljs.core/vector?","cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2","G__77550","cljs.core/map?","i__12903__auto__","v__12904__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","cljs.core/any?","cljs.spec.alpha/map-spec-impl","G__77561","cljs.core/contains?","cljs.spec.alpha/*compile-asserts*","cljs.core/deref","cljs.spec.alpha/*runtime-asserts*","cljs.spec.alpha/assert*","ghostwheel.utils/ghostwheel-default-config","p1__77701#","cljs.core/simple-symbol?","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.spec.alpha/cat-impl","cljs.spec.alpha/rep-impl","cljs.spec.alpha/maybe-impl","G__77724","cljs.core/ident?","G__77729","cljs.core/symbol?","G__77741","G__77745","G__77750","p1__77768#","cljs.core/qualified-keyword?","G__77793","fexpr__77792","cljs.core/name","G__77796","G__77803","cljs.core/coll?","cljs.spec.alpha/merge-spec-impl","cljs.core/seq?","cljs.spec.alpha/alt-impl","cljs.spec.alpha/rep+impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","cljs.core/set?","p1__77907#","cljs.core/complement","clojure.string/ends-with?","cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2","G__78019","G__78021","and__4120__auto__","or__4131__auto__","cljs.core/empty?","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/distinct?","cljs.spec.alpha/amp-impl","p__78133","map__78134","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","args","gspec","cljs.core/not","argcount","cljs.core/+","spec-args","ghostwheel.core/threading-macro-syms","p1__78169#","bang-suffix?","cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2","p1__78170#","p1__78192#","cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2","cljs.core/List","find-fx","form","vec__78255","maybe-fx","found-fx","unsafe-bindings","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core/key","cljs.core/val","unsafe-binding-set","p1__78246#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/set","cljs.core/vec","iter__4523__auto__","s__78260","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","b__78262","cljs.core/chunk-buffer","i__78261","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__78259","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","nested-form","*unsafe-bound-ops*-orig-val__78269","*unsafe-bound-ops*-temp-val__78270","*unsafe-bound-ops*-orig-val__78272","*unsafe-bound-ops*-temp-val__78273","G__78271","G__78274","clojure.set.union.cljs$core$IFn$_invoke$arity$2","check-arity-fx","unformed-args-gspec-body","effects","cljs.core/flatten","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","s__78277","b__78279","i__78278","iter__78276","fx","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","cljs.spec.alpha/unform","cljs.core/list","p1__78247#","clojure.walk/postwalk","G__78275","cljs.core/next","ghostwheel.core/generate-test","fn-name","fspecs","body-forms","config","cljs?","map__78293","check","num-tests","num-tests-ext","extensive-tests","check-coverage","ignore-fx","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$1","cljs.core/array-map","marked-unsafe","G__78298","p1__78248#","cljs.core.drop.cljs$core$IFn$_invoke$arity$2","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","unexpected-fx","cljs.core/boolean","unexpected-safety","spec-keyword-ns","spec-checks","defined-fspecs","cljs.core.keyword.cljs$core$IFn$_invoke$arity$2","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","cljs.core/every?","cljs.core/some?","ghostwheel.core/unscrew-vec-unform","unformed-arg","cljs.core/sequential?","vec__78314","malformed-seq-destructuring?","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","unformed","malformed","cljs.core/split-with","cljs.core/concat","ghostwheel.core/gspec->fspec*","conformed-arg-list","conformed-gspec","anon-fspec?","multi-arity-args?","nilable?","map__78323","map__78325","argspec-def","retspec","fn-such-that","gen-fn","gen","cljs.core/some","cljs.core/vals","extract-spec","p__78330","vec__78331","spec-type","spec","G__78334","G__78335","G__78336","G__78337","G__78338","G__78340","G__78341","G__78342","G__78343","G__78344","named-conformed-args","all-args","gen-arg-name","index","gen-name","p__78350","vec__78352","arg-type","arg","full-arg","arg-name","G__78355","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","arg-binding-map","p1__78320#","cljs.core/second","p1__78321#","p__78369","vec__78370","arg-key","conformed-arg","cljs.core.into.cljs$core$IFn$_invoke$arity$2","process-arg-pred","p__78374","map__78375","name","body","bindings","anon-arg","G__78379","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","processed-args","wrapped-params","cljs.core.interleave.cljs$core$IFn$_invoke$arity$2","args-such-that","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3","process-ret-pred","p__78383","map__78384","G__78387","ret-sym","cljs.core.gensym.cljs$core$IFn$_invoke$arity$1","processed-body","clojure.walk/postwalk-replace","fn-spec","processed-ret-preds","final-fspec","get-fspecs","fn-body","vec__78399","param-count","variadic","get-spec-part","part","cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2","ghostwheel.core/generate-fspec-body","fn-bodies","G__78405","arg-specs","p__78409","vec__78410","arity","fn-param","multi-ret-specs","p1__78397#","p__78416","vec__78418","get-fn-clause","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","fn-specs","p__78426","vec__78428","multi-ret-clause","multi-fn-clause","ghostwheel.core/spec-op->type","map-prot","coll-prot","seqable-prot","ghostwheel.core/get-type","recursive-call","conformed-spec-elem","vec__78442","spec-def","spec-op","G__78445","op","fexpr__78449","G__78450","G__78451","fexpr__78452","G__78453","G__78454","fexpr__78455","fexpr__78457","gspec-def","G__78459","ghostwheel.core/get-gspec-type","js-type","G__78460","modifiers","t","args-jstype","clojure.string.join.cljs$core$IFn$_invoke$arity$2","ret-jstype","ghostwheel.core/generate-type-annotations","env","conformed-bs","ghostwheel.utils/cljs-env?","G__78474","ghostwheel.core/merge-config","metadata","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","ghostwheel.utils.get_base_config.cljs$core$IFn$_invoke$arity$0","cljs.core/meta","cljs.core/*ns*","p1__78475#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core/namespace","ghostwheel.core/get-quoted-qualified-fn-name","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","ghostwheel.core/trace-threading-macros","forms","trace","threading-macros-mappings","G__78489","p1__78485#","cljs.core/list?","G__78494","fexpr__78493","clojure.set/map-invert","ghostwheel.core/clairvoyant-trace","clairvoyant","tracer","exclude","G__78501","inline-trace?","cljs.core/Symbol","sym","qualified-sym","cljs.analyzer.api/resolve","p1__78498#","ghostwheel.core/generate-fdef","map__78524","vec__78525","type","bs","G__78530","map__78532","instrument","outstrument","quoted-qualified-fn-name","instrumentation","fdef","ghostwheel.core/process-defn-body","cfg","fspec","args+gspec+body","map__78557","map__78558","vec__78559","p1__78548#","traced-fn-name","prepost","orig-body-forms","G__78568","process-arg","p__78571","vec__78572","G__78576","p1__78545#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","p1__78546#","extract-arg","p__78579","vec__78580","G__78585","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","unform-arg","reg-args","var-arg","G__78588","arg-list","ghostwheel.core/generate-defn","private","map__78620","defn-macro","vec__78621","conformed-gdefn","empty-bodies","G__78625","docstring","meta-map","defn-sym","cljs.core/with-meta","fdef-body","individual-arity-fspecs","p__78640","map__78641","generated-test","G__78646","process-fn-bodies","process-cfg","G__78657","cljs.core.map.cljs$core$IFn$_invoke$arity$3","main-defn","traced-defn","ghostwheel.core/after-check-async","done","success","ghostwheel.reporting/*all-tests-successful","seq__78678","chunk__78679","count__78680","i__78681","c__4550__auto__","cljs.core/chunk-first","f","cljs.core/reset!","ghostwheel.core/generate-coverage-check","nspace","map__78720","cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1","get-intern-meta","all-checked-fns","G__78725","cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1","p1__78710#","p1__78711#","p1__78712#","plain-defns","G__78729","p1__78713#","cljs.core/str","unchecked-defns","G__78732","p1__78715#","p1__78716#","ghostwheel.reporting/snippets","ghostwheel.reporting/warning-style","cljs.core/not-empty","ghostwheel.core/generate-check","targets","map__78744","extrument","report-output","base-config","conformed-targets","processed-targets","p__78758","vec__78760","target","s__78764","b__78766","i__78765","iter__78763","ns","cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0","errors","s__78776","b__78778","i__78777","vec__78791","iter__78775","vec__78806","G__78795","G__78809","map__78797","map__78810","fn-data","map__78800","map__78813","ns-data","ghostwheel.utils/gen-exception","s__78840","b__78842","i__78841","vec__78849","iter__78839","vec__78856","G__78852","G__78859","s__78862","b__78864","i__78863","vec__78869","iter__78861","vec__78873","ghostwheel.core/generate-after-check","callbacks","map__78878","ghostwheel.core/generate-traced-expr","expr","ghostwheel.logging/ops-with-bindings","G__78883","cljs.spec.alpha/fspec-impl","p1__78905#","s","clojure.string/includes?","cljs.core/regexp?"]]],"~:cache-keys",["~#cmap",[["^2F","ghostwheel/utils.cljc"],[1630228119207,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^1O","^C","^1Q","~$cljs.env","^1J"]]],["^2F","goog/labs/useragent/platform.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","~$goog.labs.userAgent.util","~$goog.string"]]],["^2F","expound/util.cljc"],[1630228118972,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","ghostwheel/reporting.cljc"],[1630228119207,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^?","^E","^A","^1M","^1X","^1Y"]]],["^2F","orchestra_cljs/spec/test.cljs"],[1630228119080,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$goog.object","~$goog.userAgent.product","^1X","~$cljs.stacktrace","^I","^?","^G"]]],["^2F","cljs/spec/gen/alpha.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$goog.Uri"]]],["^2F","cljs/tools/reader/impl/utils.cljs"],[1630228358603,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X","^2Y"]]],["^2F","goog/math/math.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","~$goog.array","~$goog.asserts"]]],["^2F","goog/string/stringformat.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^2Y"]]],["^2F","cljs/env.cljc"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","goog/labs/useragent/browser.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^32","^2X","^2Z","~$goog.string.internal"]]],["^2F","goog/array/array.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^33"]]],["^2F","expound/problems.cljc"],[1630228118972,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$expound.paths","^?","^1Q","^1X","~$expound.printer","~$expound.ansi"]]],["^2F","goog/useragent/useragent.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2X","~$goog.reflect","^2Y"]]],["^2F","clojure/test/check/properties.cljc"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1N","~$clojure.test.check.results"]]],["^2F","clojure/test/check/generators.cljc"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X","~$clojure.test.check.random","~$clojure.test.check.rose-tree","^2Y"]]],["^2F","goog/debug/error.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],["^2F","cljs/tools/reader/edn.cljs"],[1630228358603,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2Y","~$goog.string.StringBuffer"]]],["^2F","clojure/test/check/random/doubles.cljs"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$clojure.test.check.random.longs"]]],["^2F","goog/dom/nodetype.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],["^2F","cljs/tools/reader/impl/inspect.cljs"],[1630228358603,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","cljs/pprint.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X","^2Y","^3D"]]],["^2F","cljs/tools/reader.cljs"],[1630228358603,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^3@","^3A","^3B","^3?","^32","^2Y","^3D"]]],["^2F","expound/alpha.cljc"],[1630228118972,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$expound.problems","^?","^1X","^1U","^1Q","~$goog.string.format","^2Y","^36","~$expound.util","^37","^G"]]],["^2F","clojure/test/check/rose_tree.cljc"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","clojure/test/check/impl.cljc"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","clojure/test/check/random.cljs"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$clojure.test.check.random.doubles","^3E"]]],["^2F","expound/ansi.cljc"],[1630228118972,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X"]]],["^2F","cljs/spec/test/alpha.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^2Z","^2[","^1X","^30","^I","^?","^G"]]],["^2F","goog/object/object.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^2F","cljs/stacktrace.cljc"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^2Y","^1X"]]],["^2F","goog/math/long.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^33","^3;"]]],["^2F","goog/string/internal.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],["^2F","clojure/test/check.cljc"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1N","^3=","^3<","^3>","~$clojure.test.check.impl"]]],["^2F","goog/functions/functions.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],["^2F","expound/paths.cljc"],[1630228118972,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^?","^3H"]]],["^2F","clojure/walk.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","goog/useragent/product.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^38","^3:","~$goog.userAgent"]]],["^2F","goog/structs/map.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^2F","goog/labs/useragent/engine.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^32","^2X","^2Y"]]],["^2F","cljs/reader.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^2Z","^3C","~$cljs.tools.reader.edn","^3D"]]],["^2F","goog/asserts/asserts.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^2F","cljs/tagged_literals.cljc"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$cljs.reader"]]],["^2F","goog/uri/uri.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^32","^33","^2Y","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^2F","ghostwheel/threading_macros.cljc"],[1630228119207,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1Y","^1K"]]],["^2F","ghostwheel/logging.cljc"],[1630228119285,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X","^I"]]],["^2F","cljs/spec/alpha.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^2Z","^1Q","^G","^1X"]]],["^2F","goog/base.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",[]]],["^2F","goog/structs/structs.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^32","^2Z"]]],["^2F","cljs/tools/reader/impl/errors.cljs"],[1630228358603,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^3@","^1X","~$cljs.tools.reader.impl.inspect"]]],["^2F","clojure/string.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^2Y","^3D"]]],["^2F","clojure/test/check/random/longs/bit_count_impl.cljs"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","goog/string/string.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^34"]]],["^2F","goog/reflect/reflect.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],["^2F","goog/labs/useragent/util.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^34"]]],["^2F","expound/printer.cljc"],[1630228118972,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X","^?","^I","^1Q","^1U","^3H","^37"]]],["^2F","goog/string/stringbuffer.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],["^2F","cljs/tools/reader/reader_types.cljs"],[1630228358603,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^3A","^2Y","^3D"]]],["^2F","goog/iter/iter.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^32","^33","~$goog.functions","~$goog.math"]]],["^2F","ghostwheel/core.cljc"],[1630228119207,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X","^1U","^1Q","^A","^1T","^1N","^1[","^?","^E","^G","^1L","^20","^1K","^1Y","^1Z","^1M","^1R","^1J"]]],["^2F","cljs/tools/reader/impl/commons.cljs"],[1630228358603,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^3?","^3@","^3A"]]],["^2F","cljs/core.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["~$goog.math.Long","~$goog.math.Integer","^2Y","^2Z","^32","^31","^3D"]]],["^2F","clojure/test/check/random/longs.cljs"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","~$clojure.test.check.random.longs.bit-count-impl","^3[","^C"]]],["^2F","cljs/analyzer/api.cljc"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^2W","~$cljs.analyzer"]]],["^2F","goog/math/integer.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O"]]],["^2F","clojure/set.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","goog/uri/utils.js"],[1630228359392,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^32","^33","^2Y"]]],["^2F","cljs/analyzer.cljc"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^2Y","^1X","^1U","^2W","~$cljs.tagged-literals","^3C","^3@","^3R"]]],["^2F","ghostwheel/unghost.cljc"],[1630228119555,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]],["^2F","cljs/test.cljs"],[1630228118934,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C","^1X","^I"]]],["^2F","clojure/test/check/results.cljc"],[1630228119162,"^2S",["^ ","^2T",null,"^2U",["^N",[]],"^2V",["^1O","^C"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel.logging/0.3.9/ghostwheel.logging-0.3.9.jar!/ghostwheel/logging.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/threading_macros.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/test/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/random.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/reporting.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/orchestra/orchestra/2019.02.06-1/orchestra-2019.02.06-1.jar!/orchestra/spec/test.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/printer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/test.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/paths.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer/api.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/ansi.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/generators.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/core.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/template.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer/macros.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.7.2/expound-0.7.2.jar!/expound/problems.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/results.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env/macros.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/test.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/gnl/ghostwheel/0.3.9/ghostwheel-0.3.9.jar!/ghostwheel/utils.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/properties.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/rose_tree.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/orchestra/orchestra/2019.02.06-1/orchestra-2019.02.06-1.jar!/orchestra_cljs/spec/test.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/test/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","ghostwheel/core.cljc","^7",9,"^8",5,"^9",9,"^:",20],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",null,"^M",["^N",[]],"^O",["^ ","^P",["^ ","^Q",["^R",[["^S","^T","^U",["^V"],"^W","^X","^Y"],["^S","^T","^U",["^R",[["^V"],"^W","^X","^Y"]],"~$+","^U"]]],"^Z","Like defn-, but requires a (nilable) gspec definition and generates\n  additional `s/fdef`, generative tests, instrumentation code, an\n  fspec-based stub, and/or tracing code, depending on the configuration\n  metadata and the existence of a valid gspec and non-nil body.","^7",1263,"^8",1,"^6","ghostwheel/core.cljc","^[","^10","^11","^12","^13",true],"^14",["^ ","^Q",["^R",[["^15"]]],"^Z","Traces or logs+returns the wrapped expression, depending on its type","^7",1353,"^8",1,"^6","ghostwheel/core.cljc","^[","^16","^11","^12","^13",true],"^17",["^ ","^Q",["^R",[["^S",["^V"],"^W"],["^S",["^R",[["^V"],"^W"]],"~$+"]]],"^Z","Defines an fspec using gspec syntax – pretty much a `>defn` without the body.\n\n  `name` can be a symbol or a qualified keyword, depending on whether the\n  fspec is meant to be registered as a top-level fspec (=> s/fdef fn-sym\n  ...) or used in other specs (=> s/def ::spec-keyword (s/fspec ...)).\n\n  When defining global fspecs, instrumentation can be directly enabled by\n  setting the `^::g/instrument` or `^::g/outstrument` metadata on the symbol.","^7",1336,"^8",1,"^6","ghostwheel/core.cljc","^[","^18","^11","^12","^13",true],"^19",["^ ","^Q",["^R",[[],["^1:"],[["^1;"]]]],"^Z","Runs Ghostwheel checks on the given namespaces and/or functions.\n  Checks the current namespace if called without arguments.","^7",1309,"^8",1,"^6","ghostwheel/core.cljc","^[","^1<","^11","^12","^13",true],"^1=",["^ ","^Q",["^R",[["^15"]]],"^Z","Alias for |>","^7",1361,"^8",1,"^6","ghostwheel/core.cljc","^[","^1>","^11","^12","^13",true],"~$?",["^ ","^Q",["^R",[["~$&","^1?"]]],"^7",116,"^8",1,"^6","ghostwheel/core.cljc","^[","^1@","^11","^12","^13",true],"^1A",["^ ","^Q",["^R",[["^S","^T","^U",["^V"],"^W","^X","^Y"],["^S","^T","^U",["^R",[["^V"],"^W","^X","^Y"]],"~$+","^U"]]],"^Z","Like defn, but requires a (nilable) gspec definition and generates\n  additional `s/fdef`, generative tests, instrumentation code, an\n  fspec-based stub, and/or tracing code, depending on the configuration\n  metadata and the existence of a valid gspec and non-nil body.","^7",1246,"^8",1,"^6","ghostwheel/core.cljc","^[","^1B","^11","^12","^13",true],"^1C",["^ ","^Q",["^R",[["~$&","^1D"]]],"^Z","Takes a number of 0-arity functions to run\n  after all checks are completed successfully.\n\n  Meant to be used in a hot-reloading environment by putting it at the bottom\n  of a `(g/check)`-ed namespace and calling `ghostwheel.core/after-check-async`\n  correctly in the build system post-reload hooks.","^7",1277,"^8",1,"^6","ghostwheel/core.cljc","^[","^1E","^11","^12","^13",true]],"^[","^12","^1G",null,"^1H",["^ ","~$t","^A","^>","^?","^1I","^1J","~$u","^1K","^1J","^1J","^1K","^1K","~$r","^1L","^1M","^1M","^C","^C","^@","^A","^1N","^1N","^A","^A","^1O","^1O","^D","^E","^1P","^1Q","^1R","^1R","^1S","^G","^1T","^1T","^1U","^1U","^1V","^1M","~$s","^?","^1W","^1X","~$l","^1Y","^1Z","^1Z","^1[","^1[","^1Y","^1Y","^F","^G","^20","^20","^E","^E","^1X","^1X","^21","^E","^?","^?","^1Q","^1Q","^G","^G","^1L","^1L","^22","^1R"],"^23",["^N",["^24","^25"]],"~:shadow/js-access-global",["^N",["Error"]],"^26",["^ ","^27","^1U","^28","^1U","^29","^1U","^2:","^20","^2;","^1K","^2<","^1K"],"~:defs",["^ ","~$disable-check!",["^ ","~:protocol-inline",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",87,"^8",7,"^9",87,"^:",21,"^Q",["^R",["~$quote",["^R",[[]]]]]],"^[","~$ghostwheel.core/disable-check!","^6","ghostwheel/core.cljc","^:",21,"~:method-params",["^R",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^8",1,"~:variadic?",false,"^7",87,"~:ret-tag","^1W","^9",87,"~:max-fixed-arity",0,"~:fn-var",true,"^Q",["^R",["^5K",["^R",[[]]]]]],"~$test-suffix",["^ ","^5",["^ ","^6","ghostwheel/core.cljc","^7",60,"^8",16,"^9",60,"^:",27,"~:private",true],"^5U",true,"^[","~$ghostwheel.core/test-suffix","^6","ghostwheel/core.cljc","^:",27,"^8",1,"^7",60,"^9",60,"~:tag","^1W"],"~$generate-type-annotations",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",811,"^8",8,"^9",811,"^:",33,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$env","~$conformed-bs"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-type-annotations","^6","ghostwheel/core.cljc","^:",33,"^5M",["^R",[["^5Y","^5Z"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",811,"^5Q",["^N",[null,"~$clj-nil"]],"^9",811,"^5R",2,"^5S",true,"^Q",["^R",["^5K",["^R",[["^5Y","^5Z"]]]]]],"~$disable-trace!",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",78,"^8",7,"^9",78,"^:",21,"^Q",["^R",["^5K",["^R",[[]]]]]],"^[","~$ghostwheel.core/disable-trace!","^6","ghostwheel/core.cljc","^:",21,"^5M",["^R",[[]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",78,"^5Q","^1W","^9",78,"^5R",0,"^5S",true,"^Q",["^R",["^5K",["^R",[[]]]]]],"~$clairvoyant-trace",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",863,"^8",8,"^9",863,"^:",25,"^5U",true,"^Q",["^R",["^5K",["^R",[["^1?","~$trace","~$color","^5Y"]]]]]],"^5U",true,"^[","~$ghostwheel.core/clairvoyant-trace","^6","ghostwheel/core.cljc","^:",25,"^5M",["^R",[["^1?","^64","^65","^5Y"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",863,"^5Q",["^N",["~$seq","~$cljs.core/IList","~$any"]],"^9",863,"^5R",4,"^5S",true,"^Q",["^R",["^5K",["^R",[["^1?","^64","^65","^5Y"]]]]]],"~$*global-check-allowed?*",["^ ","^5",["^ ","^6","ghostwheel/core.cljc","^7",66,"^8",16,"^9",66,"^:",39,"~:dynamic",true],"^[","~$ghostwheel.core/*global-check-allowed?*","^6","ghostwheel/core.cljc","^:",39,"^8",1,"^6;",true,"^7",66,"^9",66,"^5W","~$boolean"],"~$get-type",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",759,"^8",8,"^9",759,"^:",16,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$recursive-call","~$conformed-spec-elem"]]]]]],"^5U",true,"^[","~$ghostwheel.core/get-type","^6","ghostwheel/core.cljc","^:",16,"^5M",["^R",[["^6?","^6@"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",759,"^5Q",["^N",[null,"^1W"]],"^9",759,"^5R",2,"^5S",true,"^Q",["^R",["^5K",["^R",[["^6?","^6@"]]]]]],"~$spec-op->type",["^ ","^5",["^ ","^6","ghostwheel/core.cljc","^7",715,"^8",16,"^9",715,"^:",29,"^5U",true],"^5U",true,"^[","~$ghostwheel.core/spec-op->type","^6","ghostwheel/core.cljc","^:",29,"^8",1,"^7",715,"^9",715,"^5W","~$cljs.core/IMap"],"~$enable-trace!",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",77,"^8",7,"^9",77,"^:",20,"^Q",["^R",["^5K",["^R",[[]]]]]],"^[","~$ghostwheel.core/enable-trace!","^6","ghostwheel/core.cljc","^:",20,"^5M",["^R",[[]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",77,"^5Q","^1W","^9",77,"^5R",0,"^5S",true,"^Q",["^R",["^5K",["^R",[[]]]]]],"~$get-gspec-type",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",800,"^8",8,"^9",800,"^:",22,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$conformed-gspec"]]]]]],"^5U",true,"^[","~$ghostwheel.core/get-gspec-type","^6","ghostwheel/core.cljc","^:",22,"^5M",["^R",[["^6H"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",800,"^5Q","^1W","^9",800,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^6H"]]]]]],"~$*global-trace-allowed?*",["^ ","^5",["^ ","^6","ghostwheel/core.cljc","^7",65,"^8",16,"^9",65,"^:",39,"^6;",true],"^[","~$ghostwheel.core/*global-trace-allowed?*","^6","ghostwheel/core.cljc","^:",39,"^8",1,"^6;",true,"^7",65,"^9",65,"^5W","^6="],"~$gspec->fspec*",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",543,"^8",8,"^9",543,"^:",21,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$conformed-arg-list","^6H","~$anon-fspec?","~$multi-arity-args?","~$nilable?"]]]]]],"^5U",true,"^[","~$ghostwheel.core/gspec->fspec*","^6","ghostwheel/core.cljc","^:",21,"^5M",["^R",[["^6M","^6H","^6N","^6O","^6P"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",543,"^5Q",["^N",["^67","^68","~$cljs.core/LazySeq","~$cljs.core/Symbol"]],"^9",543,"^5R",5,"^5S",true,"^Q",["^R",["^5K",["^R",[["^6M","^6H","^6N","^6O","^6P"]]]]]],"~$generate-coverage-check",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",1067,"^8",8,"^9",1067,"^:",31,"^5U",true,"^Q",["^R",["^5K",["^R",[["^5Y","~$nspace"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-coverage-check","^6","ghostwheel/core.cljc","^:",31,"^5M",["^R",[["^5Y","^6U"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",1067,"^5Q",["^N",["^67","^68"]],"^9",1067,"^5R",2,"^5S",true,"^Q",["^R",["^5K",["^R",[["^5Y","^6U"]]]]]],"~$generate-traced-expr",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",1216,"^8",8,"^9",1216,"^:",28,"^5U",true,"^Q",["^R",["^5K",["^R",[["^15","^5Y"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-traced-expr","^6","ghostwheel/core.cljc","^:",28,"^5M",["^R",[["^15","^5Y"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",1216,"^5Q",["^N",[null,"^67","^68","^69"]],"^9",1216,"^5R",2,"^5S",true,"^Q",["^R",["^5K",["^R",[["^15","^5Y"]]]]]],"~$count-args",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",90,"^8",8,"^9",90,"^:",18,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$conformed-args"]]]]],"^Z","Returns a tuple with the number of regular and non-variadic arguments."],"^5U",true,"^[","~$ghostwheel.core/count-args","^6","ghostwheel/core.cljc","^:",18,"^5M",["^R",[["^6Z"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",90,"^5Q","~$cljs.core/IVector","^9",90,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^6Z"]]]]],"^Z","Returns a tuple with the number of regular and non-variadic arguments."],"~$resolve-trace-color",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",97,"^8",8,"^9",97,"^:",27,"^5U",true,"^Q",["^R",["^5K",["^R",[["^65"]]]]]],"^5U",true,"^[","~$ghostwheel.core/resolve-trace-color","^6","ghostwheel/core.cljc","^:",27,"^5M",["^R",[["^65"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",97,"^9",97,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^65"]]]]]],"~$<-",["^ ","^[","~$ghostwheel.core/<-","^6","ghostwheel/core.cljc","^7",113,"^8",1,"^9",113,"^:",8,"^5",["^ ","^6","ghostwheel/core.cljc","^7",113,"^8",6,"^9",113,"^:",8],"^5W","~$cljs.core/Keyword"],"~$trace-threading-macros",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",840,"^8",8,"^9",840,"^:",30,"^5U",true,"^Q",["^R",["^5K",["^R",[["^1?","^64"]]]]]],"^5U",true,"^[","~$ghostwheel.core/trace-threading-macros","^6","ghostwheel/core.cljc","^:",30,"^5M",["^R",[["^1?","^64"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",840,"^5Q",["^N",[null,"^69"]],"^9",840,"^5R",2,"^5S",true,"^Q",["^R",["^5K",["^R",[["^1?","^64"]]]]]],"~$merge-config",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",827,"^8",8,"^9",827,"^:",20,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$metadata"]]]]]],"^5U",true,"^[","~$ghostwheel.core/merge-config","^6","ghostwheel/core.cljc","^:",20,"^5M",["^R",[["^79"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",827,"^5Q",["^N",[null,"~$clj","^69"]],"^9",827,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^79"]]]]]],"~$set-check",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",81,"^8",8,"^9",81,"^:",17,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$enabled"]]]]]],"^5U",true,"^[","~$ghostwheel.core/set-check","^6","ghostwheel/core.cljc","^:",17,"^5M",["^R",[["^7="]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",81,"^9",81,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^7="]]]]]],"~$|",["^ ","^[","~$ghostwheel.core/|","^6","ghostwheel/core.cljc","^7",112,"^8",1,"^9",112,"^:",7,"^5",["^ ","^6","ghostwheel/core.cljc","^7",112,"^8",6,"^9",112,"^:",7],"^5W","^75"],"~$generate-check",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",1120,"^8",8,"^9",1120,"^:",22,"^5U",true,"^Q",["^R",["^5K",["^R",[["^5Y","~$targets"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-check","^6","ghostwheel/core.cljc","^:",22,"^5M",["^R",[["^5Y","^7A"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",1120,"^5Q",["^N",["^67","^68"]],"^9",1120,"^5R",2,"^5S",true,"^Q",["^R",["^5K",["^R",[["^5Y","^7A"]]]]]],"~$process-defn-body",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",923,"^8",8,"^9",923,"^:",25,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$cfg","~$fspec","~$args+gspec+body"]]]]]],"^5U",true,"^[","~$ghostwheel.core/process-defn-body","^6","ghostwheel/core.cljc","^:",25,"^5M",["^R",[["^7D","^7E","^7F"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",923,"^5Q","^6R","^9",923,"^5R",3,"^5S",true,"^Q",["^R",["^5K",["^R",[["^7D","^7E","^7F"]]]]]],"~$unscrew-vec-unform",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",533,"^8",8,"^9",533,"^:",26,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$unformed-arg"]]]]],"^Z","Half-arsed workaround for spec bugs CLJ-2003 and CLJ-2021."],"^5U",true,"^[","~$ghostwheel.core/unscrew-vec-unform","^6","ghostwheel/core.cljc","^:",26,"^5M",["^R",[["^7I"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",533,"^5Q",["^N",[null,"^7;","^70","^69","~$cljs.core/MetaFn","^60"]],"^9",533,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^7I"]]]]],"^Z","Half-arsed workaround for spec bugs CLJ-2003 and CLJ-2021."],"~$generate-defn",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",982,"^8",8,"^9",982,"^:",21,"^5U",true,"^Q",["^R",["^5K",["^R",[["^1?","~$private","^5Y"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-defn","^6","ghostwheel/core.cljc","^:",21,"^5M",["^R",[["^1?","^7M","^5Y"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",982,"^5Q",["^N",["^67","^68"]],"^9",982,"^5R",3,"^5S",true,"^Q",["^R",["^5K",["^R",[["^1?","^7M","^5Y"]]]]]],"~$generate-test",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",477,"^8",10,"^9",477,"^:",23,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$fn-name","~$fspecs","~$body-forms","~$config","~$cljs?"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-test","^6","ghostwheel/core.cljc","^:",23,"^5M",["^R",[["^7P","^7Q","^7R","^7S","^7T"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",3,"^5P",false,"^7",477,"^5Q","^70","^9",477,"^5R",5,"^5S",true,"^Q",["^R",["^5K",["^R",[["^7P","^7Q","^7R","^7S","^7T"]]]]]],"~$generate-after-check",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",1207,"^8",8,"^9",1207,"^:",28,"^5U",true,"^Q",["^R",["^5K",["^R",[["^1D"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-after-check","^6","ghostwheel/core.cljc","^:",28,"^5M",["^R",[["^1D"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",1207,"^5Q",["^N",["^67","^68","^60"]],"^9",1207,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^1D"]]]]]],"~$enable-check!",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",86,"^8",7,"^9",86,"^:",20,"^Q",["^R",["^5K",["^R",[[]]]]]],"^[","~$ghostwheel.core/enable-check!","^6","ghostwheel/core.cljc","^:",20,"^5M",["^R",[[]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",86,"^5Q","^1W","^9",86,"^5R",0,"^5S",true,"^Q",["^R",["^5K",["^R",[[]]]]]],"~$*unsafe-bound-ops*",["^ ","^5",["^ ","^6","ghostwheel/core.cljc","^7",62,"^8",26,"^9",62,"^:",44,"^6;",true,"^5U",true],"^5U",true,"^[","~$ghostwheel.core/*unsafe-bound-ops*","^6","ghostwheel/core.cljc","^:",44,"^8",1,"^6;",true,"^7",62,"^9",62,"^5W","~$cljs.core/ISet"],"~$threading-macro-syms",["^ ","^[","~$ghostwheel.core/threading-macro-syms","^6","ghostwheel/core.cljc","^7",306,"^8",1,"^9",306,"^:",26,"^5",["^ ","^6","ghostwheel/core.cljc","^7",306,"^8",6,"^9",306,"^:",26],"^5W","^80"],"~$generate-fspec-body",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",663,"^8",10,"^9",663,"^:",29,"^5U",true,"^Q",["^R",["^5K",["^R",[["~$fn-bodies"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-fspec-body","^6","ghostwheel/core.cljc","^:",29,"^5M",["^R",[["^84"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",3,"^5P",false,"^7",663,"^9",663,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^84"]]]]]],"~$after-check-async",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",1059,"^8",7,"^9",1059,"^:",24,"^Q",["^R",["^5K",["^R",[["~$done"]]]]]],"^[","~$ghostwheel.core/after-check-async","^6","ghostwheel/core.cljc","^:",24,"^5M",["^R",[["^87"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",1059,"^5Q",["^N",["^69","^60"]],"^9",1059,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^87"]]]]]],"~$=>",["^ ","^[","~$ghostwheel.core/=>","^6","ghostwheel/core.cljc","^7",111,"^8",1,"^9",111,"^:",8,"^5",["^ ","^6","ghostwheel/core.cljc","^7",111,"^8",6,"^9",111,"^:",8],"^5W","^75"],"~$*after-check-callbacks",["^ ","^5",["^ ","^6","ghostwheel/core.cljc","^7",61,"^8",16,"^9",61,"^:",38,"^5U",true],"^5U",true,"^[","~$ghostwheel.core/*after-check-callbacks","^6","ghostwheel/core.cljc","^:",38,"^8",1,"^7",61,"^9",61,"^5W","~$cljs.core/Atom"],"~$set-trace",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",72,"^8",8,"^9",72,"^:",17,"^5U",true,"^Q",["^R",["^5K",["^R",[["^7="]]]]]],"^5U",true,"^[","~$ghostwheel.core/set-trace","^6","ghostwheel/core.cljc","^:",17,"^5M",["^R",[["^7="]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",72,"^9",72,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^7="]]]]]],"~$get-quoted-qualified-fn-name",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",836,"^8",8,"^9",836,"^:",36,"^5U",true,"^Q",["^R",["^5K",["^R",[["^7P"]]]]]],"^5U",true,"^[","~$ghostwheel.core/get-quoted-qualified-fn-name","^6","ghostwheel/core.cljc","^:",36,"^5M",["^R",[["^7P"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",836,"^5Q",["^N",["^67","^68"]],"^9",836,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^7P"]]]]]],"~$generate-fdef",["^ ","^5J",null,"^5",["^ ","^6","ghostwheel/core.cljc","^7",907,"^8",8,"^9",907,"^:",21,"^5U",true,"^Q",["^R",["^5K",["^R",[["^1?"]]]]]],"^5U",true,"^[","~$ghostwheel.core/generate-fdef","^6","ghostwheel/core.cljc","^:",21,"^5M",["^R",[["^1?"]]],"^5N",null,"^5O",["^R",[null,null]],"^8",1,"^5P",false,"^7",907,"^9",907,"^5R",1,"^5S",true,"^Q",["^R",["^5K",["^R",[["^1?"]]]]]]],"^25",["^ ","~$t","^A","^>","^?","^1I","^1J","~$u","^1K","^1J","^1J","^1K","^1K","^C","^C","^@","^A","^1N","^1N","^A","^A","^D","^E","^1S","^G","~$s","^?","^12","^12","^1Z","^1Z","^1[","^1[","^F","^G","^E","^E","^21","^E","^?","^?","^G","^G"],"~:cljs.analyzer/constants",["^ ","^23",["^N",["~$s/tuple","~:ghostwheel.core/some-unsafe-ops","~$ghostwheel.threading-macros/*some->","~:ghostwheel.core/strs","~$sort-by","~:ghostwheel.core/unsafe-clj-comp","~:args","~:ghostwheel.core/rest","~$cljs.spec.alpha/*","~$&","~:ghostwheel.core/binding-form","~:direct","~$reduce","~:spec-key","~:path","~$when-first","~$cljs.spec.test.alpha/unstrument","~:ghostwheel.reporting/fn-name","~$p1__77527#","~:req-un","~:opt-un","~$keep-indexed","~$cond->>","~$cljs.core/comp","~:ghostwheel.core/report-output","~$ghostwheel.tracer/tracer","~$Exception.","~$cljs.core/boolean?","~$cljs.core/str","~$seq?","~$every","~$cljs.spec.alpha/+","~$spec-checks__78251__auto__","~$ghostwheel.threading-macros/*cond->>","~:ghostwheel.core/anon-fn","~$ghostwheel.logging/group-end","~$iterate","~:ghostwheel.core/spec-elem","~:ret","~:ghostwheel.core/multi-function-composition","~:gfn","~$fn?","~$orchestra-cljs.spec.test/instrument","~:exclude","~$cljs.core/when","~$cljs.core/keyword?","~:unsafe-clj-block","~:ghostwheel.core/instrument","~:pred-exprs","~$cljs.core/binding","~:fun","~:ghostwheel.core/anon-args+body","~:into","~:keys-pred","~:ghostwheel.core/unsafe-form","~:ghostwheel.core/ns-keys","~$clojure.spec.test.check","~$vector?","~:ghostwheel.core/>fdef-args","~$any?","~$cljs.core/simple-symbol?","~:ghostwheel.core/safe-single-function-composition","~:ghostwheel.core/args+gspec+body","~$map","~$juxt","~:fn","~$cljs.core/qualified-symbol?","~$cljs.spec.alpha/alt","~$*runtime-asserts*","~:unsafe-argument","~$cljs.core/vector?","^16","~:ghostwheel.core/unsafe-clj-block","^5","~$ghostwheel.logging/group","~$cljs.core/=","~$boolean?","~:ghostwheel.core/bang-suffix","~$cljs.spec.alpha/def","~$atom?","~:opt-keys","~:color","~:ghostwheel.core/map-bindings","~:ghostwheel.core/gspec","~$keep","~$cljs.core/ifn?","~$mapcat","^10","~:pre","~$cljs.core/re-matches","~:ghostwheel.core/deftest","~$s/or","~$nilable","~$sort","~:key","~$map-indexed","~$comp","~:ghostwheel.core/extrument","~:single","~$*cond->","~:ghostwheel.core/ret-op","~:ghostwheel.core/map-binding-form","~$dorun","~:ghostwheel.core/check-target","~$simple-symbol?","^5U","~:ret-op","~:else","~$ghostwheel.logging/log","~:ghostwheel.core/defn","~:gspec","~:ghostwheel.core/args+body","~:gen","~$fnil","~$merge-with","~$p1__77907#","~$cljs.core/count","~:application","~$cljs.spec.alpha/and","~:ghostwheel.core/map-special-binding","~:ghostwheel.core/safe-function-application","~$ghostwheel.logging/*report-output*","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~$doseq","~$cljs.core/apply","~:ghostwheel.core/check","~$cljs.core/->","~$args","~:cljs.spec.alpha/kind-form","~$ghostwheel.threading-macros/*cond->","~:return","~:pred-sym","~:maybe","~$coll-of","~$float?","~$cljs.spec.alpha/every","~$when-let","~$set?","^11","~:bindings","~$spec__78249__auto__","~$cljs.core/mapv","~$take-while","^[","~$cljs.test/run-tests","~$cljs.core/not=","^2?","~:ghostwheel.core/check-coverage","~:ghostwheel.core/>defn-args","~$repeatedly","~$cljs.core/string?","~$p1__78250__78252__auto__","~:trace","~$remove","~$cljs.core/when-not","~$*","~$ghostwheel.logging/clog","~:req-specs","~$cljs.spec.alpha/or","~:value","~:or","^6K","~$js-delete","~:msb","~$cljs.core/qualified-keyword?","~$let","^6","~$cljs.core/concat","~:num-tests","~$map?","~$->","~$arg-specs-match-param-count?","~:unsafe-binding","~:varargs","~$*->>","^:","~:preds","^7[","~:tracer","~:background","~$cljs.core/defn-","~:unsafe-composition","~$clojure.string/ends-with?","~$clojure.test/deftest","~$cljs.core/defn","~$cljs.spec.alpha/fspec","~:unsafe-body","~$fn","~:amp","~$filterv","~:ghostwheel.core/num-tests","~$clojure.string/includes?","~:fn-name","~:gen-fn","~$cljs.spec.alpha/nilable","~$string?","~$valid-multi-arity-fn?","~:ghostwheel.core/check-targets","~:ghostwheel.reporting/unexpected-safety","~:update","~$as->","~$cljs.spec.alpha/tuple","~$double?","~$do","~$cljs.core/empty?","~$when-not","~:ghostwheel.reporting/unexpected-fx","~$ghostwheel.threading-macros/*->>","~:ghostwheel.core/variadic","~$when","~:ghostwheel.reporting/fspec","^W","~:bang-suffix","~$p1__77528#","~:multi-form-op","^73","~$int-in","~$int?","~$cljs.core/contains?","~$associative?","^1F","~$cljs.core/map?","~$p1__78905#","~$keyword?","^6[","~:ghostwheel.core/ghostwheel","~$p1__77768#","~$group-by","~$cljs.core/when-first","~:env","~$spec-args","~:mb","~:cljs.spec.alpha/cpred","~$some->>","^7?","~:syms","^1<","~$_","~$ghostwheel.logging/pr-clog","~$defn","~$cljs.core/update","~$if","~:unsafe-anon-fn","~$%","~:sym","~$|","~:distinct","^18","^8","~:ghostwheel.core/syms","~:ghostwheel.core/some-unsafe-bindings","~:ghostwheel.core/trace","~$*as->","^1T","~$reductions","~$*some->>","~:single-fn","~:ghostwheel.core/or","~$reduce-kv","~:ghostwheel.reporting/spec-checks","~:ghostwheel.core/trace-color","^1>","~$cljs.spec.alpha/keys","~:ghostwheel.core/as","~$cljs.core/swap!","~$cljs.core/let","~:dispatch","~$cljs.spec.alpha/spec","~:ghostwheel.core/threading-macro-op","~:ghostwheel.core/unsafe-clj-call","~$cljs.spec.alpha/merge","~:cljs.spec.alpha/invalid","~:nilable-gspec","~:ghostwheel.reporting/found-fx","~:ghostwheel.core/single-function-composition","~:req","~$memoize","~:binding","~:ghostwheel.core/pred-arg-list","~$ghostwheel.threading-macros/*as->","~:ghostwheel.core/map-binding","~:skipped-ops","~:unsafe-call","~:keys","~$neg-int?","~:ghostwheel.reporting/incomplete-coverage","~$cljs.spec.test.alpha/instrument","~:unsafe-clj-call","~$ghostwheel.threading-macros/*some->>","~$cond->","~$dotimes","~$update","~$update-in","^6;","~:ghostwheel.reporting/failure","^7","~$ghostwheel.logging/log-bold","~$tuple","~:threaded-form","~:list","~$fn*","~$cljs.core/when-let","~:quote","~:keyword","~:multi","~:generic","~:ghostwheel.core/nilable-gspec","^82","~:prepost+body","~$defn-","~$cljs.core/symbol","~:st","~$js/Error.","~:skipped-bindings","~:unsafe-bound-call","~:threading-macro-op","~$ident?","~:ghostwheel.core/expound","~$cljs.spec.alpha/gen","~$cljs.core/nat-int?","~:kind","~$cljs.spec.alpha/map-of","~:literal","~:unsafe-name","~$s","~:multiple-body-forms","~$cljs.core/set?","~$cljs.core/for","~:args-such-that","^12","~:ghostwheel.core/outstrument","~:req-keys","^1@","~$cljs.spec.alpha/valid?","~:repl","~$p1__77701#","~$?","~$cljs.core/fn","~$p1__78170#","~:opt-specs","^8:","~:threading","~$merge","~$cljs.core/key","~$integer?","^9","~$mapv","^89","~:ghostwheel.core/seq-binding-form","~:ghostwheel.reporting/background","~:bs","~:ghostwheel.core/prepost","~$cljs.core/vec","~:pass?","~:post","~$cljs.spec.test.alpha/check-fn","~:ghostwheel.core/keys","^1B","~:prepost","~$ifn?","~$some->","~$nat-int?","~:pred-forms","~$for","~$binding","~:ghostwheel.core/arg-list","~$partial","~:regex","~$dispatch","~$s/nilable","~:unexpected-fx","~$cljs.spec.alpha/fdef","~$cljs.core/not","~$cljs.core/complement","~$cljs.spec.gen.alpha/generate","~$cljs.core/if-not","~$cljs.test/deftest","~:ghostwheel.core/safe-multi-function-composition","~$argcount","~$every-pred","~$keys","~$pos-int?","~$clairvoyant.core/trace-forms","~:ghostwheel.core/num-tests-ext","^8<","~$ghostwheel.threading-macros/*->","^2=","~:ghostwheel.core/extensive-tests","~:composition","~:unsafe-op","~:cljs.spec.alpha/kfn","~:unsafe-block","~:seq","~:arity-n","~$filter","~:ghostwheel.core/ignore-fx","~:ghostwheel.core/function-application","~$+","~$cljs.core/->>","~:ghostwheel.core/ghostwheel-config","^6<","~$aset","^5K","~$cljs.core/symbol?","~:set","~:ghostwheel.core/local-name","~$cljs.core/when-some","~$map-of","^5S","~:safe","^Q","~:elems","~$some-fn","~$s/coll-of","~$cljs.core/and","~$cljs.test/is","~:body","^Z","~:ghostwheel.core/defn-macro","^?","~$cljs.core/some-fn","~$bang-suffix?","~$cljs.core/case","~:fx","~:nsk","~:ghostwheel.core/unsafe-op","~:bodies","~:ghostwheel.core/pred-fn","~$sorted-map-by","~$apply","~:enabled","~$cljs.core/seq?","~:jsdoc","~$fmap","~:expand","~:ghostwheel.core/gen-op","~:docstring","~$cljs.core/regexp?","~$double-in","~:binding-op","~$drop-while","~:traced-fn-name","~:map","~$cljs.core/list","~:cljs.spec.alpha/conform-all","~$cljs.spec.alpha/*runtime-asserts*","~:ghostwheel.core/safe-op","~$ghostwheel.reporting/report","~$complement","~:strs","~$cljs.core/or","~$cljs.core/name","~:test","~:rest","~$cljs.core/+","~$cljs.core/every?","~:ghostwheel.core/such-that-op","~$cljs.core/update-in","~$valid-multi-arity-ret?","~:ghostwheel.core/binding-op","~:pred-or-bindings","~$throw","~$cljs.core/every-pred","~:ghostwheel.reporting/marked-unsafe","~$*some->","~$cljs.core/any?","~:arity-1","~$and","~$number?","~:fn-such-that","~:ghostwheel.reporting/check-coverage","~$qualified-symbol?","~$*cond->>","~$seqable?","~$symbol?","~:ghostwheel.reporting/spec-failure","~:multi-fn","~$*->","~$when-some","~:cljs.spec.alpha/describe","~:ghostwheel.core/nilable","~$->>","~$cljs.spec.alpha/&","~:opt","~:some-unsafe-ops","~$cljs.core/ident?","~:unsafe-clj-comp","~:js-console","~$cljs.test/report","~$cljs.spec.alpha/?","~:black","~:attr"]],"~:order",["^?2","^8K","^<8","^=U","^BJ","^9>","^>X","^:X","^=M","^;W","^>Q","^9E","^?7","^;2","^;P","^>N","^8V","^:B","^=1","^AN","^:5","^;0","^?B","~$%","^;:","^93","^;M","^@J","^<G","^?4","^@@","^@B","^@[","^<K","^9G","^?=","^:J","^;6","^9Z","^?5","^:2","^B7","^;=","^=A","^AH","^B?","^?6","^B1","^<R","^=9","^9S","^9L","^@E","^=7","^90","^?@","^BG","^@M","^=V","^>7","^8W","^8X","^9@","^9H","^9M","^::","^;V","^?>","^?D","^?W","^BC","^=5","^AI","^5U","^11","^[","^6","^:","^8","^6;","^7","^9","^Q","^Z","^AP","^?","^:0","^@Q","^9T","^?A","^;L","^5K","~$&","^?J","^;7","^@U","^8M","^8N","^AQ","^BI","^<E","^2=","^2?","^=I","^?R","^BE","^?1","^=K","^@O","^B:","^8H","^:Q","^=R","^=W","^;3","^;Y","^>?","^=C","^AM","^><","^9O","^<0","^=;","^;;","^AO","^:<","^;D","^=@","^A4","^;[","^:D","^8E","^:N","^>2","^@G","^AF","^?Z","^>:","^9K","^@Z","^9:","^A;","^1F","^?L","^9[","^B2","^@H","^97","^=[","^<D","^A7","^9=","^@P","^?:","^;@","^@6","^7?","^8:","^:[","^<?","^94","^:V","^>4","^>T","^:=","^8Q","^9J","^>M","^89","~$|","^AT","^:M","^A?","^73","^?<","^<:","^:R","^B5","^<J","^A0","^;A","^1@","^@2","~~$_","^<B","^9Y","^<U","^AV","^A2","^?G","^<M","^@=","^=3","^?F","^=4","^96","^;C","^?T","^<4","^=6","^>K","^>@","^@S","^;B","^AB","^?H","^:9","^<L","^?V","^;F","^:6","^9A","^B4","^<S","^B9","^@>","^:E","^B@","~$+","~$*","^<Y","^B3","^A<","^12","^@A","^<X","^>;","^;>","^99","^8G","^>D","^@?","^91","^1>","^16","^A:","^<;","^:;","^<<","^A>","^9C","^9R","^9B","^>B","^@4","^:8","^=>","^<I","^AE","^;R","^@3","^?3","^@7","^AY","^>Y","^92","^=Z","^6K","^=D","^?K","^;N","^=:","^5S","^:4","^>A","^9;","^:T","^;I","^>W","^>J","^<N","^>R","^@0","^6<","^;5","^BH","^AK","^;K","^8T","^=X","^8<","^8[","^?N","^<2","^;U","^1B","^10","^:P","^>P","^=8","~$s","^<H","^AA","^:K","^1<","^:G","^18"]],"^2B",["^ ","^25",["^N",[]],"^24",["^N",[]]],"^2C",["^ "],"^2D",["^1O","^C","^1X","^1U","^1Q","^A","^1T","^1N","^1[","^?","^E","^G","^1L","^20","^1K","^1Y","^1Z","^1M","^1R","^1J"]],"^11","^12","~:ns-specs",["^ ","^8F",["^R",["^97",["^R",["^;7","^>=",["^R",["^8M","^AJ"]],"^@D","^A5"]]]],"^8H",["^R",["^;6","^9T","^?5","^:2"]],"^8J",["^R",["^9[","^=Q",["^R",["^;7","^@C",["^R",["^9[","^>S","^>6","^@T","^9U"]],"^@D","^A5","^AQ","^8L"]],"^B<",["^R",["^;7","^@C",["^R",["^9[","^>S","^9?","^@T","^@:"]],"^BD","^8F","^AQ","^8L"]]]],"^8L",["^R",["^8M","^B1"]],"^8N",["^R",["^;W","^=I","^@Q","^@G","^?J","^AF","^:N"]],"^90",["^N",["^?@","^BG"]],"^9:",["^R",["^;2","^A;",["^R",["^;7","^1F",["^N",[["^R",["^5K","^>N"]],["^R",["^5K","^?B"]]]],"^[",["^R",["^BI","^9T"]],"^?L",["^R",["^9[","^B2","^9K","^@H",["^R",["^97",["^R",["^=[","^9K"]]]]]]]]]],"^9=",["^R",["^;W","^@P","^?:","^;@",["^R",["^;2","^@O",["^R",["^@6",["^N",[["^R",["^5K","^7?"]],["^R",["^5K","^8:"]]]]]],["^R",["^>N",["^:["],["^R",["^<?",["^R",["^94","^:["]],"?"]]]]]],"^:V",["^R",["^;W","^>4","^>T","^:V","^:="]],"^8Q","^<0","^9J","^A7","^>M","^A;"]],"^9?",["^N",[["^R",["^5K","^:I"]]]],"^9G","^93","^9K",["^R",["^;7","^8K","^?Z","^@Z",["^R",["^8M","^B1"]]]],"^9N",["^R",["^;W","^@F",["^R",["^;2","^A;",["^R",["^;7","^9F","^:3","^AQ","^8L"]]]],"^>>",["^R",["^;2","^A;",["^R",["^9[","^8O",["^R",["^;7","^;1",["^R",["^BI",["^R",["^9[","^>S","^@K","^@T","^;4"]]]],"^@D","^A5","^AQ","^8L"]],"^?E",["^R",["^;7","^?0","^>0","^>L","^B1","^BD","^8F","^AQ","^8L"]],"^<P",["^R",["^;7","^<P",["^N",[["^R",["^5K","^=F"]],["^R",["^5K","^AU"]]]],"^AF","^B1","^8R","^B1","^@D","^A5","^AQ","^8L"]]]]]],"^<>",["^R",["^;2","^A;","^8J"]],"^<7",["^R",["^;2","^A;",["^R",["^;7","^AC","^AW","^;G","^=L","^AQ","^8L"]]]],"^:1",["^R",["^;2","^A;",["^R",["^;7","^9J","^AJ","^BD","^8F","^AQ","^8L"]]]]]],"^9O",["^R",["^<R",["^R",["^;2","^<0",["^R",["^>N",["^=;"],["^R",["^;;","^=;","^AO",["^N",["syms","keys"]]]]]]]],["^R",["^;6","^9T","^?5","^:2"]]]],"^9R",["^R",["^;2","^A;",["^R",["^;7","^[",["^R",["^;W","^=I","^@O","^:G","^<0"]],"^?L",["^R",["^9[","^B2","^9V","^@H",["^R",["^97",["^R",["^;2","^A;","^9V"]]]]]]]]]],"^9U",["^N",[["^R",["^5K","^AL"]],["^R",["^5K","^>8"]]]],"^9V",["^R",["^BB",["^R",["^;7","^8K","^?Z","^:V",["^R",["^<K","^:="]],"^@Z",["^R",["^9[","^>U",["^R",["^;7","^?S","^?M","^@Z",["^R",["^97","^B1"]]]],"^@Z",["^R",["^8M","^B1"]]]]]],["^R",["^?B","^<6",[["^ ","^>?",["^;<","^W"]]],["^R",["^@8","^W",true,["^R",["^=Y",["^@;",["^R",["^@L","^;<","^6[",["^R",["^;9","^AR"]]]],"^=?",["^R",["^8K","^W"]]],["^R",["^=G","^=?",["^R",["^;;","^=?","^8K","^;0",["^R",["^:5","^@;"]]]],["^R",["^:5","^@;",0]]]]]]]]]]]],"^:3",["^N",[["^R",["^5K","^<T"]],["^R",["^5K","^;8"]],["^R",["^5K","^>F"]]]],"^:7",["^R",["^AZ","^@O","^A1"]],"^:<",["^R",["^;D",["^R",["^;W","^=@","^><","^A4","^9O","^;[",["^R",["^<R",["^N",["^2?","^;Y","^=C","^>?","^AM"]],"^B1"]]]],"^9L",["^ "]]],"^:=",["^R",["^;2","^:2",["^R",["^;7","^8K",["^R",["^BI",["^R",["^;7","^8K",["^R",["^97","^9="]],"^?<",["^R",["^BI",["^R",["^;7","^1F","^AT","^<:",["^R",["^97","^A7"]]]]]]]]]],"^:R","^:M","^9>","^9=","^B5",["^R",["^BI",["^R",["^;7","^1F","^AT","^<:",["^R",["^97","^A7"]]]]]],"^:X",["^R",["^BI",["^R",["^;7","^1F","^A?","^<J",["^R",["^BI",["^R",["^A0","^A;","^@O"]]]]]]]]]]]],"^10",["^R",["^<B","^8K","^;N"]],"^:C",["^R",["^;2","^A;",["^R",["^;7","^1F",["^N",[["^R",["^5K","^@9"]]]],"^[","^@O","^@Z","^B1"]]]],"^:J",["^R",["^<K",["^R",["^;6","^9Z","^?5","^:2"]]]],"^:M",["^N",[["^R",["^5K","^89"]],"^9>"]],"^:N",["^R",["^>2","^:<","^;3"]],"^:P",["^R",["^;W","^9Y",["^R",["^;2","^A;",["^R",["^;7","^>P",["^N",[["^R",["^5K","^5K"]]]],"^=I",["^R",["^;2","^@O",["^R",["^>N",["^=8"],["^R",["^=Y",["~$s",["^R",["^94","^=8"]]],["^R",["^AN",["^R",["^<H","~$s","/"]],["^R",["^@5",["^R",["^<H","~$s","."]]]]]]]]]]]]]]]],"^11",["^R",["^;2","^A;",["^R",["^;7","^>P",["^N",[["^R",["^5K","^5K"]]]],"^=I","^@O"]]]],"^@0","^AA"]],"^:U",["^R",["^;2","^A;",["^R",["^;7","^1F",["^N",[["^R",["^5K","^<A"]],["^R",["^5K","^<="]]]],"^[","^9T","^A@",["^R",["^BI","^;P"]],"^5",["^R",["^BI","^=7"]],"^?L",["^R",["^9[","^B2","^:W","^@H",["^R",["^;7","^A6",["^R",["^97",["^R",["^=[","^:W"]]]],"^BK",["^R",["^BI","^=7"]]]]]]]]]],"^:W",["^R",["^;7","^8K","^?Z","^@Z",["^R",["^9[","^>U",["^R",["^;7","^?S","^?M","^@Z",["^R",["^97","^B1"]]]],"^@Z",["^R",["^8M","^B1"]]]]]],"^;3",["^R",["^=V","^8X",["^=W","^=R","^?R","^=K","^8H"]]],"^;4",["^N",[["^R",["^5K","^=S"]],["^R",["^5K","^8I"]],["^R",["^5K","^AD"]],["^R",["^5K","^;J"]],["^R",["^5K","^:F"]],["^R",["^5K","^:>"]],["^R",["^5K","^=<"]],["^R",["^5K","^8Y"]],["^R",["^5K","^?I"]],["^R",["^5K","^9<"]],["^R",["^5K","^:@"]],["^R",["^5K","^<F"]],["^R",["^5K","^=O"]],["^R",["^5K","^A8"]],["^R",["^5K","^@I"]],["^R",["^5K","^:Z"]],["^R",["^5K","^;S"]]]],"^;:","^93","^;M","^93","^;N",["^R",["^;2","^A;",["^R",["^;7","^[","^9T","^A@",["^R",["^BI","^;P"]],"^5",["^R",["^BI","^=7"]],"^?L",["^R",["^9[","^B2","^9V","^@H",["^R",["^97",["^R",["^;2","^A;","^9V"]]]]]]]]]],"^<G","^?4","^<N",["^R",["^;W","^:K","^:P","^>R",["^R",["^=[",["^R",["^97","^:P"]]]]]],"^1<",["^R",["^<B","^8K",["^R",["^=[",["^R",["^BI","^<N"]]]]]],"^18",["^R",["^<B","^8K","^9R"]],"^=K",["^R",["^;6","^@O","^?5","^:2"]],"^=L",["^R",["^;2","^:2",["^R",["^97",["^R",["^;7","^>Z",["^R",["^8M",["^R",["^;7","^>9","^8N","^;X","^AJ"]]]],"^<7",["^R",["^;7","^>9","^8N","^;X","^A5"]]]]]]]],"^=M",["^N",[0,1,4,true,6,3,2,5]],"^=R",["^R",["^?6","^9T","^B1"]],"^=U",["^R",["^;W","^>Q","^9E","^?7",["^R",["^;2","^;P",["^R",["^>N",["^8V"],["^R",["^:B",["~#regexp",["#[a-fA-F0-9]+",0]],"^8V"]]]],["^R",["^>N",["^=1"],["^R",["^AN",["^R",["^:5",["^R",["^;0","^=1"]],7]],["^R",["^:5",["^R",["^;0","^=1"]],4]]]]]]]]]],"^=W","^@Q","^>0","^82","^>1",["^N",[["^R",["^5K","^@1"]],["^R",["^5K","^;Z"]],["^R",["^5K","^@N"]],["^R",["^5K","^:O"]],["^R",["^5K","^;O"]]]],"^>6",["^N",[["^R",["^5K","^:Y"]],["^R",["^5K","^?["]]]],"^>:",["^R",["^;2","^:2",["^R",["^;7","^8K",["^R",["^8M",["^R",["^;W","^=I","^@Q"]]]]]]]],"^><",["^R",["^<R","^8N","^B1"]],"^>T",["^R",["^;2","^:2",["^R",["^;7","^;A",["^N",[["^R",["^5K","^<K"]],["^R",["^5K","^1@"]]]],"^:V","^:="]]]],"^?2",["^R",["^<K",["^R",["^?6","^9E","^B1"]]]],"^?=","^93","^?J",["^R",["^;2","^:2",["^R",["^;7","^@U",["^R",["^8M","^8N"]],"^AQ",["^R",["^BI",["^R",["^;7","^<E",["^N",[["^R",["^5K","~$&"]]]],"^2=","^8N"]]]],"^2?",["^R",["^BI",["^R",["^;7","^2?",["^N",["^2?"]],"^=I","^@Q"]]]]]]]],"^?M",["^R",["^?6",["^N",["^:A","^?P"]],["^R",["^;6","^A;","^?5","^:2","^=J",true]]]],"^?R",["^R",["^;6","^BE","^?5","^:2"]],"^1B",["^R",["^<B","^8K","^;N"]],"^?Z",["^R",["^;2","^:2",["^R",["^;7","^8K",["^R",["^8M","^8N"]],"^<8",["^R",["^BI",["^R",["^;7","^<E",["^N",[["^R",["^5K","~$&"]]]],"^2=","^8N"]]]]]]]],"^@:",["^N",[["^R",["^5K","^@V"]],["^R",["^5K","^9X"]],["^R",["^5K","^@<"]]]],"^@@","^?4","^@B","^93","^@J","^93","^@K",["^N",[["^R",["^5K","^A="]],["^R",["^5K","^A9"]],["^R",["^5K","^9W"]],["^R",["^5K","^8P"]],["^R",["^5K","^:H"]]]],"^@M",["^R",["^;2",["^R",["^=V","^>7",["^=M","^=U","^;:","^;M","^@J","^<G","^@@","^@B","^@[","^9G","^?=","^:J","^?2","^90"]]]]],"^@Q",["^R",["^;2","^9T",["^R",["^>N",["^?A"],["^R",["^;L",["^R",["^5K","~$&"]],"^?A"]]]]]],"^@[",["^R",["^<K","^;P"]],"^A5",["^R",["^9[","^=0","^:7","^=H",["^R",["^;2","^A;",["^R",["^9[","^<C",["^R",["^;7","^9J",["^N",[["^R",["^5K","^>N"]],["^R",["^5K","^?B"]]]],"^[",["^R",["^BI","^9T"]],"^8K","^?Z","^@Z","^9N"]],"^?8",["^R",["^;7","^9J",["^N",[["^R",["^5K","^>N"]],["^R",["^5K","^?B"]]]],"^[",["^R",["^AZ","^9T","^A1"]],"^8K","^?Z","^@Z","^B1"]]]]]],"^>C","^>1","^BF",["^R",["^=[","^8J"]],"^>[",["^R",["^>N",["^?C"],["^R",["^=5","^7[","^?C"]]]],"^=2",["^R",["^;7","^1F",["^N",[["^R",["^5K","^>O"]],["^R",["^5K","^=Y"]],["^R",["^5K","^9I"]],["^R",["^5K","^9D"]],["^R",["^5K","^@R"]],["^R",["^5K","^=="]],["^R",["^5K","^;T"]]]],"^AX","^B1","^A3",["^R",["^97","^B1"]],"^;?","^B1"]]]],"^A7",["^R",["^;2","^A;",["^R",["^;7","^1F",["^N",[["^R",["^5K","^>N"]],["^R",["^5K","^?B"]]]],"^[",["^R",["^BI","^9T"]],"^8K","^>:","^@Z","^B1"]]]],"^A?",["^N",["^:X",["^R",["^5K","^73"]]]],"^AJ",["^R",["^?B",["~$%"],["^R",["^@5",["^R",["^??","^A5",["^R",["^AG","~$%"]]]]]]]],"^AT",["^N",[["^R",["^5K","~$|"]],"^>X"]],"^AW",["^N",[["^R",["^5K","^;8"]],["^R",["^5K","^?X"]],["^R",["^5K","^<1"]],["^R",["^5K","^?Y"]]]]],"~:ns-speced-vars",["^10","^1<","^18","^1B"],"~:compiler-options",["^2R",[["^BP","~:static-fns"],true,["^BP","~:elide-asserts"],true,["^BP","~:optimize-constants"],null,["^BP","^2I"],null,["^BP","~:external-config"],null,["^BP","~:tooling-config"],null,["^BP","~:emit-constants"],null,["^BP","~:load-tests"],false,["^BP","~:form-size-threshold"],null,["^BP","~:infer-externs"],true,["^BP","^2K"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^BP","~:fn-invoke-direct"],null,["^BP","~:source-map"],"/dev/null"]]]