["^ ","~:output",["^ ","~:js","goog.provide('ghostwheel.reporting');\nghostwheel.reporting._STAR_all_tests_successful = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(true);\nghostwheel.reporting.wrap = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging.wrap_line,(80));\nghostwheel.reporting.inc_report_counter_BANG_ = cljs.test.inc_report_counter_BANG_;\nghostwheel.reporting.warning_style = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606),new cljs.core.Keyword(null,\"orange0\",\"orange0\",1459969095).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)], null);\nghostwheel.reporting.snippets = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"ghostwheel.reporting\",\"incomplete-coverage\",\"ghostwheel.reporting/incomplete-coverage\",1228796498),\" => Test coverage incomplete:\",new cljs.core.Keyword(\"ghostwheel.reporting\",\"no-gen-testing\",\"ghostwheel.reporting/no-gen-testing\",1838578005),\" => No generative testing performed\"], null);\nif((typeof ghostwheel !== 'undefined') && (typeof ghostwheel.reporting !== 'undefined') && (typeof ghostwheel.reporting.report !== 'undefined')){\n} else {\nghostwheel.reporting.report = (function (){var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__73176 = cljs.core.get_global_hierarchy;\nreturn (fexpr__73176.cljs$core$IFn$_invoke$arity$0 ? fexpr__73176.cljs$core$IFn$_invoke$arity$0() : fexpr__73176.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"ghostwheel.reporting\",\"report\"),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4617__auto__,method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__));\n})();\n}\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"begin-test-ns\",\"begin-test-ns\",-1701237033),(function (m){\nreturn ghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2([\"Checking \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(m)),\" ...\"].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606),new cljs.core.Keyword(null,\"base01\",\"base01\",277019065).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)], null));\n}));\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"end-test-ns\",\"end-test-ns\",1620675645),(function (m){\nreturn ghostwheel.logging.group_end();\n}));\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"summary\",\"summary\",380847952),(function (m){\nvar map__73191 = m;\nvar map__73191__$1 = (((((!((map__73191 == null))))?(((((map__73191.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73191.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73191):map__73191);\nvar fail = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73191__$1,new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930));\nvar error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73191__$1,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\nvar pass = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73191__$1,new cljs.core.Keyword(null,\"pass\",\"pass\",1574159993));\nvar test = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73191__$1,new cljs.core.Keyword(null,\"test\",\"test\",577538877));\nvar warn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73191__$1,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552));\nvar passed_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(pass,test);\nvar warnings_QMARK_ = (function (){var G__73200 = warn;\nif((G__73200 == null)){\nreturn null;\n} else {\nreturn (G__73200 > (0));\n}\n})();\nvar color = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(test,(0)))?new cljs.core.Keyword(null,\"black\",\"black\",1294279647).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors):((passed_QMARK_)?new cljs.core.Keyword(null,\"green\",\"green\",-945526839).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors):new cljs.core.Keyword(null,\"red\",\"red\",-969428204).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)\n));\nvar label = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(test,(0)))?\"No active tests found\":((passed_QMARK_)?[\"Passed all \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(test),\" checks\"].join(''):[\"Failed \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fail),\" of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(test),\" checks\",(((error > (0)))?[\"; \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(error),\" test error(s)\"].join(''):null)].join('')\n));\nghostwheel.logging.group_end();\n\nif(cljs.core.truth_((function (){var or__4131__auto__ = (!(passed_QMARK_));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn warnings_QMARK_;\n}\n})())){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0();\n} else {\n}\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2(label,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606),color], null));\n\nif(cljs.core.truth_(warnings_QMARK_)){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(warn),\" warning(s)\"].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606),new cljs.core.Keyword(null,\"orange0\",\"orange0\",1459969095).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)], null));\n} else {\n}\n\nreturn cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2((5),ghostwheel.logging.group_end));\n}));\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"pass\",\"pass\",1574159993),(function (m){\nvar map__73216 = new cljs.core.Keyword(null,\"message\",\"message\",-406056002).cljs$core$IFn$_invoke$arity$1(m);\nvar map__73216__$1 = (((((!((map__73216 == null))))?(((((map__73216.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73216.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73216):map__73216);\nvar fn_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73216__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"fn-name\",\"ghostwheel.reporting/fn-name\",466254528));\nvar fspec = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73216__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"fspec\",\"ghostwheel.reporting/fspec\",-1190332275));\nvar spec_checks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73216__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"spec-checks\",\"ghostwheel.reporting/spec-checks\",-803336688));\nvar check_coverage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73216__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"check-coverage\",\"ghostwheel.reporting/check-coverage\",-1277601858));\nvar marked_unsafe = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73216__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"marked-unsafe\",\"ghostwheel.reporting/marked-unsafe\",-275678850));\nvar report_output = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73216__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"report-output\",\"ghostwheel.reporting/report-output\",-1798642788));\nvar G__73220_73511 = new cljs.core.Keyword(null,\"pass\",\"pass\",1574159993);\n(ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1(G__73220_73511) : ghostwheel.reporting.inc_report_counter_BANG_.call(null,G__73220_73511));\n\nif(cljs.core.truth_(check_coverage)){\nif(cljs.core.truth_(marked_unsafe)){\nvar G__73222_73514 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\n(ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1(G__73222_73514) : ghostwheel.reporting.inc_report_counter_BANG_.call(null,G__73222_73514));\n\nghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2([\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name),\" \\u2013 Function marked as unsafe.\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"no-gen-testing\",\"ghostwheel.reporting/no-gen-testing\",1838578005).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"incomplete-coverage\",\"ghostwheel.reporting/incomplete-coverage\",1228796498).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets))].join(''),ghostwheel.reporting.warning_style);\n\nreturn ghostwheel.logging.group_end();\n} else {\nif(cljs.core.not(fspec)){\nvar G__73223_73520 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\n(ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1(G__73223_73520) : ghostwheel.reporting.inc_report_counter_BANG_.call(null,G__73223_73520));\n\nghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2([\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name),\" \\u2013 Missing fspec(s)\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"no-gen-testing\",\"ghostwheel.reporting/no-gen-testing\",1838578005).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"incomplete-coverage\",\"ghostwheel.reporting/incomplete-coverage\",1228796498).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets))].join(''),ghostwheel.reporting.warning_style);\n\nreturn ghostwheel.logging.group_end();\n} else {\nif(cljs.core.not(spec_checks)){\nvar G__73225_73525 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\n(ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1(G__73225_73525) : ghostwheel.reporting.inc_report_counter_BANG_.call(null,G__73225_73525));\n\nghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2([\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name),\" \\u2013 Number of tests set to 0\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"no-gen-testing\",\"ghostwheel.reporting/no-gen-testing\",1838578005).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"ghostwheel.reporting\",\"incomplete-coverage\",\"ghostwheel.reporting/incomplete-coverage\",1228796498).cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.snippets))].join(''),ghostwheel.reporting.warning_style);\n\nreturn ghostwheel.logging.group_end();\n} else {\nreturn null;\n\n}\n}\n}\n} else {\nreturn null;\n}\n}));\nghostwheel.reporting.explain_problem_str = (function ghostwheel$reporting$explain_problem_str(failure_type,problem){\nvar map__73228 = problem;\nvar map__73228__$1 = (((((!((map__73228 == null))))?(((((map__73228.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73228.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73228):map__73228);\nvar pred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73228__$1,new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397));\nvar val = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73228__$1,new cljs.core.Keyword(null,\"val\",\"val\",128701612));\nvar in$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73228__$1,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\nvar path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73228__$1,new cljs.core.Keyword(null,\"path\",\"path\",-188191168));\nvar via = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73228__$1,new cljs.core.Keyword(null,\"via\",\"via\",-1904457336));\nvar G__73231 = failure_type;\nvar G__73231__$1 = (((G__73231 instanceof cljs.core.Keyword))?G__73231.fqn:null);\nswitch (G__73231__$1) {\ncase \"check-failed\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),val,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865),in$,new cljs.core.Keyword(null,\"not\",\"not\",-595976884),pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(path,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"at\",\"at\",1476951349),path], null):null),((cljs.core.seq(via))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"via\",\"via\",-1904457336),via], null):null)], null));\n\nbreak;\ncase \"instrument\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),val,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865),in$,new cljs.core.Keyword(null,\"not\",\"not\",-595976884),pred,new cljs.core.Keyword(null,\"at\",\"at\",1476951349),path], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [((cljs.core.seq(via))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"via\",\"via\",-1904457336),via], null):null)], null));\n\nbreak;\ncase \"else\":\nreturn problem;\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__73231__$1)].join('')));\n\n}\n});\nghostwheel.reporting.issue_msg = \"\\nPlease file an issue at https://github.com/gnl/ghostwheel/issues if you encounter false positives or negatives in side effect detection.\";\nghostwheel.reporting.report_unexpected_side_effects = (function ghostwheel$reporting$report_unexpected_side_effects(message){\nvar map__73241 = message;\nvar map__73241__$1 = (((((!((map__73241 == null))))?(((((map__73241.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73241.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73241):map__73241);\nvar fn_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73241__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"fn-name\",\"ghostwheel.reporting/fn-name\",466254528));\nvar found_fx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73241__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"found-fx\",\"ghostwheel.reporting/found-fx\",-263226799));\nghostwheel.logging.log_bold(\"Possible side effects detected in function marked as safe:\\n\");\n\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging.log,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__73241,map__73241__$1,fn_name,found_fx){\nreturn (function (p__73250){\nvar vec__73251 = p__73250;\nvar type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73251,(0),null);\nvar form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73251,(1),null);\nvar details = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73251,(2),null);\nreturn cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [type], null),(cljs.core.truth_(form)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"at\",\"at\",-1177484420,null),form], null):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(details)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"kind\",\"kind\",923265724,null),details], null):null)], 0)));\n});})(map__73241,map__73241__$1,fn_name,found_fx))\n,found_fx)));\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1((function (){var G__73263 = [\"=> Either remove the side effects, rename the function to '\",[cljs.core.name(fn_name),\"!'\"].join(''),\" to mark it as unsafe, or add ^::g/ignore-fx to its metadata to disable this warning and consider the function safe for automated generative testing.\"].join('');\nreturn (ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1(G__73263) : ghostwheel.reporting.wrap.call(null,G__73263));\n})());\n\nreturn ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1((ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.issue_msg) : ghostwheel.reporting.wrap.call(null,ghostwheel.reporting.issue_msg)));\n});\nghostwheel.reporting.report_unexpected_safety = (function ghostwheel$reporting$report_unexpected_safety(message){\nvar safe_name = clojure.string.replace(cljs.core.name(new cljs.core.Keyword(\"ghostwheel.reporting\",\"fn-name\",\"ghostwheel.reporting/fn-name\",466254528).cljs$core$IFn$_invoke$arity$1(message)),/!$/,\"\");\nghostwheel.logging.log_bold(\"No side effects detected in function marked as unsafe.\");\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1((function (){var G__73271 = [\"=> If safe, rename to '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(safe_name),\"'. If unsafe, rename the called unsafe functions to suffix them with a '!', or add the ^::g/ignore-fx metadata to disable this check.\"].join('');\nreturn (ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1(G__73271) : ghostwheel.reporting.wrap.call(null,G__73271));\n})());\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1((ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.wrap.cljs$core$IFn$_invoke$arity$1(ghostwheel.reporting.issue_msg) : ghostwheel.reporting.wrap.call(null,ghostwheel.reporting.issue_msg)));\n\nreturn ghostwheel.logging.log;\n});\nghostwheel.reporting.report_spec_check = (function ghostwheel$reporting$report_spec_check(p__73284){\nvar map__73285 = p__73284;\nvar map__73285__$1 = (((((!((map__73285 == null))))?(((((map__73285.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73285.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73285):map__73285);\nvar spec_checks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73285__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"spec-checks\",\"ghostwheel.reporting/spec-checks\",-803336688));\nvar fn_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73285__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"fn-name\",\"ghostwheel.reporting/fn-name\",466254528));\nvar seq__73291 = cljs.core.seq(spec_checks);\nvar chunk__73295 = null;\nvar count__73296 = (0);\nvar i__73297 = (0);\nwhile(true){\nif((i__73297 < count__73296)){\nvar check = chunk__73295.cljs$core$IIndexed$_nth$arity$2(null,i__73297);\nvar test_ret = cljs.core.get.cljs$core$IFn$_invoke$arity$2(check,new cljs.core.Keyword(\"clojure.test.check\",\"ret\",\"clojure.test.check/ret\",1393978960));\nif(cljs.core.not(new cljs.core.Keyword(null,\"pass?\",\"pass?\",-424635753).cljs$core$IFn$_invoke$arity$1(test_ret))){\nvar spec_error_73568 = new cljs.core.Keyword(null,\"result\",\"result\",1415092211).cljs$core$IFn$_invoke$arity$1(test_ret);\nvar data_73569 = spec_error_73568.data;\nvar msg_73570 = (function (){try{return spec_error_73568.message;\n}catch (e73379){if((e73379 instanceof Object)){\nvar _ = e73379;\nreturn null;\n} else {\nthrow e73379;\n\n}\n}})();\nif(cljs.core.not(data_73569)){\nghostwheel.logging.log_bold(msg_73570);\n} else {\nvar temp__5753__auto___73576 = new cljs.core.Keyword(\"cljs.spec.test.alpha\",\"args\",\"cljs.spec.test.alpha/args\",78409593).cljs$core$IFn$_invoke$arity$1(data_73569);\nif(cljs.core.truth_(temp__5753__auto___73576)){\nvar args_73578 = temp__5753__auto___73576;\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(\"\\nCall:\");\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(cljs.core.cons(cljs.core.with_meta(fn_name,null),args_73578));\n} else {\n}\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0();\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592).cljs$core$IFn$_invoke$arity$1(data_73569),new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844))){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(clojure.string.split_lines(msg_73570))),\"\\n\"].join(''));\n} else {\n}\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1([(function (){var sb__4661__auto__ = (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR__orig_val__73394_73581 = cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR__orig_val__73395_73582 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_newline_STAR__temp_val__73396_73583 = true;\nvar _STAR_print_fn_STAR__temp_val__73397_73584 = ((function (seq__73291,chunk__73295,count__73296,i__73297,_STAR_print_newline_STAR__orig_val__73394_73581,_STAR_print_fn_STAR__orig_val__73395_73582,_STAR_print_newline_STAR__temp_val__73396_73583,sb__4661__auto__,spec_error_73568,data_73569,msg_73570,test_ret,check,map__73285,map__73285__$1,spec_checks,fn_name){\nreturn (function (x__4662__auto__){\nreturn sb__4661__auto__.append(x__4662__auto__);\n});})(seq__73291,chunk__73295,count__73296,i__73297,_STAR_print_newline_STAR__orig_val__73394_73581,_STAR_print_fn_STAR__orig_val__73395_73582,_STAR_print_newline_STAR__temp_val__73396_73583,sb__4661__auto__,spec_error_73568,data_73569,msg_73570,test_ret,check,map__73285,map__73285__$1,spec_checks,fn_name))\n;\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__73396_73583;\n\ncljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__73397_73584;\n\ntry{var fexpr__73401_73590 = expound.alpha.custom_printer(null);\n(fexpr__73401_73590.cljs$core$IFn$_invoke$arity$1 ? fexpr__73401_73590.cljs$core$IFn$_invoke$arity$1(data_73569) : fexpr__73401_73590.call(null,data_73569));\n}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__73395_73582;\n\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__73394_73581;\n}\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);\n})(),\"\\n\"].join(''));\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging._STAR_report_output_STAR_,new cljs.core.Keyword(null,\"js-console\",\"js-console\",1240105791))){\nghostwheel.logging.group_collapsed.cljs$core$IFn$_invoke$arity$2(\"Raw error data:\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606),new cljs.core.Keyword(null,\"base0\",\"base0\",128742798).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)], null));\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(msg_73570);\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(data_73569);\n\nghostwheel.logging.group_end();\n} else {\n}\n}\n\n\nvar G__73600 = seq__73291;\nvar G__73601 = chunk__73295;\nvar G__73602 = count__73296;\nvar G__73603 = (i__73297 + (1));\nseq__73291 = G__73600;\nchunk__73295 = G__73601;\ncount__73296 = G__73602;\ni__73297 = G__73603;\ncontinue;\n} else {\nvar G__73607 = seq__73291;\nvar G__73608 = chunk__73295;\nvar G__73609 = count__73296;\nvar G__73610 = (i__73297 + (1));\nseq__73291 = G__73607;\nchunk__73295 = G__73608;\ncount__73296 = G__73609;\ni__73297 = G__73610;\ncontinue;\n}\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__73291);\nif(temp__5753__auto__){\nvar seq__73291__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__73291__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__73291__$1);\nvar G__73614 = cljs.core.chunk_rest(seq__73291__$1);\nvar G__73615 = c__4550__auto__;\nvar G__73616 = cljs.core.count(c__4550__auto__);\nvar G__73617 = (0);\nseq__73291 = G__73614;\nchunk__73295 = G__73615;\ncount__73296 = G__73616;\ni__73297 = G__73617;\ncontinue;\n} else {\nvar check = cljs.core.first(seq__73291__$1);\nvar test_ret = cljs.core.get.cljs$core$IFn$_invoke$arity$2(check,new cljs.core.Keyword(\"clojure.test.check\",\"ret\",\"clojure.test.check/ret\",1393978960));\nif(cljs.core.not(new cljs.core.Keyword(null,\"pass?\",\"pass?\",-424635753).cljs$core$IFn$_invoke$arity$1(test_ret))){\nvar spec_error_73622 = new cljs.core.Keyword(null,\"result\",\"result\",1415092211).cljs$core$IFn$_invoke$arity$1(test_ret);\nvar data_73623 = spec_error_73622.data;\nvar msg_73624 = (function (){try{return spec_error_73622.message;\n}catch (e73412){if((e73412 instanceof Object)){\nvar _ = e73412;\nreturn null;\n} else {\nthrow e73412;\n\n}\n}})();\nif(cljs.core.not(data_73623)){\nghostwheel.logging.log_bold(msg_73624);\n} else {\nvar temp__5753__auto___73628__$1 = new cljs.core.Keyword(\"cljs.spec.test.alpha\",\"args\",\"cljs.spec.test.alpha/args\",78409593).cljs$core$IFn$_invoke$arity$1(data_73623);\nif(cljs.core.truth_(temp__5753__auto___73628__$1)){\nvar args_73631 = temp__5753__auto___73628__$1;\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(\"\\nCall:\");\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(cljs.core.cons(cljs.core.with_meta(fn_name,null),args_73631));\n} else {\n}\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0();\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592).cljs$core$IFn$_invoke$arity$1(data_73623),new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844))){\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(clojure.string.split_lines(msg_73624))),\"\\n\"].join(''));\n} else {\n}\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1([(function (){var sb__4661__auto__ = (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR__orig_val__73436_73639 = cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR__orig_val__73437_73640 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_newline_STAR__temp_val__73438_73641 = true;\nvar _STAR_print_fn_STAR__temp_val__73439_73642 = ((function (seq__73291,chunk__73295,count__73296,i__73297,_STAR_print_newline_STAR__orig_val__73436_73639,_STAR_print_fn_STAR__orig_val__73437_73640,_STAR_print_newline_STAR__temp_val__73438_73641,sb__4661__auto__,spec_error_73622,data_73623,msg_73624,test_ret,check,seq__73291__$1,temp__5753__auto__,map__73285,map__73285__$1,spec_checks,fn_name){\nreturn (function (x__4662__auto__){\nreturn sb__4661__auto__.append(x__4662__auto__);\n});})(seq__73291,chunk__73295,count__73296,i__73297,_STAR_print_newline_STAR__orig_val__73436_73639,_STAR_print_fn_STAR__orig_val__73437_73640,_STAR_print_newline_STAR__temp_val__73438_73641,sb__4661__auto__,spec_error_73622,data_73623,msg_73624,test_ret,check,seq__73291__$1,temp__5753__auto__,map__73285,map__73285__$1,spec_checks,fn_name))\n;\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__73438_73641;\n\ncljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__73439_73642;\n\ntry{var fexpr__73445_73648 = expound.alpha.custom_printer(null);\n(fexpr__73445_73648.cljs$core$IFn$_invoke$arity$1 ? fexpr__73445_73648.cljs$core$IFn$_invoke$arity$1(data_73623) : fexpr__73445_73648.call(null,data_73623));\n}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__73437_73640;\n\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__73436_73639;\n}\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);\n})(),\"\\n\"].join(''));\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ghostwheel.logging._STAR_report_output_STAR_,new cljs.core.Keyword(null,\"js-console\",\"js-console\",1240105791))){\nghostwheel.logging.group_collapsed.cljs$core$IFn$_invoke$arity$2(\"Raw error data:\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606),new cljs.core.Keyword(null,\"base0\",\"base0\",128742798).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)], null));\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(msg_73624);\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(data_73623);\n\nghostwheel.logging.group_end();\n} else {\n}\n}\n\n\nvar G__73656 = cljs.core.next(seq__73291__$1);\nvar G__73658 = null;\nvar G__73659 = (0);\nvar G__73660 = (0);\nseq__73291 = G__73656;\nchunk__73295 = G__73658;\ncount__73296 = G__73659;\ni__73297 = G__73660;\ncontinue;\n} else {\nvar G__73661 = cljs.core.next(seq__73291__$1);\nvar G__73662 = null;\nvar G__73663 = (0);\nvar G__73664 = (0);\nseq__73291 = G__73661;\nchunk__73295 = G__73662;\ncount__73296 = G__73663;\ni__73297 = G__73664;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),(function (m){\nvar message = new cljs.core.Keyword(null,\"message\",\"message\",-406056002).cljs$core$IFn$_invoke$arity$1(m);\nvar map__73450 = message;\nvar map__73450__$1 = (((((!((map__73450 == null))))?(((((map__73450.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73450.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73450):map__73450);\nvar fn_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73450__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"fn-name\",\"ghostwheel.reporting/fn-name\",466254528));\nvar failure = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73450__$1,new cljs.core.Keyword(\"ghostwheel.reporting\",\"failure\",\"ghostwheel.reporting/failure\",-713780845));\nvar summary = (function (){var G__73457 = failure;\nvar G__73457__$1 = (((G__73457 instanceof cljs.core.Keyword))?G__73457.fqn:null);\nswitch (G__73457__$1) {\ncase \"ghostwheel.reporting/unexpected-fx\":\nreturn \"Possible side effects detected\";\n\nbreak;\ncase \"ghostwheel.reporting/unexpected-safety\":\nreturn \"Expected side effects not detected\";\n\nbreak;\ncase \"ghostwheel.reporting/spec-failure\":\nreturn \"Spec check\";\n\nbreak;\ndefault:\nreturn null;\n\n}\n})();\nvar start_group = ghostwheel.logging.group;\nvar G__73462_73672 = new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930);\n(ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1 ? ghostwheel.reporting.inc_report_counter_BANG_.cljs$core$IFn$_invoke$arity$1(G__73462_73672) : ghostwheel.reporting.inc_report_counter_BANG_.call(null,G__73462_73672));\n\nvar G__73463_73674 = [\"FAILED: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name),\" \\u2013 \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(summary)].join('');\nvar G__73464_73675 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"ghostwheel.logging\",\"background\",\"ghostwheel.logging/background\",41589606),new cljs.core.Keyword(null,\"red\",\"red\",-969428204).cljs$core$IFn$_invoke$arity$1(ghostwheel.logging.ghostwheel_colors)], null);\n(start_group.cljs$core$IFn$_invoke$arity$2 ? start_group.cljs$core$IFn$_invoke$arity$2(G__73463_73674,G__73464_73675) : start_group.call(null,G__73463_73674,G__73464_73675));\n\nvar G__73466_73680 = failure;\nvar G__73466_73681__$1 = (((G__73466_73680 instanceof cljs.core.Keyword))?G__73466_73680.fqn:null);\nswitch (G__73466_73681__$1) {\ncase \"ghostwheel.reporting/unexpected-fx\":\nghostwheel.reporting.report_unexpected_side_effects(message);\n\nbreak;\ncase \"ghostwheel.reporting/unexpected-safety\":\nghostwheel.reporting.report_unexpected_safety(message);\n\nbreak;\ncase \"ghostwheel.reporting/spec-failure\":\nghostwheel.reporting.report_spec_check(message);\n\nbreak;\ndefault:\nghostwheel.logging.log_bold([\"Undefined failure reason: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(failure)].join(''));\n\nghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1(message);\n\n}\n\nreturn ghostwheel.logging.group_end();\n}));\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),(function (m){\nreturn ghostwheel.logging.DBG.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m], 0));\n}));\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"end-run-tests\",\"end-run-tests\",267300563),(function (m){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(ghostwheel.reporting._STAR_all_tests_successful,(function (p1__73475_SHARP_,p2__73476_SHARP_){\nvar and__4120__auto__ = p1__73475_SHARP_;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn p2__73476_SHARP_;\n} else {\nreturn and__4120__auto__;\n}\n}),cljs.test.successful_QMARK_(m));\n}));\nghostwheel.reporting.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (_){\nreturn null;\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","ghostwheel/reporting.cljc","~:line",9,"~:column",14,"~:end-line",9,"~:end-column",34,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$ghostwheel.reporting","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$t","^B","^?","^@","~$expound.alpha","^V","^D","^D","^A","^B","^B","^B","~$goog","^W","^E","^F","~$s","^@","~$string","~$clojure.string","~$l","~$ghostwheel.logging","^Z","^Z","~$expound","^V","^F","^F","^Y","^Y","~$st","^F","^@","^@"],"~:seen",["^O",["~:require"]],"~:uses",["^ ","~$log","^Z","~$log-bold","^Z","~$group","^Z","~$group-collapsed","^Z","~$group-end","^Z","~$DBG","^Z"],"~:require-macros",["^ ","~$t","^B","^?","^@","^D","^D","^A","^B","^B","^B","^E","^F","~$s","^@","^F","^F","^10","^F","^@","^@"],"~:form",["~#list",["~$ns","^Q",["^1<",["^12",["^?","~:as","~$s"],["^E","^1>","^10"],["^A","^1>","~$t"],["^V","^1>","^["],["^Y","^1>","^X"],["^Z","^1>","~$l","~:refer",["^14","^15","^16","^17","^18","^19"]]]]]],"~:flags",["^ ","^12",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^W","^D","^@","^F","^B","^V","^Y","^Z"]],"^S","^Q","~:resource-id",["~:shadow.build.classpath/resource","ghostwheel/reporting.cljc"],"~:compiled-at",1630228761217,"~:resource-name","ghostwheel/reporting.cljc","~:warnings",[],"~:source",";; Copyright (c) George Lipov. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 2.0 (https://choosealicense.com/licenses/epl-2.0/)\n;; which can be found in the file LICENSE at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n\n(ns ^:no-doc ghostwheel.reporting\n  (:require [clojure.spec.alpha :as s]\n            [clojure.spec.test.alpha :as st]\n            [clojure.test :as t]\n            [expound.alpha :as expound]\n            [clojure.string :as string]\n            [ghostwheel.logging :as l\n             :refer [log log-bold group group-collapsed group-end DBG]]))\n\n\n(def *all-tests-successful (atom true))\n\n\n(def wrap (partial l/wrap-line 80))\n\n\n(def inc-report-counter! #?(:clj  t/inc-report-counter\n                            :cljs t/inc-report-counter!))\n\n(def warning-style {::l/background (:orange0 l/ghostwheel-colors)})\n\n\n(def snippets\n  {::incomplete-coverage \" => Test coverage incomplete:\"\n   ::no-gen-testing      \" => No generative testing performed\"})\n\n\n(defmulti ^:dynamic report :type)\n\n\n(defmethod report :begin-test-ns [m]\n  (group (str \"Checking \" (:ns m) \" ...\")\n         {::l/background (:base01 l/ghostwheel-colors)}))\n\n\n(defmethod report :end-test-ns [m]\n  (group-end))\n\n\n(defmethod report :summary [m]\n  (let [{:keys [fail error pass test warn]} m\n        passed?   (= pass test)\n        warnings? (some-> warn (> 0))\n        color     (cond\n                    (= test 0) (:black l/ghostwheel-colors)\n                    passed? (:green l/ghostwheel-colors)\n                    :else (:red l/ghostwheel-colors))\n        label     (cond\n                    (= test 0) \"No active tests found\"\n                    passed? (str \"Passed all \" test \" checks\")\n                    :else (str \"Failed \" fail \" of \" test \" checks\"\n                               (when (> error 0)\n                                 (str \"; \" error \" test error(s)\"))))]\n    (do\n      (group-end)\n      (when (or (not passed?) warnings?)\n        (log))\n      (log label {::l/background color})\n      (when warnings?\n        (log (str warn \" warning(s)\")\n             {::l/background (:orange0 l/ghostwheel-colors)}))\n      ;; Might be overkill, but we want to make sure we reset the group nesting\n      ;; in DevTools if anything should blow up above\n      (dorun (repeatedly 5 l/group-end)))))\n\n\n(defmethod report :pass [m]\n  (let [{:keys [::fn-name ::fspec ::spec-checks ::check-coverage\n                ::marked-unsafe ::report-output]} (:message m)]\n    (inc-report-counter! :pass)\n    ;; REVIEW : We don't expect\n    (when check-coverage\n      (cond marked-unsafe\n            (do\n              (inc-report-counter! :warn)\n              (group (str \"WARNING: \"\n                          fn-name\n                          \" – Function marked as unsafe.\"\n                          (::no-gen-testing snippets)\n                          (::incomplete-coverage snippets))\n                     warning-style)\n              (group-end))\n\n            (not fspec)\n            (do\n              (inc-report-counter! :warn)\n              (group (str \"WARNING: \"\n                          fn-name\n                          \" – Missing fspec(s)\"\n                          (::no-gen-testing snippets)\n                          (::incomplete-coverage snippets))\n                     warning-style)\n              (group-end))\n\n            (not spec-checks)\n            (do\n              (inc-report-counter! :warn)\n              (group (str \"WARNING: \"\n                          fn-name\n                          \" – Number of tests set to 0\"\n                          (::no-gen-testing snippets)\n                          (::incomplete-coverage snippets))\n                     warning-style)\n              (group-end))\n\n            :else nil))))\n\n\n;; REVIEW: We don't seem to be needing this anymore.\n(defn- explain-problem-str [failure-type problem]\n  (let [{:keys [pred val in path via]} problem]\n    (case failure-type\n      :check-failed (into {:val val :in in :not pred}\n                          [(when (not= path [:ret]) [:at path])\n                           (when (seq via) [:via via])])\n      :instrument (into {:val val :in in :not pred :at path}\n                        [(when (seq via) [:via via])])\n      :else problem)))\n\n\n(def ^:private issue-msg\n  \"\\nPlease file an issue at https://github.com/gnl/ghostwheel/issues if you encounter false positives or negatives in side effect detection.\")\n\n(defn- report-unexpected-side-effects [message]\n  (let [{:keys [::fn-name ::found-fx]} message]\n    (log-bold \"Possible side effects detected in function marked as safe:\\n\")\n    (->> found-fx\n         ;(map (fn [[type form details]] {:found type :at form :kind details}))\n         (map (fn [[type form details]]\n                (vec (concat [type]\n                             (when form ['at form])\n                             (when details ['kind details])))))\n         (map log)\n         (doall))\n    (->> (str \"=> Either remove the side effects, rename the function to '\"\n              (str (name fn-name) \"!'\")\n              \" to mark it as unsafe, or add ^::g/ignore-fx to its metadata to disable this warning and consider the function safe for automated generative testing.\")\n         wrap\n         log)\n    (log (wrap issue-msg))))\n\n\n(defn- report-unexpected-safety [message]\n  (let [safe-name (string/replace (name (::fn-name message)) #\"!$\" \"\")]\n    (log-bold \"No side effects detected in function marked as unsafe.\")\n    (->> (str \"=> If safe, rename to '\"\n              safe-name\n              \"'. If unsafe, rename the called unsafe functions to suffix them with a '!', or add the ^::g/ignore-fx metadata to disable this check.\")\n         wrap\n         log)\n    (log (wrap issue-msg))\n    log))\n\n\n(defn- report-spec-check [{:keys [::spec-checks ::fn-name]}]\n  (doseq [check spec-checks\n          :let [test-ret (get check #?(:clj  :clojure.spec.test.check/ret\n                                       :cljs :clojure.test.check/ret))]\n          :when (not (:pass? test-ret))\n          :let [spec-error (:result test-ret)\n                data       (.-data spec-error)\n                msg        (try (.-message spec-error)\n                                (catch #?(:cljs js/Object :clj Exception) _ nil))]]\n    (if-not data\n      (log-bold msg)\n      (do\n        (when-let [args (::st/args data)]\n          (log \"\\nCall:\")\n          (log (cons (with-meta fn-name nil) args)))\n        (log)\n        (when (= (::s/failure data) :instrument)\n          (log (-> msg string/split-lines first (str \"\\n\"))))\n        (-> (with-out-str ((expound/custom-printer nil) data))\n            (str \"\\n\")\n            log)\n        ;; REVIEW: Too noisy in the REPL, but\n        ;; maybe add an option to enable it later\n        (when (= l/*report-output* :js-console)\n          (group-collapsed \"Raw error data:\" {::l/background (:base0 l/ghostwheel-colors)})\n          (log msg)\n          (log data)\n          (group-end))))))\n\n\n(defmethod report :fail [m]\n  (let [message     (:message m)\n        {:keys [::fn-name ::failure]} message\n        summary     (case failure\n                      ::unexpected-fx \"Possible side effects detected\"\n                      ::unexpected-safety \"Expected side effects not detected\"\n                      ::spec-failure \"Spec check\"\n                      nil)\n        start-group l/group]\n    (inc-report-counter! :fail)\n    (start-group (str \"FAILED: \" fn-name \" – \" summary)\n                 {::l/background (:red l/ghostwheel-colors)})\n    (case failure\n      ::unexpected-fx (report-unexpected-side-effects message)\n      ::unexpected-safety (report-unexpected-safety message)\n      ::spec-failure (report-spec-check message)\n      (do\n        (log-bold (str \"Undefined failure reason: \" failure))\n        (log message)))\n    (group-end)))\n\n\n;; REVIEW - test this and clean it up\n(defmethod report :error [m]\n  (DBG m)\n  #_(let [[fn-name spec-check] (:message m)]\n      (do\n        (inc-report-counter! :error)\n        (group (str \"ERROR when testing \" fn-name\n                    {::l/background (:red l/ghostwheel-colors)}))\n        (inc-report-counter! :error)\n        (println \"\\nERROR in\" (t/testing-vars-str m))\n        #?(:cljs (when (seq (:testing-contexts (t/get-current-env)))\n                   (println (t/testing-contexts-str))))\n        (when-let [message (:message m)] (println message))\n        #?(:cljs (t/print-comparison m))\n        (group-end))))\n\n\n(defmethod report :end-run-tests [m]\n  (swap! *all-tests-successful #(and %1 %2) (t/successful? m)))\n\n\n(defmethod report :default [_])\n\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["ghostwheel.reporting/*all-tests-successful","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","ghostwheel.reporting/wrap","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","ghostwheel.logging/wrap-line","ghostwheel.reporting/inc-report-counter!","cljs.test/inc-report-counter!","ghostwheel.reporting/warning-style","ghostwheel.logging/ghostwheel-colors","ghostwheel.reporting/snippets","js/ghostwheel","js/ghostwheel.reporting","js/ghostwheel.reporting.report","method-table__4613__auto__","prefer-table__4614__auto__","method-cache__4615__auto__","cached-hierarchy__4616__auto__","hierarchy__4617__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","fexpr__73176","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","ghostwheel.reporting/report","m","ghostwheel.logging.group.cljs$core$IFn$_invoke$arity$2","ghostwheel.logging/group-end","map__73191","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","fail","error","pass","test","warn","passed?","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","warnings?","G__73200","color","label","or__4131__auto__","ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$0","ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$2","cljs.core.dorun.cljs$core$IFn$_invoke$arity$1","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2","map__73216","fn-name","fspec","spec-checks","check-coverage","marked-unsafe","report-output","G__73220","G__73222","cljs.core/not","G__73223","G__73225","ghostwheel.reporting/explain-problem-str","failure-type","problem","map__73228","pred","val","in","path","via","G__73231","cljs.core/Keyword","js/Error","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/seq","ghostwheel.reporting/issue-msg","ghostwheel.reporting/report-unexpected-side-effects","message","map__73241","found-fx","ghostwheel.logging/log-bold","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__73250","vec__73251","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","type","form","details","cljs.core/vec","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","ghostwheel.logging/log","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","G__73263","cljs.core/name","ghostwheel.logging.log.cljs$core$IFn$_invoke$arity$1","ghostwheel.reporting/report-unexpected-safety","safe-name","clojure.string/replace","G__73271","p__73284","map__73285","ghostwheel.reporting/report-spec-check","seq__73291","chunk__73295","count__73296","i__73297","temp__5753__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","check","test-ret","spec-error","data","msg","e73379","e73412","js/Object","_","args","cljs.core/cons","cljs.core/with-meta","clojure.string/split-lines","sb__4661__auto__","goog.string/StringBuffer","*print-newline*-orig-val__73394","cljs.core/*print-newline*","*print-fn*-orig-val__73395","cljs.core/*print-fn*","*print-newline*-temp-val__73396","*print-fn*-temp-val__73397","x__4662__auto__","*print-newline*-orig-val__73436","*print-fn*-orig-val__73437","*print-newline*-temp-val__73438","*print-fn*-temp-val__73439","fexpr__73401","fexpr__73445","expound.alpha/custom-printer","ghostwheel.logging/*report-output*","ghostwheel.logging.group_collapsed.cljs$core$IFn$_invoke$arity$2","map__73450","failure","summary","G__73457","start-group","ghostwheel.logging/group","G__73462","G__73463","G__73464","G__73466","ghostwheel.logging.DBG.cljs$core$IFn$_invoke$arity$variadic","p1__73475#","p2__73476#","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","and__4120__auto__","cljs.test/successful?"]]],"~:cache-keys",["~#cmap",[["^1D","goog/labs/useragent/platform.js"],[1630228359392,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^W","~$goog.labs.userAgent.util","~$goog.string"]]],["^1D","expound/util.cljc"],[1630228118972,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D"]]],["^1D","ghostwheel/reporting.cljc"],[1630228119207,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^@","^F","^B","^V","^Y","^Z"]]],["^1D","cljs/spec/gen/alpha.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","~$goog.Uri"]]],["^1D","goog/math/math.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","~$goog.array","~$goog.asserts"]]],["^1D","goog/string/stringformat.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1V"]]],["^1D","goog/labs/useragent/browser.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1X","^1U","~$goog.object","~$goog.string.internal"]]],["^1D","goog/array/array.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1Y"]]],["^1D","expound/problems.cljc"],[1630228118972,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","~$expound.paths","^@","~$clojure.walk","^Y","~$expound.printer","~$expound.ansi"]]],["^1D","goog/useragent/useragent.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1U","~$goog.reflect","^1V"]]],["^1D","goog/debug/error.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],["^1D","goog/dom/nodetype.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],["^1D","cljs/pprint.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^Y","^1V","~$goog.string.StringBuffer"]]],["^1D","expound/alpha.cljc"],[1630228118972,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","~$expound.problems","^@","^Y","~$clojure.set","^21","~$goog.string.format","^1V","^22","~$expound.util","^23","^H"]]],["^1D","expound/ansi.cljc"],[1630228118972,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^Y"]]],["^1D","cljs/spec/test/alpha.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^1Z","~$goog.userAgent.product","^Y","~$cljs.stacktrace","^J","^@","^H"]]],["^1D","goog/object/object.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^1D","cljs/stacktrace.cljc"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^1V","^Y"]]],["^1D","goog/math/long.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1Y","^27"]]],["^1D","goog/string/internal.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],["^1D","goog/functions/functions.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],["^1D","expound/paths.cljc"],[1630228118972,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^@","^2<"]]],["^1D","clojure/walk.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D"]]],["^1D","goog/useragent/product.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^24","^26","~$goog.userAgent"]]],["^1D","goog/structs/map.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1D","goog/labs/useragent/engine.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1X","^1U","^1V"]]],["^1D","goog/asserts/asserts.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1D","goog/uri/uri.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1X","^1Y","^1V","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1D","ghostwheel/logging.cljc"],[1630228119285,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^Y","^J"]]],["^1D","cljs/spec/alpha.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^1Z","^21","^H","^Y"]]],["^1D","goog/base.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",[]]],["^1D","goog/structs/structs.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1X","^1Z"]]],["^1D","clojure/string.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^1V","^28"]]],["^1D","goog/string/string.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1["]]],["^1D","goog/reflect/reflect.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],["^1D","goog/labs/useragent/util.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1["]]],["^1D","expound/printer.cljc"],[1630228118972,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^Y","^@","^J","^21","^2:","^2<","^23"]]],["^1D","goog/string/stringbuffer.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],["^1D","goog/iter/iter.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1X","^1Y","~$goog.functions","~$goog.math"]]],["^1D","cljs/core.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["~$goog.math.Long","~$goog.math.Integer","^1V","^1Z","^1X","^1W","^28"]]],["^1D","goog/math/integer.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W"]]],["^1D","clojure/set.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D"]]],["^1D","goog/uri/utils.js"],[1630228359392,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^1X","^1Y","^1V"]]],["^1D","cljs/test.cljs"],[1630228118934,"^1Q",["^ ","^1R",null,"^1S",["^O",[]],"^1T",["^W","^D","^Y","^J"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/test.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer/api.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/template.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/test/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",9,"^8",14,"^9",9,"^:",34,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L"],"^M",null,"^N",["^O",[]],"^P","^Q","^T",null,"^U",["^ ","~$t","^B","^?","^@","^V","^V","^D","^D","^A","^B","^B","^B","^W","^W","^E","^F","~$s","^@","^X","^Y","~$l","^Z","^Z","^Z","^[","^V","^F","^F","^Y","^Y","^10","^F","^@","^@"],"^11",["^O",["^12"]],"~:shadow/js-access-global",["^O",["Object","Error"]],"^13",["^ ","^14","^Z","^15","^Z","^16","^Z","^17","^Z","^18","^Z","^19","^Z"],"~:defs",["^ ","~$issue-msg",["^ ","^5",["^ ","^6","ghostwheel/reporting.cljc","^7",129,"^8",16,"^9",129,"^:",25,"~:private",true],"^3H",true,"^P","~$ghostwheel.reporting/issue-msg","^6","ghostwheel/reporting.cljc","^:",25,"^8",1,"^7",129,"^9",129,"~:tag","^X"],"~$inc-report-counter!",["^ ","^P","~$ghostwheel.reporting/inc-report-counter!","^6","ghostwheel/reporting.cljc","^7",25,"^8",1,"^9",25,"^:",25,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",25,"^8",6,"^9",25,"^:",25]],"~$*all-tests-successful",["^ ","^P","~$ghostwheel.reporting/*all-tests-successful","^6","ghostwheel/reporting.cljc","^7",19,"^8",1,"^9",19,"^:",27,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",19,"^8",6,"^9",19,"^:",27],"^3J","~$cljs.core/Atom"],"~$snippets",["^ ","^P","~$ghostwheel.reporting/snippets","^6","ghostwheel/reporting.cljc","^7",31,"^8",1,"^9",31,"^:",14,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",31,"^8",6,"^9",31,"^:",14],"^3J","~$cljs.core/IMap"],"~$report",["^ ","^5",["^ ","^6","ghostwheel/reporting.cljc","^7",36,"^8",21,"^9",36,"^:",27,"~:dynamic",true],"^P","~$ghostwheel.reporting/report","^6","ghostwheel/reporting.cljc","^:",27,"^8",1,"^3T",true,"^7",36,"^9",36,"^3J","~$cljs.core/MultiFn"],"~$report-spec-check",["^ ","~:protocol-inline",null,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",163,"^8",8,"^9",163,"^:",25,"^3H",true,"~:arglists",["^1<",["~$quote",["^1<",[[["^ ","~:keys",["~:ghostwheel.reporting/spec-checks","~:ghostwheel.reporting/fn-name"]]]]]]]],"^3H",true,"^P","~$ghostwheel.reporting/report-spec-check","^6","ghostwheel/reporting.cljc","^:",25,"~:method-params",["^1<",[["~$p__73284"]]],"~:protocol-impl",null,"~:arglists-meta",["^1<",[null,null]],"^8",1,"~:variadic?",false,"^7",163,"~:ret-tag","~$clj-nil","^9",163,"~:max-fixed-arity",1,"~:fn-var",true,"^3Y",["^1<",["^3Z",["^1<",[[["^ ","^3[",["^40","^41"]]]]]]]],"~$wrap",["^ ","^P","~$ghostwheel.reporting/wrap","^6","ghostwheel/reporting.cljc","^7",22,"^8",1,"^9",22,"^:",10,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",22,"^8",6,"^9",22,"^:",10],"^3J","~$function"],"~$explain-problem-str",["^ ","^3X",null,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",118,"^8",8,"^9",118,"^:",27,"^3H",true,"^3Y",["^1<",["^3Z",["^1<",[["~$failure-type","~$problem"]]]]]],"^3H",true,"^P","~$ghostwheel.reporting/explain-problem-str","^6","ghostwheel/reporting.cljc","^:",27,"^43",["^1<",[["^4@","^4A"]]],"^45",null,"^46",["^1<",[null,null]],"^8",1,"^47",false,"^7",118,"^9",118,"^4:",2,"^4;",true,"^3Y",["^1<",["^3Z",["^1<",[["^4@","^4A"]]]]]],"~$warning-style",["^ ","^P","~$ghostwheel.reporting/warning-style","^6","ghostwheel/reporting.cljc","^7",28,"^8",1,"^9",28,"^:",19,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",28,"^8",6,"^9",28,"^:",19],"^3J","^3R"],"~$report-unexpected-side-effects",["^ ","^3X",null,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",132,"^8",8,"^9",132,"^:",38,"^3H",true,"^3Y",["^1<",["^3Z",["^1<",[["~$message"]]]]]],"^3H",true,"^P","~$ghostwheel.reporting/report-unexpected-side-effects","^6","ghostwheel/reporting.cljc","^:",38,"^43",["^1<",[["^4F"]]],"^45",null,"^46",["^1<",[null,null]],"^8",1,"^47",false,"^7",132,"^48","~$any","^9",132,"^4:",1,"^4;",true,"^3Y",["^1<",["^3Z",["^1<",[["^4F"]]]]]],"~$report-unexpected-safety",["^ ","^3X",null,"^5",["^ ","^6","ghostwheel/reporting.cljc","^7",151,"^8",8,"^9",151,"^:",32,"^3H",true,"^3Y",["^1<",["^3Z",["^1<",[["^4F"]]]]]],"^3H",true,"^P","~$ghostwheel.reporting/report-unexpected-safety","^6","ghostwheel/reporting.cljc","^:",32,"^43",["^1<",[["^4F"]]],"^45",null,"^46",["^1<",[null,null]],"^8",1,"^47",false,"^7",151,"^9",151,"^4:",1,"^4;",true,"^3Y",["^1<",["^3Z",["^1<",[["^4F"]]]]]]],"^1:",["^ ","~$t","^B","^?","^@","^D","^D","^A","^B","^B","^B","^E","^F","~$s","^@","^F","^F","^10","^F","^@","^@"],"~:cljs.analyzer/constants",["^ ","^11",["^O",["~:cljs.spec.alpha/failure","~:path","^41","~:ret","~:instrument","~:pred","~:else","~:ghostwheel.logging/background","~:orange0","~:default","~:via","^S","~:warn","~:green","~:val","~:not","~:type","~:ghostwheel.reporting/fspec","~:base0","^40","~:clojure.test.check/ret","~:summary","~:ghostwheel.reporting/found-fx","~:fail","~:ghostwheel.reporting/incomplete-coverage","~:ghostwheel.reporting/failure","~:end-run-tests","~:result","~:red","~:at","~:ghostwheel.reporting/no-gen-testing","~:pass?","~:begin-test-ns","~:error","~:base01","~:pass","~:cljs.spec.test.alpha/args","~:hierarchy","~$kind","~$at","~:ghostwheel.reporting/report-output","~:end-test-ns","~:test","~:ghostwheel.reporting/marked-unsafe","~:message","~:ghostwheel.reporting/check-coverage","~:in","~:js-console","~:black"]],"~:order",["^4R","^4S","^55","^5;","^5B","^4Z","^4T","^5=","^S","^5?","^5F","^52","^54","^5>","^5@","^5G","^4V","^5M","^4W","^4Q","^59","^5I","^41","^4[","^40","^5J","^5H","^5E","^4P","^4X","^5K","^4M","^4U","^4Y","^4N","^5:","^53","^5D","^5C","^51","^5<","^58","^5A","^4L","^4O","^5L","^50","^56","^57"]],"^1@",["^ ","^12",["^O",[]]],"^1A",["^ "],"^1B",["^W","^D","^@","^F","^B","^V","^Y","^Z"]],"^S","^Q","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1P",[["^5Q","~:static-fns"],true,["^5Q","~:elide-asserts"],true,["^5Q","~:optimize-constants"],null,["^5Q","^1G"],null,["^5Q","~:external-config"],null,["^5Q","~:tooling-config"],null,["^5Q","~:emit-constants"],null,["^5Q","~:load-tests"],false,["^5Q","~:form-size-threshold"],null,["^5Q","~:infer-externs"],true,["^5Q","^1I"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^5Q","~:fn-invoke-direct"],null,["^5Q","~:source-map"],"/dev/null"]]]