["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer');\ncljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\ncljs.analyzer._STAR_cljs_file_STAR_ = null;\ncljs.analyzer._STAR_checked_arrays_STAR_ = false;\ncljs.analyzer._STAR_check_alias_dupes_STAR_ = true;\ncljs.analyzer._STAR_cljs_static_fns_STAR_ = false;\ncljs.analyzer._STAR_fn_invoke_direct_STAR_ = false;\ncljs.analyzer._STAR_cljs_macros_path_STAR_ = \"/cljs/core\";\ncljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;\ncljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558),cljs.core.PersistentVector.EMPTY], null));\ncljs.analyzer._STAR_analyze_deps_STAR_ = true;\ncljs.analyzer._STAR_load_tests_STAR_ = true;\ncljs.analyzer._STAR_load_macros_STAR_ = true;\ncljs.analyzer._STAR_reload_macros_STAR_ = false;\ncljs.analyzer._STAR_macro_infer_STAR_ = true;\ncljs.analyzer._STAR_passes_STAR_ = null;\ncljs.analyzer._STAR_file_defs_STAR_ = null;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = false;\n/**\n * The namespace of the constants table as a symbol.\n */\ncljs.analyzer.constants_ns_sym = new cljs.core.Symbol(null,\"cljs.core.constants\",\"cljs.core.constants\",2057417066,null);\ncljs.analyzer.identity_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\ncljs.analyzer.add_identity = (function cljs$analyzer$add_identity(m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(null,\"identity\",\"identity\",1647396035),cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.identity_counter,cljs.core.inc));\n});\ncljs.analyzer._STAR_verbose_STAR_ = false;\ncljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217)],[true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\ncljs.analyzer.unchecked_arrays_QMARK_ = (function cljs$analyzer$unchecked_arrays_QMARK_(){\nreturn cljs.core._STAR_unchecked_arrays_STAR_;\n});\n/**\n * Returns false-y, :warn, or :error based on configuration and the\n * current value of *unchecked-arrays*.\n */\ncljs.analyzer.checked_arrays = (function cljs$analyzer$checked_arrays(){\nif(((cljs.core.not(new cljs.core.Keyword(null,\"advanced\",\"advanced\",-451287892).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))) && ((!(cljs.core._STAR_unchecked_arrays_STAR_))))){\nreturn cljs.analyzer._STAR_checked_arrays_STAR_;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 63, [\"typeof\",null,\"float\",null,\"implements\",null,\"else\",null,\"boolean\",null,\"abstract\",null,\"int\",null,\"static\",null,\"package\",null,\"this\",null,\"await\",null,\"yield\",null,\"interface\",null,\"void\",null,\"delete\",null,\"class\",null,\"export\",null,\"var\",null,\"try\",null,\"long\",null,\"null\",null,\"return\",null,\"methods\",null,\"native\",null,\"private\",null,\"new\",null,\"for\",null,\"catch\",null,\"extends\",null,\"short\",null,\"protected\",null,\"throws\",null,\"synchronized\",null,\"transient\",null,\"super\",null,\"if\",null,\"let\",null,\"import\",null,\"char\",null,\"switch\",null,\"const\",null,\"case\",null,\"break\",null,\"volatile\",null,\"function\",null,\"continue\",null,\"final\",null,\"do\",null,\"double\",null,\"while\",null,\"public\",null,\"arguments\",null,\"debugger\",null,\"with\",null,\"instanceof\",null,\"default\",null,\"throw\",null,\"goto\",null,\"finally\",null,\"byte\",null,\"constructor\",null,\"in\",null,\"enum\",null], null), null);\ncljs.analyzer.es5_allowed = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"default\",null], null), null);\ncljs.analyzer.SENTINEL = ({});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.gets = (function cljs$analyzer$gets(var_args){\nvar G__72348 = arguments.length;\nswitch (G__72348) {\ncase 3:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = (function (m,k0,k1){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k1);\n}\n});\n\ncljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = (function (m,k0,k1,k2){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2,k2);\n}\n}\n});\n\ncljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = (function (m,k0,k1,k2,k3){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2,k2,cljs.analyzer.SENTINEL);\nif((m__$3 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3,k3);\n}\n}\n}\n});\n\ncljs.analyzer.gets.cljs$lang$maxFixedArity = 5;\n\ncljs.analyzer.CLJ_NIL_SYM = new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null);\ncljs.analyzer.NUMBER_SYM = new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\ncljs.analyzer.STRING_SYM = new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null);\ncljs.analyzer.BOOLEAN_SYM = new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null);\ncljs.analyzer.JS_STAR_SYM = new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null);\ncljs.analyzer.DOT_SYM = new cljs.core.Symbol(null,\".\",\".\",1975675962,null);\ncljs.analyzer.NEW_SYM = new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null);\ncljs.analyzer.CLJS_CORE_SYM = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\ncljs.analyzer.CLJS_CORE_MACROS_SYM = new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null);\ncljs.analyzer.IGNORE_SYM = new cljs.core.Symbol(null,\"ignore\",\"ignore\",8989494,null);\ncljs.analyzer.ANY_SYM = new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\ncljs.analyzer.cljs_seq_QMARK_ = (function cljs$analyzer$cljs_seq_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISeq$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_map_QMARK_ = (function cljs$analyzer$cljs_map_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (1024))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_vector_QMARK_ = (function cljs$analyzer$cljs_vector_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (16384))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_set_QMARK_ = (function cljs$analyzer$cljs_set_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (4096))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.munge_path = (function cljs$analyzer$munge_path(ss){\nreturn cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ss));\n});\n/**\n * Given a namespace as a symbol return the relative path. May optionally\n *   provide the file extension, defaults to :cljs.\n * @param {...*} var_args\n */\ncljs.analyzer.ns__GT_relpath = (function cljs$analyzer$ns__GT_relpath(var_args){\nvar G__72392 = arguments.length;\nswitch (G__72392) {\ncase 1:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629));\n});\n\ncljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = (function (ns,ext){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.replace(cljs.analyzer.munge_path(ns),\".\",\"/\")),\".\",cljs.core.name(ext)].join('');\n});\n\ncljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2;\n\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.topo_sort = (function cljs$analyzer$topo_sort(var_args){\nvar G__72399 = arguments.length;\nswitch (G__72399) {\ncase 2:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = (function (x,get_deps){\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x,(0),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.sorted_map()),cljs.core.memoize(get_deps));\n});\n\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = (function (x,depth,state,memo_get_deps){\nvar deps = (memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null,x));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\nvar seq__72404_77283 = cljs.core.seq(deps);\nvar chunk__72405_77284 = null;\nvar count__72406_77285 = (0);\nvar i__72407_77286 = (0);\nwhile(true){\nif((i__72407_77286 < count__72406_77285)){\nvar dep_77287 = chunk__72405_77284.cljs$core$IIndexed$_nth$arity$2(null,i__72407_77286);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_77287,(depth + (1)),state,memo_get_deps);\n\n\nvar G__77289 = seq__72404_77283;\nvar G__77290 = chunk__72405_77284;\nvar G__77291 = count__72406_77285;\nvar G__77292 = (i__72407_77286 + (1));\nseq__72404_77283 = G__77289;\nchunk__72405_77284 = G__77290;\ncount__72406_77285 = G__77291;\ni__72407_77286 = G__77292;\ncontinue;\n} else {\nvar temp__5753__auto___77294 = cljs.core.seq(seq__72404_77283);\nif(temp__5753__auto___77294){\nvar seq__72404_77296__$1 = temp__5753__auto___77294;\nif(cljs.core.chunked_seq_QMARK_(seq__72404_77296__$1)){\nvar c__4550__auto___77298 = cljs.core.chunk_first(seq__72404_77296__$1);\nvar G__77299 = cljs.core.chunk_rest(seq__72404_77296__$1);\nvar G__77300 = c__4550__auto___77298;\nvar G__77301 = cljs.core.count(c__4550__auto___77298);\nvar G__77302 = (0);\nseq__72404_77283 = G__77299;\nchunk__72405_77284 = G__77300;\ncount__72406_77285 = G__77301;\ni__72407_77286 = G__77302;\ncontinue;\n} else {\nvar dep_77304 = cljs.core.first(seq__72404_77296__$1);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_77304,(depth + (1)),state,memo_get_deps);\n\n\nvar G__77305 = cljs.core.next(seq__72404_77296__$1);\nvar G__77306 = null;\nvar G__77307 = (0);\nvar G__77308 = (0);\nseq__72404_77283 = G__77305;\nchunk__72405_77284 = G__77306;\ncount__72406_77285 = G__77307;\ni__72407_77286 = G__77308;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__72429_77310 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(state),cljs.core._LT_,depth));\nvar chunk__72430_77311 = null;\nvar count__72431_77312 = (0);\nvar i__72432_77313 = (0);\nwhile(true){\nif((i__72432_77313 < count__72431_77312)){\nvar vec__72448_77315 = chunk__72430_77311.cljs$core$IIndexed$_nth$arity$2(null,i__72432_77313);\nvar _LT_depth_77316 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72448_77315,(0),null);\nvar __77317 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72448_77315,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_77316], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__77319 = seq__72429_77310;\nvar G__77320 = chunk__72430_77311;\nvar G__77321 = count__72431_77312;\nvar G__77322 = (i__72432_77313 + (1));\nseq__72429_77310 = G__77319;\nchunk__72430_77311 = G__77320;\ncount__72431_77312 = G__77321;\ni__72432_77313 = G__77322;\ncontinue;\n} else {\nvar temp__5753__auto___77323 = cljs.core.seq(seq__72429_77310);\nif(temp__5753__auto___77323){\nvar seq__72429_77325__$1 = temp__5753__auto___77323;\nif(cljs.core.chunked_seq_QMARK_(seq__72429_77325__$1)){\nvar c__4550__auto___77326 = cljs.core.chunk_first(seq__72429_77325__$1);\nvar G__77327 = cljs.core.chunk_rest(seq__72429_77325__$1);\nvar G__77328 = c__4550__auto___77326;\nvar G__77329 = cljs.core.count(c__4550__auto___77326);\nvar G__77330 = (0);\nseq__72429_77310 = G__77327;\nchunk__72430_77311 = G__77328;\ncount__72431_77312 = G__77329;\ni__72432_77313 = G__77330;\ncontinue;\n} else {\nvar vec__72452_77331 = cljs.core.first(seq__72429_77325__$1);\nvar _LT_depth_77332 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72452_77331,(0),null);\nvar __77333 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72452_77331,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_77332], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__77334 = cljs.core.next(seq__72429_77325__$1);\nvar G__77335 = null;\nvar G__77336 = (0);\nvar G__77337 = (0);\nseq__72429_77310 = G__77334;\nchunk__72430_77311 = G__77335;\ncount__72431_77312 = G__77336;\ni__72432_77313 = G__77337;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth,(0))){\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.vals(cljs.core.deref(state))));\n} else {\nreturn null;\n}\n});\n\ncljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4;\n\n\ncljs.analyzer.ast_QMARK_ = (function cljs$analyzer$ast_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && (cljs.core.contains_QMARK_(x,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955))));\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.error_message !== 'undefined')){\n} else {\ncljs.analyzer.error_message = (function (){var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__72481 = cljs.core.get_global_hierarchy;\nreturn (fexpr__72481.cljs$core$IFn$_invoke$arity$0 ? fexpr__72481.cljs$core$IFn$_invoke$arity$0() : fexpr__72481.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"error-message\"),((function (method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__){\nreturn (function() { \nvar G__77343__delegate = function (warning_type,_){\nreturn warning_type;\n};\nvar G__77343 = function (warning_type,var_args){\nvar _ = null;\nif (arguments.length > 1) {\nvar G__77344__i = 0, G__77344__a = new Array(arguments.length -  1);\nwhile (G__77344__i < G__77344__a.length) {G__77344__a[G__77344__i] = arguments[G__77344__i + 1]; ++G__77344__i;}\n  _ = new cljs.core.IndexedSeq(G__77344__a,0,null);\n} \nreturn G__77343__delegate.call(this,warning_type,_);};\nG__77343.cljs$lang$maxFixedArity = 1;\nG__77343.cljs$lang$applyTo = (function (arglist__77346){\nvar warning_type = cljs.core.first(arglist__77346);\nvar _ = cljs.core.rest(arglist__77346);\nreturn G__77343__delegate(warning_type,_);\n});\nG__77343.cljs$core$IFn$_invoke$arity$variadic = G__77343__delegate;\nreturn G__77343;\n})()\n;})(method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4617__auto__,method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__));\n})();\n}\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),(function (warning_type,info){\nreturn [\"Preamble resource file not found: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"missing\",\"missing\",362507769).cljs$core$IFn$_invoke$arity$1(info)))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),(function (warning_type,info){\nreturn [\"Required namespace not provided for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764).cljs$core$IFn$_invoke$arity$1(info)))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),(function (warning_type,info){\nreturn [(cljs.core.truth_(new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205).cljs$core$IFn$_invoke$arity$1(info))?\"Can't take value of macro \":\"Use of undeclared Var \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),(function (warning_type,info){\nreturn [\"var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" is not public\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),(function (warning_type,p__72503){\nvar map__72507 = p__72503;\nvar map__72507__$1 = (((((!((map__72507 == null))))?(((((map__72507.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72507.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72507):map__72507);\nvar info = map__72507__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72507__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72507__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629)),\", \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583)),\", or JavaScript source providing \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(js_provide),\"\\\"\",((clojure.string.includes_QMARK_(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(ns_sym),\"_\"))?\" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\":null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-macros-ns\",\"undeclared-macros-ns\",-438029430),(function (warning_type,p__72516){\nvar map__72518 = p__72516;\nvar map__72518__$1 = (((((!((map__72518 == null))))?(((((map__72518.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72518.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72518):map__72518);\nvar info = map__72518__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72518__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72518__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such macros namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"clj\",\"clj\",-660495428)),\" or \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" not declared ^:dynamic\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" already refers to: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" being replaced by: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info))))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(info)),\" is being replaced\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" no longer fn, references are stale\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),(function (warning_type,info){\nreturn [\"Wrong number of args (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519).cljs$core$IFn$_invoke$arity$1(info)),\") passed to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info);\n}\n})())].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" declared arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(info)),\" mismatch defined arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),(function (warning_type,info){\nreturn [\"Invalid :refer, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"lib\",\"lib\",191808726).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" does not exist\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),(function (warning_type,info){\nreturn [\"Can't resolve protocol symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),(function (warning_type,info){\nreturn [\"Symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is not a protocol\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),(function (warning_type,info){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"no-such-method\",\"no-such-method\",1087422840).cljs$core$IFn$_invoke$arity$1(info))){\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare method called \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n} else {\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare arity \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"invalid-arity\",\"invalid-arity\",1335461949).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),(function (warning_type,info){\nreturn [\"Duplicated methods in protocol implementation \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implemented multiple times\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" declares method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implements method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),(function (warning_type,info){\nreturn [\"Ignoring target object \\\"\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(info)], 0)),\"\\\" passed in recur to protocol method head\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have more than 1 variadic overload\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have fixed arity function with more params than variadic function\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have 2 overloads with same arity\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),(function (warning_type,info){\nreturn [\"Extending an existing JavaScript type - use a different symbol name \",\"instead of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"current-symbol\",\"current-symbol\",-932381075).cljs$core$IFn$_invoke$arity$1(info)),\" e.g \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suggested-symbol\",\"suggested-symbol\",-1329631875).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(info)),\", all arguments must be numbers, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"types\",\"types\",590030639).cljs$core$IFn$_invoke$arity$1(info)),\" instead\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),(function (warning_type,p__72593){\nvar map__72594 = p__72593;\nvar map__72594__$1 = (((((!((map__72594 == null))))?(((((map__72594.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72594.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72594):map__72594);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72594__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar types = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72594__$1,new cljs.core.Keyword(null,\"types\",\"types\",590030639));\nvar G__72606 = name;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),G__72606)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),G__72606)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),G__72606)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),G__72606)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__72606)].join('')));\n\n}\n}\n}\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),(function (warning_type,info){\nreturn [\"Cannot invoke type constructor \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" as function \"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" is a single segment namespace\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),(function (warning_type,p__72619){\nvar map__72620 = p__72619;\nvar map__72620__$1 = (((((!((map__72620 == null))))?(((((map__72620.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72620.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72620):map__72620);\nvar info = map__72620__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72620__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__72620,map__72620__$1,info,name){\nreturn (function (p1__72617_SHARP_){\nif(cljs.core.truth_((cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__72617_SHARP_) : cljs.analyzer.js_reserved.call(null,p1__72617_SHARP_)))){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__72617_SHARP_),\"$\"].join('');\n} else {\nreturn p1__72617_SHARP_;\n}\n});})(map__72620,map__72620__$1,info,name))\n,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name),/\\./))));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" contains a reserved JavaScript keyword,\",\" the corresponding Google Closure namespace will be munged to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),(function (warning_type,p__72627){\nvar map__72629 = p__72627;\nvar map__72629__$1 = (((((!((map__72629 == null))))?(((((map__72629.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72629.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72629):map__72629);\nvar info = map__72629__$1;\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72629__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72629__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\" clashes with var \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),(function (warning_type,p__72635){\nvar map__72636 = p__72635;\nvar map__72636__$1 = (((((!((map__72636 == null))))?(((((map__72636.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72636.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72636):map__72636);\nvar info = map__72636__$1;\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72636__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" not declared dynamic and thus is not dynamically rebindable, but its name \",\"suggests otherwise. Please either indicate ^:dynamic \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" or change the name\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),(function (warning_type,p__72643){\nvar map__72645 = p__72643;\nvar map__72645__$1 = (((((!((map__72645 == null))))?(((((map__72645.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72645.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72645):map__72645);\nvar info = map__72645__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72645__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72645__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nreturn [\"Bad extend-type method shape for protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol),\" method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method),\", method arities must be grouped together\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),(function (warning_type,p__72659){\nvar map__72660 = p__72659;\nvar map__72660__$1 = (((((!((map__72660 == null))))?(((((map__72660.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72660.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72660):map__72660);\nvar info = map__72660__$1;\nvar module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72660__$1,new cljs.core.Keyword(null,\"module-type\",\"module-type\",1392760304));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72660__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported JavaScript module type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(module_type),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),(function (warning_type,p__72668){\nvar map__72669 = p__72668;\nvar map__72669__$1 = (((((!((map__72669 == null))))?(((((map__72669.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72669.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72669):map__72669);\nvar preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72669__$1,new cljs.core.Keyword(null,\"preprocess\",\"preprocess\",1208285012));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72669__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported preprocess value \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(preprocess),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),(function (warning_type,p__72675){\nvar map__72676 = p__72675;\nvar map__72676__$1 = (((((!((map__72676 == null))))?(((((map__72676.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72676.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72676):map__72676);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72676__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" is shadowed by a local\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),(function (warning_type,p__72678){\nvar map__72679 = p__72678;\nvar map__72679__$1 = (((((!((map__72679 == null))))?(((((map__72679.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72679.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72679):map__72679);\nvar warn_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72679__$1,new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72679__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72679__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar property = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72679__$1,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232));\nvar G__72687 = warn_type;\nvar G__72687__$1 = (((G__72687 instanceof cljs.core.Keyword))?G__72687.fqn:null);\nswitch (G__72687__$1) {\ncase \"target\":\nreturn [\"Cannot infer target type in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form),\"\"].join('');\n\nbreak;\ncase \"property\":\nreturn [\"Cannot resolve property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" for inferred type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type),\" in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ncase \"object\":\nreturn [\"Adding extern to Object for property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" due to \",\"ambiguous expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__72687__$1)].join('')));\n\n}\n}));\ncljs.analyzer.default_warning_handler = (function cljs$analyzer$default_warning_handler(warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nvar temp__5753__auto__ = (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type,extra) : cljs.analyzer.error_message.call(null,warning_type,extra));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar s = temp__5753__auto__;\nvar _STAR_print_fn_STAR__orig_val__72701 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_fn_STAR__temp_val__72702 = cljs.core._STAR_print_err_fn_STAR_;\ncljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__72702;\n\ntry{return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__72703 = env;\nvar G__72704 = [\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('');\nreturn (cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__72703,G__72704) : cljs.analyzer.message.call(null,G__72703,G__72704));\n})()], 0));\n}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__72701;\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);\ncljs.analyzer.repeat_char = (function cljs$analyzer$repeat_char(c,n){\nvar ret = c;\nvar n__$1 = n;\nwhile(true){\nif((n__$1 > (0))){\nvar G__77494 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret),cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join('');\nvar G__77495 = (n__$1 - (1));\nret = G__77494;\nn__$1 = G__77495;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n});\ncljs.analyzer.hex_format = (function cljs$analyzer$hex_format(s,pad){\nvar hex = s.charCodeAt((0)).toString((16));\nvar len = hex.length;\nvar hex__$1 = (((len < pad))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.repeat_char(\"0\",(pad - len))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex)].join(''):hex);\nreturn [\"_u\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex__$1),\"_\"].join('');\n});\ncljs.analyzer.gen_constant_id = (function cljs$analyzer$gen_constant_id(value){\nvar prefix = (((value instanceof cljs.core.Keyword))?\"cst$kw$\":(((value instanceof cljs.core.Symbol))?\"cst$sym$\":(function(){throw (new Error([\"constant type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(value)),\" not supported\"].join('')))})()\n));\nvar name = (((value instanceof cljs.core.Keyword))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(value),(1)):cljs.core.str.cljs$core$IFn$_invoke$arity$1(value));\nvar name__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\".\",name))?\"_DOT_\":clojure.string.replace(clojure.string.replace(cljs.core.munge(clojure.string.replace(name,\"-\",\"_DASH_\")),\".\",\"$\"),/[^a-z0-9$_]/i,((function (prefix,name){\nreturn (function (p1__72718_SHARP_){\nreturn cljs.analyzer.hex_format(p1__72718_SHARP_,(4));\n});})(prefix,name))\n));\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([prefix,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(''));\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.register_constant_BANG_ = (function cljs$analyzer$register_constant_BANG_(var_args){\nvar G__72729 = arguments.length;\nswitch (G__72729) {\ncase 1:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (val){\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null,val);\n});\n\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (env,val){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (cenv){\nvar G__72734 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889)], null),(function (table){\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table,val))){\nreturn table;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table,val,cljs.analyzer.gen_constant_id(val));\n}\n}));\nif(cljs.core.truth_(env)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__72734,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(\"cljs.analyzer\",\"constants\",\"cljs.analyzer/constants\",1697083770)], null),((function (G__72734){\nreturn (function (p__72736){\nvar map__72737 = p__72736;\nvar map__72737__$1 = (((((!((map__72737 == null))))?(((((map__72737.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72737.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72737):map__72737);\nvar constants = map__72737__$1;\nvar seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__72737__$1,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.PersistentHashSet.EMPTY);\nvar order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__72737__$1,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.PersistentVector.EMPTY);\nvar G__72743 = constants;\nif((!(cljs.core.contains_QMARK_(seen,val)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__72743,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen,val),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order,val)], 0));\n} else {\nreturn G__72743;\n}\n});})(G__72734))\n);\n} else {\nreturn G__72734;\n}\n}));\n});\n\ncljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2;\n\ncljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null);\ncljs.analyzer.namespaces = (function (){\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.t_cljs$analyzer72748 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.analyzer.t_cljs$analyzer72748 = (function (meta72749){\nthis.meta72749 = meta72749;\nthis.cljs$lang$protocol_mask$partition0$ = 425984;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\ncljs.analyzer.t_cljs$analyzer72748.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_72750,meta72749__$1){\nvar self__ = this;\nvar _72750__$1 = this;\nreturn (new cljs.analyzer.t_cljs$analyzer72748(meta72749__$1));\n});\n\ncljs.analyzer.t_cljs$analyzer72748.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_72750){\nvar self__ = this;\nvar _72750__$1 = this;\nreturn self__.meta72749;\n});\n\ncljs.analyzer.t_cljs$analyzer72748.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nif((!((cljs.env._STAR_compiler_STAR_ == null)))){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n} else {\nreturn cljs.analyzer.default_namespaces;\n}\n});\n\ncljs.analyzer.t_cljs$analyzer72748.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"meta72749\",\"meta72749\",2011029464,null)], null);\n});\n\ncljs.analyzer.t_cljs$analyzer72748.cljs$lang$type = true;\n\ncljs.analyzer.t_cljs$analyzer72748.cljs$lang$ctorStr = \"cljs.analyzer/t_cljs$analyzer72748\";\n\ncljs.analyzer.t_cljs$analyzer72748.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"cljs.analyzer/t_cljs$analyzer72748\");\n});\n\n/**\n * Positional factory function for cljs.analyzer/t_cljs$analyzer72748.\n */\ncljs.analyzer.__GT_t_cljs$analyzer72748 = (function cljs$analyzer$__GT_t_cljs$analyzer72748(meta72749){\nreturn (new cljs.analyzer.t_cljs$analyzer72748(meta72749));\n});\n\n}\n\nreturn (new cljs.analyzer.t_cljs$analyzer72748(cljs.core.PersistentArrayMap.EMPTY));\n})()\n;\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.get_namespace = (function cljs$analyzer$get_namespace(var_args){\nvar G__72775 = arguments.length;\nswitch (G__72775) {\ncase 1:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = (function (key){\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,key);\n});\n\ncljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = (function (cenv,key){\nvar temp__5755__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cenv),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),key], null));\nif((temp__5755__auto__ == null)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),key)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null);\n} else {\nreturn null;\n}\n} else {\nvar ns = temp__5755__auto__;\nreturn ns;\n}\n});\n\ncljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2;\n\ncljs.analyzer.get_line = (function cljs$analyzer$get_line(x,env){\nvar or__4131__auto__ = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\ncljs.analyzer.get_col = (function cljs$analyzer$get_col(x,env){\nvar or__4131__auto__ = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\n/**\n * Given a Clojure namespace intern all macros into the ambient ClojureScript\n * analysis environment.\n * @param {...*} var_args\n */\ncljs.analyzer.intern_macros = (function cljs$analyzer$intern_macros(var_args){\nvar G__72804 = arguments.length;\nswitch (G__72804) {\ncase 1:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns,false);\n});\n\ncljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = (function (ns,reload){\nif(cljs.core.truth_((function (){var or__4131__auto__ = (cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)) == null);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn reload;\n}\n})())){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__72822){\nvar vec__72823 = p__72822;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72823,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72823,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(function (){var vm = cljs.core.meta(v);\nvar ns__$1 = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(vm).getName();\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)),new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404),true], 0));\n})()], null);\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__72832){\nvar vec__72833 = p__72832;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72833,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__72833,(1),null);\nreturn v.isMacro();\n}),cljs.core.ns_interns_STAR_(ns)))));\n} else {\nreturn null;\n}\n});\n\ncljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2;\n\n/**\n * Construct an empty analysis environment. Required to analyze forms.\n */\ncljs.analyzer.empty_env = (function cljs$analyzer$empty_env(){\nvar val__55722__auto__ = cljs.env._STAR_compiler_STAR_;\nif((val__55722__auto__ == null)){\ncljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();\n} else {\n}\n\ntry{return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (val__55722__auto__){\nreturn (function (p1__72851_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__72851_SHARP_,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),p1__72851_SHARP_,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null)],null));\n});})(val__55722__auto__))\n,cljs.core.list(new cljs.core.Symbol(null,\"alert\",\"alert\",1068580947,null),new cljs.core.Symbol(null,\"window\",\"window\",-1929916235,null),new cljs.core.Symbol(null,\"document\",\"document\",311342840,null),new cljs.core.Symbol(null,\"console\",\"console\",-1426363712,null),new cljs.core.Symbol(null,\"escape\",\"escape\",648929575,null),new cljs.core.Symbol(null,\"unescape\",\"unescape\",-2037730561,null),new cljs.core.Symbol(null,\"screen\",\"screen\",-664376021,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"navigator\",\"navigator\",-604431588,null),new cljs.core.Symbol(null,\"history\",\"history\",1393136307,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"global\",\"global\",1734126574,null),new cljs.core.Symbol(null,\"process\",\"process\",-1011242831,null),new cljs.core.Symbol(null,\"require\",\"require\",1172530194,null),new cljs.core.Symbol(null,\"module\",\"module\",-1229817578,null),new cljs.core.Symbol(null,\"exports\",\"exports\",895523255,null))))], null);\n}finally {if((val__55722__auto__ == null)){\ncljs.env._STAR_compiler_STAR_ = null;\n} else {\n}\n}});\ncljs.analyzer.source_info__GT_error_data = (function cljs$analyzer$source_info__GT_error_data(p__72860){\nvar map__72861 = p__72860;\nvar map__72861__$1 = (((((!((map__72861 == null))))?(((((map__72861.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__72861.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__72861):map__72861);\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72861__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72861__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__72861__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"clojure.error\",\"source\",\"clojure.error/source\",-2011936397),file,new cljs.core.Keyword(\"clojure.error\",\"line\",\"clojure.error/line\",-1816287471),line,new cljs.core.Keyword(\"clojure.error\",\"column\",\"clojure.error/column\",304721553),column], null);\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.source_info = (function cljs$analyzer$source_info(var_args){\nvar G__72887 = arguments.length;\nswitch (G__72887) {\ncase 1:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = (function (env){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(null,env);\n} else {\nreturn null;\n}\n});\n\ncljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = (function (name,env){\nvar G__72900 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)))?\"cljs/core.cljs\":cljs.analyzer._STAR_cljs_file_STAR_),new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(name,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(name,env)], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([G__72900,cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912)], null))], 0));\n} else {\nreturn G__72900;\n}\n});\n\ncljs.analyzer.source_info.cljs$lang$maxFixedArity = 2;\n\ncljs.analyzer.message = (function cljs$analyzer$message(env,s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))?[\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env)),\" \",cljs.analyzer._STAR_cljs_file_STAR_].join(''):(cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_)?[\" in file \",cljs.analyzer._STAR_cljs_file_STAR_].join(''):null))].join('');\n});\ncljs.analyzer.warning = (function cljs$analyzer$warning(warning_type,env,extra){\nvar seq__72908 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);\nvar chunk__72910 = null;\nvar count__72911 = (0);\nvar i__72912 = (0);\nwhile(true){\nif((i__72912 < count__72911)){\nvar handler = chunk__72910.cljs$core$IIndexed$_nth$arity$2(null,i__72912);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__77533 = seq__72908;\nvar G__77534 = chunk__72910;\nvar G__77535 = count__72911;\nvar G__77536 = (i__72912 + (1));\nseq__72908 = G__77533;\nchunk__72910 = G__77534;\ncount__72911 = G__77535;\ni__72912 = G__77536;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__72908);\nif(temp__5753__auto__){\nvar seq__72908__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__72908__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__72908__$1);\nvar G__77537 = cljs.core.chunk_rest(seq__72908__$1);\nvar G__77538 = c__4550__auto__;\nvar G__77539 = cljs.core.count(c__4550__auto__);\nvar G__77540 = (0);\nseq__72908 = G__77537;\nchunk__72910 = G__77538;\ncount__72911 = G__77539;\ni__72912 = G__77540;\ncontinue;\n} else {\nvar handler = cljs.core.first(seq__72908__$1);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__77542 = cljs.core.next(seq__72908__$1);\nvar G__77543 = null;\nvar G__77544 = (0);\nvar G__77545 = (0);\nseq__72908 = G__77542;\nchunk__72910 = G__77543;\ncount__72911 = G__77544;\ni__72912 = G__77545;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.accumulating_warning_handler = (function cljs$analyzer$accumulating_warning_handler(warn_acc){\nreturn (function (warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(warn_acc,cljs.core.conj,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [warning_type,env,extra], null));\n} else {\nreturn null;\n}\n});\n});\ncljs.analyzer.replay_accumulated_warnings = (function cljs$analyzer$replay_accumulated_warnings(warn_acc){\nreturn cljs.core.run_BANG_((function (p1__72933_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.warning,p1__72933_SHARP_);\n}),cljs.core.deref(warn_acc));\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.error_data = (function cljs$analyzer$error_data(var_args){\nvar G__72942 = arguments.length;\nswitch (G__72942) {\ncase 2:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2 = (function (env,phase){\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,phase,null);\n});\n\ncljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3 = (function (env,phase,symbol){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.source_info__GT_error_data(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358),phase], null),(cljs.core.truth_(symbol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"symbol\",\"clojure.error/symbol\",1544821994),symbol], null):null)], 0));\n});\n\ncljs.analyzer.error_data.cljs$lang$maxFixedArity = 3;\n\ncljs.analyzer.compile_syntax_error = (function cljs$analyzer$compile_syntax_error(env,msg,symbol){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"compile-syntax-check\",\"compile-syntax-check\",-1865080468),symbol),(new Error(msg)));\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.error = (function cljs$analyzer$error(var_args){\nvar G__72952 = arguments.length;\nswitch (G__72952) {\ncase 2:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = (function (env,msg){\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,msg,null);\n});\n\ncljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = (function (env,msg,cause){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env,msg),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349)),cause);\n});\n\ncljs.analyzer.error.cljs$lang$maxFixedArity = 3;\n\ncljs.analyzer.analysis_error_QMARK_ = (function cljs$analyzer$analysis_error_QMARK_(ex){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));\n});\ncljs.analyzer.has_error_data_QMARK_ = (function cljs$analyzer$has_error_data_QMARK_(ex){\nreturn cljs.core.contains_QMARK_(cljs.core.ex_data(ex),new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358));\n});\ncljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),\"null\",new cljs.core.Symbol(null,\"goog.string\",\"goog.string\",-2055533048,null),\"null\",new cljs.core.Symbol(null,\"goog\",\"goog\",-70603925,null),\"null\",new cljs.core.Symbol(null,\"goog.object\",\"goog.object\",678593132,null),\"null\",new cljs.core.Symbol(null,\"Math\",\"Math\",2033287572,null),\"null\",new cljs.core.Symbol(null,\"goog.array\",\"goog.array\",-671977860,null),\"null\"], null), null);\ncljs.analyzer.implicit_import_QMARK_ = (function cljs$analyzer$implicit_import_QMARK_(env,prefix,suffix){\nreturn cljs.core.contains_QMARK_(cljs.analyzer.implicit_nses,prefix);\n});\ncljs.analyzer.confirm_var_exist_warning = (function cljs$analyzer$confirm_var_exist_warning(env,prefix,suffix){\nreturn (function (env__$1,prefix__$1,suffix__$1){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),env__$1,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),prefix__$1,new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057),suffix__$1,new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205),(!(((function (){var G__72974 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1));\nvar G__72975 = env__$1;\nreturn (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(G__72974,G__72975) : cljs.analyzer.get_expander.call(null,G__72974,G__72975));\n})() == null)))], null));\n});\n});\n/**\n * Check if a JavaScript namespace has been loaded. JavaScript vars are\n *   not currently checked.\n */\ncljs.analyzer.loaded_js_ns_QMARK_ = (function cljs$analyzer$loaded_js_ns_QMARK_(env,prefix){\nif(cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix))){\nreturn null;\n} else {\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env);\nreturn (((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))) || ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))));\n}\n});\ncljs.analyzer.internal_js_module_exists_QMARK_ = (function cljs$analyzer$internal_js_module_exists_QMARK_(js_module_index,module){\nreturn cljs.core.contains_QMARK_(cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p__73009){\nvar vec__73012 = p__73009;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73012,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73012,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(v)], null);\n})),js_module_index),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\n});\ncljs.analyzer.js_module_exists_QMARK__STAR_ = cljs.core.memoize(cljs.analyzer.internal_js_module_exists_QMARK_);\ncljs.analyzer.js_module_exists_QMARK_ = (function cljs$analyzer$js_module_exists_QMARK_(module){\nvar G__73018 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931)], null));\nvar G__73019 = module;\nreturn (cljs.analyzer.js_module_exists_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_module_exists_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(G__73018,G__73019) : cljs.analyzer.js_module_exists_QMARK__STAR_.call(null,G__73018,G__73019));\n});\ncljs.analyzer.node_module_dep_QMARK_ = (function cljs$analyzer$node_module_dep_QMARK_(module){\ntry{return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\")) && (cljs.core.boolean$(require.resolve(cljs.core.str.cljs$core$IFn$_invoke$arity$1(module)))));\n}catch (e73020){var _ = e73020;\nreturn false;\n}});\ncljs.analyzer.dep_has_global_exports_QMARK_ = (function cljs$analyzer$dep_has_global_exports_QMARK_(module){\nvar global_exports = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module),new cljs.core.Keyword(null,\"global-exports\",\"global-exports\",-1644865592)], null));\nreturn ((cljs.core.contains_QMARK_(global_exports,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(module))) || (cljs.core.contains_QMARK_(global_exports,cljs.core.name(module))));\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.confirm_var_exists = (function cljs$analyzer$confirm_var_exists(var_args){\nvar G__73035 = arguments.length;\nswitch (G__73035) {\ncase 3:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = (function (env,prefix,suffix){\nvar warn = cljs.analyzer.confirm_var_exist_warning(env,prefix,suffix);\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,warn);\n});\n\ncljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = (function (env,prefix,suffix,missing_fn){\nvar sufstr = cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix);\nvar suffix_str = (((((!((\"..\" === sufstr)))) && (/\\./.test(sufstr))))?cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr,/\\./)):suffix);\nvar suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);\nif((((!(cljs.analyzer.implicit_import_QMARK_(env,prefix,suffix__$1)))) && ((!(cljs.analyzer.loaded_js_ns_QMARK_(env,prefix)))) && ((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),prefix)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),suffix__$1)))))) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),suffix__$1) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(prefix))))){\nreturn (missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env,prefix,suffix__$1) : missing_fn.call(null,env,prefix,suffix__$1));\n} else {\nreturn null;\n}\n});\n\ncljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4;\n\ncljs.analyzer.confirm_var_exists_throw = (function cljs$analyzer$confirm_var_exists_throw(){\nreturn (function (env,prefix,suffix){\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,(function (env__$1,prefix__$1,suffix__$1){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,[\"Unable to resolve var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1),\" in this context\"].join(''));\n}));\n});\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.resolve_ns_alias = (function cljs$analyzer$resolve_ns_alias(var_args){\nvar G__73060 = arguments.length;\nswitch (G__73060) {\ncase 2:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n});\n\ncljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n});\n\ncljs.analyzer.resolve_ns_alias.cljs$lang$maxFixedArity = 3;\n\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.resolve_macro_ns_alias = (function cljs$analyzer$resolve_macro_ns_alias(var_args){\nvar G__73067 = arguments.length;\nswitch (G__73067) {\ncase 2:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n});\n\ncljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n});\n\ncljs.analyzer.resolve_macro_ns_alias.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given env, an analysis environment, and ns-sym, a symbol identifying a\n * namespace, confirm that the namespace exists. Warn if not found.\n */\ncljs.analyzer.confirm_ns = (function cljs$analyzer$confirm_ns(env,ns_sym){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns_sym)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.implicit_nses,ns_sym) == null)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),ns_sym) == null)) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_sym) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(ns_sym))))){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),ns_sym,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),ns_sym], null));\n} else {\nreturn null;\n}\n});\n/**\n * Is sym visible from core in the current compilation namespace?\n */\ncljs.analyzer.core_name_QMARK_ = (function cljs$analyzer$core_name_QMARK_(env,sym){\nvar and__4120__auto__ = (function (){var or__4131__auto__ = (!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar temp__5755__auto__ = (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym,env) : cljs.analyzer.get_expander.call(null,sym,env));\nif((temp__5755__auto__ == null)){\nreturn false;\n} else {\nvar mac = temp__5755__auto__;\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(),new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null));\n}\n}\n})();\nif(and__4120__auto__){\nreturn (!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym)));\n} else {\nreturn and__4120__auto__;\n}\n});\n/**\n * Is sym public?\n */\ncljs.analyzer.public_name_QMARK_ = (function cljs$analyzer$public_name_QMARK_(ns,sym){\nvar var_ast = (function (){var or__4131__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(ns),\"$macros\"].join('')),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\n}\n})();\nreturn (((!((var_ast == null)))) && (cljs.core.not((function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(var_ast);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"anonymous\",\"anonymous\",447897231).cljs$core$IFn$_invoke$arity$1(var_ast);\n}\n})())));\n});\ncljs.analyzer.js_tag_QMARK_ = (function cljs$analyzer$js_tag_QMARK_(x){\nreturn (((x instanceof cljs.core.Symbol)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.namespace(x))))));\n});\ncljs.analyzer.normalize_js_tag = (function cljs$analyzer$normalize_js_tag(x){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)))){\nreturn cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(x),/\\./))),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null))], null));\n} else {\nreturn x;\n}\n});\n/**\n * Ensures that a type tag is a set.\n */\ncljs.analyzer.__GT_type_set = (function cljs$analyzer$__GT_type_set(t){\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn t;\n} else {\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc([t]);\n}\n});\ncljs.analyzer.canonicalize_type = (function cljs$analyzer$canonicalize_type(t){\n\nif((t instanceof cljs.core.Symbol)){\nreturn t;\n} else {\nif(cljs.core.empty_QMARK_(t)){\nreturn null;\n} else {\nif(((1) === cljs.core.count(t))){\nreturn cljs.core.first(t);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null))){\nvar res = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(t,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null));\nif(((1) === cljs.core.count(res))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nreturn res;\n}\n} else {\nreturn t;\n\n}\n}\n}\n}\n}\n});\n/**\n * Produces a union of types.\n * @param {...*} var_args\n */\ncljs.analyzer.add_types = (function cljs$analyzer$add_types(var_args){\nvar G__73107 = arguments.length;\nswitch (G__73107) {\ncase 0:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4751__auto__ = [];\nvar len__4730__auto___77600 = arguments.length;\nvar i__4731__auto___77601 = (0);\nwhile(true){\nif((i__4731__auto___77601 < len__4730__auto___77600)){\nargs_arr__4751__auto__.push((arguments[i__4731__auto___77601]));\n\nvar G__77602 = (i__4731__auto___77601 + (1));\ni__4731__auto___77601 = G__77602;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4752__auto__ = (new cljs.core.IndexedSeq(args_arr__4751__auto__.slice((2)),(0),null));\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4752__auto__);\n\n}\n});\n\ncljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n});\n\ncljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1 = (function (t1){\nreturn t1;\n});\n\ncljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2 = (function (t1,t2){\nif((((t1 == null)) || ((t2 == null)))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.canonicalize_type(clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.__GT_type_set(t1),cljs.analyzer.__GT_type_set(t2)));\n}\n});\n\ncljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic = (function (t1,t2,ts){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.add_types,cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(t1,t2),ts);\n});\n\n/** @this {Function} */\ncljs.analyzer.add_types.cljs$lang$applyTo = (function (seq73102){\nvar G__73103 = cljs.core.first(seq73102);\nvar seq73102__$1 = cljs.core.next(seq73102);\nvar G__73104 = cljs.core.first(seq73102__$1);\nvar seq73102__$2 = cljs.core.next(seq73102__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__73103,G__73104,seq73102__$2);\n});\n\ncljs.analyzer.add_types.cljs$lang$maxFixedArity = (2);\n\ncljs.analyzer.alias__GT_type = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"Array\",\"Array\",-423496279,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"Boolean\",\"Boolean\",1661141587,null),new cljs.core.Symbol(null,\"symbol\",\"symbol\",601958831,null),new cljs.core.Symbol(null,\"Symbol\",\"Symbol\",716452869,null)], null);\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.has_extern_QMARK__STAR_ = (function cljs$analyzer$has_extern_QMARK__STAR_(var_args){\nvar G__73120 = arguments.length;\nswitch (G__73120) {\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar pre__$1 = (function (){var temp__5755__auto__ = cljs.core.find(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null)),cljs.core.first(pre));\nif((temp__5755__auto__ == null)){\nreturn pre;\n} else {\nvar me = temp__5755__auto__;\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.first(me)));\nif((temp__5755__auto____$1 == null)){\nreturn pre;\n} else {\nvar tag = temp__5755__auto____$1;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre));\n}\n}\n})();\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(pre__$1,externs,externs);\n});\n\ncljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3 = (function (pre,externs,top){\nwhile(true){\nif(cljs.core.empty_QMARK_(pre)){\nreturn true;\n} else {\nvar x = cljs.core.first(pre);\nvar me = cljs.core.find(externs,x);\nif(cljs.core.not(me)){\nreturn false;\n} else {\nvar vec__73135 = me;\nvar x_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73135,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73135,(1),null);\nvar xmeta = cljs.core.meta(x_SINGLEQUOTE_);\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(xmeta));\nif(and__4120__auto__){\nreturn new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(xmeta);\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar or__4131__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.next(pre),externs_SINGLEQUOTE_,top);\n}\n} else {\nvar G__77655 = cljs.core.next(pre);\nvar G__77656 = externs_SINGLEQUOTE_;\nvar G__77657 = top;\npre = G__77655;\nexterns = G__77656;\ntop = G__77657;\ncontinue;\n}\n\n}\n\n}\nbreak;\n}\n});\n\ncljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$maxFixedArity = 3;\n\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.has_extern_QMARK_ = (function cljs$analyzer$has_extern_QMARK_(var_args){\nvar G__73156 = arguments.length;\nswitch (G__73156) {\ncase 1:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2(pre,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239)));\n});\n\ncljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar or__4131__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(pre,externs);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(pre)))?(function (){var x = cljs.core.first(pre);\nvar or__4131__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),x));\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null)], null),x));\n}\n})():null);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(pre)),\"cljs$\");\n}\n}\n});\n\ncljs.analyzer.has_extern_QMARK_.cljs$lang$maxFixedArity = 2;\n\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.js_tag = (function cljs$analyzer$js_tag(var_args){\nvar G__73169 = arguments.length;\nswitch (G__73169) {\ncase 1:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\n});\n\ncljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2 = (function (pre,tag_type){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3(pre,tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239)));\n});\n\ncljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3 = (function (pre,tag_type,externs){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(pre,tag_type,externs,externs);\n});\n\ncljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4 = (function (pre,tag_type,externs,top){\nvar temp__5753__auto__ = cljs.core.find(externs,cljs.core.first(pre));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar vec__73172 = temp__5753__auto__;\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73172,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73172,(1),null);\nvar me = vec__73172;\nvar tag = (function (){var G__73175 = cljs.core.meta(p);\nreturn (tag_type.cljs$core$IFn$_invoke$arity$1 ? tag_type.cljs$core$IFn$_invoke$arity$1(G__73175) : tag_type.call(null,G__73175));\n})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),(1))){\nif(cljs.core.truth_(tag)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2(tag,tag) : cljs.analyzer.alias__GT_type.call(null,tag,tag))));\n} else {\nreturn null;\n}\n} else {\nvar or__4131__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.next(pre),tag_type,externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(top,tag),top);\n}\n}\n} else {\nreturn null;\n}\n});\n\ncljs.analyzer.js_tag.cljs$lang$maxFixedArity = 4;\n\ncljs.analyzer.dotted_symbol_QMARK_ = (function cljs$analyzer$dotted_symbol_QMARK_(sym){\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nreturn ((goog.string.contains(s,\".\")) && ((!(goog.string.contains(s,\"..\")))));\n});\ncljs.analyzer.munge_node_lib = (function cljs$analyzer$munge_node_lib(name){\nreturn [\"node$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\ncljs.analyzer.munge_global_export = (function cljs$analyzer$munge_global_export(name){\nreturn [\"global$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\n/**\n * Takes a namespace and an unqualified symbol and potentially returns a new\n *   symbol to be used in lieu of the original.\n */\ncljs.analyzer.resolve_alias = (function cljs$analyzer$resolve_alias(ns,sym){\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = (function (){var fexpr__73215 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),\"null\",new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),\"null\"], null), null);\nreturn (fexpr__73215.cljs$core$IFn$_invoke$arity$1 ? fexpr__73215.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__73215.call(null,sym));\n})();\nif(cljs.core.truth_(and__4120__auto____$1)){\nreturn cljs.analyzer.checked_arrays();\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget\",\"checked-aget\",950823006,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset\",\"checked-aset\",1556136760,null)], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget'\",\"checked-aget'\",212330530,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset'\",\"checked-aset'\",-510930777,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.checked_arrays(),sym], null));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.ns__GT_module_type = (function cljs$analyzer$ns__GT_module_type(ns){\nif(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_(ns))){\nreturn new cljs.core.Keyword(null,\"js\",\"js\",1768080579);\n} else {\nif(cljs.analyzer.node_module_dep_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"node\",\"node\",581201198);\n} else {\nif(cljs.analyzer.dep_has_global_exports_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"global\",\"global\",93595047);\n} else {\nreturn null;\n}\n}\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.resolve_STAR_ !== 'undefined')){\n} else {\ncljs.analyzer.resolve_STAR_ = (function (){var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__73218 = cljs.core.get_global_hierarchy;\nreturn (fexpr__73218.cljs$core$IFn$_invoke$arity$0 ? fexpr__73218.cljs$core$IFn$_invoke$arity$0() : fexpr__73218.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"resolve*\"),((function (method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__){\nreturn (function (env,sym,full_ns,current_ns){\nreturn cljs.analyzer.ns__GT_module_type(full_ns);\n});})(method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4617__auto__,method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__));\n})();\n}\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null);\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"node\",\"node\",581201198),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"global\",\"global\",93595047),(function (env,sym,full_ns,current_ns){\nvar pre = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null),cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./))));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_global_export(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null))], null);\n}));\n/**\n * Specially-treated symbols for which we don't trigger :private-var-access warnings.\n */\ncljs.analyzer.private_var_access_exceptions = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),\"null\"], null), null);\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (env,sym,full_ns,current_ns){\nvar sym_ast = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),full_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\nvar sym_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym));\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(sym_ast);\nif(cljs.core.truth_(and__4120__auto____$1)){\nreturn (((!(cljs.analyzer._STAR_private_var_access_nowarn_STAR_))) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.private_var_access_exceptions,sym_name)))));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_name], null));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym_ast,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym_name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null)], 0));\n}));\ncljs.analyzer.required_QMARK_ = (function cljs$analyzer$required_QMARK_(ns,env){\nreturn ((cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)))),ns)) || (cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)))),ns)));\n});\n/**\n * Returns true if ns is a required namespace and a JavaScript module that\n * might be invokeable as a function.\n */\ncljs.analyzer.invokeable_ns_QMARK_ = (function cljs$analyzer$invokeable_ns_QMARK_(ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar and__4120__auto__ = cljs.analyzer.required_QMARK_(ns__$1,env);\nif(and__4120__auto__){\nvar or__4131__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn ((cljs.analyzer.node_module_dep_QMARK_(ns__$1)) || (cljs.analyzer.dep_has_global_exports_QMARK_(ns__$1)));\n}\n} else {\nreturn and__4120__auto__;\n}\n});\ncljs.analyzer.resolve_invokeable_ns = (function cljs$analyzer$resolve_invokeable_ns(ns,current_ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar module_type = cljs.analyzer.ns__GT_module_type(ns__$1);\nvar G__73272 = module_type;\nvar G__73272__$1 = (((G__73272 instanceof cljs.core.Keyword))?G__73272.fqn:null);\nswitch (G__73272__$1) {\ncase \"js\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((function (){var or__4131__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1);\n}\n})()),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null);\n\nbreak;\ncase \"node\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_node_lib(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ncase \"global\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_global_export(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__73272__$1)].join('')));\n\n}\n});\ncljs.analyzer.handle_symbol_local = (function cljs$analyzer$handle_symbol_local(sym,lb){\nif((lb instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null);\n} else {\nreturn lb;\n}\n});\n/**\n * Resolve a var. Accepts a side-effecting confirm fn for producing\n * warnings about unresolved vars.\n * @param {...*} var_args\n */\ncljs.analyzer.resolve_var = (function cljs$analyzer$resolve_var(var_args){\nvar G__73333 = arguments.length;\nswitch (G__73333) {\ncase 2:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = (function (env,sym){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,null);\n});\n\ncljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = (function (env,sym,confirm){\nwhile(true){\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nif((\"js\" === cljs.core.namespace(sym))){\nvar symn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar shadowed_by_local = cljs.analyzer.handle_symbol_local(symn,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,symn));\nif((!((shadowed_by_local == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(shadowed_by_local,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nvar pre = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./)));\nif(((cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))) && (cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta((function (){var or__4131__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1(pre);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null))], null),(function (){var temp__5753__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ret_tag = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358),true,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag], null);\n} else {\nreturn null;\n}\n})()], 0));\n\n}\n} else {\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nvar lb = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,sym));\nvar current_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nif((!((lb == null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lb,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns = cljs.core.namespace(sym);\nvar ns__$1 = (((\"clojure.core\" === ns))?\"cljs.core\":ns);\nvar full_ns = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,ns__$1,(function (){var or__4131__auto__ = (function (){var and__4120__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\n} else {\nreturn and__4120__auto__;\n}\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns__$1);\n}\n})());\nif((!((confirm == null)))){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns)){\ncljs.analyzer.confirm_ns(env,full_ns);\n} else {\n}\n\nvar G__73371_77788 = env;\nvar G__73372_77789 = full_ns;\nvar G__73373_77790 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__73371_77788,G__73372_77789,G__73373_77790) : confirm.call(null,G__73371_77788,G__73372_77789,G__73373_77790));\n} else {\n}\n\nreturn (cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns) : cljs.analyzer.resolve_STAR_.call(null,env,sym,full_ns,current_ns));\n} else {\nif(cljs.analyzer.dotted_symbol_QMARK_(sym)){\nvar idx = s.indexOf(\".\");\nvar prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx));\nvar suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1)));\nvar temp__5755__auto__ = cljs.analyzer.handle_symbol_local(prefix,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,prefix));\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),prefix);\nif((temp__5755__auto____$1 == null)){\nvar temp__5755__auto____$2 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),prefix);\nif((temp__5755__auto____$2 == null)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",prefix))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix):cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),suffix)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),prefix], null)], 0));\n} else {\nvar info = temp__5755__auto____$2;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([info,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n}\n} else {\nvar full_ns = temp__5755__auto____$1;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),suffix)], null);\n}\n} else {\nvar lb__$1 = temp__5755__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(lb__$1)),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix)].join(''))], null);\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym) == null)))){\nvar full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym);\nreturn (cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns) : cljs.analyzer.resolve_STAR_.call(null,env,sym,full_ns,current_ns));\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym);\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn (cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym__$1,full_ns,current_ns) : cljs.analyzer.resolve_STAR_.call(null,env,sym__$1,full_ns,current_ns));\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym) == null)))){\nvar G__77825 = env;\nvar G__77826 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym);\nvar G__77827 = confirm;\nenv = G__77825;\nsym = G__77826;\nconfirm = G__77827;\ncontinue;\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)))){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nif(cljs.analyzer.core_name_QMARK_(env,sym)){\nif((!((confirm == null)))){\nvar G__73406_77840 = env;\nvar G__73407_77841 = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\nvar G__73408_77842 = sym;\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__73406_77840,G__73407_77841,G__73408_77842) : confirm.call(null,G__73406_77840,G__73407_77841,G__73408_77842));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null)], 0));\n} else {\nif(cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_(s,env))){\nreturn cljs.analyzer.resolve_invokeable_ns(s,current_ns,env);\n} else {\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n});\n\ncljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n * Emits a warning if no such var exists.\n */\ncljs.analyzer.resolve_existing_var = (function cljs$analyzer$resolve_existing_var(env,sym){\nif(cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists);\n} else {\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,sym);\n}\n});\n/**\n * Given env, an analysis environment env, and names, a list of symbols, confirm\n * that all correspond to declared dynamic vars.\n */\ncljs.analyzer.confirm_bindings = (function cljs$analyzer$confirm_bindings(env,names){\nvar seq__73428 = cljs.core.seq(names);\nvar chunk__73429 = null;\nvar count__73430 = (0);\nvar i__73431 = (0);\nwhile(true){\nif((i__73431 < count__73430)){\nvar name = chunk__73429.cljs$core$IIndexed$_nth$arity$2(null,i__73431);\nvar env_77859__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_77860 = cljs.analyzer.resolve_existing_var(env_77859__$1,name);\nif(cljs.core.truth_((function (){var and__4120__auto__ = ev_77860;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_77860));\n} else {\nreturn and__4120__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_77859__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_77860,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_77860)], null));\n} else {\n}\n\n\nvar G__77868 = seq__73428;\nvar G__77869 = chunk__73429;\nvar G__77870 = count__73430;\nvar G__77871 = (i__73431 + (1));\nseq__73428 = G__77868;\nchunk__73429 = G__77869;\ncount__73430 = G__77870;\ni__73431 = G__77871;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__73428);\nif(temp__5753__auto__){\nvar seq__73428__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__73428__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__73428__$1);\nvar G__77878 = cljs.core.chunk_rest(seq__73428__$1);\nvar G__77879 = c__4550__auto__;\nvar G__77880 = cljs.core.count(c__4550__auto__);\nvar G__77881 = (0);\nseq__73428 = G__77878;\nchunk__73429 = G__77879;\ncount__73430 = G__77880;\ni__73431 = G__77881;\ncontinue;\n} else {\nvar name = cljs.core.first(seq__73428__$1);\nvar env_77882__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_77883 = cljs.analyzer.resolve_existing_var(env_77882__$1,name);\nif(cljs.core.truth_((function (){var and__4120__auto__ = ev_77883;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_77883));\n} else {\nreturn and__4120__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_77882__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_77883,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_77883)], null));\n} else {\n}\n\n\nvar G__77886 = cljs.core.next(seq__73428__$1);\nvar G__77887 = null;\nvar G__77888 = (0);\nvar G__77889 = (0);\nseq__73428 = G__77886;\nchunk__73429 = G__77887;\ncount__73430 = G__77888;\ni__73431 = G__77889;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve a macro.\n */\ncljs.analyzer.resolve_macro_var = (function cljs$analyzer$resolve_macro_var(env,sym){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927));\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns__$1 = cljs.core.namespace(sym);\nvar ns__$2 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure.core\",ns__$1))?\"cljs.core\":ns__$1);\nvar full_ns = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$2);\nvar full_ns__$1 = (((!(clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"].join('')):full_ns);\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null)) == null)))){\nvar full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null)) == null)))){\nvar qualified_symbol = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null));\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym__$1], null));\n} else {\nvar ns__$1 = (((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null)) == null))))?ns:((cljs.analyzer.core_name_QMARK_(env,sym))?cljs.analyzer.CLJS_CORE_MACROS_SYM:null));\nif((!((ns__$1 == null)))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n} else {\nreturn null;\n}\n\n}\n}\n}\n});\n\n\ncljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\",new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),\"null\",new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),\"null\",new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),\"null\",new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),\"null\",new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),\"null\",new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),\"null\",new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\"], null), null);\ncljs.analyzer._STAR_recur_frames_STAR_ = null;\ncljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;\ncljs.analyzer._STAR_allow_redef_STAR_ = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = true;\ncljs.analyzer.analyze_keyword = (function cljs$analyzer$analyze_keyword(env,sym){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null)], null);\n});\ncljs.analyzer.get_tag = (function cljs$analyzer$get_tag(e){\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e)));\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5755__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e));\n} else {\nvar tag = temp__5755__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.find_matching_method = (function cljs$analyzer$find_matching_method(f,params){\nvar methods$ = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(f);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(f));\n}\n})();\nvar c = cljs.core.count(params);\nreturn cljs.core.some(((function (methods$,c){\nreturn (function (m){\nvar and__4120__auto__ = (function (){var or__4131__auto__ = (new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869).cljs$core$IFn$_invoke$arity$1(m) === c);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(m);\n}\n})();\nif(cljs.core.truth_(and__4120__auto__)){\nreturn m;\n} else {\nreturn and__4120__auto__;\n}\n});})(methods$,c))\n,methods$);\n});\ncljs.analyzer.type_QMARK_ = (function cljs$analyzer$type_QMARK_(env,t){\nif((((!((t == null)))) && ((t instanceof cljs.core.Symbol)))){\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,t);\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(var$));\nif((temp__5755__auto____$1 == null)){\nvar temp__5755__auto____$2 = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5755__auto____$2 == null)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"PersistentHashMap\",\"cljs.core/PersistentHashMap\",-454120575,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"List\",\"cljs.core/List\",1708954352,null),\"null\"], null), null),t);\n} else {\nvar proto = temp__5755__auto____$2;\nreturn proto;\n}\n} else {\nvar type = temp__5755__auto____$1;\nreturn type;\n}\n} else {\nvar type = temp__5755__auto__;\nreturn type;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.NOT_NATIVE = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null),\"null\",new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null),\"null\"], null), null);\ncljs.analyzer.BOOLEAN_OR_SEQ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),\"null\",new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\"], null), null);\ncljs.analyzer.unwrap_quote = (function cljs$analyzer$unwrap_quote(p__73541){\nvar map__73542 = p__73541;\nvar map__73542__$1 = (((((!((map__73542 == null))))?(((((map__73542.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73542.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73542):map__73542);\nvar expr = map__73542__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73542__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif(cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245))){\nreturn new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(expr);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_if = (function cljs$analyzer$infer_if(env,e){\nvar map__73548 = cljs.analyzer.unwrap_quote(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(e));\nvar map__73548__$1 = (((((!((map__73548 == null))))?(((((map__73548.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73548.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73548):map__73548);\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73548__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73548__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar then_tag = (function (){var G__73552 = env;\nvar G__73553 = new cljs.core.Keyword(null,\"then\",\"then\",460598070).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73552,G__73553) : cljs.analyzer.infer_tag.call(null,G__73552,G__73553));\n})();\nif(((cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"const\",\"const\",1709929842))) && ((!((form == null)))) && ((!(form === false))))){\nreturn then_tag;\n} else {\nvar else_tag = (function (){var G__73558 = env;\nvar G__73559 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73558,G__73559) : cljs.analyzer.infer_tag.call(null,G__73558,G__73559));\n})();\nif(((cljs.core.symbol_identical_QMARK_(then_tag,else_tag)) || (cljs.core.symbol_identical_QMARK_(else_tag,cljs.analyzer.IGNORE_SYM)))){\nreturn then_tag;\n} else {\nif(cljs.core.symbol_identical_QMARK_(then_tag,cljs.analyzer.IGNORE_SYM)){\nreturn else_tag;\n} else {\nif((((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,then_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,then_tag)))) && ((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,else_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,else_tag)))))){\nreturn new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null);\n} else {\nif((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,then_tag) == null)))) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,else_tag) == null)))))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nvar then_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(then_tag))?then_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([then_tag]));\nvar else_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(else_tag))?else_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([else_tag]));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1,else_tag__$1);\n}\n\n}\n}\n}\n}\n});\ncljs.analyzer.infer_invoke = (function cljs$analyzer$infer_invoke(env,p__73585){\nvar map__73587 = p__73585;\nvar map__73587__$1 = (((((!((map__73587 == null))))?(((((map__73587.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73587.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73587):map__73587);\nvar e = map__73587__$1;\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73587__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73587__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f,args),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839));\nvar temp__5755__auto__ = (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,me) : cljs.analyzer.infer_tag.call(null,env,me));\nif((temp__5755__auto__ == null)){\nvar map__73593 = f;\nvar map__73593__$1 = (((((!((map__73593 == null))))?(((((map__73593.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73593.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73593):map__73593);\nvar info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73593__$1,new cljs.core.Keyword(null,\"info\",\"info\",-317069002));\nvar temp__5755__auto____$1 = ((((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(info) === true) || (new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(info) === true)))?new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(info):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)))?new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null):null));\nif((temp__5755__auto____$1 == null)){\nreturn cljs.analyzer.ANY_SYM;\n} else {\nvar ret_tag = temp__5755__auto____$1;\nreturn ret_tag;\n}\n} else {\nvar ret_tag = temp__5755__auto__;\nreturn ret_tag;\n}\n});\n/**\n * Given env, an analysis environment, and e, an AST node, return the inferred\n * type of the node\n */\ncljs.analyzer.infer_tag = (function cljs$analyzer$infer_tag(env,e){\nvar temp__5755__auto__ = cljs.analyzer.get_tag(e);\nif((temp__5755__auto__ == null)){\nvar G__73632 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(e);\nvar G__73632__$1 = (((G__73632 instanceof cljs.core.Keyword))?G__73632.fqn:null);\nswitch (G__73632__$1) {\ncase \"recur\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"throw\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"let\":\nvar G__73633 = env;\nvar G__73634 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73633,G__73634) : cljs.analyzer.infer_tag.call(null,G__73633,G__73634));\n\nbreak;\ncase \"loop\":\nvar G__73635 = env;\nvar G__73636 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73635,G__73636) : cljs.analyzer.infer_tag.call(null,G__73635,G__73636));\n\nbreak;\ncase \"do\":\nvar G__73637 = env;\nvar G__73638 = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73637,G__73638) : cljs.analyzer.infer_tag.call(null,G__73637,G__73638));\n\nbreak;\ncase \"fn-method\":\nvar G__73643 = env;\nvar G__73644 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73643,G__73644) : cljs.analyzer.infer_tag.call(null,G__73643,G__73644));\n\nbreak;\ncase \"def\":\nvar G__73645 = env;\nvar G__73646 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73645,G__73646) : cljs.analyzer.infer_tag.call(null,G__73645,G__73646));\n\nbreak;\ncase \"invoke\":\nreturn cljs.analyzer.infer_invoke(env,e);\n\nbreak;\ncase \"if\":\nreturn cljs.analyzer.infer_if(env,e);\n\nbreak;\ncase \"const\":\nvar G__73647 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,G__73647)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false,G__73647)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nreturn cljs.analyzer.ANY_SYM;\n\n}\n}\n\nbreak;\ncase \"quote\":\nvar G__73649 = env;\nvar G__73650 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73649,G__73650) : cljs.analyzer.infer_tag.call(null,G__73649,G__73650));\n\nbreak;\ncase \"var\":\ncase \"local\":\ncase \"js-var\":\ncase \"binding\":\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5755__auto____$1 == null)){\nvar G__73653 = env;\nvar G__73654 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__73653,G__73654) : cljs.analyzer.infer_tag.call(null,G__73653,G__73654));\n} else {\nvar init = temp__5755__auto____$1;\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.infer_tag.call(null,env,init));\n}\n\nbreak;\ncase \"host-field\":\ncase \"host-call\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ncase \"js\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ndefault:\nreturn null;\n\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.parse !== 'undefined')){\n} else {\ncljs.analyzer.parse = (function (){var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__73667 = cljs.core.get_global_hierarchy;\nreturn (fexpr__73667.cljs$core$IFn$_invoke$arity$0 ? fexpr__73667.cljs$core$IFn$_invoke$arity$0() : fexpr__73667.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"parse\"),((function (method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__){\nreturn (function() { \nvar G__77985__delegate = function (op,rest){\nreturn op;\n};\nvar G__77985 = function (op,var_args){\nvar rest = null;\nif (arguments.length > 1) {\nvar G__77991__i = 0, G__77991__a = new Array(arguments.length -  1);\nwhile (G__77991__i < G__77991__a.length) {G__77991__a[G__77991__i] = arguments[G__77991__i + 1]; ++G__77991__i;}\n  rest = new cljs.core.IndexedSeq(G__77991__a,0,null);\n} \nreturn G__77985__delegate.call(this,op,rest);};\nG__77985.cljs$lang$maxFixedArity = 1;\nG__77985.cljs$lang$applyTo = (function (arglist__77992){\nvar op = cljs.core.first(arglist__77992);\nvar rest = cljs.core.rest(arglist__77992);\nreturn G__77985__delegate(op,rest);\n});\nG__77985.cljs$core$IFn$_invoke$arity$variadic = G__77985__delegate;\nreturn G__77985;\n})()\n;})(method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4617__auto__,method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__));\n})();\n}\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.var_meta = (function cljs$analyzer$var_meta(var_args){\nvar G__73676 = arguments.length;\nswitch (G__73676) {\ncase 1:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1 = (function (var$){\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,null);\n});\n\ncljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2 = (function (var$,expr_env){\nvar sym = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$);\nvar ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095)], null);\nvar m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var user_meta = new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(var$);\nvar uks = cljs.core.keys(user_meta);\nreturn cljs.core.zipmap(uks,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (user_meta,uks,sym,ks){\nreturn (function (p1__73669_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta,p1__73669_SHARP_),null,(1),null)),(2),null));\n});})(user_meta,uks,sym,ks))\n,uks));\n})(),cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (sym,ks){\nreturn (function (p1__73670_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$,p1__73670_SHARP_),null,(1),null)),(2),null));\n});})(sym,ks))\n,ks)),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null))))),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"test\",\"test\",577538877),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$test\",\".-cljs$lang$test\",718963148,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))], 0)))),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),(function (){var arglists = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(var$);\nvar arglists_SINGLEQUOTE_ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists)))?cljs.core.second(arglists):arglists);\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta,arglists_SINGLEQUOTE_,new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)),(2),null));\n})()], 0))], 0));\nif(cljs.core.truth_(expr_env)){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,m) : cljs.analyzer.analyze.call(null,expr_env,m));\n} else {\nreturn m;\n}\n});\n\ncljs.analyzer.var_meta.cljs$lang$maxFixedArity = 2;\n\ncljs.analyzer.var_ast = (function cljs$analyzer$var_ast(env,sym){\nvar _STAR_private_var_access_nowarn_STAR__orig_val__73688 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__73689 = true;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__73689;\n\ntry{var env__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env__$1,sym,cljs.analyzer.confirm_var_exists_throw());\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar temp__5757__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar var_ns = temp__5757__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym)),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),(function (){var G__73693 = expr_env;\nvar G__73694 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns),cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73693,G__73694) : cljs.analyzer.analyze.call(null,G__73693,G__73694));\n})(),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,expr_env)], null);\n}\n}finally {cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__73688;\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),(function (op,env,p__73695,_,___$1){\nvar vec__73696 = p__73695;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73696,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73696,(1),null);\nvar form = vec__73696;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to var\");\n} else {\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Argument to var must be symbol\");\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"the-var\",\"the-var\",1428415613),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964)], null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),cljs.analyzer.var_ast(env,sym)], 0));\n}));\ncljs.analyzer.predicate__GT_tag = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(\"cljs.core\",\"array?\",\"cljs.core/array?\",-1655912448,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),new cljs.core.Symbol(\"cljs.core\",\"char?\",\"cljs.core/char?\",416405281,null),new cljs.core.Symbol(\"cljs.core\",\"sequential?\",\"cljs.core/sequential?\",1777854658,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"var?\",\"cljs.core/var?\",1711182854,null),new cljs.core.Symbol(\"cljs.core\",\"map-entry?\",\"cljs.core/map-entry?\",465406728,null),new cljs.core.Symbol(\"cljs.core\",\"double?\",\"cljs.core/double?\",1757455529,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"inst?\",\"cljs.core/inst?\",1216133710,null),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),new cljs.core.Symbol(\"cljs.core\",\"true?\",\"cljs.core/true?\",-77973136,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),new cljs.core.Symbol(\"cljs.core\",\"volatile?\",\"cljs.core/volatile?\",-1122186415,null),new cljs.core.Symbol(\"cljs.core\",\"integer?\",\"cljs.core/integer?\",1710697810,null),new cljs.core.Symbol(\"cljs.core\",\"infinite?\",\"cljs.core/infinite?\",-1069503726,null),new cljs.core.Symbol(\"cljs.core\",\"undefined?\",\"cljs.core/undefined?\",-1206515693,null),new cljs.core.Symbol(\"cljs.core\",\"uuid?\",\"cljs.core/uuid?\",-15131116,null),new cljs.core.Symbol(\"cljs.core\",\"record?\",\"cljs.core/record?\",1307655860,null),new cljs.core.Symbol(\"cljs.core\",\"reduced?\",\"cljs.core/reduced?\",-1192491371,null),new cljs.core.Symbol(\"cljs.core\",\"tagged-literal?\",\"cljs.core/tagged-literal?\",-1159666987,null),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Symbol(\"cljs.core\",\"zero?\",\"cljs.core/zero?\",-341242858,null),new cljs.core.Symbol(\"cljs.core\",\"false?\",\"cljs.core/false?\",-1660815306,null),new cljs.core.Symbol(\"cljs.core\",\"list?\",\"cljs.core/list?\",-684796618,null),new cljs.core.Symbol(\"cljs.core\",\"seqable?\",\"cljs.core/seqable?\",-745394886,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"delay?\",\"cljs.core/delay?\",2099859324,null),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Symbol(\"cljs.core\",\"chunked-seq?\",\"cljs.core/chunked-seq?\",-712922369,null)],[new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"cljs.core\",\"ISequential\",\"cljs.core/ISequential\",-950981796,null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Var\",\"cljs.core/Var\",2071014443,null),new cljs.core.Symbol(\"cljs.core\",\"IMapEntry\",\"cljs.core/IMapEntry\",535941300,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"cljs.core\",\"Inst\",\"cljs.core/Inst\",959205835,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"cljs.core\",\"Volatile\",\"cljs.core/Volatile\",-1098692185,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(\"cljs.core\",\"IUUID\",\"cljs.core/IUUID\",-1606521379,null),new cljs.core.Symbol(\"cljs.core\",\"IRecord\",\"cljs.core/IRecord\",635852000,null),new cljs.core.Symbol(\"cljs.core\",\"Reduced\",\"cljs.core/Reduced\",971663396,null),new cljs.core.Symbol(\"cljs.core\",\"ITaggedLiteral\",\"cljs.core/ITaggedLiteral\",-1236965094,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(\"cljs.core\",\"ISeqable\",\"cljs.core/ISeqable\",137437203,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),new cljs.core.Symbol(\"cljs.core\",\"Delay\",\"cljs.core/Delay\",-21574999,null),new cljs.core.Symbol(\"js\",\"RegExp\",\"js/RegExp\",1778210562,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"IChunkedSeq\",\"cljs.core/IChunkedSeq\",-892943716,null)]);\n/**\n * Look for a predicate-induced tag when the test expression is a simple\n * application of a predicate to a local, as in (string? x).\n */\ncljs.analyzer.simple_predicate_induced_tag = (function cljs$analyzer$simple_predicate_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((2) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__73703 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__73704 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\ncljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__73704;\n\ntry{var G__73705 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__73706 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73705,G__73706) : cljs.analyzer.analyze.call(null,G__73705,G__73706));\n}finally {cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__73703;\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nvar temp__5753__auto__ = (function (){var G__73707 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nreturn (cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1(G__73707) : cljs.analyzer.predicate__GT_tag.call(null,G__73707));\n})();\nif(cljs.core.truth_(temp__5753__auto__)){\nvar tag = temp__5753__auto__;\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((function (){var and__4120__auto__ = (cljs.core.namespace(sym) == null);\nif(and__4120__auto__){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null));\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Look for a type-check-induced tag when the test expression is the use of\n * instance? on a local, as in (instance? ICounted x).\n */\ncljs.analyzer.type_check_induced_tag = (function cljs$analyzer$type_check_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((3) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__73708 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__73709 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\ncljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__73709;\n\ntry{var G__73714 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__73715 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73714,G__73715) : cljs.analyzer.analyze.call(null,G__73714,G__73715));\n}finally {cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__73708;\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nif(cljs.core.truth_((function (){var G__73718 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nvar fexpr__73717 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),\"null\"], null), null);\nreturn (fexpr__73717.cljs$core$IFn$_invoke$arity$1 ? fexpr__73717.cljs$core$IFn$_invoke$arity$1(G__73718) : fexpr__73717.call(null,G__73718));\n})())){\nvar analyzed_type = (function (){var _STAR_cljs_warnings_STAR__orig_val__73719 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__73720 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\ncljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__73720;\n\ntry{var G__73721 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__73722 = cljs.core.second(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73721,G__73722) : cljs.analyzer.analyze.call(null,G__73721,G__73722));\n}finally {cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__73719;\n}})();\nvar tag = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_type);\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_type));\nif(and__4120__auto__){\nvar and__4120__auto____$1 = (cljs.core.namespace(sym) == null);\nif(and__4120__auto____$1){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Refine a tag to exclude clj-nil if the test is a simple symbol.\n */\ncljs.analyzer.truth_induced_tag = (function cljs$analyzer$truth_induced_tag(env,test){\nif((((test instanceof cljs.core.Symbol)) && ((cljs.core.namespace(test) == null)))){\nvar analyzed_symbol = (function (){var _STAR_cljs_warnings_STAR__orig_val__73751 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__73752 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\ncljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__73752;\n\ntry{var G__73754 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__73755 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73754,G__73755) : cljs.analyzer.analyze.call(null,G__73754,G__73755));\n}finally {cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__73751;\n}})();\nvar temp__5753__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(analyzed_symbol);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar tag = temp__5753__auto__;\nif(((cljs.core.set_QMARK_(tag)) && (cljs.core.contains_QMARK_(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [test,cljs.analyzer.canonicalize_type(cljs.core.disj.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null)))], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Looks at the test and sets any tags which are induced by virtue\n *   of the test being truthy. For example in (if (string? x) x :bar)\n *   the local x in the then branch must be of string type.\n */\ncljs.analyzer.set_test_induced_tags = (function cljs$analyzer$set_test_induced_tags(env,test){\nvar vec__73761 = (function (){var or__4131__auto__ = cljs.analyzer.simple_predicate_induced_tag(env,test);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.analyzer.type_check_induced_tag(env,test);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn cljs.analyzer.truth_induced_tag(env,test);\n}\n}\n})();\nvar local = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73761,(0),null);\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73761,(1),null);\nvar G__73766 = env;\nif(cljs.core.truth_(local)){\nreturn cljs.core.assoc_in(G__73766,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),local,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null),tag);\n} else {\nreturn G__73766;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),(function (op,env,p__73774,name,_){\nvar vec__73778 = p__73774;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73778,(0),null);\nvar test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73778,(1),null);\nvar then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73778,(2),null);\nvar else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73778,(3),null);\nvar form = vec__73778;\nif((cljs.core.count(form) < (3))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too few arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too many arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nvar test_expr = (function (){var _STAR_recur_frames_STAR__orig_val__73785 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__73786 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__73786;\n\ntry{var G__73787 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__73788 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73787,G__73788) : cljs.analyzer.analyze.call(null,G__73787,G__73788));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__73785;\n}})();\nvar then_expr = (function (){var _STAR_allow_redef_STAR__orig_val__73789 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__73790 = true;\ncljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__73790;\n\ntry{var G__73792 = cljs.analyzer.set_test_induced_tags(env,test);\nvar G__73793 = then;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73792,G__73793) : cljs.analyzer.analyze.call(null,G__73792,G__73793));\n}finally {cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__73789;\n}})();\nvar else_expr = (function (){var _STAR_allow_redef_STAR__orig_val__73800 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__73801 = true;\ncljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__73801;\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,else$) : cljs.analyzer.analyze.call(null,env,else$));\n}finally {cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__73800;\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"if\",\"if\",-458814265),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test_expr,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then_expr,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),else_expr,new cljs.core.Keyword(null,\"unchecked\",\"unchecked\",924418378),cljs.core._STAR_unchecked_if_STAR_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.Keyword(null,\"else\",\"else\",-1508377146)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),(function (op,env,p__73810,name,_){\nvar vec__73812 = p__73810;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73812,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73812,(1),null);\nvar tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73812,(2),null);\nvar thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73812,(3),null);\nvar default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73812,(4),null);\nvar form = vec__73812;\n\n\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar v = (function (){var _STAR_recur_frames_STAR__orig_val__73821 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__73822 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__73822;\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__73821;\n}})();\nvar tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (expr_env,v,vec__73812,___$1,sym,tests,thens,default$,form){\nreturn (function (p1__73805_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (expr_env,v,vec__73812,___$1,sym,tests,thens,default$,form){\nreturn (function (t){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,t) : cljs.analyzer.analyze.call(null,expr_env,t));\n});})(expr_env,v,vec__73812,___$1,sym,tests,thens,default$,form))\n,p1__73805_SHARP_);\n});})(expr_env,v,vec__73812,___$1,sym,tests,thens,default$,form))\n,tests);\nvar thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (expr_env,v,tests__$1,vec__73812,___$1,sym,tests,thens,default$,form){\nreturn (function (p1__73806_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,p1__73806_SHARP_) : cljs.analyzer.analyze.call(null,env,p1__73806_SHARP_));\n});})(expr_env,v,tests__$1,vec__73812,___$1,sym,tests,thens,default$,form))\n,thens);\nvar nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (expr_env,v,tests__$1,thens__$1,vec__73812,___$1,sym,tests,thens,default$,form){\nreturn (function (tests__$2,then){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-node\",\"case-node\",1016946320),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (expr_env,v,tests__$1,thens__$1,vec__73812,___$1,sym,tests,thens,default$,form){\nreturn (function (test){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-test\",\"case-test\",-213512472),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(test),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),expr_env,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877)], null)], null);\n});})(expr_env,v,tests__$1,thens__$1,vec__73812,___$1,sym,tests,thens,default$,form))\n,tests__$2),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-then\",\"case-then\",2107591745),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(then),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null);\n});})(expr_env,v,tests__$1,thens__$1,vec__73812,___$1,sym,tests,thens,default$,form))\n,tests__$1,thens__$1);\nvar default$__$1 = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,default$) : cljs.analyzer.analyze.call(null,env,default$));\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case\",\"case\",1143702196),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),v,new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),nodes,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),default$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),(function (op,env,p__73835,name,_){\nvar vec__73841 = p__73835;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73841,(0),null);\nvar throw_form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73841,(1),null);\nvar form = vec__73841;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too few arguments to throw, throw expects a single Error instance\");\n} else {\nif(((2) < cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to throw, throw expects a single Error instance\");\n} else {\n}\n}\n\nvar throw_expr = (function (){var _STAR_recur_frames_STAR__orig_val__73848 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__73849 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__73849;\n\ntry{var G__73864 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__73865 = throw_form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73864,G__73865) : cljs.analyzer.analyze.call(null,G__73864,G__73865));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__73848;\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"throw\",\"throw\",-1044625833),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),throw_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),(function (op,env,p__73879,name,_){\nvar vec__73883 = p__73879;\nvar seq__73884 = cljs.core.seq(vec__73883);\nvar first__73885 = cljs.core.first(seq__73884);\nvar seq__73884__$1 = cljs.core.next(seq__73884);\nvar ___$1 = first__73885;\nvar body = seq__73884__$1;\nvar form = vec__73883;\nvar catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),((function (vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form){\nreturn (function (p1__73868_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),p1__73868_SHARP_)){\nreturn new cljs.core.Keyword(null,\"return\",\"return\",-1891502105);\n} else {\nreturn p1__73868_SHARP_;\n}\n});})(vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form))\n);\nvar catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,((function (catchenv,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form){\nreturn (function (p1__73869_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__73869_SHARP_),new cljs.core.Symbol(null,\"catch\",\"catch\",-1616370245,null));\n});})(catchenv,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form))\n);\nvar default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_,((function (catchenv,catch_QMARK_,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form){\nreturn (function (p1__73870_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__73870_SHARP_),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\n});})(catchenv,catch_QMARK_,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form))\n);\nvar finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,((function (catchenv,catch_QMARK_,default_QMARK_,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form){\nreturn (function (p1__73871_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__73871_SHARP_),new cljs.core.Symbol(null,\"finally\",\"finally\",-1065347064,null));\n});})(catchenv,catch_QMARK_,default_QMARK_,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form))\n);\nvar map__73886 = (function (){var parser = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"start\",\"start\",-355208981),new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),body,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),null,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),null], null);\nwhile(true){\nif(cljs.core.seq_QMARK_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser))){\nvar vec__73914 = new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser);\nvar seq__73915 = cljs.core.seq(vec__73914);\nvar first__73916 = cljs.core.first(seq__73915);\nvar seq__73915__$1 = cljs.core.next(seq__73915);\nvar form__$1 = first__73916;\nvar forms_STAR_ = seq__73915__$1;\nvar parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),forms_STAR_);\nvar G__73917 = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(parser);\nvar G__73917__$1 = (((G__73917 instanceof cljs.core.Keyword))?G__73917.fqn:null);\nswitch (G__73917__$1) {\ncase \"start\":\nif(cljs.core.truth_((catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null,form__$1)))){\nvar G__78173 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"catches\",\"catches\",-1478797617));\nparser = G__78173;\ncontinue;\n} else {\nif(cljs.core.truth_((finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null,form__$1)))){\nvar G__78174 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__78174;\ncontinue;\n} else {\nvar G__78175 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),cljs.core.conj,form__$1);\nparser = G__78175;\ncontinue;\n\n}\n}\n\nbreak;\ncase \"catches\":\nif(cljs.core.truth_((default_QMARK_.cljs$core$IFn$_invoke$arity$1 ? default_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : default_QMARK_.call(null,form__$1)))){\nvar G__78176 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], 0));\nparser = G__78176;\ncontinue;\n} else {\nif(cljs.core.truth_((catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null,form__$1)))){\nvar G__78177 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138)], null),cljs.core.conj,form__$1);\nparser = G__78177;\ncontinue;\n} else {\nif(cljs.core.truth_((finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null,form__$1)))){\nvar G__78178 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__78178;\ncontinue;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid try form\");\n\n}\n}\n}\n\nbreak;\ncase \"finally\":\nvar G__78179 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"done\",\"done\",-889844188)], 0));\nparser = G__78179;\ncontinue;\n\nbreak;\ncase \"done\":\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Unexpected form after finally\");\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__73917__$1)].join('')));\n\n}\n} else {\nreturn parser;\n}\nbreak;\n}\n})();\nvar map__73886__$1 = (((((!((map__73886 == null))))?(((((map__73886.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73886.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73886):map__73886);\nvar body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73886__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73886__$1,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138));\nvar dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73886__$1,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381));\nvar fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73886__$1,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426));\nvar finally$ = ((cljs.core.seq(fblock))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var _STAR_recur_frames_STAR__orig_val__73931 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__73932 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__73932;\n\ntry{var G__73939 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__73940 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),cljs.core.rest(fblock))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__73939,G__73940) : cljs.analyzer.analyze.call(null,G__73939,G__73940));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__73931;\n}})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true):null);\nvar e = (cljs.core.truth_((function (){var or__4131__auto__ = cljs.core.seq(cblocks);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn dblock;\n}\n})())?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"e\"):null);\nvar default$ = (function (){var temp__5751__auto__ = dblock;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar vec__73969 = temp__5751__auto__;\nvar seq__73970 = cljs.core.seq(vec__73969);\nvar first__73971 = cljs.core.first(seq__73970);\nvar seq__73970__$1 = cljs.core.next(seq__73970);\nvar ___$2 = first__73971;\nvar first__73971__$1 = cljs.core.first(seq__73970__$1);\nvar seq__73970__$2 = cljs.core.next(seq__73970__$1);\nvar ___$3 = first__73971__$1;\nvar first__73971__$2 = cljs.core.first(seq__73970__$2);\nvar seq__73970__$3 = cljs.core.next(seq__73970__$2);\nvar name__$1 = first__73971__$2;\nvar cb = seq__73970__$3;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0))));\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))));\n}\n})();\nvar cblock = ((cljs.core.seq(cblocks))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",2005388338,null),null,(1),null)),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (catchenv,catch_QMARK_,default_QMARK_,finally_QMARK_,map__73886,map__73886__$1,body__$1,cblocks,dblock,fblock,finally$,e,default$,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form){\nreturn (function (p__74002){\nvar vec__74010 = p__74002;\nvar seq__74011 = cljs.core.seq(vec__74010);\nvar first__74012 = cljs.core.first(seq__74011);\nvar seq__74011__$1 = cljs.core.next(seq__74011);\nvar ___$2 = first__74012;\nvar first__74012__$1 = cljs.core.first(seq__74011__$1);\nvar seq__74011__$2 = cljs.core.next(seq__74011__$1);\nvar type = first__74012__$1;\nvar first__74012__$2 = cljs.core.first(seq__74011__$2);\nvar seq__74011__$3 = cljs.core.next(seq__74011__$2);\nvar name__$1 = first__74012__$2;\nvar cb = seq__74011__$3;\nif(cljs.core.truth_(name__$1)){\n} else {\n}\n\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),null,(1),null)),(new cljs.core.List(null,type,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,e,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0)))),null,(1),null))))));\n});})(catchenv,catch_QMARK_,default_QMARK_,finally_QMARK_,map__73886,map__73886__$1,body__$1,cblocks,dblock,fblock,finally$,e,default$,vec__73883,seq__73884,first__73885,seq__73884__$1,___$1,body,form))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cblocks], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),null,(1),null)),(new cljs.core.List(null,default$,null,(1),null))], 0)))):default$);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(catchenv);\nvar locals__$1 = (cljs.core.truth_(e)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,e,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(e,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(e,env)], null)):locals);\nvar catch$ = (cljs.core.truth_(cblock)?(function (){var _STAR_recur_frames_STAR__orig_val__74032 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74033 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74033;\n\ntry{var G__74034 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1);\nvar G__74035 = cblock;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74034,G__74035) : cljs.analyzer.analyze.call(null,G__74034,G__74035));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74032;\n}})():null);\nvar try$ = (function (){var _STAR_recur_frames_STAR__orig_val__74037 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74038 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74038;\n\ntry{var G__74039 = (cljs.core.truth_((function (){var or__4131__auto__ = e;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn finally$;\n}\n})())?catchenv:env);\nvar G__74040 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body__$1)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74039,G__74040) : cljs.analyzer.analyze.call(null,G__74039,G__74040));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74037;\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"try\",\"try\",1380742522),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(try$,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705),finally$,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524),catch$,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),(cljs.core.truth_(catch$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524)], null):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(finally$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], null):null)], 0)))], null);\n}));\ncljs.analyzer.valid_proto = (function cljs$analyzer$valid_proto(x){\nif((x instanceof cljs.core.Symbol)){\nreturn x;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.elide_env = (function cljs$analyzer$elide_env(env,ast,opts){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235));\n});\ncljs.analyzer.replace_env_pass = (function cljs$analyzer$replace_env_pass(new_env){\nreturn (function (env,ast,opts){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new_env);\n});\n});\ncljs.analyzer.ast_children = (function cljs$analyzer$ast_children(ast){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (c){\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ast,c);\nif(cljs.core.vector_QMARK_(g)){\nreturn g;\n} else {\nif(cljs.core.truth_(g)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null);\n} else {\nreturn null;\n}\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)], 0));\n});\ncljs.analyzer.constant_value_QMARK_ = (function cljs$analyzer$constant_value_QMARK_(p__74083){\nvar map__74085 = p__74083;\nvar map__74085__$1 = (((((!((map__74085 == null))))?(((((map__74085.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74085.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74085):map__74085);\nvar ast = map__74085__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74085__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar or__4131__auto__ = (function (){var fexpr__74092 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"const\",\"const\",1709929842),null,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),null], null), null);\nreturn (fexpr__74092.cljs$core$IFn$_invoke$arity$1 ? fexpr__74092.cljs$core$IFn$_invoke$arity$1(op) : fexpr__74092.call(null,op));\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar and__4120__auto__ = (function (){var fexpr__74097 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),null,new cljs.core.Keyword(null,\"set\",\"set\",304602554),null,new cljs.core.Keyword(null,\"map\",\"map\",1371690461),null], null), null);\nreturn (fexpr__74097.cljs$core$IFn$_invoke$arity$1 ? fexpr__74097.cljs$core$IFn$_invoke$arity$1(op) : fexpr__74097.call(null,op));\n})();\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.every_QMARK_(cljs.analyzer.constant_value_QMARK_,cljs.analyzer.ast_children(ast));\n} else {\nreturn and__4120__auto__;\n}\n}\n});\ncljs.analyzer.const_expr__GT_constant_value = (function cljs$analyzer$const_expr__GT_constant_value(p__74105){\nvar map__74107 = p__74105;\nvar map__74107__$1 = (((((!((map__74107 == null))))?(((((map__74107.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74107.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74107):map__74107);\nvar e = map__74107__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74107__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__74110 = op;\nvar G__74110__$1 = (((G__74110 instanceof cljs.core.Keyword))?G__74110.fqn:null);\nswitch (G__74110__$1) {\ncase \"quote\":\nvar G__74111 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1(G__74111) : cljs.analyzer.const_expr__GT_constant_value.call(null,G__74111));\n\nbreak;\ncase \"const\":\nreturn new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(e);\n\nbreak;\ncase \"map\":\nreturn cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698).cljs$core$IFn$_invoke$arity$1(e)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"set\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"vector\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__74110__$1)].join('')));\n\n}\n});\ncljs.analyzer.earmuffed_QMARK_ = (function cljs$analyzer$earmuffed_QMARK_(sym){\nvar s = cljs.core.name(sym);\nreturn (((cljs.core.count(s) > (2))) && (clojure.string.starts_with_QMARK_(s,\"*\")) && (clojure.string.ends_with_QMARK_(s,\"*\")));\n});\ncljs.analyzer.core_ns_QMARK_ = (function cljs$analyzer$core_ns_QMARK_(ns_sym){\nvar s = cljs.core.name(ns_sym);\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),ns_sym)) && (((clojure.string.starts_with_QMARK_(s,\"cljs.\")) || (clojure.string.starts_with_QMARK_(s,\"clojure.\")))));\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),(function (op,env,form,_,___$1){\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n} else {\n}\n\nvar pfn = (function() {\nvar G__78210 = null;\nvar G__78210__2 = (function (___$2,sym){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\n});\nvar G__78210__3 = (function (___$2,sym,init){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nvar G__78210__4 = (function (___$2,sym,doc,init){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nG__78210 = function(___$2,sym,doc,init){\nswitch(arguments.length){\ncase 2:\nreturn G__78210__2.call(this,___$2,sym);\ncase 3:\nreturn G__78210__3.call(this,___$2,sym,doc);\ncase 4:\nreturn G__78210__4.call(this,___$2,sym,doc,init);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__78210.cljs$core$IFn$_invoke$arity$2 = G__78210__2;\nG__78210.cljs$core$IFn$_invoke$arity$3 = G__78210__3;\nG__78210.cljs$core$IFn$_invoke$arity$4 = G__78210__4;\nreturn G__78210;\n})()\n;\nvar args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn,form);\nvar sym = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(args);\nvar const_QMARK_ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar sym_meta = cljs.core.meta(sym);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar protocol = cljs.analyzer.valid_proto(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));\nvar dynamic = new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(''));\nvar sym_ns = cljs.core.namespace(sym);\nvar sym__$1 = (cljs.core.truth_((function (){var and__4120__auto__ = sym_ns;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn (!(cljs.core.symbol_identical_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym_ns),ns_name)));\n} else {\nreturn and__4120__auto__;\n}\n})())?(function(){throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't def ns-qualified name in namespace \",sym_ns].join(''))})():(((!((sym_ns == null))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)):sym\n));\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns], null)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)].join('')),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1))], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't redefine a constant\");\n} else {\n}\n\nvar temp__5757__auto___78231 = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif((temp__5757__auto___78231 == null)){\n} else {\nvar doc_78232 = temp__5757__auto___78231;\nif(typeof doc_78232 === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n}\n}\n\nif(((cljs.core.not(dynamic)) && (cljs.analyzer.earmuffed_QMARK_(sym__$1)) && ((!(cljs.analyzer.core_ns_QMARK_(ns_name)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)], null));\n} else {\n}\n\nvar temp__5757__auto___78234 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5757__auto___78234 == null)){\n} else {\nvar v_78236 = temp__5757__auto___78234;\nif(cljs.core.truth_((function (){var and__4120__auto__ = (!(cljs.analyzer._STAR_allow_redef_STAR_));\nif(and__4120__auto__){\nvar and__4120__auto____$1 = cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_78236));\nif(and__4120__auto____$1){\nvar and__4120__auto____$2 = cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta));\nif(and__4120__auto____$2){\nvar and__4120__auto____$3 = cljs.analyzer._STAR_file_defs_STAR_;\nif(cljs.core.truth_(and__4120__auto____$3)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.analyzer._STAR_file_defs_STAR_),sym__$1);\n} else {\nreturn and__4120__auto____$3;\n}\n} else {\nreturn and__4120__auto____$2;\n}\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(v_78236)], null));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_78236);\nif(cljs.core.truth_(and__4120__auto__)){\nvar and__4120__auto____$1 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_78236);\nif(cljs.core.truth_(and__4120__auto____$1)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_78236),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_78236)),new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null));\n} else {\n}\n}\n\nvar env__$1 = ((((((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name,new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))) && (cljs.analyzer.core_name_QMARK_(env,sym__$1)))) || ((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym__$1], null)) == null))))))?(function (){var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),cljs.core.with_meta(sym__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017),true], null)));\nvar conj_to_set = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY);\nif(cljs.analyzer.public_name_QMARK_(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),sym__$1)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name], null));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym__$1], 0));\n\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,sym__$1);\n})():env);\nvar var_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1));\nvar init_expr = ((cljs.core.contains_QMARK_(args,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)))?(function (){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),sym_meta,((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1)], 0)));\n\nvar _STAR_recur_frames_STAR__orig_val__74237 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74238 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74238;\n\ntry{var _STAR_allow_ns_STAR__orig_val__74244 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__74245 = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__74245;\n\ntry{var G__74246 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74247 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nvar G__74248 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__74246,G__74247,G__74248) : cljs.analyzer.analyze.call(null,G__74246,G__74247,G__74248));\n}finally {cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__74244;\n}}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74237;\n}})()\n:null);\nvar fn_var_QMARK_ = (((!((init_expr == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204))));\nvar tag__$1 = ((fn_var_QMARK_)?(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(init_expr);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = tag;\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347).cljs$core$IFn$_invoke$arity$1(init_expr);\n}\n}\n})():(function (){var or__4131__auto__ = tag;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr);\n}\n})());\nvar export_as = (function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"export\",\"export\",214356590).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar export_val = temp__5753__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,export_val)){\nreturn var_name;\n} else {\nreturn export_val;\n}\n} else {\nreturn null;\n}\n})();\nvar doc = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\n}\n})();\nvar temp__5757__auto___78263 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5757__auto___78263 == null)){\n} else {\nvar v_78267 = temp__5757__auto___78263;\nif(((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1)))) && (((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(v_78267) === true) && ((!(fn_var_QMARK_))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),env__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1], null));\n} else {\n}\n}\n\nif((((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null)) == null)) || (cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta))))){\nif(cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_,cljs.core.conj,sym__$1);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),(function (){var G__74288 = sym_meta;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__74288,new cljs.core.Keyword(null,\"test\",\"test\",577538877),true);\n} else {\nreturn G__74288;\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta,new cljs.core.Keyword(null,\"test\",\"test\",577538877)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878)], null),((function (env__$1,var_name,init_expr,fn_var_QMARK_,tag__$1,export_as,doc,pfn,args,sym,const_QMARK_,sym_meta,tag,protocol,dynamic,ns_name,locals,clash_ns,sym_ns,sym__$1){\nreturn (function (f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$1)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))){\nreturn \"cljs/core.cljs\";\n} else {\nreturn f;\n}\n});})(env__$1,var_name,init_expr,fn_var_QMARK_,tag__$1,export_as,doc,pfn,args,sym,const_QMARK_,sym_meta,tag,protocol,dynamic,ns_name,locals,clash_ns,sym_ns,sym__$1))\n)], null),(cljs.core.truth_(doc)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc], null):null),(cljs.core.truth_(const_QMARK_)?(function (){var const_expr = (function (){var _STAR_passes_STAR__orig_val__74296 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__74297 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\ncljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__74297;\n\ntry{var G__74308 = env__$1;\nvar G__74309 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74308,G__74309) : cljs.analyzer.analyze.call(null,G__74308,G__74309));\n}finally {cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__74296;\n}})();\nif(cljs.core.truth_(cljs.analyzer.constant_value_QMARK_(const_expr))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})():null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1),(cljs.core.truth_(protocol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),protocol], null):null),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar protocol_symbol = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198),protocol_symbol,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"protocol-info\",\"protocol-info\",1471745843).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)),new cljs.core.Keyword(null,\"impls\",\"impls\",-1314014853),cljs.core.PersistentHashSet.EMPTY], null);\n} else {\nreturn null;\n}\n})(),((fn_var_QMARK_)?(function (){var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (env__$1,var_name,init_expr,fn_var_QMARK_,tag__$1,export_as,doc,pfn,args,sym,const_QMARK_,sym_meta,tag,protocol,dynamic,ns_name,locals,clash_ns,sym_ns,sym__$1){\nreturn (function (p1__74143_SHARP_){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(p1__74143_SHARP_)));\n});})(env__$1,var_name,init_expr,fn_var_QMARK_,tag__$1,export_as,doc,pfn,args,sym,const_QMARK_,sym_meta,tag,protocol,dynamic,ns_name,locals,clash_ns,sym_ns,sym__$1))\n,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),cljs.core.not(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(sym_meta)),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556).cljs$core$IFn$_invoke$arity$1(init_expr)], null),(function (){var temp__5755__auto__ = new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),params,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);\n} else {\nvar top_fn_meta = temp__5755__auto__;\nreturn top_fn_meta;\n}\n})()], 0));\n})():null),(cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(and__4120__auto__)){\nreturn new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta);\n} else {\nreturn and__4120__auto__;\n}\n})())?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),true,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null):null),((((fn_var_QMARK_) && ((!((tag__$1 == null))))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):(cljs.core.truth_(tag__$1)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null):null))], 0)));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"def\",\"def\",-1043430536),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns_name,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__74337 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)),new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377),true);\nvar G__74338 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74337,G__74338) : cljs.analyzer.analyze.call(null,G__74337,G__74338));\n})(),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797)),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516).cljs$core$IFn$_invoke$arity$1(sym_meta)], null),((new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env__$1) === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var-ast\",\"var-ast\",1200379319),cljs.analyzer.var_ast(env__$1,sym__$1)], null):null),(function (){var temp__5757__auto__ = new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar test = temp__5757__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),(function (){var G__74344 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74345 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74344,G__74345) : cljs.analyzer.analyze.call(null,G__74344,G__74345));\n})()], null);\n}\n})(),(((!((tag__$1 == null))))?((fn_var_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null)):null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),(((!((export_as == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"export\",\"export\",214356590),export_as], null):null),(((!((init_expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797)], null)], null))], 0));\n}));\ncljs.analyzer.analyze_fn_method_param = (function cljs$analyzer$analyze_fn_method_param(env){\nreturn (function (p__74364,p__74365){\nvar vec__74366 = p__74364;\nvar locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74366,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74366,(1),null);\nvar vec__74369 = p__74365;\nvar arg_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74369,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74369,(1),null);\nif(cljs.core.truth_(cljs.core.namespace(name))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't use qualified name as parameter: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar line = cljs.analyzer.get_line(name,env);\nvar column = cljs.analyzer.get_col(name,env);\nvar nmeta = cljs.core.meta(name);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(nmeta);\nvar shadow__$1 = (((!((locals == null))))?cljs.analyzer.handle_symbol_local(name,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null,name))):null);\nvar env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null)], 0));\nvar param = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),env__$1,column,line,arg_id,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),tag,shadow__$1,new cljs.core.Keyword(null,\"arg\",\"arg\",-1747261837)]);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name,param),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params,param)], null);\n});\n});\ncljs.analyzer.analyze_fn_method_body = (function cljs$analyzer$analyze_fn_method_body(env,form,recur_frames){\nvar _STAR_recur_frames_STAR__orig_val__74382 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74383 = recur_frames;\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74383;\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze.call(null,env,form));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74382;\n}});\ncljs.analyzer.analyze_fn_method = (function cljs$analyzer$analyze_fn_method(env,locals,form,type,analyze_body_QMARK_){\nvar param_names = cljs.core.first(form);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar body = cljs.core.next(form);\nvar step = cljs.analyzer.analyze_fn_method_param(env);\nvar step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals,cljs.core.PersistentVector.EMPTY], null);\nvar vec__74407 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,step_init,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,param_names__$1));\nvar locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74407,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74407,(1),null);\nvar params_SINGLEQUOTE_ = ((variadic === true)?cljs.core.butlast(params):params);\nvar fixed_arity = cljs.core.count(params_SINGLEQUOTE_);\nvar recur_frame = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY)], null);\nvar recur_frames = cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_);\nvar body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1], 0));\nvar body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body)));\nvar expr = (cljs.core.truth_(analyze_body_QMARK_)?cljs.analyzer.analyze_fn_method_body(body_env,body_form,recur_frames):null);\nvar recurs = cljs.core.deref(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(recur_frame));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),variadic,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),fixed_arity,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"recurs\",\"recurs\",-1959309309),recurs], null),(((!((expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null)], null))], 0));\n});\ncljs.analyzer.fn_name_var = (function cljs$analyzer$fn_name_var(env,locals,name){\nif((!((name == null)))){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,name));\nvar shadow__$2 = (((shadow__$1 == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),name], null)):null);\nvar fn_scope = new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"fn-self-name\",\"fn-self-name\",1461143531),true,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),fn_scope,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$2], null)], null);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nvar ret_tag = (((!((tag == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag], null):null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([name_var,ret_tag], 0));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_fn_methods_pass2_STAR_ = (function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv,locals,type,meths){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__74434_SHARP_){\nreturn cljs.analyzer.analyze_fn_method(menv,locals,p1__74434_SHARP_,type,true);\n}),meths);\n});\ncljs.analyzer.analyze_fn_methods_pass2 = (function cljs$analyzer$analyze_fn_methods_pass2(menv,locals,type,meths){\nreturn cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv,locals,type,meths);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(function (op,env,p__74447,name,_){\nvar vec__74448 = p__74447;\nvar seq__74449 = cljs.core.seq(vec__74448);\nvar first__74450 = cljs.core.first(seq__74449);\nvar seq__74449__$1 = cljs.core.next(seq__74449);\nvar ___$1 = first__74450;\nvar args = seq__74449__$1;\nvar form = vec__74448;\nvar named_fn_QMARK_ = (cljs.core.first(args) instanceof cljs.core.Symbol);\nvar vec__74454 = ((named_fn_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args),cljs.core.next(args)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,cljs.core.seq(args)], null));\nvar name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74454,(0),null);\nvar meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74454,(1),null);\nvar meths__$1 = ((cljs.core.vector_QMARK_(cljs.core.first(meths)))?(new cljs.core.List(null,meths,null,(1),null)):meths);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = cljs.analyzer.fn_name_var(env,locals,name__$1);\nvar env__$1 = (((!((name__$1 == null))))?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859)], null),cljs.core.conj,name_var):env);\nvar locals__$1 = (((((!((locals == null)))) && (named_fn_QMARK_)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name__$1,name_var):locals);\nvar form_meta = cljs.core.meta(form);\nvar type = new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_impl = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_inline = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar menv = (((cljs.core.count(meths__$1) > (1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)):env__$1);\nvar menv__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([menv,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),proto_impl,new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),proto_inline], null)], 0));\nvar methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (named_fn_QMARK_,vec__74454,name__$1,meths,meths__$1,locals,name_var,env__$1,locals__$1,form_meta,type,proto_impl,proto_inline,menv,menv__$1,vec__74448,seq__74449,first__74450,seq__74449__$1,___$1,args,form){\nreturn (function (p1__74443_SHARP_){\nvar _STAR_allow_ns_STAR__orig_val__74463 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__74464 = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__74464;\n\ntry{return cljs.analyzer.analyze_fn_method(menv__$1,locals__$1,p1__74443_SHARP_,type,(name__$1 == null));\n}finally {cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__74463;\n}});})(named_fn_QMARK_,vec__74454,name__$1,meths,meths__$1,locals,name_var,env__$1,locals__$1,form_meta,type,proto_impl,proto_inline,menv,menv__$1,vec__74448,seq__74449,first__74450,seq__74449__$1,___$1,args,form))\n,meths__$1);\nvar mfa = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869)),cljs.core.max,(0),methods$);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),methods$));\nvar locals__$2 = ((named_fn_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null),cljs.core.assoc,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([variadic,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),mfa,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),methods$)], 0)):locals__$1);\nvar methods$__$1 = (((!((name__$1 == null))))?(function (){var _STAR_allow_ns_STAR__orig_val__74477 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__74478 = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__74478;\n\ntry{return cljs.analyzer.analyze_fn_methods_pass2(menv__$1,locals__$2,type,meths__$1);\n}finally {cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__74477;\n}})():cljs.core.vec(methods$));\nvar form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form,cljs.core.dissoc,new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409),new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026),new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742));\nvar js_doc = ((variadic === true)?\"@param {...*} var_args\":null);\nvar children = (((!((name_var == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null));\nvar inferred_ret_tag = (function (){var inferred_tags = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag,env__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),methods$__$1));\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,inferred_tags))){\nreturn cljs.core.first(inferred_tags);\n} else {\nreturn null;\n}\n})();\nvar ast = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"loop-lets\",\"loop-lets\",2036794185),new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),new cljs.core.Keyword(null,\"recur-frames\",\"recur-frames\",-307205196),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516)],[children,proto_inline,name_var,cljs.analyzer._STAR_loop_lets_STAR_,inferred_ret_tag,proto_impl,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),env__$1,variadic,methods$__$1,cljs.analyzer._STAR_recur_frames_STAR_,mfa,form__$1,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]),(((!((name_var == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),name_var], null):null)], 0));\nvar variadic_methods_78356 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)),cljs.core.take.cljs$core$IFn$_invoke$arity$1((1))),methods$__$1);\nvar variadic_params_78357 = (((cljs.core.count(variadic_methods_78356) > (0)))?cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(variadic_methods_78356,(0)))):(0));\nvar param_counts_78358 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,new cljs.core.Keyword(null,\"params\",\"params\",710516235))),methods$__$1);\nif(((1) < cljs.core.count(variadic_methods_78356))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif((!((((variadic_params_78357 === (0))) || ((variadic_params_78357 === ((1) + mfa))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_78358),param_counts_78358)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null,ast));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),(function (op,env,p__74503,name,_){\nvar vec__74505 = p__74503;\nvar seq__74506 = cljs.core.seq(vec__74505);\nvar first__74507 = cljs.core.first(seq__74506);\nvar seq__74506__$1 = cljs.core.next(seq__74506);\nvar ___$1 = first__74507;\nvar first__74507__$1 = cljs.core.first(seq__74506__$1);\nvar seq__74506__$2 = cljs.core.next(seq__74506__$1);\nvar bindings = first__74507__$1;\nvar exprs = seq__74506__$2;\nvar form = vec__74505;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"bindings must be vector of even number of elements\");\n}\n\nvar n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.second),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings)));\nvar names = cljs.core.keys(n__GT_fexpr);\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar vec__74520 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n__GT_fexpr,names,context,vec__74505,seq__74506,first__74507,seq__74506__$1,___$1,first__74507__$1,seq__74506__$2,bindings,exprs,form){\nreturn (function (p__74529,n){\nvar vec__74532 = p__74529;\nvar map__74535 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74532,(0),null);\nvar map__74535__$1 = (((((!((map__74535 == null))))?(((((map__74535.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74535.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74535):map__74535);\nvar env__$1 = map__74535__$1;\nvar locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74535__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74532,(1),null);\nvar ret_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));\nvar fexpr = (function (){var _STAR_cljs_warnings_STAR__orig_val__74546 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__74547 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\ncljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__74547;\n\ntry{var G__74556 = env__$1;\nvar G__74557 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null,n));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74556,G__74557) : cljs.analyzer.analyze.call(null,G__74556,G__74557));\n}finally {cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__74546;\n}})();\nvar be = (function (){var G__74558 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[n,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr)),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),cljs.analyzer.get_col(n,env__$1),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),cljs.analyzer.get_line(n,env__$1),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),true,cljs.analyzer.handle_symbol_local(n,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null,n))),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354)]);\nif(cljs.core.truth_(ret_tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__74558,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag);\n} else {\nreturn G__74558;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),n], null),be),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be)], null);\n});})(n__GT_fexpr,names,context,vec__74505,seq__74506,first__74507,seq__74506__$1,___$1,first__74507__$1,seq__74506__$2,bindings,exprs,form))\n,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,cljs.core.PersistentVector.EMPTY], null),names);\nvar meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74520,(0),null);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74520,(1),null);\nvar meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar vec__74523 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n__GT_fexpr,names,context,vec__74520,meth_env,bes,meth_env__$1,vec__74505,seq__74506,first__74507,seq__74506__$1,___$1,first__74507__$1,seq__74506__$2,bindings,exprs,form){\nreturn (function (p__74572,p__74573){\nvar vec__74574 = p__74572;\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74574,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74574,(1),null);\nvar map__74577 = p__74573;\nvar map__74577__$1 = (((((!((map__74577 == null))))?(((((map__74577.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74577.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74577):map__74577);\nvar be = map__74577__$1;\nvar name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74577__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74577__$1,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803));\nvar env__$1 = cljs.core.assoc_in(meth_env__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),shadow__$1);\nvar fexpr = (function (){var G__74580 = env__$1;\nvar G__74581 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null,name__$1));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74580,G__74581) : cljs.analyzer.analyze.call(null,G__74580,G__74581));\n})();\nvar be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),fexpr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),be_SINGLEQUOTE_),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1,be_SINGLEQUOTE_)], null);\n});})(n__GT_fexpr,names,context,vec__74520,meth_env,bes,meth_env__$1,vec__74505,seq__74506,first__74507,seq__74506__$1,___$1,first__74507__$1,seq__74506__$2,bindings,exprs,form))\n,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1,cljs.core.PersistentVector.EMPTY], null),bes);\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74523,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74523,(1),null);\nvar expr = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__74586 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__74587 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74586,G__74587) : cljs.analyzer.analyze.call(null,G__74586,G__74587));\n})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),expr,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null);\n}));\ncljs.analyzer.analyze_do_statements_STAR_ = (function cljs$analyzer$analyze_do_statements_STAR_(env,exprs){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__74589_SHARP_){\nvar G__74598 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__74599 = p1__74589_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74598,G__74599) : cljs.analyzer.analyze.call(null,G__74598,G__74599));\n}),cljs.core.butlast(exprs));\n});\ncljs.analyzer.analyze_do_statements = (function cljs$analyzer$analyze_do_statements(env,exprs){\nvar _STAR_recur_frames_STAR__orig_val__74614 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74615 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74615;\n\ntry{return cljs.analyzer.analyze_do_statements_STAR_(env,exprs);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74614;\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),(function (op,env,p__74653,_,___$1){\nvar vec__74654 = p__74653;\nvar seq__74655 = cljs.core.seq(vec__74654);\nvar first__74656 = cljs.core.first(seq__74655);\nvar seq__74655__$1 = cljs.core.next(seq__74655);\nvar ___$2 = first__74656;\nvar exprs = seq__74655__$1;\nvar form = vec__74654;\nvar statements = cljs.analyzer.analyze_do_statements(env,exprs);\nif((cljs.core.count(exprs) <= (1))){\nvar ret = (function (){var G__74658 = env;\nvar G__74659 = cljs.core.first(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74658,G__74659) : cljs.analyzer.analyze.call(null,G__74658,G__74659));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n} else {\nvar ret_env = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863)):cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105)));\nvar ret = (function (){var G__74662 = ret_env;\nvar G__74663 = cljs.core.last(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74662,G__74663) : cljs.analyzer.analyze.call(null,G__74662,G__74663));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\n}));\ncljs.analyzer.analyze_let_binding_init = (function cljs$analyzer$analyze_let_binding_init(env,init,loop_lets){\nvar _STAR_loop_lets_STAR__orig_val__74670 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_loop_lets_STAR__temp_val__74671 = loop_lets;\ncljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__74671;\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.analyze.call(null,env,init));\n}finally {cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__74670;\n}});\ncljs.analyzer.get_let_tag = (function cljs$analyzer$get_let_tag(name,init_expr){\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nif((temp__5755__auto__ == null)){\nvar temp__5755__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr);\nif((temp__5755__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(init_expr));\n} else {\nvar tag = temp__5755__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.analyze_let_bindings_STAR_ = (function cljs$analyzer$analyze_let_bindings_STAR_(encl_env,bindings,op){\nvar bes = cljs.core.PersistentVector.EMPTY;\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\nwhile(true){\nvar temp__5755__auto__ = cljs.core.first(bindings__$1);\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes,env], null);\n} else {\nvar vec__74713 = temp__5755__auto__;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74713,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74713,(1),null);\nif(cljs.core.truth_((function (){var or__4131__auto__ = (!((cljs.core.namespace(name) == null)));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar G__74719 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nvar G__74720 = \".\";\nreturn goog.string.contains(G__74719,G__74720);\n}\n})())){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,[\"Invalid local name: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar init_expr = cljs.analyzer.analyze_let_binding_init(env,init,cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_));\nvar line = cljs.analyzer.get_line(name,env);\nvar col = cljs.analyzer.get_col(name,env);\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null)));\nvar be = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[init_expr,name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col], null),col,line,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),cljs.analyzer.get_let_tag(name,init_expr),shadow__$1,op]);\nvar be__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([be,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__74713,name,init,temp__5755__auto__){\nreturn (function (p1__74680_SHARP_){\nreturn cljs.core.select_keys(p1__74680_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null));\n});})(bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__74713,name,init,temp__5755__auto__))\n,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)):be);\nvar be__$2 = cljs.analyzer.add_identity(be__$1);\nvar G__78439 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be__$2);\nvar G__78440 = cljs.core.assoc_in(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null),be__$2);\nvar G__78441 = cljs.core.next(bindings__$1);\nbes = G__78439;\nenv = G__78440;\nbindings__$1 = G__78441;\ncontinue;\n}\nbreak;\n}\n});\ncljs.analyzer.analyze_let_bindings = (function cljs$analyzer$analyze_let_bindings(encl_env,bindings,op){\nvar _STAR_recur_frames_STAR__orig_val__74731 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74732 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74732;\n\ntry{return cljs.analyzer.analyze_let_bindings_STAR_(encl_env,bindings,op);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74731;\n}});\ncljs.analyzer.analyze_let_body_STAR_ = (function cljs$analyzer$analyze_let_body_STAR_(env,context,exprs){\nvar G__74736 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__74737 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74736,G__74737) : cljs.analyzer.analyze.call(null,G__74736,G__74737));\n});\ncljs.analyzer.analyze_let_body = (function cljs$analyzer$analyze_let_body(env,context,exprs,recur_frames,loop_lets){\nvar _STAR_recur_frames_STAR__orig_val__74742 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_loop_lets_STAR__orig_val__74743 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74744 = recur_frames;\nvar _STAR_loop_lets_STAR__temp_val__74745 = loop_lets;\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74744;\n\ncljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__74745;\n\ntry{return cljs.analyzer.analyze_let_body_STAR_(env,context,exprs);\n}finally {cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__74743;\n\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74742;\n}});\ncljs.analyzer.analyze_let = (function cljs$analyzer$analyze_let(encl_env,p__74752,is_loop,widened_tags){\nwhile(true){\nvar vec__74756 = p__74752;\nvar seq__74757 = cljs.core.seq(vec__74756);\nvar first__74758 = cljs.core.first(seq__74757);\nvar seq__74757__$1 = cljs.core.next(seq__74757);\nvar _ = first__74758;\nvar first__74758__$1 = cljs.core.first(seq__74757__$1);\nvar seq__74757__$2 = cljs.core.next(seq__74757__$1);\nvar bindings = first__74758__$1;\nvar exprs = seq__74757__$2;\nvar form = vec__74756;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,\"bindings must be vector of even number of elements\");\n}\n\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(encl_env);\nvar op = ((is_loop === true)?new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849):new cljs.core.Keyword(null,\"let\",\"let\",-1282412701));\nvar bindings__$1 = (cljs.core.truth_(widened_tags)?cljs.core.vec(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (encl_env,p__74752,is_loop,widened_tags,context,op,vec__74756,seq__74757,first__74758,seq__74757__$1,_,first__74758__$1,seq__74757__$2,bindings,exprs,form){\nreturn (function (p__74767,widened_tag){\nvar vec__74775 = p__74767;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74775,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74775,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name,cljs.core.assoc,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),widened_tag),init], null);\n});})(encl_env,p__74752,is_loop,widened_tags,context,op,vec__74756,seq__74757,first__74758,seq__74757__$1,_,first__74758__$1,seq__74757__$2,bindings,exprs,form))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings),widened_tags], 0))):bindings);\nvar vec__74760 = cljs.analyzer.analyze_let_bindings(encl_env,bindings__$1,op);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74760,(0),null);\nvar env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74760,(1),null);\nvar recur_frame = ((is_loop === true)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),bes))], null):null);\nvar recur_frames = (cljs.core.truth_(recur_frame)?cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_):cljs.analyzer._STAR_recur_frames_STAR_);\nvar loop_lets = ((is_loop === true)?cljs.analyzer._STAR_loop_lets_STAR_:(((!((cljs.analyzer._STAR_loop_lets_STAR_ == null))))?cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_):null));\nvar warn_acc = (cljs.core.truth_((function (){var and__4120__auto__ = is_loop;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not(widened_tags);\n} else {\nreturn and__4120__auto__;\n}\n})())?cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY):null);\nvar expr = (cljs.core.truth_(warn_acc)?(function (){var _STAR_cljs_warning_handlers_STAR__orig_val__74787 = cljs.analyzer._STAR_cljs_warning_handlers_STAR_;\nvar _STAR_cljs_warning_handlers_STAR__temp_val__74788 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.accumulating_warning_handler(warn_acc)], null);\ncljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__temp_val__74788;\n\ntry{return cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets);\n}finally {cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__orig_val__74787;\n}})():cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets));\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null);\nvar nil__GT_any = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(cljs.core.truth_((function (){var and__4120__auto__ = is_loop;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn ((cljs.core.not(widened_tags)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(nil__GT_any,cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame))),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(nil__GT_any,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),bes))));\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar G__78464 = encl_env;\nvar G__78465 = form;\nvar G__78466 = is_loop;\nvar G__78467 = cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame));\nencl_env = G__78464;\np__74752 = G__78465;\nis_loop = G__78466;\nwidened_tags = G__78467;\ncontinue;\n} else {\nif(cljs.core.truth_(warn_acc)){\ncljs.analyzer.replay_accumulated_warnings(warn_acc);\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),op,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),encl_env,new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,false,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,true,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),(function (op,env,p__74807,_,___$1){\nvar vec__74808 = p__74807;\nvar seq__74809 = cljs.core.seq(vec__74808);\nvar first__74810 = cljs.core.first(seq__74809);\nvar seq__74809__$1 = cljs.core.next(seq__74809);\nvar ___$2 = first__74810;\nvar exprs = seq__74809__$1;\nvar form = vec__74808;\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);\nvar add_implicit_target_object_QMARK_ = (function (){var and__4120__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs),(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)) - (1)));\n} else {\nreturn and__4120__auto__;\n}\n})();\nvar exprs__$1 = (function (){var G__74826 = exprs;\nif(cljs.core.truth_(add_implicit_target_object_QMARK_)){\nreturn cljs.core.cons(null,G__74826);\n} else {\nreturn G__74826;\n}\n})();\nvar exprs__$2 = (function (){var _STAR_recur_frames_STAR__orig_val__74827 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74828 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74828;\n\ntry{return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__74827,_STAR_recur_frames_STAR__temp_val__74828,context,frame,add_implicit_target_object_QMARK_,exprs__$1,vec__74808,seq__74809,first__74810,seq__74809__$1,___$2,exprs,form){\nreturn (function (p1__74803_SHARP_){\nvar G__74830 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__74831 = p1__74803_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74830,G__74831) : cljs.analyzer.analyze.call(null,G__74830,G__74831));\n});})(_STAR_recur_frames_STAR__orig_val__74827,_STAR_recur_frames_STAR__temp_val__74828,context,frame,add_implicit_target_object_QMARK_,exprs__$1,vec__74808,seq__74809,first__74810,seq__74809__$1,___$2,exprs,form))\n,exprs__$1));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74827;\n}})();\nif(cljs.core.truth_(frame)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't recur here\");\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$2),cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"recur argument count mismatch, expected: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame))),\" args, got: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(exprs__$2))].join(''));\n}\n\nif(cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not(add_implicit_target_object_QMARK_);\n} else {\nreturn and__4120__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(cljs.core.first(exprs__$2))], null));\n} else {\n}\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(frame),true);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(frame),((function (context,frame,add_implicit_target_object_QMARK_,exprs__$1,exprs__$2,vec__74808,seq__74809,first__74810,seq__74809__$1,___$2,exprs,form){\nreturn (function (tags){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (context,frame,add_implicit_target_object_QMARK_,exprs__$1,exprs__$2,vec__74808,seq__74809,first__74810,seq__74809__$1,___$2,exprs,form){\nreturn (function (tag,expr){\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr));\n});})(context,frame,add_implicit_target_object_QMARK_,exprs__$1,exprs__$2,vec__74808,seq__74809,first__74810,seq__74809__$1,___$2,exprs,form))\n,tags,exprs__$2);\n});})(context,frame,add_implicit_target_object_QMARK_,exprs__$1,exprs__$2,vec__74808,seq__74809,first__74810,seq__74809__$1,___$2,exprs,form))\n);\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),frame,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094),exprs__$2,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094)], null)], 0));\n}));\ncljs.analyzer.analyze_const = (function cljs$analyzer$analyze_const(env,form){\nvar map__74846 = (function (){var G__74848 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621),true);\nvar G__74849 = form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__74848,G__74849) : cljs.analyzer.analyze.call(null,G__74848,G__74849));\n})();\nvar map__74846__$1 = (((((!((map__74846 == null))))?(((((map__74846.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__74846.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__74846):map__74846);\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__74846__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"literal?\",\"literal?\",352485871),true,new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(function (_,env,p__74858,___$1,___$2){\nvar vec__74859 = p__74858;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74859,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74859,(1),null);\nvar form = vec__74859;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to quote\");\n} else {\n}\n\nvar expr = cljs.analyzer.analyze_const(env,x);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),(function (_,env,p__74887,___$1,___$2){\nvar vec__74888 = p__74887;\nvar seq__74889 = cljs.core.seq(vec__74888);\nvar first__74890 = cljs.core.first(seq__74889);\nvar seq__74889__$1 = cljs.core.next(seq__74889);\nvar ___$3 = first__74890;\nvar first__74890__$1 = cljs.core.first(seq__74889__$1);\nvar seq__74889__$2 = cljs.core.next(seq__74889__$1);\nvar ctor = first__74890__$1;\nvar args = seq__74889__$2;\nvar form = vec__74888;\nvar _STAR_recur_frames_STAR__orig_val__74891 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74892 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74892;\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ctorexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,ctor) : cljs.analyzer.analyze.call(null,enve,ctor));\nvar ctor_var = (cljs.core.truth_((function (){var G__74899 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ctorexpr);\nvar fexpr__74898 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),null,new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),null,new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),null], null), null);\nreturn (fexpr__74898.cljs$core$IFn$_invoke$arity$1 ? fexpr__74898.cljs$core$IFn$_invoke$arity$1(G__74899) : fexpr__74898.call(null,G__74899));\n})())?cljs.analyzer.resolve_existing_var(env,ctor):null);\nvar record_args = (cljs.core.truth_((function (){var and__4120__auto__ = new cljs.core.Keyword(null,\"record\",\"record\",-779106859).cljs$core$IFn$_invoke$arity$1(ctor_var);\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));\n} else {\nreturn and__4120__auto__;\n}\n})())?cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((3),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,null) : cljs.analyzer.analyze.call(null,enve,null))):null);\nvar argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (enve,ctorexpr,ctor_var,record_args,_STAR_recur_frames_STAR__orig_val__74891,_STAR_recur_frames_STAR__temp_val__74892,vec__74888,seq__74889,first__74890,seq__74889__$1,___$3,first__74890__$1,seq__74889__$2,ctor,args,form){\nreturn (function (p1__74872_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__74872_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__74872_SHARP_));\n});})(enve,ctorexpr,ctor_var,record_args,_STAR_recur_frames_STAR__orig_val__74891,_STAR_recur_frames_STAR__temp_val__74892,vec__74888,seq__74889,first__74890,seq__74889__$1,___$3,first__74890__$1,seq__74889__$2,ctor,args,form))\n,args)),record_args);\nvar known_num_fields = new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024).cljs$core$IFn$_invoke$arity$1(ctor_var);\nvar argc = cljs.core.count(args);\nif(((cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)))) && ((!((known_num_fields == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields,argc)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802),ctor], null));\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),ctorexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),(function (){var name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(ctorexpr));\nvar or__4131__auto__ = (function (){var fexpr__74909 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(\"js\",\"Object\",\"js/Object\",61215323,null),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(\"js\",\"String\",\"js/String\",-2070054036,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"js\",\"Array\",\"js/Array\",-423508366,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(\"js\",\"Number\",\"js/Number\",-508133572,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"js\",\"Function\",\"js/Function\",-749892063,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(\"js\",\"Boolean\",\"js/Boolean\",1661145260,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null);\nreturn (fexpr__74909.cljs$core$IFn$_invoke$arity$1 ? fexpr__74909.cljs$core$IFn$_invoke$arity$1(name) : fexpr__74909.call(null,name));\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn name;\n}\n})()], null);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74891;\n}}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),(function (_,env,p__74920,___$1,___$2){\nvar vec__74921 = p__74920;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74921,(0),null);\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74921,(1),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74921,(2),null);\nvar alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74921,(3),null);\nvar form = vec__74921;\nvar vec__74926 = (cljs.core.truth_(alt)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,target,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,val,null,(1),null))], 0)))),alt], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,val], null));\nvar target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74926,(0),null);\nvar val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__74926,(1),null);\nvar _STAR_recur_frames_STAR__orig_val__74945 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__74946 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__74946;\n\ntry{var _STAR_private_var_access_nowarn_STAR__orig_val__74955 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__74956 = true;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__74956;\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar texpr = (((target__$1 instanceof cljs.core.Symbol))?(function (){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null))) && (((val__$1 === true) || (val__$1 === false))))){\ncljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),val__$1);\n} else {\n}\n}\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),target__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! a constant\");\n} else {\n}\n\nvar local_78538 = cljs.analyzer.handle_symbol_local(target__$1,(function (){var G__74986 = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nreturn (target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__74986) : target__$1.call(null,G__74986));\n})());\nif(cljs.core.truth_((function (){var or__4131__auto__ = (local_78538 == null);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar and__4120__auto__ = new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(local_78538);\nif(cljs.core.truth_(and__4120__auto__)){\nvar or__4131__auto____$1 = new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(local_78538);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nvar or__4131__auto____$2 = new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(local_78538);\nif(cljs.core.truth_(or__4131__auto____$2)){\nreturn or__4131__auto____$2;\n} else {\nreturn new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(local_78538);\n}\n}\n} else {\nreturn and__4120__auto__;\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! local var or non-mutable field\");\n}\n\nreturn (cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze_symbol.call(null,enve,target__$1));\n})()\n:((cljs.core.seq_QMARK_(target__$1))?(function (){var texpr = (cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(texpr))){\nreturn texpr;\n} else {\nreturn null;\n}\n})():null)\n);\nvar vexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,val__$1) : cljs.analyzer.analyze.call(null,enve,val__$1));\nif(cljs.core.seq_QMARK_(target__$1)){\nvar sym_78551 = (function (){var G__74998 = target__$1;\nif((G__74998 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__74998);\n}\n})();\nvar meta_78552 = cljs.core.meta(sym_78551);\nvar temp__5753__auto___78554 = (function (){var and__4120__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(vexpr));\nif(and__4120__auto__){\nreturn new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(meta_78552);\n} else {\nreturn and__4120__auto__;\n}\n})();\nif(cljs.core.truth_(temp__5753__auto___78554)){\nvar info_78556 = temp__5753__auto___78554;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym_78551,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(info_78556,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null)),cljs.core.select_keys(cljs.core.first(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(vexpr)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0))], 0));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(texpr)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"set! target must be a field or a symbol naming a var\");\n}\n\nif(((cljs.core.not(new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env))) && ((!(((function (){var fexpr__75012 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null),\"null\"], null), null);\nreturn (fexpr__75012.cljs$core$IFn$_invoke$arity$1 ? fexpr__75012.cljs$core$IFn$_invoke$arity$1(target__$1) : fexpr__75012.call(null,target__$1));\n})() == null)))))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set!\",\"set!\",-1389817006),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),texpr,new cljs.core.Keyword(null,\"val\",\"val\",128701612),vexpr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"val\",\"val\",128701612)], null)], null);\n\n}\n}finally {cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__74955;\n}}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__74945;\n}}));\ncljs.analyzer.foreign_dep_QMARK_ = (function cljs$analyzer$foreign_dep_QMARK_(dep){\nvar js_index = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\nvar temp__5755__auto__ = cljs.core.find(js_index,cljs.core.name(dep));\nif((temp__5755__auto__ == null)){\nreturn false;\n} else {\nvar vec__75024 = temp__5755__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75024,(0),null);\nvar map__75027 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75024,(1),null);\nvar map__75027__$1 = (((((!((map__75027 == null))))?(((((map__75027.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75027.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75027):map__75027);\nvar foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75027__$1,new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149));\nreturn foreign;\n}\n});\n/**\n * Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n * and opts, compiler options - analyze all of the dependencies. Required to\n * correctly analyze usage of other namespaces.\n * @param {...*} var_args\n */\ncljs.analyzer.analyze_deps = (function cljs$analyzer$analyze_deps(var_args){\nvar G__75046 = arguments.length;\nswitch (G__75046) {\ncase 3:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = (function (lib,deps,env){\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib,deps,env,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n});\n\ncljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = (function (lib,deps,env,opts){\nvar compiler = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar _STAR_cljs_dep_set_STAR__orig_val__75060 = cljs.analyzer._STAR_cljs_dep_set_STAR_;\nvar _STAR_cljs_dep_set_STAR__temp_val__75061 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_,lib),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558)], null),cljs.core.conj,lib);\ncljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__temp_val__75061;\n\ntry{\nvar seq__75068 = cljs.core.seq(deps);\nvar chunk__75069 = null;\nvar count__75070 = (0);\nvar i__75071 = (0);\nwhile(true){\nif((i__75071 < count__75070)){\nvar dep = chunk__75069.cljs$core$IIndexed$_nth$arity$2(null,i__75071);\nif(cljs.core.truth_((function (){var or__4131__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep));\nif(or__4131__auto____$1){\nreturn or__4131__auto____$1;\n} else {\nvar or__4131__auto____$2 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4131__auto____$2){\nreturn or__4131__auto____$2;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__75115 = new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812);\nvar G__75116 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__75115,G__75116) : cljs.analyzer.error_message.call(null,G__75115,G__75116));\n})());\n}\n\n\nvar G__78597 = seq__75068;\nvar G__78598 = chunk__75069;\nvar G__78599 = count__75070;\nvar G__78600 = (i__75071 + (1));\nseq__75068 = G__78597;\nchunk__75069 = G__78598;\ncount__75070 = G__78599;\ni__75071 = G__78600;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__75068);\nif(temp__5753__auto__){\nvar seq__75068__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__75068__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__75068__$1);\nvar G__78602 = cljs.core.chunk_rest(seq__75068__$1);\nvar G__78603 = c__4550__auto__;\nvar G__78604 = cljs.core.count(c__4550__auto__);\nvar G__78605 = (0);\nseq__75068 = G__78602;\nchunk__75069 = G__78603;\ncount__75070 = G__78604;\ni__75071 = G__78605;\ncontinue;\n} else {\nvar dep = cljs.core.first(seq__75068__$1);\nif(cljs.core.truth_((function (){var or__4131__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep));\nif(or__4131__auto____$1){\nreturn or__4131__auto____$1;\n} else {\nvar or__4131__auto____$2 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4131__auto____$2){\nreturn or__4131__auto____$2;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__75136 = new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812);\nvar G__75137 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__75136,G__75137) : cljs.analyzer.error_message.call(null,G__75136,G__75137));\n})());\n}\n\n\nvar G__78611 = cljs.core.next(seq__75068__$1);\nvar G__78612 = null;\nvar G__78613 = (0);\nvar G__78614 = (0);\nseq__75068 = G__78611;\nchunk__75069 = G__78612;\ncount__75070 = G__78613;\ni__75071 = G__78614;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__orig_val__75060;\n}});\n\ncljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4;\n\ncljs.analyzer.missing_use_QMARK_ = (function cljs$analyzer$missing_use_QMARK_(lib,sym,cenv){\nvar js_lib = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cenv,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.name(lib)], null));\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),lib,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150)),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150))) && ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"group\",\"group\",582596132)),new cljs.core.Keyword(null,\"goog\",\"goog\",-1711135452))))) && (cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"closure-lib\",\"closure-lib\",2105917916)))) && ((!(cljs.analyzer.node_module_dep_QMARK_(lib)))) && ((!(cljs.analyzer.dep_has_global_exports_QMARK_(lib)))));\n});\ncljs.analyzer.missing_rename_QMARK_ = (function cljs$analyzer$missing_rename_QMARK_(sym,cenv){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym__$1,cenv);\n});\ncljs.analyzer.missing_use_macro_QMARK_ = (function cljs$analyzer$missing_use_macro_QMARK_(lib,sym){\nif((lib instanceof cljs.core.Symbol)){\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym) == null)));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.missing_rename_macro_QMARK_ = (function cljs$analyzer$missing_rename_macro_QMARK_(sym){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym__$1) == null)));\n});\ncljs.analyzer.missing_uses = (function cljs$analyzer$missing_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (cenv){\nreturn (function (p__75197){\nvar vec__75198 = p__75197;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75198,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75198,(1),null);\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym,cenv);\n});})(cenv))\n,uses));\n});\ncljs.analyzer.missing_renames = (function cljs$analyzer$missing_renames(renames,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (cenv){\nreturn (function (p__75209){\nvar vec__75210 = p__75209;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75210,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75210,(1),null);\nreturn cljs.analyzer.missing_rename_QMARK_(qualified_sym,cenv);\n});})(cenv))\n,renames));\n});\ncljs.analyzer.missing_use_macros = (function cljs$analyzer$missing_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (cenv){\nreturn (function (p__75227){\nvar vec__75228 = p__75227;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75228,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75228,(1),null);\nreturn cljs.analyzer.missing_use_macro_QMARK_(lib,sym);\n});})(cenv))\n,use_macros));\n});\ncljs.analyzer.inferred_use_macros = (function cljs$analyzer$inferred_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (cenv){\nreturn (function (p__75243){\nvar vec__75246 = p__75243;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75246,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75246,(1),null);\nreturn cljs.core.not(cljs.analyzer.missing_use_macro_QMARK_(lib,sym));\n});})(cenv))\n,use_macros));\n});\ncljs.analyzer.inferred_rename_macros = (function cljs$analyzer$inferred_rename_macros(rename_macros,env){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__75255){\nvar vec__75262 = p__75255;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75262,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75262,(1),null);\nreturn (!(cljs.analyzer.missing_rename_macro_QMARK_(qualified_sym)));\n}),rename_macros));\n});\ncljs.analyzer.check_uses = (function cljs$analyzer$check_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__75298 = cljs.core.seq(uses);\nvar chunk__75299 = null;\nvar count__75300 = (0);\nvar i__75301 = (0);\nwhile(true){\nif((i__75301 < count__75300)){\nvar vec__75323 = chunk__75299.cljs$core$IIndexed$_nth$arity$2(null,i__75301);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75323,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75323,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__75327 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__75328 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__75327,G__75328) : cljs.analyzer.error_message.call(null,G__75327,G__75328));\n})());\n} else {\n}\n\n\nvar G__78647 = seq__75298;\nvar G__78648 = chunk__75299;\nvar G__78649 = count__75300;\nvar G__78650 = (i__75301 + (1));\nseq__75298 = G__78647;\nchunk__75299 = G__78648;\ncount__75300 = G__78649;\ni__75301 = G__78650;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__75298);\nif(temp__5753__auto__){\nvar seq__75298__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__75298__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__75298__$1);\nvar G__78653 = cljs.core.chunk_rest(seq__75298__$1);\nvar G__78654 = c__4550__auto__;\nvar G__78655 = cljs.core.count(c__4550__auto__);\nvar G__78656 = (0);\nseq__75298 = G__78653;\nchunk__75299 = G__78654;\ncount__75300 = G__78655;\ni__75301 = G__78656;\ncontinue;\n} else {\nvar vec__75335 = cljs.core.first(seq__75298__$1);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75335,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75335,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__75338 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__75339 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__75338,G__75339) : cljs.analyzer.error_message.call(null,G__75338,G__75339));\n})());\n} else {\n}\n\n\nvar G__78661 = cljs.core.next(seq__75298__$1);\nvar G__78662 = null;\nvar G__78663 = (0);\nvar G__78664 = (0);\nseq__75298 = G__78661;\nchunk__75299 = G__78662;\ncount__75300 = G__78663;\ni__75301 = G__78664;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.check_use_macros = (function cljs$analyzer$check_use_macros(var_args){\nvar G__75347 = arguments.length;\nswitch (G__75347) {\ncase 2:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2 = (function (use_macros,env){\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,null,env);\n});\n\ncljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3 = (function (use_macros,missing_uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__75354_78670 = cljs.core.seq(use_macros);\nvar chunk__75355_78671 = null;\nvar count__75356_78672 = (0);\nvar i__75357_78673 = (0);\nwhile(true){\nif((i__75357_78673 < count__75356_78672)){\nvar vec__75385_78674 = chunk__75355_78671.cljs$core$IIndexed$_nth$arity$2(null,i__75357_78673);\nvar sym_78675 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75385_78674,(0),null);\nvar lib_78676 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75385_78674,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_78676,sym_78675))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__75390 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__75391 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_78676,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_78675], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__75390,G__75391) : cljs.analyzer.error_message.call(null,G__75390,G__75391));\n})());\n} else {\n}\n\n\nvar G__78684 = seq__75354_78670;\nvar G__78685 = chunk__75355_78671;\nvar G__78686 = count__75356_78672;\nvar G__78687 = (i__75357_78673 + (1));\nseq__75354_78670 = G__78684;\nchunk__75355_78671 = G__78685;\ncount__75356_78672 = G__78686;\ni__75357_78673 = G__78687;\ncontinue;\n} else {\nvar temp__5753__auto___78689 = cljs.core.seq(seq__75354_78670);\nif(temp__5753__auto___78689){\nvar seq__75354_78690__$1 = temp__5753__auto___78689;\nif(cljs.core.chunked_seq_QMARK_(seq__75354_78690__$1)){\nvar c__4550__auto___78691 = cljs.core.chunk_first(seq__75354_78690__$1);\nvar G__78692 = cljs.core.chunk_rest(seq__75354_78690__$1);\nvar G__78693 = c__4550__auto___78691;\nvar G__78694 = cljs.core.count(c__4550__auto___78691);\nvar G__78695 = (0);\nseq__75354_78670 = G__78692;\nchunk__75355_78671 = G__78693;\ncount__75356_78672 = G__78694;\ni__75357_78673 = G__78695;\ncontinue;\n} else {\nvar vec__75392_78697 = cljs.core.first(seq__75354_78690__$1);\nvar sym_78698 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75392_78697,(0),null);\nvar lib_78699 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75392_78697,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_78699,sym_78698))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__75396 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__75397 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_78699,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_78698], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__75396,G__75397) : cljs.analyzer.error_message.call(null,G__75396,G__75397));\n})());\n} else {\n}\n\n\nvar G__78703 = cljs.core.next(seq__75354_78690__$1);\nvar G__78704 = null;\nvar G__78705 = (0);\nvar G__78706 = (0);\nseq__75354_78670 = G__78703;\nchunk__75355_78671 = G__78704;\ncount__75356_78672 = G__78705;\ni__75357_78673 = G__78706;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.analyzer.check_uses(cljs.analyzer.missing_use_macros(missing_uses,env),env);\n\nreturn cljs.analyzer.inferred_use_macros(missing_uses,env);\n});\n\ncljs.analyzer.check_use_macros.cljs$lang$maxFixedArity = 3;\n\ncljs.analyzer.check_use_macros_inferring_missing = (function cljs$analyzer$check_use_macros_inferring_missing(p__75410,env){\nvar map__75411 = p__75410;\nvar map__75411__$1 = (((((!((map__75411 == null))))?(((((map__75411.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75411.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75411):map__75411);\nvar ast = map__75411__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75411__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75411__$1,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75411__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar missing_uses = ((((cljs.analyzer._STAR_analyze_deps_STAR_) && (cljs.core.seq(uses))))?cljs.analyzer.missing_uses(uses,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,uses,cljs.core.keys(missing_uses));\nvar remove_missing_uses = ((function (missing_uses,maybe_macros,map__75411,map__75411__$1,ast,name,uses,use_macros){\nreturn (function (p1__75404_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__75404_SHARP_,cljs.core.keys(missing_uses));\n});})(missing_uses,maybe_macros,map__75411,map__75411__$1,ast,name,uses,use_macros))\n;\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),((function (missing_uses,maybe_macros,remove_missing_uses,map__75411,map__75411__$1,ast,name,uses,use_macros){\nreturn (function (p1__75406_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__75406_SHARP_,cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,missing_uses,env)], 0)),cljs.analyzer.inferred_use_macros(maybe_macros,env)], 0));\n});})(missing_uses,maybe_macros,remove_missing_uses,map__75411,map__75411__$1,ast,name,uses,use_macros))\n),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,((function (missing_uses,maybe_macros,remove_missing_uses,ast_SINGLEQUOTE_,map__75411,map__75411__$1,ast,name,uses,use_macros){\nreturn (function (p1__75407_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__75407_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),cljs.core.merge,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\n});})(missing_uses,maybe_macros,remove_missing_uses,ast_SINGLEQUOTE_,map__75411,map__75411__$1,ast,name,uses,use_macros))\n);\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.check_rename_macros_inferring_missing = (function cljs$analyzer$check_rename_macros_inferring_missing(p__75463,env){\nvar map__75468 = p__75463;\nvar map__75468__$1 = (((((!((map__75468 == null))))?(((((map__75468.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75468.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75468):map__75468);\nvar ast = map__75468__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75468__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75468__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar missing_renames = ((((cljs.analyzer._STAR_analyze_deps_STAR_) && (cljs.core.seq(renames))))?cljs.analyzer.missing_renames(renames,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,renames,cljs.core.keys(missing_renames));\nvar missing_rename_macros = cljs.analyzer.inferred_rename_macros(missing_renames,env);\nvar remove_missing_renames = ((function (missing_renames,maybe_macros,missing_rename_macros,map__75468,map__75468__$1,ast,name,renames){\nreturn (function (p1__75441_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__75441_SHARP_,cljs.core.keys(missing_renames));\n});})(missing_renames,maybe_macros,missing_rename_macros,map__75468,map__75468__$1,ast,name,renames))\n;\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),((function (missing_renames,maybe_macros,missing_rename_macros,remove_missing_renames,map__75468,map__75468__$1,ast,name,renames){\nreturn (function (p1__75442_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__75442_SHARP_,missing_rename_macros], 0)),cljs.analyzer.inferred_rename_macros(maybe_macros,env)], 0));\n});})(missing_renames,maybe_macros,missing_rename_macros,remove_missing_renames,map__75468,map__75468__$1,ast,name,renames))\n),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,((function (missing_renames,maybe_macros,missing_rename_macros,remove_missing_renames,ast_SINGLEQUOTE_,map__75468,map__75468__$1,ast,name,renames){\nreturn (function (p1__75443_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__75443_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),cljs.core.merge,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\n});})(missing_renames,maybe_macros,missing_rename_macros,remove_missing_renames,ast_SINGLEQUOTE_,map__75468,map__75468__$1,ast,name,renames))\n);\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.parse_ns_error_msg = (function cljs$analyzer$parse_ns_error_msg(spec,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"; offending spec: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([spec], 0))].join('');\n});\ncljs.analyzer.basic_validate_ns_spec = (function cljs$analyzer$basic_validate_ns_spec(env,macros_QMARK_,spec){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string') || (cljs.core.sequential_QMARK_(spec)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"));\n}\n\nif(cljs.core.sequential_QMARK_(spec)){\nif((((cljs.core.first(spec) instanceof cljs.core.Symbol)) || (typeof cljs.core.first(spec) === 'string'))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Library name must be specified as a symbol in :require / :require-macros\"));\n}\n\nif(cljs.core.odd_QMARK_(cljs.core.count(spec))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"));\n}\n\nif(cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),cljs.core.next(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as, :refer and :rename options supported in :require / :require-macros\"));\n}\n\nif((function (){var fs = cljs.core.frequencies(cljs.core.next(spec));\nreturn ((((function (){var G__75517 = new cljs.core.Keyword(null,\"as\",\"as\",1148689641);\nvar G__75518 = (0);\nreturn (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(G__75517,G__75518) : fs.call(null,G__75517,G__75518));\n})() <= (1))) && (((function (){var G__75521 = new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\nvar G__75522 = (0);\nreturn (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(G__75521,G__75522) : fs.call(null,G__75521,G__75522));\n})() <= (1))));\n})()){\nreturn null;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :as and :refer options may only be specified once in :require / :require-macros\"));\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.parse_ns_excludes = (function cljs$analyzer$parse_ns_excludes(env,args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (s,p__75530){\nvar vec__75534 = p__75530;\nvar seq__75535 = cljs.core.seq(vec__75534);\nvar first__75536 = cljs.core.first(seq__75535);\nvar seq__75535__$1 = cljs.core.next(seq__75535);\nvar k = first__75536;\nvar filters = seq__75535__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440))){\nif(cljs.core.seq(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(s))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only one :refer-clojure form is allowed per namespace definition\");\n} else {\n}\n\nvar valid_kws = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null);\nvar xs = (function (){var fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null);\nvar err = (!(cljs.core.even_QMARK_(cljs.core.count(filters))));\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\");\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nif(cljs.core.truth_((valid_kws.cljs$core$IFn$_invoke$arity$1 ? valid_kws.cljs$core$IFn$_invoke$arity$1(kw) : valid_kws.call(null,kw)))){\nvar refs = cljs.core.second(fs);\nif((!(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,valid_kws,vec__75534,seq__75535,first__75536,seq__75535__$1,k,filters){\nreturn (function (p1__75525_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__75525_SHARP_);\n});})(fs,ret,err,refs,kw,valid_kws,vec__75534,seq__75535,first__75536,seq__75535__$1,k,filters))\n,refs)))))))){\nvar G__78745 = fs;\nvar G__78746 = ret;\nvar G__78747 = true;\nfs = G__78745;\nret = G__78746;\nerr = G__78747;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))){\nvar G__78749 = cljs.core.nnext(fs);\nvar G__78750 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),cljs.core.into,refs);\nvar G__78751 = false;\nfs = G__78749;\nret = G__78750;\nerr = G__78751;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))){\nvar G__78752 = cljs.core.nnext(fs);\nvar G__78753 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),cljs.core.merge,refs);\nvar G__78754 = false;\nfs = G__78752;\nret = G__78753;\nerr = G__78754;\ncontinue;\n} else {\nreturn null;\n}\n}\n}\n} else {\nvar G__78755 = fs;\nvar G__78756 = ret;\nvar G__78757 = true;\nfs = G__78755;\nret = G__78756;\nerr = G__78757;\ncontinue;\n}\n} else {\nreturn ret;\n\n}\n}\nbreak;\n}\n})();\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s,xs], 0));\n} else {\nreturn s;\n}\n}),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null),args);\n});\ncljs.analyzer.use__GT_require = (function cljs$analyzer$use__GT_require(env,p__75583){\nvar vec__75584 = p__75583;\nvar seq__75585 = cljs.core.seq(vec__75584);\nvar first__75586 = cljs.core.first(seq__75585);\nvar seq__75585__$1 = cljs.core.next(seq__75585);\nvar lib = first__75586;\nvar filters = seq__75585__$1;\nvar spec = vec__75584;\nif((((lib instanceof cljs.core.Symbol)) && (cljs.core.odd_QMARK_(cljs.core.count(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n}\n\nvar fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib], null);\nvar err = false;\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nvar only_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"only\",\"only\",1907811652));\nif(((only_QMARK_) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))))){\nif((!((cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw)]),ret) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :only and :rename options may only be specified once in :use / :use-macros\"));\n} else {\nvar refs = cljs.core.second(fs);\nif((!(((((only_QMARK_) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,only_QMARK_,vec__75584,seq__75585,first__75586,seq__75585__$1,lib,filters,spec){\nreturn (function (p1__75579_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__75579_SHARP_);\n});})(fs,ret,err,refs,kw,only_QMARK_,vec__75584,seq__75585,first__75586,seq__75585__$1,lib,filters,spec))\n,refs)))))))){\nvar G__78769 = fs;\nvar G__78770 = ret;\nvar G__78771 = true;\nfs = G__78769;\nret = G__78770;\nerr = G__78771;\ncontinue;\n} else {\nvar G__78772 = cljs.core.nnext(fs);\nvar G__78773 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw),refs], null));\nvar G__78774 = false;\nfs = G__78772;\nret = G__78773;\nerr = G__78774;\ncontinue;\n}\n}\n} else {\nvar G__78780 = fs;\nvar G__78781 = ret;\nvar G__78782 = true;\nfs = G__78780;\nret = G__78781;\nerr = G__78782;\ncontinue;\n}\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),ret) == null)))){\nreturn ret;\n} else {\nvar G__78783 = fs;\nvar G__78784 = ret;\nvar G__78785 = true;\nfs = G__78783;\nret = G__78784;\nerr = G__78785;\ncontinue;\n}\n\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse_require_spec = (function cljs$analyzer$parse_require_spec(env,macros_QMARK_,deps,aliases,spec){\nwhile(true){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string'))){\nvar G__78786 = env;\nvar G__78787 = macros_QMARK_;\nvar G__78788 = deps;\nvar G__78789 = aliases;\nvar G__78790 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\nenv = G__78786;\nmacros_QMARK_ = G__78787;\ndeps = G__78788;\naliases = G__78789;\nspec = G__78790;\ncontinue;\n} else {\ncljs.analyzer.basic_validate_ns_spec(env,macros_QMARK_,spec);\n\nvar vec__75742 = spec;\nvar seq__75743 = cljs.core.seq(vec__75742);\nvar first__75744 = cljs.core.first(seq__75743);\nvar seq__75743__$1 = cljs.core.next(seq__75743);\nvar lib = first__75744;\nvar opts = seq__75743__$1;\nvar vec__75745 = (function (){var temp__5755__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib),new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n} else {\nvar js_module_name = temp__5755__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name),lib], null);\n}\n})();\nvar lib__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75745,(0),null);\nvar js_module_provides = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75745,(1),null);\nvar map__75748 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar map__75748__$1 = (((((!((map__75748 == null))))?(((((map__75748.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75748.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75748):map__75748);\nvar alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__75748__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((typeof lib__$1 === 'string')?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(lib__$1)):lib__$1));\nvar referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75748__$1,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553));\nvar renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75748__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar referred_without_renamed = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(renamed)),referred));\nvar vec__75749 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613)], null));\nvar rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75749,(0),null);\nvar uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75749,(1),null);\nvar renk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75749,(2),null);\nif((((alias instanceof cljs.core.Symbol)) || ((alias == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as must be followed by a symbol in :require / :require-macros\"));\n}\n\nif((!((alias == null)))){\nvar alias_type_78802 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.Keyword(null,\"macros\",\"macros\",811339431):new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786));\nvar lib_SINGLEQUOTE__78803 = (function (){var fexpr__75763 = alias_type_78802.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(aliases));\nreturn (fexpr__75763.cljs$core$IFn$_invoke$arity$1 ? fexpr__75763.cljs$core$IFn$_invoke$arity$1(alias) : fexpr__75763.call(null,alias));\n})();\nif((((!((lib_SINGLEQUOTE__78803 == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1,lib_SINGLEQUOTE__78803)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as alias must be unique\"));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_78802], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias,lib__$1], null),(cljs.core.truth_(js_module_provides)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_module_provides,lib__$1], null):null)], 0));\n} else {\n}\n\nif(((((cljs.core.sequential_QMARK_(referred)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,referred)))) || ((referred == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":refer must be followed by a sequence of symbols in :require / :require-macros\"));\n}\n\nif(cljs.core.truth_(macros_QMARK_)){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,lib__$1);\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((!((alias == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([rk,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.createAsIfByAssoc([alias,lib__$1]),cljs.core.PersistentArrayMap.createAsIfByAssoc([lib__$1,lib__$1]),(cljs.core.truth_(js_module_provides)?cljs.core.PersistentArrayMap.createAsIfByAssoc([js_module_provides,lib__$1]):null)], 0))]):null),(((!((referred_without_renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([uk,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred_without_renamed,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))]):null),(((!((renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([renk,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (env,macros_QMARK_,deps,aliases,spec,vec__75742,seq__75743,first__75744,seq__75743__$1,lib,opts,vec__75745,lib__$1,js_module_provides,map__75748,map__75748__$1,alias,referred,renamed,referred_without_renamed,vec__75749,rk,uk,renk){\nreturn (function (m,p__75782){\nvar vec__75784 = p__75782;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75784,(0),null);\nvar renamed__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75784,(1),null);\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([original]),referred))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Renamed symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original),\" not referred\"].join(''));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed__$1,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(env,macros_QMARK_,deps,aliases,spec,vec__75742,seq__75743,first__75744,seq__75743__$1,lib,opts,vec__75745,lib__$1,js_module_provides,map__75748,map__75748__$1,alias,referred,renamed,referred_without_renamed,vec__75749,rk,uk,renk))\n,cljs.core.PersistentArrayMap.EMPTY,renamed)]):null)], 0));\n}\nbreak;\n}\n});\ncljs.analyzer.parse_import_spec = (function cljs$analyzer$parse_import_spec(env,deps,spec){\nif(((((cljs.core.sequential_QMARK_(spec)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,spec)))) || ((((spec instanceof cljs.core.Symbol)) && ((cljs.core.namespace(spec) == null)))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"));\n}\n\nvar import_map = ((cljs.core.sequential_QMARK_(spec))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__75791_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__75791_SHARP_,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(spec)),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__75791_SHARP_)].join(''))],null));\n}),cljs.core.rest(spec))):cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec),/\\./))),spec]));\nvar seq__75807_78817 = cljs.core.seq(import_map);\nvar chunk__75808_78818 = null;\nvar count__75809_78819 = (0);\nvar i__75810_78820 = (0);\nwhile(true){\nif((i__75810_78820 < count__75809_78819)){\nvar vec__75826_78821 = chunk__75808_78818.cljs$core$IIndexed$_nth$arity$2(null,i__75810_78820);\nvar __78822 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75826_78821,(0),null);\nvar spec_78823__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75826_78821,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_78823__$1);\n\n\nvar G__78825 = seq__75807_78817;\nvar G__78826 = chunk__75808_78818;\nvar G__78827 = count__75809_78819;\nvar G__78828 = (i__75810_78820 + (1));\nseq__75807_78817 = G__78825;\nchunk__75808_78818 = G__78826;\ncount__75809_78819 = G__78827;\ni__75810_78820 = G__78828;\ncontinue;\n} else {\nvar temp__5753__auto___78829 = cljs.core.seq(seq__75807_78817);\nif(temp__5753__auto___78829){\nvar seq__75807_78830__$1 = temp__5753__auto___78829;\nif(cljs.core.chunked_seq_QMARK_(seq__75807_78830__$1)){\nvar c__4550__auto___78831 = cljs.core.chunk_first(seq__75807_78830__$1);\nvar G__78832 = cljs.core.chunk_rest(seq__75807_78830__$1);\nvar G__78833 = c__4550__auto___78831;\nvar G__78834 = cljs.core.count(c__4550__auto___78831);\nvar G__78835 = (0);\nseq__75807_78817 = G__78832;\nchunk__75808_78818 = G__78833;\ncount__75809_78819 = G__78834;\ni__75810_78820 = G__78835;\ncontinue;\n} else {\nvar vec__75836_78836 = cljs.core.first(seq__75807_78830__$1);\nvar __78837 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75836_78836,(0),null);\nvar spec_78838__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75836_78836,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_78838__$1);\n\n\nvar G__78844 = cljs.core.next(seq__75807_78830__$1);\nvar G__78845 = null;\nvar G__78846 = (0);\nvar G__78847 = (0);\nseq__75807_78817 = G__78844;\nchunk__75808_78818 = G__78845;\ncount__75809_78819 = G__78846;\ni__75810_78820 = G__78847;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),import_map,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),import_map], null);\n});\n/**\n * Given a spec form check whether the spec namespace requires a macro file\n * of the same name. If so return true.\n */\ncljs.analyzer.macro_autoload_ns_QMARK_ = (function cljs$analyzer$macro_autoload_ns_QMARK_(form){\nif(cljs.analyzer._STAR_macro_infer_STAR_){\nvar ns = ((cljs.core.sequential_QMARK_(form))?cljs.core.first(form):form);\nvar map__75845 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null));\nvar map__75845__$1 = (((((!((map__75845 == null))))?(((((map__75845.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75845.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75845):map__75845);\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75845__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75845__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar or__4131__auto__ = cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(use_macros));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(require_macros));\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given a symbol that starts with clojure as the first segment return the\n * same symbol with the first segment replaced with cljs\n */\ncljs.analyzer.clj_ns__GT_cljs_ns = (function cljs$analyzer$clj_ns__GT_cljs_ns(sym){\nvar segs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure\",cljs.core.first(segs))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.cons(\"cljs\",cljs.core.next(segs))));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.canonicalize_specs = (function cljs$analyzer$canonicalize_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nvar spec = cljs.core.second(quoted_spec_or_kw);\nif(((cljs.core.vector_QMARK_(spec)) || (cljs.core.map_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\n}\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\ncljs.analyzer.canonicalize_import_specs = (function cljs$analyzer$canonicalize_import_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_import_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nreturn cljs.core.second(quoted_spec_or_kw);\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\n/**\n * Given an original set of ns specs desugar :include-macros and :refer-macros\n * usage into only primitive spec forms - :use, :require, :use-macros,\n * :require-macros. If a library includes a macro file of with the same name\n * as the namespace will also be desugared.\n */\ncljs.analyzer.desugar_ns_specs = (function cljs$analyzer$desugar_ns_specs(args){\nvar map__75883 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__75885){\nvar vec__75887 = p__75885;\nvar seq__75888 = cljs.core.seq(vec__75887);\nvar first__75889 = cljs.core.first(seq__75888);\nvar seq__75888__$1 = cljs.core.next(seq__75888);\nvar k = first__75889;\nvar specs = seq__75888__$1;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,specs)], null);\n}),args));\nvar map__75883__$1 = (((((!((map__75883 == null))))?(((((map__75883.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__75883.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__75883):map__75883);\nvar indexed = map__75883__$1;\nvar require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__75883__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953),null], null), null);\nvar remove_from_spec = ((function (map__75883,map__75883__$1,indexed,require,sugar_keys){\nreturn (function (pred,spec){\nwhile(true){\nif(cljs.core.not((function (){var and__4120__auto__ = cljs.core.sequential_QMARK_(spec);\nif(and__4120__auto__){\nreturn cljs.core.some(pred,spec);\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn spec;\n} else {\nvar vec__75905 = cljs.core.split_with(cljs.core.complement(pred),spec);\nvar l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75905,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75905,(1),null);\nvar G__78867 = pred;\nvar G__78868 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l,cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),r));\npred = G__78867;\nspec = G__78868;\ncontinue;\n}\nbreak;\n}\n});})(map__75883,map__75883__$1,indexed,require,sugar_keys))\n;\nvar replace_refer_macros = ((function (map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec){\nreturn (function (spec){\nif((!(cljs.core.sequential_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec){\nreturn (function (x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953))){\nreturn new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\n} else {\nreturn x;\n}\n});})(map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec))\n,spec);\n}\n});})(map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec))\n;\nvar reload_spec_QMARK_ = ((function (map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros){\nreturn (function (p1__75876_SHARP_){\nvar fexpr__75926 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null);\nreturn (fexpr__75926.cljs$core$IFn$_invoke$arity$1 ? fexpr__75926.cljs$core$IFn$_invoke$arity$1(p1__75876_SHARP_) : fexpr__75926.call(null,p1__75876_SHARP_));\n});})(map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros))\n;\nvar to_macro_specs = ((function (map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_){\nreturn (function (specs){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_){\nreturn (function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nreturn replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null], null), null),x))));\n} else {\nreturn x;\n}\n});})(map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_))\n,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_){\nreturn (function (x){\nvar or__4131__auto__ = (function (){var and__4120__auto__ = cljs.core.sequential_QMARK_(x);\nif(and__4120__auto__){\nreturn cljs.core.some(sugar_keys,x);\n} else {\nreturn and__4120__auto__;\n}\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = reload_spec_QMARK_(x);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn cljs.analyzer.macro_autoload_ns_QMARK_(x);\n}\n}\n});})(map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_))\n,specs));\n});})(map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_))\n;\nvar remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec,sugar_keys);\nvar temp__5755__auto__ = cljs.core.seq(to_macro_specs(require));\nif((temp__5755__auto__ == null)){\nreturn args;\n} else {\nvar require_specs = temp__5755__auto__;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (require_specs,temp__5755__auto__,map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_,to_macro_specs,remove_sugar){\nreturn (function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nvar vec__75945 = x;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75945,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75945,(1),null);\nreturn cljs.core.cons(k,cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar,v));\n} else {\nreturn x;\n}\n});})(require_specs,temp__5755__auto__,map__75883,map__75883__$1,indexed,require,sugar_keys,remove_from_spec,replace_refer_macros,reload_spec_QMARK_,to_macro_specs,remove_sugar))\n,cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentVector.EMPTY),require_specs));\n}\n});\ncljs.analyzer.find_def_clash = (function cljs$analyzer$find_def_clash(env,ns,segments){\nvar to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xs){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.butlast(xs))),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);\n}),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.PersistentVector.EMPTY,segments)));\nvar seq__75958 = cljs.core.seq(to_check);\nvar chunk__75959 = null;\nvar count__75960 = (0);\nvar i__75961 = (0);\nwhile(true){\nif((i__75961 < count__75960)){\nvar vec__75975 = chunk__75959.cljs$core$IIndexed$_nth$arity$2(null,i__75961);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75975,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75975,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__78884 = seq__75958;\nvar G__78885 = chunk__75959;\nvar G__78886 = count__75960;\nvar G__78887 = (i__75961 + (1));\nseq__75958 = G__78884;\nchunk__75959 = G__78885;\ncount__75960 = G__78886;\ni__75961 = G__78887;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__75958);\nif(temp__5753__auto__){\nvar seq__75958__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__75958__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__75958__$1);\nvar G__78889 = cljs.core.chunk_rest(seq__75958__$1);\nvar G__78890 = c__4550__auto__;\nvar G__78891 = cljs.core.count(c__4550__auto__);\nvar G__78892 = (0);\nseq__75958 = G__78889;\nchunk__75959 = G__78890;\ncount__75960 = G__78891;\ni__75961 = G__78892;\ncontinue;\n} else {\nvar vec__75978 = cljs.core.first(seq__75958__$1);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75978,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__75978,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__78894 = cljs.core.next(seq__75958__$1);\nvar G__78895 = null;\nvar G__78896 = (0);\nvar G__78897 = (0);\nseq__75958 = G__78894;\nchunk__75959 = G__78895;\ncount__75960 = G__78896;\ni__75961 = G__78897;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.macro_ns_name = (function cljs$analyzer$macro_ns_name(name){\nvar name_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.not(goog.string.endsWith(name_str,\"$macros\"))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([name_str,\"$macros\"].join(''));\n} else {\nreturn name;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),(function (_,env,p__75992,___$1,opts){\nvar vec__75994 = p__75992;\nvar seq__75995 = cljs.core.seq(vec__75994);\nvar first__75996 = cljs.core.first(seq__75995);\nvar seq__75995__$1 = cljs.core.next(seq__75995);\nvar ___$2 = first__75996;\nvar first__75996__$1 = cljs.core.first(seq__75995__$1);\nvar seq__75995__$2 = cljs.core.next(seq__75995__$1);\nvar name = first__75996__$1;\nvar args = seq__75995__$2;\nvar form = vec__75994;\nif(cljs.analyzer._STAR_allow_ns_STAR_){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespace declarations must appear at the top-level.\");\n}\n\nif((name instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespaces must be named by a symbol.\");\n}\n\nvar name__$1 = (function (){var G__76000 = name;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nreturn cljs.analyzer.macro_ns_name(G__76000);\n} else {\nreturn G__76000;\n}\n})();\nvar segments_78900 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(segments_78900))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\nvar segment_78901 = cljs.core.some(cljs.analyzer.js_reserved,segments_78900);\nif((!((segment_78901 == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\ncljs.analyzer.find_def_clash(env,name__$1,segments_78900);\n\nvar docstring = ((typeof cljs.core.first(args) === 'string')?cljs.core.first(args):null);\nvar mdocstr = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));\nvar args__$1 = (((!((docstring == null))))?cljs.core.next(args):args);\nvar metadata = ((cljs.core.map_QMARK_(cljs.core.first(args__$1)))?cljs.core.first(args__$1):null);\nvar args__$2 = cljs.analyzer.desugar_ns_specs((((!((metadata == null))))?cljs.core.next(args__$1):args__$1));\nvar name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1,cljs.core.merge,metadata);\nvar map__76002 = cljs.analyzer.parse_ns_excludes(env,args__$2);\nvar map__76002__$1 = (((((!((map__76002 == null))))?(((((map__76002.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76002.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76002):map__76002);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76002__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76002__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (m,p__76022){\nvar vec__76024 = p__76022;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76024,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76024,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n,cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar valid_forms = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null));\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__76003 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (m,p__76045){\nvar vec__76046 = p__76045;\nvar seq__76047 = cljs.core.seq(vec__76046);\nvar first__76048 = cljs.core.first(seq__76047);\nvar seq__76047__$1 = cljs.core.next(seq__76047);\nvar k = first__76048;\nvar libs = seq__76047__$1;\nvar libspec = vec__76046;\nif(cljs.core.truth_((function (){var fexpr__76053 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null);\nreturn (fexpr__76053.cljs$core$IFn$_invoke$arity$1 ? fexpr__76053.cljs$core$IFn$_invoke$arity$1(k) : fexpr__76053.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(libspec),\" instead.\"].join(''));\n}\n\nif(cljs.core.truth_((function (){var fexpr__76054 = cljs.core.deref(valid_forms);\nreturn (fexpr__76054.cljs$core$IFn$_invoke$arity$1 ? fexpr__76054.cljs$core$IFn$_invoke$arity$1(k) : fexpr__76054.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only one \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\" form is allowed per namespace definition\"].join(''));\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms,cljs.core.disj,k);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5753__auto___78913 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (vec__76046,seq__76047,first__76048,seq__76047__$1,k,libs,libspec,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (p1__75989_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__75989_SHARP_));\n});})(vec__76046,seq__76047,first__76048,seq__76047__$1,k,libs,libspec,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n,libs));\nif(temp__5753__auto___78913){\nvar xs_78914 = temp__5753__auto___78913;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_78914),cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (xs_78914,temp__5753__auto___78913,vec__76046,seq__76047,first__76048,seq__76047__$1,k,libs,libspec,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (p1__75990_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__75990_SHARP_));\n});})(xs_78914,temp__5753__auto___78913,vec__76046,seq__76047,first__76048,seq__76047__$1,k,libs,libspec,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n,xs_78914)));\n} else {\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n});})(docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n,cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (p__76081){\nvar vec__76084 = p__76081;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76084,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n});})(docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n,args__$2));\nvar map__76003__$1 = (((((!((map__76003 == null))))?(((((map__76003.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76003.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76003):map__76003);\nvar params = map__76003__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76003__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76003__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76003__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76003__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76003__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76003__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76003__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\nvar vec__76004 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (spec_map){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2),(0),(cljs.core.count(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2)) - (7))));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (ns,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (m,p__76097){\nvar vec__76098 = p__76097;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76098,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76098,(1),null);\nvar G__76101 = m;\nif((!(cljs.core.symbol_identical_QMARK_(v,ns)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__76101,k,v);\n} else {\nreturn G__76101;\n}\n});})(ns,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n,cljs.core.PersistentArrayMap.EMPTY,spec_map);\n} else {\nreturn spec_map;\n}\n});})(docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [require_macros,use_macros], null));\nvar require_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76004,(0),null);\nvar use_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76004,(1),null);\ncljs.analyzer._STAR_cljs_ns_STAR_ = name__$2;\n\nvar ns_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros__$1,excludes,name__$2,imports,requires,uses,require_macros__$1,(function (){var or__4131__auto__ = docstring;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn mdocstr;\n}\n})()]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name__$2], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__76109 = ns_info;\nvar G__76109__$1 = (cljs.core.truth_((function (){var G__76111 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__76110 = cljs.core.deref(reload);\nreturn (fexpr__76110.cljs$core$IFn$_invoke$arity$1 ? fexpr__76110.cljs$core$IFn$_invoke$arity$1(G__76111) : fexpr__76110.call(null,G__76111));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__76109,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),((function (G__76109,ns_info,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76004,require_macros__$1,use_macros__$1,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__76113 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__76112 = cljs.core.deref(reload);\nreturn (fexpr__76112.cljs$core$IFn$_invoke$arity$1 ? fexpr__76112.cljs$core$IFn$_invoke$arity$1(G__76113) : fexpr__76112.call(null,G__76113));\n})(),true]));\n});})(G__76109,ns_info,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76004,require_macros__$1,use_macros__$1,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n):G__76109);\nif(cljs.core.truth_((function (){var G__76118 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__76117 = cljs.core.deref(reload);\nreturn (fexpr__76117.cljs$core$IFn$_invoke$arity$1 ? fexpr__76117.cljs$core$IFn$_invoke$arity$1(G__76118) : fexpr__76117.call(null,G__76118));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__76109__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),((function (G__76109,G__76109__$1,ns_info,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76004,require_macros__$1,use_macros__$1,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form){\nreturn (function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__76121 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__76120 = cljs.core.deref(reload);\nreturn (fexpr__76120.cljs$core$IFn$_invoke$arity$1 ? fexpr__76120.cljs$core$IFn$_invoke$arity$1(G__76121) : fexpr__76120.call(null,G__76121));\n})(),true]));\n});})(G__76109,G__76109__$1,ns_info,docstring,mdocstr,args__$1,metadata,args__$2,name__$2,map__76002,map__76002__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,valid_forms,reload,reloads,map__76003,map__76003__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76004,require_macros__$1,use_macros__$1,name__$1,vec__75994,seq__75995,first__75996,seq__75995__$1,___$2,first__75996__$1,seq__75995__$2,name,args,form))\n);\n} else {\nreturn G__76109__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.check_duplicate_aliases = (function cljs$analyzer$check_duplicate_aliases(env,old,new$){\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(old);\nvar seq__76141 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null));\nvar chunk__76142 = null;\nvar count__76143 = (0);\nvar i__76144 = (0);\nwhile(true){\nif((i__76144 < count__76143)){\nvar k = chunk__76142.cljs$core$IIndexed$_nth$arity$2(null,i__76144);\nvar old_aliases_78927 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_78928 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5757__auto___78929 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_78928)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__76141,chunk__76142,count__76143,i__76144,old_aliases_78927,new_aliases_78928,k,ns_name){\nreturn (function (p__76184){\nvar vec__76189 = p__76184;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76189,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76189,(1),null);\nvar entry = vec__76189;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_78928,k__$1))));\n});})(seq__76141,chunk__76142,count__76143,i__76144,old_aliases_78927,new_aliases_78928,k,ns_name))\n,old_aliases_78927)));\nif((temp__5757__auto___78929 == null)){\n} else {\nvar alias_78934 = temp__5757__auto___78929;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_78934),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_78927,alias_78934))].join(''));\n}\n\n\nvar G__78935 = seq__76141;\nvar G__78936 = chunk__76142;\nvar G__78937 = count__76143;\nvar G__78938 = (i__76144 + (1));\nseq__76141 = G__78935;\nchunk__76142 = G__78936;\ncount__76143 = G__78937;\ni__76144 = G__78938;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__76141);\nif(temp__5753__auto__){\nvar seq__76141__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__76141__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__76141__$1);\nvar G__78939 = cljs.core.chunk_rest(seq__76141__$1);\nvar G__78940 = c__4550__auto__;\nvar G__78941 = cljs.core.count(c__4550__auto__);\nvar G__78942 = (0);\nseq__76141 = G__78939;\nchunk__76142 = G__78940;\ncount__76143 = G__78941;\ni__76144 = G__78942;\ncontinue;\n} else {\nvar k = cljs.core.first(seq__76141__$1);\nvar old_aliases_78943 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_78944 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5757__auto___78946 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_78944)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__76141,chunk__76142,count__76143,i__76144,old_aliases_78943,new_aliases_78944,k,seq__76141__$1,temp__5753__auto__,ns_name){\nreturn (function (p__76271){\nvar vec__76275 = p__76271;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76275,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76275,(1),null);\nvar entry = vec__76275;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_78944,k__$1))));\n});})(seq__76141,chunk__76142,count__76143,i__76144,old_aliases_78943,new_aliases_78944,k,seq__76141__$1,temp__5753__auto__,ns_name))\n,old_aliases_78943)));\nif((temp__5757__auto___78946 == null)){\n} else {\nvar alias_78948 = temp__5757__auto___78946;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_78948),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_78943,alias_78948))].join(''));\n}\n\n\nvar G__78950 = cljs.core.next(seq__76141__$1);\nvar G__78951 = null;\nvar G__78952 = (0);\nvar G__78953 = (0);\nseq__76141 = G__78950;\nchunk__76142 = G__78951;\ncount__76143 = G__78952;\ni__76144 = G__78953;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),(function (_,env,p__76325,___$1,opts){\nvar vec__76327 = p__76325;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76327,(0),null);\nvar quoted_specs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76327,(1),null);\nvar form = vec__76327;\nvar temp__5753__auto___78955 = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (vec__76327,___$2,quoted_specs,form){\nreturn (function (p1__76307_SHARP_){\nreturn ((cljs.core.seq_QMARK_(p1__76307_SHARP_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(p1__76307_SHARP_))));\n});})(vec__76327,___$2,quoted_specs,form))\n,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,quoted_specs)));\nif(cljs.core.truth_(temp__5753__auto___78955)){\nvar not_quoted_78956 = temp__5753__auto___78955;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Arguments to \",cljs.core.name(cljs.core.first(quoted_specs)),\" must be quoted. Offending spec: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(not_quoted_78956)].join(''));\n} else {\n}\n\nif(cljs.analyzer._STAR_allow_ns_STAR_){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Calls to `\",cljs.core.name(cljs.core.first(quoted_specs)),\"` must appear at the top-level.\"].join(''));\n}\n\nvar specs = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.first(quoted_specs)))?cljs.analyzer.canonicalize_import_specs(quoted_specs):cljs.analyzer.canonicalize_specs(quoted_specs));\nvar name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar args = cljs.analyzer.desugar_ns_specs((new cljs.core.List(null,specs,null,(1),null)));\nvar map__76358 = cljs.analyzer.parse_ns_excludes(env,args);\nvar map__76358__$1 = (((((!((map__76358 == null))))?(((((map__76358.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76358.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76358):map__76358);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76358__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76358__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (specs,name,args,map__76358,map__76358__$1,excludes,core_renames,vec__76327,___$2,quoted_specs,form){\nreturn (function (m,p__76365){\nvar vec__76366 = p__76365;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76366,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76366,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(specs,name,args,map__76358,map__76358__$1,excludes,core_renames,vec__76327,___$2,quoted_specs,form))\n,cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__76360 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form){\nreturn (function (m,p__76375){\nvar vec__76382 = p__76375;\nvar seq__76383 = cljs.core.seq(vec__76382);\nvar first__76384 = cljs.core.first(seq__76383);\nvar seq__76383__$1 = cljs.core.next(seq__76383);\nvar k = first__76384;\nvar libs = seq__76383__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5757__auto___78969 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (vec__76382,seq__76383,first__76384,seq__76383__$1,k,libs,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form){\nreturn (function (p1__76310_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__76310_SHARP_));\n});})(vec__76382,seq__76383,first__76384,seq__76383__$1,k,libs,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form))\n,libs));\nif((temp__5757__auto___78969 == null)){\n} else {\nvar xs_78970 = temp__5757__auto___78969;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_78970),cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (xs_78970,temp__5757__auto___78969,vec__76382,seq__76383,first__76384,seq__76383__$1,k,libs,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form){\nreturn (function (p1__76311_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__76311_SHARP_));\n});})(xs_78970,temp__5757__auto___78969,vec__76382,seq__76383,first__76384,seq__76383__$1,k,libs,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form))\n,xs_78970)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n});})(specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form))\n,cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form){\nreturn (function (p__76406){\nvar vec__76407 = p__76406;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76407,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n});})(specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,vec__76327,___$2,quoted_specs,form))\n,args));\nvar map__76360__$1 = (((((!((map__76360 == null))))?(((((map__76360.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76360.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76360):map__76360);\nvar params = map__76360__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76360__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76360__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76360__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76360__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76360__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76360__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76360__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\ncljs.analyzer._STAR_cljs_ns_STAR_ = name;\n\nvar require_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros,excludes,name,imports,requires,uses,require_macros]);\nvar ns_info = (function (){var ns_info_SINGLEQUOTE_ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null));\nif((cljs.core.count(ns_info_SINGLEQUOTE_) > (0))){\nvar merge_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394)], null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info_SINGLEQUOTE_,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),excludes], null),cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(ns_info_SINGLEQUOTE_,merge_keys),cljs.core.select_keys(require_info,merge_keys)], 0))], 0));\n} else {\nreturn require_info;\n}\n})();\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns*\",\"ns*\",200417856),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__76433 = require_info;\nvar G__76433__$1 = (cljs.core.truth_((function (){var G__76438 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__76437 = cljs.core.deref(reload);\nreturn (fexpr__76437.cljs$core$IFn$_invoke$arity$1 ? fexpr__76437.cljs$core$IFn$_invoke$arity$1(G__76438) : fexpr__76437.call(null,G__76438));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__76433,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),((function (G__76433,require_info,ns_info,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,map__76360,map__76360__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76327,___$2,quoted_specs,form){\nreturn (function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__76448 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__76447 = cljs.core.deref(reload);\nreturn (fexpr__76447.cljs$core$IFn$_invoke$arity$1 ? fexpr__76447.cljs$core$IFn$_invoke$arity$1(G__76448) : fexpr__76447.call(null,G__76448));\n})(),true]));\n});})(G__76433,require_info,ns_info,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,map__76360,map__76360__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76327,___$2,quoted_specs,form))\n):G__76433);\nif(cljs.core.truth_((function (){var G__76455 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__76454 = cljs.core.deref(reload);\nreturn (fexpr__76454.cljs$core$IFn$_invoke$arity$1 ? fexpr__76454.cljs$core$IFn$_invoke$arity$1(G__76455) : fexpr__76454.call(null,G__76455));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__76433__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),((function (G__76433,G__76433__$1,require_info,ns_info,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,map__76360,map__76360__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76327,___$2,quoted_specs,form){\nreturn (function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__76459 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__76458 = cljs.core.deref(reload);\nreturn (fexpr__76458.cljs$core$IFn$_invoke$arity$1 ? fexpr__76458.cljs$core$IFn$_invoke$arity$1(G__76459) : fexpr__76458.call(null,G__76459));\n})(),true]));\n});})(G__76433,G__76433__$1,require_info,ns_info,specs,name,args,map__76358,map__76358__$1,excludes,core_renames,core_renames__$1,deps,aliases,spec_parsers,reload,reloads,map__76360,map__76360__$1,params,uses,requires,renames,use_macros,require_macros,rename_macros,imports,vec__76327,___$2,quoted_specs,form))\n);\n} else {\nreturn G__76433__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse_type = (function cljs$analyzer$parse_type(op,env,p__76464){\nvar vec__76466 = p__76464;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76466,(0),null);\nvar tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76466,(1),null);\nvar fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76466,(2),null);\nvar pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76466,(3),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76466,(4),null);\nvar form = vec__76466;\nvar t = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),tsym));\nvar locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (t,vec__76466,_,tsym,fields,pmasks,body,form){\nreturn (function (m,fld){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,fld,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[fld,true,cljs.analyzer.get_col(fld,env),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),cljs.analyzer.get_line(fld,env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null,fld)),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500)]));\n});})(t,vec__76466,_,tsym,fields,pmasks,body,form))\n,cljs.core.PersistentArrayMap.EMPTY,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op))?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"__meta\",\"__meta\",-946752628,null),new cljs.core.Symbol(null,\"__extmap\",\"__extmap\",-1435580931,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"__hash\",\"__hash\",-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null)):fields));\nvar protocols = new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),tsym], null),((function (t,locals,protocols,vec__76466,_,tsym,fields,pmasks,body,form){\nreturn (function (m){\nvar m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((function (){var or__4131__auto__ = m;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),t,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),true,new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024),cljs.core.count(fields),new cljs.core.Keyword(null,\"record\",\"record\",-779106859),cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op)], 0));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m__$1,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),protocols], null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym,env)], 0));\n});})(t,locals,protocols,vec__76466,_,tsym,fields,pmasks,body,form))\n);\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"pmasks\",\"pmasks\",-871416698),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),pmasks,cljs.core.disj.cljs$core$IFn$_invoke$arity$2(protocols,new cljs.core.Symbol(\"cljs.core\",\"Object\",\"cljs.core/Object\",-345545431,null)),fields,op,env,t,form,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),(function (){var G__76486 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals);\nvar G__76487 = body;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__76486,G__76487) : cljs.analyzer.analyze.call(null,G__76486,G__76487));\n})()]);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"deftype\",\"deftype\",340294561),env,form);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),env,form);\n}));\ncljs.analyzer.property_symbol_QMARK_ = (function cljs$analyzer$property_symbol_QMARK_(p1__76499_SHARP_){\nreturn cljs.core.boolean$((function (){var and__4120__auto__ = (p1__76499_SHARP_ instanceof cljs.core.Symbol);\nif(and__4120__auto__){\nreturn cljs.core.re_matches(/^-.*/,cljs.core.name(p1__76499_SHARP_));\n} else {\nreturn and__4120__auto__;\n}\n})());\n});\ncljs.analyzer.classify_dot_form = (function cljs$analyzer$classify_dot_form(p__76507){\nvar vec__76508 = p__76507;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76508,(0),null);\nvar member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76508,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76508,(2),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(((target == null))?new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642):new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n),((cljs.analyzer.property_symbol_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886):(((member instanceof cljs.core.Symbol))?new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902):((cljs.core.seq_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923):new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642)\n))),(((args == null))?cljs.core.List.EMPTY:new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n)], null);\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.build_dot_form !== 'undefined')){\n} else {\ncljs.analyzer.build_dot_form = (function (){var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__76526 = cljs.core.get_global_hierarchy;\nreturn (fexpr__76526.cljs$core$IFn$_invoke$arity$0 ? fexpr__76526.cljs$core$IFn$_invoke$arity$0() : fexpr__76526.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"build-dot-form\"),((function (method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__){\nreturn (function (p1__76518_SHARP_){\nreturn cljs.analyzer.classify_dot_form(p1__76518_SHARP_);\n});})(method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__,hierarchy__4617__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4617__auto__,method_table__4613__auto__,prefer_table__4614__auto__,method_cache__4615__auto__,cached_hierarchy__4616__auto__));\n})();\n}\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),cljs.core.List.EMPTY], null),(function (p__76538){\nvar vec__76539 = p__76538;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76539,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76539,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76539,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"access\",\"cljs.analyzer/access\",-1639036494),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring((1)))], null);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923)], null),(function (p__76545){\nvar vec__76546 = p__76545;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76546,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76546,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76546,(2),null);\nthrow (new Error([\"Cannot provide arguments \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(args),\" on property access \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop)].join('')));\n}));\n/**\n * Builds the intermediate method call map used to reason about the parsed form during\n *   compilation.\n */\ncljs.analyzer.build_method_call = (function cljs$analyzer$build_method_call(target,meth,args){\nif((meth instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),meth,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),cljs.core.first(meth),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n}\n});\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)], null),(function (p__76554){\nvar vec__76555 = p__76554;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76555,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76555,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76555,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),cljs.core.List.EMPTY], null),(function (p__76558){\nvar vec__76559 = p__76558;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76559,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76559,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76559,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923),cljs.core.List.EMPTY], null),(function (p__76563){\nvar vec__76564 = p__76563;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76564,(0),null);\nvar meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76564,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76564,(2),null);\nreturn cljs.analyzer.build_method_call(target,cljs.core.first(meth_expr),cljs.core.rest(meth_expr));\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (dot_form){\nthrow (new Error([\"Unknown dot form of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\".\",\".\",1975675962,null),dot_form)),\" with classification \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.classify_dot_form(dot_form))].join('')));\n}));\ncljs.analyzer.analyze_dot = (function cljs$analyzer$analyze_dot(env,target,field,member_PLUS_,form){\nvar v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,field,member_PLUS_], null);\nvar map__76569 = (cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v) : cljs.analyzer.build_dot_form.call(null,v));\nvar map__76569__$1 = (((((!((map__76569 == null))))?(((((map__76569.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76569.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76569):map__76569);\nvar dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76569__$1,new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601));\nvar target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76569__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76569__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nvar field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76569__$1,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76569__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar targetexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze.call(null,enve,target__$1));\nvar form_meta = cljs.core.meta(form);\nvar target_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(targetexpr);\nvar prop = (function (){var or__4131__auto__ = field__$1;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn method;\n}\n})();\nvar tag = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = (function (){var and__4120__auto__ = cljs.analyzer.js_tag_QMARK_(target_tag);\nif(and__4120__auto__){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.analyzer.normalize_js_tag(target_tag),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null)),prop);\n} else {\nreturn and__4120__auto__;\n}\n})();\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn null;\n}\n}\n})();\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"constructor\",\"constructor\",-313397284,null),prop)) && ((!(clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop),\"cljs$\")))))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),cljs.core.first(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"object\",\"object\",1474613949),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),target_tag)){\nif(cljs.core.truth_((function (){var or__4131__auto__ = (target_tag == null);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar fexpr__76574 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\"], null), null);\nreturn (fexpr__76574.cljs$core$IFn$_invoke$arity$1 ? fexpr__76574.cljs$core$IFn$_invoke$arity$1(target_tag) : fexpr__76574.call(null,target_tag));\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null));\n} else {\n}\n\nvar vec__76577_79049 = (function (){var G__76581 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nvar fexpr__76580 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast,cljs.core.identity);\nreturn (fexpr__76580.cljs$core$IFn$_invoke$arity$1 ? fexpr__76580.cljs$core$IFn$_invoke$arity$1(G__76581) : fexpr__76580.call(null,G__76581));\n})();\nvar pre_SINGLEQUOTE__79050 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76577_79049,(0),null);\nvar pre_79051 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__76577_79049,(1),null);\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_SINGLEQUOTE__79050);\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_79051));\n} else {\nreturn and__4120__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",(function (){var G__76584 = pre_SINGLEQUOTE__79050;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null),cljs.core.last(pre_SINGLEQUOTE__79050))){\nreturn cljs.core.butlast(G__76584);\n} else {\nreturn G__76584;\n}\n})())),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n} else {\n}\n} else {\n}\n\nif(cljs.analyzer.js_tag_QMARK_(tag)){\nvar pre_79056 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_79056))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre_79056),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n} else {\n}\n\nvar G__76585 = dot_action;\nvar G__76585__$1 = (((G__76585 instanceof cljs.core.Keyword))?G__76585.fqn:null);\nswitch (G__76585__$1) {\ncase \"cljs.analyzer/access\":\nvar children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4131__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn tag;\n}\n})():tag)], null);\n\nbreak;\ncase \"cljs.analyzer/call\":\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (G__76585,G__76585__$1,v,map__76569,map__76569__$1,dot_action,target__$1,method,field__$1,args,enve,targetexpr,form_meta,target_tag,prop,tag){\nreturn (function (p1__76567_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__76567_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__76567_SHARP_));\n});})(G__76585,G__76585__$1,v,map__76569,map__76569__$1,dot_action,target__$1,method,field__$1,args,enve,targetexpr,form_meta,target_tag,prop,tag))\n,args);\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null);\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-call\",\"host-call\",1059629755),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"method\",\"method\",55703592),method,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4131__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n})():tag)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__76585__$1)].join('')));\n\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(function (_,env,p__76590,___$1,___$2){\nvar vec__76591 = p__76590;\nvar seq__76592 = cljs.core.seq(vec__76591);\nvar first__76593 = cljs.core.first(seq__76592);\nvar seq__76592__$1 = cljs.core.next(seq__76592);\nvar ___$3 = first__76593;\nvar first__76593__$1 = cljs.core.first(seq__76592__$1);\nvar seq__76592__$2 = cljs.core.next(seq__76592__$1);\nvar target = first__76593__$1;\nvar vec__76594 = seq__76592__$2;\nvar seq__76595 = cljs.core.seq(vec__76594);\nvar first__76596 = cljs.core.first(seq__76595);\nvar seq__76595__$1 = cljs.core.next(seq__76595);\nvar field = first__76596;\nvar member_PLUS_ = seq__76595__$1;\nvar form = vec__76591;\nvar _STAR_recur_frames_STAR__orig_val__76597 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76598 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76598;\n\ntry{return cljs.analyzer.analyze_dot(env,target,field,member_PLUS_,form);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76597;\n}}));\ncljs.analyzer.get_js_tag = (function cljs$analyzer$get_js_tag(form){\nvar form_meta = cljs.core.meta(form);\nvar temp__5755__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif((temp__5755__auto__ == null)){\nif(new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta) === true){\nreturn new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\n} else {\nreturn null;\n}\n} else {\nvar tag = temp__5755__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.js_star_interp = (function cljs$analyzer$js_star_interp(env,s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nvar inner = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,((2) + idx),end))));\nreturn (new cljs.core.LazySeq(null,((function (end,inner,idx){\nreturn (function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),cljs.core.cons(inner,(function (){var G__76620 = env;\nvar G__76621 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2(G__76620,G__76621) : cljs.analyzer.js_star_interp.call(null,G__76620,G__76621));\n})()));\n});})(end,inner,idx))\n,null,null));\n}\n});\ncljs.analyzer.js_star_seg = (function cljs$analyzer$js_star_seg(s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nreturn (new cljs.core.LazySeq(null,((function (end,idx){\nreturn (function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),(function (){var G__76652 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1(G__76652) : cljs.analyzer.js_star_seg.call(null,G__76652));\n})());\n});})(end,idx))\n,null,null));\n}\n});\ncljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\",new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null),\"null\",new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null),\"null\",new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),\"null\"], null), null);\ncljs.analyzer.numeric_type_QMARK_ = (function cljs$analyzer$numeric_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif((((t instanceof cljs.core.Symbol)) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET,t) == null)))))){\nreturn true;\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn ((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null))));\n} else {\nreturn null;\n}\n}\n\n}\n}\n}\n});\ncljs.analyzer.array_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\",new cljs.core.Symbol(null,\"floats\",\"floats\",513591110,null),\"null\",new cljs.core.Symbol(null,\"longs\",\"longs\",-1017696020,null),\"null\",new cljs.core.Symbol(null,\"objects\",\"objects\",-554722035,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"doubles\",\"doubles\",-1517872169,null),\"null\",new cljs.core.Symbol(null,\"chars\",\"chars\",545901210,null),\"null\",new cljs.core.Symbol(null,\"ints\",\"ints\",-1761239845,null),\"null\",new cljs.core.Symbol(null,\"shorts\",\"shorts\",107738238,null),\"null\",new cljs.core.Symbol(null,\"bytes\",\"bytes\",-1478569089,null),\"null\"], null), null);\ncljs.analyzer.array_type_QMARK_ = (function cljs$analyzer$array_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),t)){\nreturn true;\n} else {\nif(cljs.core.contains_QMARK_(cljs.analyzer.array_types,t)){\nreturn true;\n} else {\nreturn cljs.core.boolean$(((cljs.analyzer.cljs_set_QMARK_(t))?(function (){var or__4131__auto__ = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null));\nif(or__4131__auto____$1){\nreturn or__4131__auto____$1;\n} else {\nreturn cljs.core.some(cljs.analyzer.array_types,t);\n}\n}\n})():null));\n\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_js_star_STAR_ = (function cljs$analyzer$analyze_js_star_STAR_(env,jsform,args,form){\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar argexprs = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (enve){\nreturn (function (p1__76690_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__76690_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__76690_SHARP_));\n});})(enve))\n,args));\nvar form_meta = cljs.core.meta(form);\nvar segs = cljs.analyzer.js_star_seg(jsform);\nvar tag = cljs.analyzer.get_js_tag(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar validate = ((function (enve,argexprs,form_meta,segs,tag,js_op,numeric){\nreturn (function (warning_type,valid_types_QMARK_){\nvar types = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (enve,argexprs,form_meta,segs,tag,js_op,numeric){\nreturn (function (p1__76691_SHARP_){\nreturn cljs.analyzer.infer_tag(env,p1__76691_SHARP_);\n});})(enve,argexprs,form_meta,segs,tag,js_op,numeric))\n,argexprs);\nif(cljs.core.truth_((valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1(types) : valid_types_QMARK_.call(null,types)))){\nreturn null;\n} else {\nreturn cljs.analyzer.warning(warning_type,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"types\",\"types\",590030639),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,types)], null));\n}\n});})(enve,argexprs,form_meta,segs,tag,js_op,numeric))\n;\nvar op_match_QMARK_ = ((function (enve,argexprs,form_meta,segs,tag,js_op,numeric,validate){\nreturn (function (sym){\nreturn cljs.core.symbol_identical_QMARK_(sym,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta));\n});})(enve,argexprs,form_meta,segs,tag,js_op,numeric,validate))\n;\nif(numeric === true){\nvalidate(new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),((function (enve,argexprs,form_meta,segs,tag,js_op,numeric,validate,op_match_QMARK_){\nreturn (function (p1__76692_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,p1__76692_SHARP_);\n});})(enve,argexprs,form_meta,segs,tag,js_op,numeric,validate,op_match_QMARK_))\n);\n} else {\n}\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),new cljs.core.Keyword(null,\"segs\",\"segs\",-1940299576),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)],[argexprs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),numeric,segs,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),env,js_op,form,tag]);\n});\ncljs.analyzer.analyze_js_star = (function cljs$analyzer$analyze_js_star(env,jsform,args,form){\nvar _STAR_recur_frames_STAR__orig_val__76710 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76711 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76711;\n\ntry{return cljs.analyzer.analyze_js_star_STAR_(env,jsform,args,form);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76710;\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),(function (op,env,p__76715,_,___$1){\nvar vec__76717 = p__76715;\nvar seq__76718 = cljs.core.seq(vec__76717);\nvar first__76719 = cljs.core.first(seq__76718);\nvar seq__76718__$1 = cljs.core.next(seq__76718);\nvar ___$2 = first__76719;\nvar first__76719__$1 = cljs.core.first(seq__76718__$1);\nvar seq__76718__$2 = cljs.core.next(seq__76718__$1);\nvar jsform = first__76719__$1;\nvar args = seq__76718__$2;\nvar form = vec__76717;\nif(typeof jsform === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid js* form\");\n}\n\nif((!((args == null)))){\nreturn cljs.analyzer.analyze_js_star(env,jsform,args,form);\n} else {\nvar code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.analyzer.js_star_interp(env,jsform));\nvar tag = cljs.analyzer.get_js_tag(form);\nvar form_meta = cljs.core.meta(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js\",\"js\",1768080579),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),numeric], null);\n}\n}));\ncljs.analyzer.unsorted_map_QMARK_ = (function cljs$analyzer$unsorted_map_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && ((!(cljs.core.sorted_QMARK_(x)))));\n});\n/**\n * Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n *   warnings that will have been caught by a first compiler pass.\n */\ncljs.analyzer.analyzed = (function cljs$analyzer$analyzed(x){\nif(cljs.analyzer.unsorted_map_QMARK_(x)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n} else {\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n\n}\n});\n/**\n * Returns boolean if the form has already been marked as analyzed.\n */\ncljs.analyzer.analyzed_QMARK_ = (function cljs$analyzer$analyzed_QMARK_(x){\nreturn cljs.core.boolean$(((cljs.analyzer.unsorted_map_QMARK_(x))?new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(x):new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x))\n));\n});\ncljs.analyzer.all_values_QMARK_ = (function cljs$analyzer$all_values_QMARK_(exprs){\nreturn cljs.core.every_QMARK_((function (p1__76731_SHARP_){\nreturn (((p1__76731_SHARP_ == null)) || ((p1__76731_SHARP_ instanceof cljs.core.Symbol)) || (typeof p1__76731_SHARP_ === 'string') || (typeof p1__76731_SHARP_ === 'number') || (p1__76731_SHARP_ === true) || (p1__76731_SHARP_ === false));\n}),exprs);\n});\ncljs.analyzer.valid_arity_QMARK_ = (function cljs$analyzer$valid_arity_QMARK_(argc,method_params){\nreturn cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([argc]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,method_params)));\n});\ncljs.analyzer.parse_invoke_STAR_ = (function cljs$analyzer$parse_invoke_STAR_(env,p__76740){\nvar vec__76742 = p__76740;\nvar seq__76743 = cljs.core.seq(vec__76742);\nvar first__76744 = cljs.core.first(seq__76743);\nvar seq__76743__$1 = cljs.core.next(seq__76743);\nvar f = first__76744;\nvar args = seq__76743__$1;\nvar form = vec__76742;\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar fexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,f) : cljs.analyzer.analyze.call(null,enve,f));\nvar argc = cljs.core.count(args);\nvar fn_var_QMARK_ = new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar cur_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar HO_invoke_QMARK_ = ((cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_)) && (cljs.core.not(fn_var_QMARK_)) && ((!(cljs.analyzer.js_tag_QMARK_(f)))) && ((!(kw_QMARK_))) && ((!(cljs.analyzer.analyzed_QMARK_(f)))));\nvar bind_f_expr_QMARK_ = ((HO_invoke_QMARK_) && ((!((f instanceof cljs.core.Symbol)))));\nvar bind_args_QMARK_ = ((HO_invoke_QMARK_) && ((!(cljs.analyzer.all_values_QMARK_(args)))));\nif(fn_var_QMARK_){\nvar map__76748_79097 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr);\nvar map__76748_79098__$1 = (((((!((map__76748_79097 == null))))?(((((map__76748_79097.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76748_79097.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76748_79097):map__76748_79097);\nvar variadic_79099 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76748_79098__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity_79100 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76748_79098__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params_79101 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76748_79098__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar name_79102 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76748_79098__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar ns_79103 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76748_79098__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar macro_79104 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76748_79098__$1,new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404));\nif(((cljs.core.not((function (){var and__4120__auto__ = (function (){var G__76758 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cur_ns);\nvar G__76759 = \"$macros\";\nreturn goog.string.endsWith(G__76758,G__76759);\n})();\nif(cljs.core.truth_(and__4120__auto__)){\nreturn ((cljs.core.symbol_identical_QMARK_(cur_ns,ns_79103)) && (macro_79104 === true));\n} else {\nreturn and__4120__auto__;\n}\n})())) && ((!(cljs.analyzer.valid_arity_QMARK_(argc,method_params_79101)))) && ((((!(variadic_79099))) || (((variadic_79099) && ((argc < max_fixed_arity_79100)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_79102,new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n} else {\n}\n\nif(((kw_QMARK_) && ((!(((((1) === argc)) || (((2) === argc)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.first(form),new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n\nvar deprecated_QMARK__79116 = new cljs.core.Keyword(null,\"deprecated\",\"deprecated\",1498275348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar no_warn_QMARK__79117 = new cljs.core.Keyword(null,\"deprecation-nowarn\",\"deprecation-nowarn\",-1762828044).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nif(((cljs.core.boolean$(deprecated_QMARK__79116)) && ((!(cljs.core.boolean$(no_warn_QMARK__79117)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif(((bind_args_QMARK_) || (bind_f_expr_QMARK_))){\nvar arg_syms = ((bind_args_QMARK_)?cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)):null);\nvar f_sym = ((bind_f_expr_QMARK_)?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"fexpr__\"):null);\nvar bindings = (function (){var G__76762 = cljs.core.PersistentVector.EMPTY;\nvar G__76762__$1 = ((bind_args_QMARK_)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__76762,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms,args)):G__76762);\nif(bind_f_expr_QMARK_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__76762__$1,f_sym,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.analyzed(f)], 0));\n} else {\nreturn G__76762__$1;\n}\n})();\nvar G__76763 = env;\nvar G__76764 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(bindings)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.analyzer.analyzed(((bind_f_expr_QMARK_)?f_sym:f)),null,(1),null)),((bind_args_QMARK_)?arg_syms:args)))),null,(1),null))], 0))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__76763,G__76764) : cljs.analyzer.analyze.call(null,G__76763,G__76764));\n} else {\nvar ana_expr = ((function (enve,fexpr,argc,fn_var_QMARK_,kw_QMARK_,cur_ns,HO_invoke_QMARK_,bind_f_expr_QMARK_,bind_args_QMARK_,vec__76742,seq__76743,first__76744,seq__76743__$1,f,args,form){\nreturn (function (p1__76739_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__76739_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__76739_SHARP_));\n});})(enve,fexpr,argc,fn_var_QMARK_,kw_QMARK_,cur_ns,HO_invoke_QMARK_,bind_f_expr_QMARK_,bind_args_QMARK_,vec__76742,seq__76743,first__76744,seq__76743__$1,f,args,form))\n;\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(ana_expr,args);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),fexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null)], null);\n}\n});\ncljs.analyzer.parse_invoke = (function cljs$analyzer$parse_invoke(env,form){\nvar _STAR_recur_frames_STAR__orig_val__76766 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76768 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76768;\n\ntry{return cljs.analyzer.parse_invoke_STAR_(env,form);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76766;\n}});\ncljs.analyzer.desugar_dotted_expr = (function cljs$analyzer$desugar_dotted_expr(p__76769){\nvar map__76770 = p__76769;\nvar map__76770__$1 = (((((!((map__76770 == null))))?(((((map__76770.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76770.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76770):map__76770);\nvar expr = map__76770__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76770__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__76772 = op;\nvar G__76772__$1 = (((G__76772 instanceof cljs.core.Keyword))?G__76772.fqn:null);\nswitch (G__76772__$1) {\ncase \"var\":\ncase \"local\":\nif(cljs.analyzer.dotted_symbol_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr))))){\nvar s = cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr));\nvar idx = s.lastIndexOf(\".\");\nvar _ = null;\nvar prefix = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx)),cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr)));\nvar field = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1))));\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),(new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(new cljs.core.List(null,prefix,(new cljs.core.List(null,field,null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var G__76781 = cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(expr,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),prefix,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),prefix], 0)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)], null),prefix),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nreturn (cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1(G__76781) : cljs.analyzer.desugar_dotted_expr.call(null,G__76781));\n})(),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null)], null);\n} else {\nreturn expr;\n}\n\nbreak;\ndefault:\nreturn expr;\n\n}\n});\n/**\n * Finds the var associated with sym\n */\ncljs.analyzer.analyze_symbol = (function cljs$analyzer$analyze_symbol(env,sym){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nvar G__76816 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__76816) : cljs.analyzer.analyze_wrap_meta.call(null,G__76816));\n} else {\nvar map__76818 = cljs.core.meta(sym);\nvar map__76818__$1 = (((((!((map__76818 == null))))?(((((map__76818.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__76818.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__76818):map__76818);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76818__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__76818__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar env__$1 = (((!((line == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line):env);\nvar env__$2 = (((!((column == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column):env__$1);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$2,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym], null);\nvar lcls = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env__$2);\nvar temp__5755__auto__ = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls,sym));\nif((temp__5755__auto__ == null)){\nvar sym_meta = cljs.core.meta(sym);\nvar sym_ns = cljs.core.namespace(sym);\nvar cur_ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$2)));\nvar sym__$1 = (cljs.core.truth_((function (){var and__4120__auto__ = sym_ns;\nif(cljs.core.truth_(and__4120__auto__)){\nvar and__4120__auto____$1 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,\"cljs.core\");\nif(and__4120__auto____$1){\nvar and__4120__auto____$2 = goog.string.endsWith(cur_ns,\"$macros\");\nif(cljs.core.truth_(and__4120__auto____$2)){\nreturn ((cljs.core.not(goog.string.endsWith(sym_ns,\"$macros\"))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cur_ns,(0),(cljs.core.count(cur_ns) - (7))))));\n} else {\nreturn and__4120__auto____$2;\n}\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([sym_ns,\"$macros\"].join(''),cljs.core.name(sym)):sym);\nvar info = (((!(cljs.core.contains_QMARK_(sym_meta,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162)))))?cljs.analyzer.resolve_existing_var(env__$2,sym__$1):cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1));\n\nreturn cljs.analyzer.desugar_dotted_expr((((!(new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377).cljs$core$IFn$_invoke$arity$1(env__$2) === true)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info),cljs.core.select_keys(info,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null)),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar const_expr = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})()], 0)):(function (){var info__$1 = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info__$1], 0)),cljs.core.select_keys(info__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0));\n})()));\n} else {\nvar lb = temp__5755__auto__;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),lb], 0)),((cljs.core.map_QMARK_(lb))?cljs.core.select_keys(lb,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)):null)], 0));\n}\n}\n});\ncljs.analyzer.excluded_QMARK_ = (function cljs$analyzer$excluded_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))));\n});\ncljs.analyzer.used_QMARK_ = (function cljs$analyzer$used_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))));\n});\ncljs.analyzer.get_expander_ns = (function cljs$analyzer$get_expander_ns(env,nstr){\nvar res = (function (){var or__4131__auto__ = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\n}\n})();\nvar nstr__$1 = (((!((res == null))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(res):nstr);\nif((\"clojure.core\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM);\n} else {\nif((\"clojure.repl\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(new cljs.core.Symbol(null,\"cljs.repl\",\"cljs.repl\",1767065658,null));\n} else {\nif(cljs.core.truth_(goog.string.contains(nstr__$1,\".\"))){\nreturn cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1));\n} else {\nvar G__76848 = env;\nvar G__76848__$1 = (((G__76848 == null))?null:new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(G__76848));\nvar G__76848__$2 = (((G__76848__$1 == null))?null:new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(G__76848__$1));\nvar G__76848__$3 = (((G__76848__$2 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__76848__$2,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1)));\nif((G__76848__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.find_macros_ns(G__76848__$3);\n}\n\n}\n}\n}\n});\ncljs.analyzer.get_expander_STAR_ = (function cljs$analyzer$get_expander_STAR_(sym,env){\nif((((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym) == null)))) || (((cljs.analyzer.excluded_QMARK_(env,sym)) && ((!(cljs.analyzer.used_QMARK_(env,sym)))))))){\nreturn null;\n} else {\nvar nstr = cljs.core.namespace(sym);\nif((!((nstr == null)))){\nvar ns = cljs.analyzer.get_expander_ns(env,nstr);\nif((!((ns == null)))){\nreturn ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\n} else {\nreturn null;\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym);\nvar nsym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym__$1);\n} else {\nvar nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym);\nif((((!((nsym == null)))) && ((nsym instanceof cljs.core.Symbol)))){\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym);\n} else {\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM).findInternedVar(sym);\n}\n\n}\n}\n}\n});\n/**\n * Given a sym, a symbol identifying a macro, and env, an analysis environment\n * return the corresponding Clojure macroexpander.\n */\ncljs.analyzer.get_expander = (function cljs$analyzer$get_expander(sym,env){\nvar mvar = cljs.analyzer.get_expander_STAR_(sym,env);\nif((((!((mvar == null)))) && (mvar.isMacro()))){\nreturn mvar;\n} else {\nreturn null;\n}\n});\nvar cached_var_79169 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)),new cljs.core.Symbol(null,\"macroexpand-check\",\"macroexpand-check\",699092091,null));\n}),null));\ncljs.analyzer.get_macroexpand_check_var = ((function (cached_var_79169){\nreturn (function cljs$analyzer$get_macroexpand_check_var(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)) == null)))){\nreturn cljs.core.deref(cached_var_79169);\n} else {\nreturn null;\n}\n});})(cached_var_79169))\n;\ncljs.analyzer.var__GT_sym = (function cljs$analyzer$var__GT_sym(var$){\nreturn var$.sym;\n});\ncljs.analyzer.do_macroexpand_check = (function cljs$analyzer$do_macroexpand_check(env,form,mac_var){\nif(cljs.core.not(new cljs.core.Keyword(null,\"spec-skip-macros\",\"spec-skip-macros\",-645015958).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))){\nvar mchk = cljs.analyzer.get_macroexpand_check_var();\nif((!((mchk == null)))){\ntry{var G__76899 = mac_var;\nvar G__76900 = cljs.core.next(form);\nreturn (mchk.cljs$core$IFn$_invoke$arity$2 ? mchk.cljs$core$IFn$_invoke$arity$2(G__76899,G__76900) : mchk.call(null,G__76899,G__76900));\n}catch (e76898){var e = e76898;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macro-syntax-check\",\"macro-syntax-check\",2072602373),cljs.analyzer.var__GT_sym(mac_var)),e);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.macroexpand_1_STAR_ = (function cljs$analyzer$macroexpand_1_STAR_(env,form){\nvar op = cljs.core.first(form);\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),op)){\ncljs.analyzer.do_macroexpand_check(env,form,cljs.analyzer.get_expander(new cljs.core.Symbol(\"cljs.core\",\"ns-special-form\",\"cljs.core/ns-special-form\",1585185745,null),env));\n} else {\n}\n\nreturn form;\n} else {\nvar temp__5755__auto__ = (((op instanceof cljs.core.Symbol))?cljs.analyzer.get_expander(op,env):null);\nif((temp__5755__auto__ == null)){\nif((op instanceof cljs.core.Symbol)){\nvar opname = cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);\nif((\".\" === opname.charAt((0)))){\nvar vec__76907 = cljs.core.next(form);\nvar seq__76908 = cljs.core.seq(vec__76907);\nvar first__76909 = cljs.core.first(seq__76908);\nvar seq__76908__$1 = cljs.core.next(seq__76908);\nvar target = first__76909;\nvar args = seq__76908__$1;\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.DOT_SYM,target,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname,(1))),args),cljs.core.meta(form));\n} else {\nif((\".\" === opname.charAt((opname.length - (1))))){\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.NEW_SYM,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname,(0),(cljs.core.count(opname) - (1)))),cljs.core.next(form)),cljs.core.meta(form));\n} else {\nreturn form;\n\n}\n}\n} else {\nreturn form;\n}\n} else {\nvar mac_var = temp__5755__auto__;\ncljs.analyzer.do_macroexpand_check(env,form,mac_var);\n\nvar form_SINGLEQUOTE_ = (function (){try{return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(mac_var),form,env,cljs.core.rest(form));\n}catch (e76910){var e = e76910;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macroexpansion\",\"macroexpansion\",706274075),cljs.analyzer.var__GT_sym(mac_var)),e);\n}})();\nif(cljs.analyzer.cljs_seq_QMARK_(form_SINGLEQUOTE_)){\nvar sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);\nvar sym = cljs.core.first(form);\nif(cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_,cljs.analyzer.JS_STAR_SYM)){\nvar sym__$1 = (((!((cljs.core.namespace(sym) == null))))?sym:cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)));\nvar js_op = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),sym__$1], null);\nvar numeric = (function (){var mac_var_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_var.sym));\nvar mac_var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_var.sym));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),mac_var_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),mac_var_name,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(\"cljs.analyzer\",\"numeric\",\"cljs.analyzer/numeric\",1415704188)], null));\n})();\nvar js_op__$1 = ((numeric === true)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),true):js_op);\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_,cljs.core.merge,js_op__$1);\n} else {\nreturn form_SINGLEQUOTE_;\n}\n} else {\nreturn form_SINGLEQUOTE_;\n}\n}\n}\n});\n/**\n * Given a env, an analysis environment, and form, a ClojureScript form,\n * macroexpand the form once.\n */\ncljs.analyzer.macroexpand_1 = (function cljs$analyzer$macroexpand_1(env,form){\ntry{return cljs.analyzer.macroexpand_1_STAR_(env,form);\n}catch (e76920){var err__55773__auto__ = e76920;\nif(cljs.analyzer.has_error_data_QMARK_(err__55773__auto__)){\nthrow err__55773__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__55773__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__55773__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__55773__auto__.message,err__55773__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq_STAR_ = (function cljs$analyzer$analyze_seq_STAR_(op,env,form,name,opts){\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nreturn (cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5 ? cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op,env,form,name,opts) : cljs.analyzer.parse.call(null,op,env,form,name,opts));\n} else {\nreturn cljs.analyzer.parse_invoke(env,form);\n}\n});\ncljs.analyzer.analyze_seq_STAR__wrap = (function cljs$analyzer$analyze_seq_STAR__wrap(op,env,form,name,opts){\ntry{return cljs.analyzer.analyze_seq_STAR_(op,env,form,name,opts);\n}catch (e76944){var err__55773__auto__ = e76944;\nif(cljs.analyzer.has_error_data_QMARK_(err__55773__auto__)){\nthrow err__55773__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__55773__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__55773__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__55773__auto__.message,err__55773__auto__));\n\n}\n}\n}});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.analyze_seq = (function cljs$analyzer$analyze_seq(var_args){\nvar G__76949 = arguments.length;\nswitch (G__76949) {\ncase 3:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n});\n\ncljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\nreturn (cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze_list.call(null,env,form));\n} else {\nvar line = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar line__$1 = (((line == null))?new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env):line);\nvar col = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar col__$1 = (((col == null))?new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env):col);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col__$1], 0));\nvar op = cljs.core.first(form);\nif((op == null)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,\"Can't call nil\");\n} else {\n}\n\nvar mform = cljs.analyzer.macroexpand_1(env__$1,form);\nif((form === mform)){\nreturn cljs.analyzer.analyze_seq_STAR__wrap(op,env__$1,form,name,opts);\n} else {\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,mform,name,opts) : cljs.analyzer.analyze.call(null,env__$1,mform,name,opts));\n}\n}\n});\n\ncljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4;\n\ncljs.analyzer.analyze_map = (function cljs$analyzer$analyze_map(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ks = (function (){var _STAR_recur_frames_STAR__orig_val__76962 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76963 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76963;\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__76962,_STAR_recur_frames_STAR__temp_val__76963,expr_env){\nreturn (function (p1__76959_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__76959_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__76959_SHARP_));\n});})(_STAR_recur_frames_STAR__orig_val__76962,_STAR_recur_frames_STAR__temp_val__76963,expr_env))\n,cljs.core.keys(form));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76962;\n}})();\nvar vs = (function (){var _STAR_recur_frames_STAR__orig_val__76968 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76969 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76969;\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__76968,_STAR_recur_frames_STAR__temp_val__76969,expr_env,ks){\nreturn (function (p1__76960_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__76960_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__76960_SHARP_));\n});})(_STAR_recur_frames_STAR__orig_val__76968,_STAR_recur_frames_STAR__temp_val__76969,expr_env,ks))\n,cljs.core.vals(form));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76968;\n}})();\nvar G__76970 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),ks,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IMap\",\"cljs.core/IMap\",1407777598,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__76970) : cljs.analyzer.analyze_wrap_meta.call(null,G__76970));\n});\ncljs.analyzer.analyze_list = (function cljs$analyzer$analyze_list(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__76973 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76974 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76974;\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__76973,_STAR_recur_frames_STAR__temp_val__76974,expr_env){\nreturn (function (p1__76972_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__76972_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__76972_SHARP_));\n});})(_STAR_recur_frames_STAR__orig_val__76973,_STAR_recur_frames_STAR__temp_val__76974,expr_env))\n,form);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76973;\n}})();\nvar G__76975 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__76975) : cljs.analyzer.analyze_wrap_meta.call(null,G__76975));\n});\ncljs.analyzer.analyze_vector = (function cljs$analyzer$analyze_vector(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__76980 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76981 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76981;\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__76980,_STAR_recur_frames_STAR__temp_val__76981,expr_env){\nreturn (function (p1__76976_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__76976_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__76976_SHARP_));\n});})(_STAR_recur_frames_STAR__orig_val__76980,_STAR_recur_frames_STAR__temp_val__76981,expr_env))\n,form);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76980;\n}})();\nvar G__76982 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IVector\",\"cljs.core/IVector\",1711112835,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__76982) : cljs.analyzer.analyze_wrap_meta.call(null,G__76982));\n});\ncljs.analyzer.analyze_set = (function cljs$analyzer$analyze_set(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__76984 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76985 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76985;\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__76984,_STAR_recur_frames_STAR__temp_val__76985,expr_env){\nreturn (function (p1__76983_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__76983_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__76983_SHARP_));\n});})(_STAR_recur_frames_STAR__orig_val__76984,_STAR_recur_frames_STAR__temp_val__76985,expr_env))\n,form);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76984;\n}})();\nvar G__76987 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"ISet\",\"cljs.core/ISet\",2003412810,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__76987) : cljs.analyzer.analyze_wrap_meta.call(null,G__76987));\n});\ncljs.analyzer.analyze_js_value = (function cljs$analyzer$analyze_js_value(env,form){\nvar val = form.val;\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nif(cljs.core.map_QMARK_(val)){\nvar keys = cljs.core.vec(cljs.core.keys(val));\nvar vals = (function (){var _STAR_recur_frames_STAR__orig_val__76991 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76992 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76992;\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__76991,_STAR_recur_frames_STAR__temp_val__76992,keys,val,expr_env){\nreturn (function (p1__76989_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__76989_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__76989_SHARP_));\n});})(_STAR_recur_frames_STAR__orig_val__76991,_STAR_recur_frames_STAR__temp_val__76992,keys,val,expr_env))\n,cljs.core.vals(val));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76991;\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-object\",\"js-object\",1830199158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),keys,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vals,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null)], null);\n} else {\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__76994 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__76995 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__76995;\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (_STAR_recur_frames_STAR__orig_val__76994,_STAR_recur_frames_STAR__temp_val__76995,val,expr_env){\nreturn (function (p1__76990_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__76990_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__76990_SHARP_));\n});})(_STAR_recur_frames_STAR__orig_val__76994,_STAR_recur_frames_STAR__temp_val__76995,val,expr_env))\n,val);\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__76994;\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-array\",\"js-array\",-1210185421),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null)], null);\n}\n});\ncljs.analyzer.record_ns_PLUS_name = (function cljs$analyzer$record_ns_PLUS_name(x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)),/\\//));\n});\ncljs.analyzer.analyze_record = (function cljs$analyzer$analyze_record(env,x){\nvar _items_ = (function (){var _STAR_recur_frames_STAR__orig_val__77005 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__77006 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\ncljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__77006;\n\ntry{var G__77008 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__77009 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,x);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__77008,G__77009) : cljs.analyzer.analyze.call(null,G__77008,G__77009));\n}finally {cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__77005;\n}})();\nvar vec__77002 = cljs.analyzer.record_ns_PLUS_name(x);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77002,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77002,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),x,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),x,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null);\n});\ncljs.analyzer.elide_reader_meta = (function cljs$analyzer$elide_reader_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)], 0));\n});\ncljs.analyzer.elide_analyzer_meta = (function cljs$analyzer$elide_analyzer_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162));\n});\ncljs.analyzer.elide_irrelevant_meta = (function cljs$analyzer$elide_irrelevant_meta(m){\nreturn cljs.analyzer.elide_analyzer_meta(cljs.analyzer.elide_reader_meta(m));\n});\ncljs.analyzer.analyze_wrap_meta = (function cljs$analyzer$analyze_wrap_meta(expr){\nvar form = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr);\nvar m = cljs.analyzer.elide_irrelevant_meta(cljs.core.meta(form));\nif((!((cljs.core.seq(m) == null)))){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr);\nvar expr__$1 = cljs.core.assoc_in(expr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar meta_expr = cljs.analyzer.analyze_map(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr__$1),m);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"with-meta\",\"with-meta\",-1566856820),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),meta_expr,new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_type = (function cljs$analyzer$infer_type(env,p__77021,_){\nvar map__77022 = p__77021;\nvar map__77022__$1 = (((((!((map__77022 == null))))?(((((map__77022.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__77022.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__77022):map__77022);\nvar ast = map__77022__$1;\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77022__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif((((tag == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),tag)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),((function (map__77022,map__77022__$1,ast,tag){\nreturn (function (ms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (map__77022,map__77022__$1,ast,tag){\nreturn (function (p1__77015_SHARP_){\nreturn (cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3(env,p1__77015_SHARP_,_) : cljs.analyzer.infer_type.call(null,env,p1__77015_SHARP_,_));\n});})(map__77022,map__77022__$1,ast,tag))\n),ms);\n});})(map__77022,map__77022__$1,ast,tag))\n);\n} else {\nvar temp__5755__auto__ = cljs.analyzer.infer_tag(env,ast);\nif((temp__5755__auto__ == null)){\nreturn ast;\n} else {\nvar tag__$1 = temp__5755__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1);\n}\n}\n} else {\nreturn ast;\n}\n});\ncljs.analyzer.repl_self_require_QMARK_ = (function cljs$analyzer$repl_self_require_QMARK_(env,deps){\nvar and__4120__auto__ = new cljs.core.Keyword(null,\"repl-env\",\"repl-env\",-1976503928).cljs$core$IFn$_invoke$arity$1(env);\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.analyzer._STAR_cljs_ns_STAR_]),deps);\n} else {\nreturn and__4120__auto__;\n}\n});\ncljs.analyzer.invoke_arg_type_validators = (function (){var aget_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__77050_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__77050_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.rest(p1__77050_SHARP_))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nvar aset_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),((function (aget_validator){\nreturn (function (p1__77051_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__77051_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.butlast(cljs.core.rest(p1__77051_SHARP_)))));\n});})(aget_validator))\n,new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),aset_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),aset_validator], null);\n})();\ncljs.analyzer.check_invoke_arg_types = (function cljs$analyzer$check_invoke_arg_types(env,p__77052,opts){\nvar map__77053 = p__77052;\nvar map__77053__$1 = (((((!((map__77053 == null))))?(((((map__77053.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__77053.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__77053):map__77053);\nvar ast = map__77053__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77053__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif((((!(cljs.analyzer.analyzed_QMARK_(ast)))) && (cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),op)))){\nvar temp__5757__auto___79241 = cljs.core.find(cljs.analyzer.invoke_arg_type_validators,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(ast))));\nif((temp__5757__auto___79241 == null)){\n} else {\nvar vec__77058_79244 = temp__5757__auto___79241;\nvar name_79245 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77058_79244,(0),null);\nvar map__77061_79246 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77058_79244,(1),null);\nvar map__77061_79247__$1 = (((((!((map__77061_79246 == null))))?(((((map__77061_79246.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__77061_79246.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__77061_79246):map__77061_79246);\nvar valid_QMARK__79248 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77061_79247__$1,new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379));\nvar warning_type_79249 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77061_79247__$1,new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595));\nvar types_79251 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(ast));\nif(cljs.core.truth_((valid_QMARK__79248.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK__79248.cljs$core$IFn$_invoke$arity$1(types_79251) : valid_QMARK__79248.call(null,types_79251)))){\n} else {\ncljs.analyzer.warning(warning_type_79249,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_79245,new cljs.core.Keyword(null,\"types\",\"types\",590030639),types_79251], null));\n}\n}\n} else {\n}\n\nreturn cljs.analyzer.analyzed(ast);\n});\ncljs.analyzer.analyze_form = (function cljs$analyzer$analyze_form(env,form,name,opts){\nif((form instanceof cljs.core.Symbol)){\nreturn cljs.analyzer.analyze_symbol(env,form);\n} else {\nif(((cljs.analyzer.cljs_seq_QMARK_(form)) && ((!((cljs.core.seq(form) == null)))))){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,opts);\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.analyzer.analyze_record(env,form);\n} else {\nif(cljs.analyzer.cljs_map_QMARK_(form)){\nreturn cljs.analyzer.analyze_map(env,form);\n} else {\nif(cljs.analyzer.cljs_vector_QMARK_(form)){\nreturn cljs.analyzer.analyze_vector(env,form);\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(form)){\nreturn cljs.analyzer.analyze_set(env,form);\n} else {\nif((form instanceof cljs.core.Keyword)){\nreturn cljs.analyzer.analyze_keyword(env,form);\n} else {\nif((form instanceof cljs.tagged_literals.JSValue)){\nreturn cljs.analyzer.analyze_js_value(env,form);\n} else {\nvar tag = (((form == null))?cljs.analyzer.CLJ_NIL_SYM:((typeof form === 'number')?cljs.analyzer.NUMBER_SYM:((typeof form === 'string')?cljs.analyzer.STRING_SYM:((form === true)?cljs.analyzer.BOOLEAN_SYM:((form === false)?cljs.analyzer.BOOLEAN_SYM:((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY,form))?new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null):null))))));\nvar G__77089 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\nif(cljs.core.truth_(tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__77089,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag);\n} else {\nreturn G__77089;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_STAR_ = (function cljs$analyzer$analyze_STAR_(env,form,name,opts){\nvar passes = cljs.analyzer._STAR_passes_STAR_;\nvar passes__$1 = (((passes == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type,cljs.analyzer.check_invoke_arg_types], null):passes);\nvar form__$1 = (((form instanceof cljs.core.LazySeq))?((cljs.core.seq(form))?form:cljs.core.List.EMPTY):form);\nvar ast = cljs.analyzer.analyze_form(env,form__$1,name,opts);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (passes,passes__$1,form__$1,ast){\nreturn (function (ast__$1,pass){\nreturn (pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env,ast__$1,opts) : pass.call(null,env,ast__$1,opts));\n});})(passes,passes__$1,form__$1,ast))\n,ast,passes__$1);\n});\n/**\n * Given an environment, a map containing {:locals (mapping of names to bindings), :context\n *   (one of :statement, :expr, :return), :ns (a symbol naming the\n *   compilation ns)}, and form, returns an expression object (a map\n *   containing at least :form, :op and :env keys). If expr has any (immediately)\n *   nested exprs, must have a :children entry. This must be a vector of keywords naming\n *   the immediately nested fields mapped to an expr or vector of exprs. This will\n *   facilitate code walking without knowing the details of the op set.\n * @param {...*} var_args\n */\ncljs.analyzer.analyze = (function cljs$analyzer$analyze(var_args){\nvar G__77101 = arguments.length;\nswitch (G__77101) {\ncase 2:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = (function (env,form){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env,form,null);\n});\n\ncljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n});\n\ncljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\ntry{if(cljs.analyzer.analyzed_QMARK_(form)){\nvar _STAR_cljs_warnings_STAR__orig_val__77109 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__77110 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\ncljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__77110;\n\ntry{return cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}finally {cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__77109;\n}} else {\nreturn cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}\n}catch (e77107){var err__55773__auto__ = e77107;\nif(cljs.analyzer.has_error_data_QMARK_(err__55773__auto__)){\nthrow err__55773__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__55773__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__55773__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__55773__auto__.message,err__55773__auto__));\n\n}\n}\n}});\n\ncljs.analyzer.analyze.cljs$lang$maxFixedArity = 4;\n\n/**\n * Given a compiler state and a map from fully qualified symbols to constant\n *   EDN values, update the compiler state marking these vars as const to support\n *   direct substitution of these vars in source.\n */\ncljs.analyzer.add_consts = (function cljs$analyzer$add_consts(compiler_state,constants_map){\nreturn cljs.core.reduce_kv((function (compiler_state__$1,sym,value){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(compiler_state__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null),cljs.core.merge,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),(function (){var _STAR_passes_STAR__orig_val__77112 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__77113 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\ncljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__77113;\n\ntry{return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.empty_env(),value);\n}finally {cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__77112;\n}})()], null));\n}),compiler_state,constants_map);\n});\ncljs.analyzer.resolve_symbol = (function cljs$analyzer$resolve_symbol(sym){\nif(((cljs.core.not(cljs.core.namespace(sym))) && (cljs.analyzer.dotted_symbol_QMARK_(sym)))){\nreturn sym;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1((function (){var _STAR_private_var_access_nowarn_STAR__orig_val__77114 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__77115 = true;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__77115;\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_)),sym);\n}finally {cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__77114;\n}})());\n}\n});\nvar registry_ref_79266 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"registry-ref\",\"registry-ref\",1975823941,null));\n}),null));\nvar speced_vars_79267 = (new cljs.core.Delay(((function (registry_ref_79266){\nreturn (function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"-speced-vars\",\"-speced-vars\",1758723085,null));\n});})(registry_ref_79266))\n,null));\ncljs.analyzer.get_spec_vars = ((function (registry_ref_79266,speced_vars_79267){\nreturn (function cljs$analyzer$get_spec_vars(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)) == null)))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414),cljs.core.deref(registry_ref_79266),new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988),cljs.core.deref(speced_vars_79267)], null);\n} else {\nreturn null;\n}\n});})(registry_ref_79266,speced_vars_79267))\n;\n/**\n * Dumps registered speced vars for a given namespace into the compiler\n *   environment.\n */\ncljs.analyzer.dump_specs = (function cljs$analyzer$dump_specs(ns){\nvar spec_vars = cljs.analyzer.get_spec_vars();\nvar ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar registry_ref = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1(((function (registry_ref,temp__5753__auto__,spec_vars,ns_str){\nreturn (function (p__77191){\nvar vec__77192 = p__77191;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77192,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77192,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(k));\n});})(registry_ref,temp__5753__auto__,spec_vars,ns_str))\n),cljs.core.deref(cljs.core.deref(registry_ref)))], null);\n} else {\nreturn null;\n}\n})(),(function (){var temp__5753__auto__ = new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar speced_vars = temp__5753__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1(((function (speced_vars,temp__5753__auto__,spec_vars,ns_str){\nreturn (function (v){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(v))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"fdef-ns\",\"fdef-ns\",-1602124254).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)))));\n});})(speced_vars,temp__5753__auto__,spec_vars,ns_str))\n),cljs.core.deref(cljs.core.deref(speced_vars)))], null);\n} else {\nreturn null;\n}\n})()], 0));\n});\n/**\n * Registers speced vars found in a namespace analysis cache.\n */\ncljs.analyzer.register_specs = (function cljs$analyzer$register_specs(cached_ns){\nvar map__77201 = cljs.analyzer.get_spec_vars();\nvar map__77201__$1 = (((((!((map__77201 == null))))?(((((map__77201.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__77201.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__77201):map__77201);\nvar registry_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77201__$1,new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414));\nvar speced_vars = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77201__$1,new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988));\nvar temp__5753__auto___79276 = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5753__auto___79276){\nvar registry_79278 = temp__5753__auto___79276;\nif(cljs.core.truth_(registry_ref)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(registry_ref),cljs.core.into,registry_79278);\n} else {\n}\n} else {\n}\n\nvar temp__5753__auto__ = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5753__auto__){\nvar vars = temp__5753__auto__;\nif(cljs.core.truth_(speced_vars)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(speced_vars),cljs.core.into,vars);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * @param {...*} var_args\n */\ncljs.analyzer.analyze_form_seq = (function cljs$analyzer$analyze_form_seq(var_args){\nvar G__77217 = arguments.length;\nswitch (G__77217) {\ncase 1:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1 = (function (forms){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2(forms,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n});\n\ncljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2 = (function (forms,opts){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3(forms,opts,false);\n});\n\ncljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3 = (function (forms,opts,return_last_QMARK_){\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.empty_env(),new cljs.core.Keyword(null,\"build-options\",\"build-options\",1183685779),opts);\nvar _STAR_file_defs_STAR__orig_val__77221 = cljs.analyzer._STAR_file_defs_STAR_;\nvar _STAR_cljs_ns_STAR__orig_val__77222 = cljs.analyzer._STAR_cljs_ns_STAR_;\nvar _STAR_cljs_file_STAR__orig_val__77223 = cljs.analyzer._STAR_cljs_file_STAR_;\nvar _STAR_alias_map_STAR__orig_val__77224 = cljs.tools.reader._STAR_alias_map_STAR_;\nvar _STAR_file_defs_STAR__temp_val__77225 = null;\nvar _STAR_cljs_ns_STAR__temp_val__77226 = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\nvar _STAR_cljs_file_STAR__temp_val__77227 = null;\nvar _STAR_alias_map_STAR__temp_val__77228 = (function (){var or__4131__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\ncljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__temp_val__77225;\n\ncljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__temp_val__77226;\n\ncljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__temp_val__77227;\n\ncljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__temp_val__77228;\n\ntry{var ns = null;\nvar forms__$1 = forms;\nvar last_ast = null;\nwhile(true){\nif((!((forms__$1 == null)))){\nvar form = cljs.core.first(forms__$1);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ast = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,form,null,opts);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\nvar G__79288 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ast);\nvar G__79289 = cljs.core.next(forms__$1);\nvar G__79290 = ast;\nns = G__79288;\nforms__$1 = G__79289;\nlast_ast = G__79290;\ncontinue;\n} else {\nvar G__79291 = ns;\nvar G__79292 = cljs.core.next(forms__$1);\nvar G__79293 = ast;\nns = G__79291;\nforms__$1 = G__79292;\nlast_ast = G__79293;\ncontinue;\n}\n} else {\nif(cljs.core.truth_(return_last_QMARK_)){\nreturn last_ast;\n} else {\nreturn ns;\n}\n}\nbreak;\n}\n}finally {cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__orig_val__77224;\n\ncljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__orig_val__77223;\n\ncljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__orig_val__77222;\n\ncljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__orig_val__77221;\n}});\n\ncljs.analyzer.analyze_form_seq.cljs$lang$maxFixedArity = 3;\n\n/**\n * Ensures that a non-nil defs map exists in the compiler state for a given\n *   ns. (A non-nil defs map signifies that the namespace has been analyzed.)\n */\ncljs.analyzer.ensure_defs = (function cljs$analyzer$ensure_defs(ns){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null),(function (p1__77234_SHARP_){\nvar or__4131__auto__ = p1__77234_SHARP_;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/analyzer.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$no-warn","~$cljs.analyzer.macros","~$wrapping-errors","^N","~$with-warning-handlers","^N","~$disallowing-recur","^N","~$allowing-redef","^N","~$disallowing-ns*","^N","~$ensure","~$cljs.env.macros"],"~:excludes",["~#set",["^T","~$js-reserved","~$macroexpand-1","~$ns-interns"]],"~:name","~$cljs.analyzer","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$gstring","~$goog.string","~$cljs.tools.reader","^19","^18","^18","~$tags","~$cljs.tagged-literals","^C","^C","~$goog","^1<","~$cljs.tools.reader.reader-types","^1=","~$cljs.env","^1>","^16","^16","~$readers","^1=","^1;","^1;","~$env","^1>","~$string","~$clojure.string","^1B","^1B","~$cljs.reader","^1C","~$edn","^1C","~$reader","^19"],"~:seen",["^W",["~:require","~:require-macros"]],"~:uses",null,"^1H",["^ ","^N","^N","^U","^U","^C","^C","^1C","^1C","^1D","^1C"],"~:form",["~#list",["~$ns","^10",["^1K",["~:refer-clojure","~:exclude",["^Y","^Z","^T","^X"]]],["^1K",["^1H",["^N","~:refer",["^M","^O","^P","^Q","^R","^S"]],["^U","^1O",["^T"]]]],["^1K",["^1G",["^18","~:as","^17"],["^1B","^1P","^1A"],["^16","^1P","^15"],["^1>","^1P","^1@"],["^1;","^1P","^1:"],["^19","^1P","^1E"],["^1=","^1P","^1?"],["^1C","^1P","^1D"]]]]],"~:flags",["^ ","^1H",["^W",[]],"^1G",["^W",[]]],"~:js-deps",["^ "],"~:deps",["^1<","^C","^18","^1B","^16","^1>","^1;","^19","^1=","^1C"]],"^12","^10","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer.cljc"],"~:compiled-at",1630228762356,"~:resource-name","cljs/analyzer.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer\n  #?(:clj  (:refer-clojure :exclude [macroexpand-1 ensure])\n     :cljs (:refer-clojure :exclude [macroexpand-1 ns-interns ensure js-reserved]))\n  #?(:cljs (:require-macros\n             [cljs.analyzer.macros\n              :refer [no-warn wrapping-errors with-warning-handlers\n                      disallowing-recur allowing-redef disallowing-ns*]]\n             [cljs.env.macros :refer [ensure]]))\n  #?(:clj (:require [cljs.util :as util :refer [ns->relpath topo-sort]]\n                    [clojure.java.io :as io]\n                    [clojure.string :as string]\n                    [clojure.set :as set]\n                    [cljs.env :as env :refer [ensure]]\n                    [cljs.js-deps :as deps]\n                    [cljs.tagged-literals :as tags]\n                    [clojure.tools.reader :as reader]\n                    [clojure.tools.reader.reader-types :as readers]\n                    [clojure.edn :as edn])\n     :cljs (:require [goog.string :as gstring]\n                     [clojure.string :as string]\n                     [clojure.set :as set]\n                     [cljs.env :as env]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.tools.reader :as reader]\n                     [cljs.tools.reader.reader-types :as readers]\n                     [cljs.reader :as edn]))\n  #?(:clj (:import [java.io File Reader PushbackReader FileOutputStream FileInputStream]\n                   [java.util.regex Pattern]\n                   [java.net URL]\n                   [java.lang Throwable]\n                   [clojure.lang Namespace Var LazySeq ArityException]\n                   [cljs.tagged_literals JSValue])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; User file-local compiler flags\n#?(:clj (def ^:dynamic *unchecked-if* false))\n#?(:clj (def ^:dynamic *unchecked-arrays* false))\n\n;; Compiler dynamic vars\n(def ^:dynamic *cljs-ns* 'cljs.user)\n(def ^:dynamic *cljs-file* nil)\n(def ^:dynamic *checked-arrays* false)\n(def ^:dynamic *check-alias-dupes* true)\n(def ^:dynamic *cljs-static-fns* false)\n(def ^:dynamic *fn-invoke-direct* false)\n(def ^:dynamic *cljs-macros-path* \"/cljs/core\")\n(def ^:dynamic *cljs-macros-is-classpath* true)\n(def ^:dynamic *cljs-dep-set* (with-meta #{} {:dep-path []}))\n(def ^:dynamic *analyze-deps* true)\n(def ^:dynamic *load-tests* true)\n(def ^:dynamic *load-macros* true)\n(def ^:dynamic *reload-macros* false)\n(def ^:dynamic *macro-infer* true)\n(def ^:dynamic *passes* nil)\n(def ^:dynamic *file-defs* nil)\n(def ^:dynamic *private-var-access-nowarn* false)\n\n(def constants-ns-sym\n  \"The namespace of the constants table as a symbol.\"\n  'cljs.core.constants)\n\n(def ^:private identity-counter (atom 0))\n\n(defn- add-identity [m]\n  (assoc m :identity (swap! identity-counter inc)))\n\n#?(:clj\n   (def transit-read-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [read-handler     @(ns-resolve ns 'read-handler)\n               read-handler-map @(ns-resolve ns 'read-handler-map)]\n           {:handlers\n             (read-handler-map\n               {\"cljs/js\"    (read-handler (fn [v] (JSValue. v)))\n                \"cljs/regex\" (read-handler (fn [v] (Pattern/compile v)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit-write-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [write-handler     @(ns-resolve ns 'write-handler)\n               write-handler-map @(ns-resolve ns 'write-handler-map)]\n           {:handlers\n             (write-handler-map\n               {JSValue\n                (write-handler\n                  (fn [_] \"cljs/js\")\n                  (fn [js] (.val ^JSValue js)))\n                Pattern\n                (write-handler\n                  (fn [_] \"cljs/regex\")\n                  (fn [pat] (.pattern ^Pattern pat)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit\n     (delay\n       (try\n         (require '[cognitect.transit])\n         (when-some [ns (find-ns 'cognitect.transit)]\n           {:writer @(ns-resolve ns 'writer)\n            :reader @(ns-resolve ns 'reader)\n            :write  @(ns-resolve ns 'write)\n            :read   @(ns-resolve ns 'read)})\n         (catch Throwable t\n           nil)))))\n\n;; log compiler activities\n(def ^:dynamic *verbose* false)\n\n(def -cljs-macros-loaded (atom false))\n\n(def ^:dynamic *cljs-warnings*\n  {:preamble-missing true\n   :unprovided true\n   :undeclared-var true\n   :private-var-access true\n   :undeclared-ns true\n   :undeclared-ns-form true\n   :redef true\n   :redef-in-file true\n   :dynamic true\n   :fn-var true\n   :fn-arity true\n   :fn-deprecated true\n   :declared-arglists-mismatch true\n   :protocol-deprecated true\n   :undeclared-protocol-symbol true\n   :invalid-protocol-symbol true\n   :multiple-variadic-overloads true\n   :variadic-max-arity true\n   :overload-arity true\n   :extending-base-js-type true\n   :invoke-ctor true\n   :invalid-arithmetic true\n   :invalid-array-access true\n   :protocol-invalid-method true\n   :protocol-duped-method true\n   :protocol-multiple-impls true\n   :protocol-with-variadic-method true\n   :protocol-impl-with-variadic-method true\n   :protocol-impl-recur-with-target true\n   :single-segment-namespace true\n   :munged-namespace true\n   :ns-var-clash true\n   :non-dynamic-earmuffed-var true\n   :extend-type-invalid-method-shape true\n   :unsupported-js-module-type true\n   :unsupported-preprocess-value true\n   :js-shadowed-by-local true\n   :infer-warning false})\n\n(defn unchecked-arrays? []\n  *unchecked-arrays*)\n\n(defn checked-arrays\n  \"Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*.\"\n  []\n  (when (and (not (-> @env/*compiler* :options :advanced))\n             (not *unchecked-arrays*))\n    *checked-arrays*))\n\n(def js-reserved\n  #{\"arguments\" \"abstract\" \"await\" \"boolean\" \"break\" \"byte\" \"case\"\n    \"catch\" \"char\" \"class\" \"const\" \"continue\"\n    \"debugger\" \"default\" \"delete\" \"do\" \"double\"\n    \"else\" \"enum\" \"export\" \"extends\" \"final\"\n    \"finally\" \"float\" \"for\" \"function\" \"goto\" \"if\"\n    \"implements\" \"import\" \"in\" \"instanceof\" \"int\"\n    \"interface\" \"let\" \"long\" \"native\" \"new\"\n    \"package\" \"private\" \"protected\" \"public\"\n    \"return\" \"short\" \"static\" \"super\" \"switch\"\n    \"synchronized\" \"this\" \"throw\" \"throws\"\n    \"transient\" \"try\" \"typeof\" \"var\" \"void\"\n    \"volatile\" \"while\" \"with\" \"yield\" \"methods\"\n    \"null\" \"constructor\"})\n\n(def es5-allowed\n  #{\"default\"})\n\n#?(:clj (def SENTINEL (Object.))\n   :cljs (def SENTINEL (js-obj)))\n\n(defn gets\n  ([m k0 k1]\n    (let [m (get m k0 SENTINEL)]\n      (when-not (identical? m SENTINEL)\n        (get m k1))))\n  ([m k0 k1 k2]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (get m k2))))))\n  ([m k0 k1 k2 k3]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (let [m (get m k2 SENTINEL)]\n             (when-not (identical? m SENTINEL)\n               (get m k3)))))))))\n\n#?(:cljs\n   (def CLJ_NIL_SYM 'clj-nil))\n\n#?(:cljs\n   (def NUMBER_SYM 'number))\n\n#?(:cljs\n   (def STRING_SYM 'string))\n\n(def BOOLEAN_SYM 'boolean)\n\n#?(:cljs\n   (def JS_STAR_SYM 'js*))\n\n#?(:cljs\n   (def DOT_SYM '.))\n\n#?(:cljs\n   (def NEW_SYM 'new))\n\n#?(:cljs\n   (def CLJS_CORE_SYM 'cljs.core))\n\n#?(:cljs\n   (def CLJS_CORE_MACROS_SYM 'cljs.core$macros))\n\n(def IGNORE_SYM 'ignore)\n\n(def ANY_SYM 'any)\n\n#?(:cljs\n   (defn ^boolean cljs-seq? [x]\n     (implements? ISeq x)))\n\n#?(:cljs\n   (defn ^boolean cljs-map? [x]\n     (implements? IMap x)))\n\n#?(:cljs\n   (defn ^boolean cljs-vector? [x]\n     (implements? IVector x)))\n\n#?(:cljs\n   (defn ^boolean cljs-set? [x]\n     (implements? ISet x)))\n\n#?(:cljs\n   (defn munge-path [ss]\n     (munge (str ss))))\n\n#?(:cljs\n   (defn ns->relpath\n     \"Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.\"\n     ([ns] (ns->relpath ns :cljs))\n     ([ns ext]\n      (str (string/replace (munge-path ns) \\. \\/) \".\" (name ext)))))\n\n#?(:cljs\n   (defn topo-sort\n     ([x get-deps]\n      (topo-sort x 0 (atom (sorted-map)) (memoize get-deps)))\n     ([x depth state memo-get-deps]\n      (let [deps (memo-get-deps x)]\n        (swap! state update-in [depth] (fnil into #{}) deps)\n        (doseq [dep deps]\n          (topo-sort dep (inc depth) state memo-get-deps))\n        (doseq [[<depth _] (subseq @state < depth)]\n          (swap! state update-in [<depth] set/difference deps))\n        (when (= depth 0)\n          (distinct (apply concat (vals @state))))))))\n\n(declare message namespaces)\n\n(defn ast?\n  #?(:cljs {:tag boolean})\n  [x]\n  (and (map? x) (contains? x :op)))\n\n(defmulti error-message (fn [warning-type & _] warning-type))\n\n(defmethod error-message :preamble-missing\n  [warning-type info]\n  (str \"Preamble resource file not found: \" (string/join \" \" (:missing info))))\n\n(defmethod error-message :unprovided\n  [warning-type info]\n  (str \"Required namespace not provided for \" (string/join \" \" (:unprovided info))))\n\n(defmethod error-message :undeclared-var\n  [warning-type info]\n  (str (if (:macro-present? info)\n         \"Can't take value of macro \"\n         \"Use of undeclared Var \")\n    (:prefix info) \"/\" (:suffix info)))\n\n(defmethod error-message :private-var-access\n  [warning-type info]\n  (str \"var: \" (:sym info) \" is not public\"))\n\n(defmethod error-message :undeclared-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :cljs)\n       \", \" (ns->relpath ns-sym :cljc)\n       \", or JavaScript source providing \\\"\" js-provide \"\\\"\"\n    (when (string/includes? (ns->relpath ns-sym) \"_\")\n      \" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\")))\n\n(defmethod error-message :undeclared-macros-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such macros namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :clj)\n       \" or \" (ns->relpath ns-sym :cljc)))\n\n(defmethod error-message :dynamic\n  [warning-type info]\n  (str (:name info) \" not declared ^:dynamic\"))\n\n(defmethod error-message :redef\n  [warning-type info]\n  (str (:sym info) \" already refers to: \" (symbol (str (:ns info)) (str (:sym info)))\n    \" being replaced by: \" (symbol (str (:ns-name info)) (str (:sym info)))))\n\n(defmethod error-message :redef-in-file\n  [warning-type info]\n  (str (:sym info) \" at line \" (:line info) \" is being replaced\"))\n\n(defmethod error-message :fn-var\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" no longer fn, references are stale\"))\n\n(defmethod error-message :fn-arity\n  [warning-type info]\n  (str \"Wrong number of args (\" (:argc info) \") passed to \"\n    (or (:ctor info)\n      (:name info))))\n\n(defmethod error-message :fn-deprecated\n  [warning-type info]\n  (str (-> info :fexpr :info :name) \" is deprecated\"))\n\n(defmethod error-message :declared-arglists-mismatch\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" declared arglists \" (:declared info)\n    \" mismatch defined arglists \" (:defined info)))\n\n(defmethod error-message :undeclared-ns-form\n  [warning-type info]\n  (str \"Invalid :refer, \" (:type info) \" \" (:lib info) \"/\" (:sym info) \" does not exist\"))\n\n(defmethod error-message :protocol-deprecated\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" is deprecated\"))\n\n(defmethod error-message :undeclared-protocol-symbol\n  [warning-type info]\n  (str \"Can't resolve protocol symbol \" (:protocol info)))\n\n(defmethod error-message :invalid-protocol-symbol\n  [warning-type info]\n  (str \"Symbol \" (:protocol info) \" is not a protocol\"))\n\n(defmethod error-message :protocol-invalid-method\n  [warning-type info]\n  (if (:no-such-method info)\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" does not declare method called \" (:fname info))\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" \" (:fname info) \" does not declare arity \" (:invalid-arity info))))\n\n(defmethod error-message :protocol-duped-method\n  [warning-type info]\n  (str \"Duplicated methods in protocol implementation \" (:protocol info) \" \" (:fname info)))\n\n(defmethod error-message :protocol-multiple-impls\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implemented multiple times\"))\n\n(defmethod error-message :protocol-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" declares method \"\n       (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-impl-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implements method \"\n    (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-impl-recur-with-target\n  [warning-type info]\n  (str \"Ignoring target object \\\"\" (pr-str (:form info)) \"\\\" passed in recur to protocol method head\"))\n\n(defmethod error-message :multiple-variadic-overloads\n  [warning-type info]\n  (str (:name info) \": Can't have more than 1 variadic overload\"))\n\n(defmethod error-message :variadic-max-arity\n  [warning-type info]\n  (str (:name info) \": Can't have fixed arity function with more params than variadic function\"))\n\n(defmethod error-message :overload-arity\n  [warning-type info]\n  (str (:name info) \": Can't have 2 overloads with same arity\"))\n\n(defmethod error-message :extending-base-js-type\n  [warning-type info]\n  (str \"Extending an existing JavaScript type - use a different symbol name \"\n       \"instead of \" (:current-symbol info) \" e.g \" (:suggested-symbol info)))\n\n(defmethod error-message :invalid-arithmetic\n  [warning-type info]\n  (str (:js-op info) \", all arguments must be numbers, got \" (:types info) \" instead\"))\n\n(defmethod error-message :invalid-array-access\n  [warning-type {:keys [name types]}]\n  (case name\n    (cljs.core/checked-aget cljs.core/checked-aget')\n    (str \"cljs.core/aget, arguments must be an array followed by numeric indices, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (rest types)))\n        (str \" (consider \"\n          (if (== 2 (count types))\n            \"goog.object/get\"\n            \"goog.object/getValueByKeys\")\n          \" for object access)\")))\n\n    (cljs.core/checked-aset cljs.core/checked-aset')\n    (str \"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (butlast (rest types))))\n        \" (consider goog.object/set for object access)\"))))\n\n(defmethod error-message :invoke-ctor\n  [warning-type info]\n  (str \"Cannot invoke type constructor \" (-> info :fexpr :info :name) \" as function \"))\n\n(defmethod error-message :single-segment-namespace\n  [warning-type info]\n  (str (:name info) \" is a single segment namespace\"))\n\n(defmethod error-message :munged-namespace\n  [warning-type {:keys [name] :as info}]\n  (let [munged (->> (string/split (clojure.core/name name) #\"\\.\")\n                 (map #(if (js-reserved %) (str % \"$\") %))\n                 (string/join \".\")\n                 (munge))]\n    (str \"Namespace \" name \" contains a reserved JavaScript keyword,\"\n         \" the corresponding Google Closure namespace will be munged to \" munged)))\n\n(defmethod error-message :ns-var-clash\n  [warning-type {:keys [ns var] :as info}]\n  (str \"Namespace \" ns \" clashes with var \" var))\n\n(defmethod error-message :non-dynamic-earmuffed-var\n  [warning-type {:keys [var] :as info}]\n  (str var \" not declared dynamic and thus is not dynamically rebindable, but its name \"\n    \"suggests otherwise. Please either indicate ^:dynamic \" var \" or change the name\"))\n\n(defmethod error-message :extend-type-invalid-method-shape\n  [warning-type {:keys [protocol method] :as info}]\n  (str \"Bad extend-type method shape for protocol \" protocol \" method \" method\n       \", method arities must be grouped together\"))\n\n(defmethod error-message :unsupported-js-module-type\n  [warning-type {:keys [module-type file] :as info}]\n  (str \"Unsupported JavaScript module type \" module-type \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :unsupported-preprocess-value\n  [warning-type {:keys [preprocess file]}]\n  (str \"Unsupported preprocess value \" preprocess \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :js-shadowed-by-local\n  [warning-type {:keys [name]}]\n  (str name \" is shadowed by a local\"))\n\n(defmethod error-message :infer-warning\n  [warning-type {:keys [warn-type form type property]}]\n  (case warn-type\n    :target   (str \"Cannot infer target type in expression \" form \"\")\n    :property (str \"Cannot resolve property \" property\n                   \" for inferred type \" type  \" in expression \" form)\n    :object   (str \"Adding extern to Object for property \" property \" due to \"\n                   \"ambiguous expression \" form)))\n\n(defn default-warning-handler [warning-type env extra]\n  (when (warning-type *cljs-warnings*)\n    (when-let [s (error-message warning-type extra)]\n      #?(:clj  (binding [*out* *err*]\n                 (println (message env (str \"WARNING: \" s))))\n         :cljs (binding [*print-fn* *print-err-fn*]\n                 (println (message env (str \"WARNING: \" s))))))))\n\n(def ^:dynamic *cljs-warning-handlers*\n  [default-warning-handler])\n\n#?(:clj\n   (defmacro with-warning-handlers [handlers & body]\n     `(binding [*cljs-warning-handlers* ~handlers]\n        ~@body)))\n\n(defn- repeat-char [c n]\n  (loop [ret c n n]\n    (if (pos? n)\n      (recur (str ret c) (dec n))\n      ret)))\n\n(defn- hex-format [s pad]\n  #?(:clj  (str \"_u\" (format (str \"%0\" pad \"x\") (int (first s))) \"_\")\n     :cljs (let [hex (.toString (.charCodeAt s 0) 16)\n                 len (. hex -length)\n                 hex (if (< len pad)\n                       (str (repeat-char \"0\" (- pad len)) hex)\n                       hex)]\n             (str \"_u\" hex \"_\"))))\n\n(defn gen-constant-id [value]\n  (let [prefix (cond\n                 (keyword? value) \"cst$kw$\"\n                 (symbol? value)  \"cst$sym$\"\n                 :else\n                 (throw\n                   #?(:clj (Exception. (str \"constant type \" (type value) \" not supported\"))\n                      :cljs (js/Error. (str \"constant type \" (type value) \" not supported\")))))\n        name   (if (keyword? value)\n                 (subs (str value) 1)\n                 (str value))\n        name   (if (= \".\" name)\n                 \"_DOT_\"\n                 (-> name\n                     (string/replace \"-\" \"_DASH_\")\n                     (munge)\n                     (string/replace \".\" \"$\")\n                     (string/replace #\"(?i)[^a-z0-9$_]\" #(hex-format % 4))))]\n    (symbol (str prefix name))))\n\n(defn- register-constant!\n  ([val] (register-constant! nil val))\n  ([env val]\n   (swap! env/*compiler*\n     (fn [cenv]\n       (cond->\n         (-> cenv\n           (update-in [::constant-table]\n             (fn [table]\n               (if (get table val)\n                 table\n                 (assoc table val (gen-constant-id val))))))\n         env (update-in [::namespaces (-> env :ns :name) ::constants]\n               (fn [{:keys [seen order] :or {seen #{} order []} :as constants}]\n                 (cond-> constants\n                   (not (contains? seen val))\n                   (assoc\n                     :seen (conj seen val)\n                     :order (conj order val))))))))))\n\n(def default-namespaces '{cljs.core {:name cljs.core}\n                          cljs.user {:name cljs.user}})\n\n;; this exists solely to support read-only namespace access from macros.\n;; External tools should look at the authoritative ::namespaces slot in the\n;; compiler-env atoms/maps they're using already; this value will yield only\n;; `default-namespaces` when accessed outside the scope of a\n;; compilation/analysis call\n(def namespaces\n  #?(:clj\n     (reify clojure.lang.IDeref\n       (deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))\n     :cljs\n     (reify IDeref\n       (-deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))))\n\n(defn get-namespace\n  ([key]\n    (get-namespace env/*compiler* key))\n  ([cenv key]\n   (if-some [ns (get-in @cenv [::namespaces key])]\n       ns\n       (when (= 'cljs.user key)\n         {:name 'cljs.user}))))\n\n#?(:clj\n   (defmacro no-warn [& body]\n     (let [no-warnings (zipmap (keys *cljs-warnings*) (repeat false))]\n       `(binding [*cljs-warnings* ~no-warnings]\n          ~@body))))\n\n#?(:clj\n   (defmacro all-warn [& body]\n     (let [all-warnings (zipmap (keys *cljs-warnings*) (repeat true))]\n       `(binding [*cljs-warnings* ~all-warnings]\n          ~@body))))\n\n(defn get-line [x env]\n  (or (-> x meta :line) (:line env)))\n\n(defn get-col [x env]\n  (or (-> x meta :column) (:column env)))\n\n(defn intern-macros\n  \"Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.\"\n  ([ns] (intern-macros ns false))\n  ([ns reload]\n    (when (or (nil? (gets @env/*compiler* ::namespaces ns :macros))\n              reload)\n      (swap! env/*compiler* assoc-in [::namespaces ns :macros]\n        (->> #?(:clj (ns-interns ns) :cljs (ns-interns* ns))\n             (filter (fn [[_ ^Var v]] (.isMacro v)))\n             (map (fn [[k v]]\n                    [k (as-> (meta v) vm\n                         (let [ns (.getName ^Namespace (:ns vm))]\n                           (assoc vm\n                             :ns ns\n                             :name (symbol (str ns) (str k))\n                             :macro true)))]))\n             (into {}))))))\n\n#?(:clj\n   (def load-mutex (Object.)))\n\n#?(:clj\n   (defn load-core []\n     (when (not @-cljs-macros-loaded)\n       (reset! -cljs-macros-loaded true)\n       (if *cljs-macros-is-classpath*\n         (locking load-mutex\n           (load *cljs-macros-path*))\n         (locking load-mutex\n           (load-file *cljs-macros-path*))))\n     (intern-macros 'cljs.core)))\n\n#?(:clj\n   (defmacro with-core-macros\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path]\n          ~@body))))\n\n#?(:clj\n   (defmacro with-core-macros-file\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path\n                  *cljs-macros-is-classpath* false]\n          ~@body))))\n\n(defn empty-env\n  \"Construct an empty analysis environment. Required to analyze forms.\"\n  []\n  (ensure\n    {:ns (get-namespace *cljs-ns*)\n     :context :statement\n     :locals {}\n     :fn-scope []\n     :js-globals (into {}\n                   (map #(vector % {:op :js-var :name % :ns 'js})\n                     '(alert window document console escape unescape\n                       screen location navigator history location\n                       global process require module exports)))}))\n\n(defn- source-info->error-data\n  [{:keys [file line column]}]\n  {:clojure.error/source file\n   :clojure.error/line   line\n   :clojure.error/column column})\n\n(defn source-info\n  ([env]\n   (when (:line env)\n     (source-info nil env)))\n  ([name env]\n   (cond-> {:file (if (= (-> env :ns :name) 'cljs.core)\n                    \"cljs/core.cljs\"\n                    *cljs-file*)\n            :line (get-line name env)\n            :column (get-col name env)}\n     (:root-source-info env)\n     (merge (select-keys env [:root-source-info])))))\n\n(defn message [env s]\n  (str s\n    (if (:line env)\n      (str \" at line \" (:line env) \" \" *cljs-file*)\n      (when *cljs-file*\n        (str \" in file \" *cljs-file*)))))\n\n(defn warning [warning-type env extra]\n  (doseq [handler *cljs-warning-handlers*]\n    (handler warning-type env extra)))\n\n(defn- accumulating-warning-handler [warn-acc]\n  (fn [warning-type env extra]\n    (when (warning-type *cljs-warnings*)\n      (swap! warn-acc conj [warning-type env extra]))))\n\n(defn- replay-accumulated-warnings [warn-acc]\n  (run! #(apply warning %) @warn-acc))\n\n(defn- error-data\n  ([env phase]\n   (error-data env phase nil))\n  ([env phase symbol]\n   (merge (-> (source-info env) source-info->error-data)\n     {:clojure.error/phase phase}\n     (when symbol\n       {:clojure.error/symbol symbol}))))\n\n(defn- compile-syntax-error\n  [env msg symbol]\n  (ex-info nil (error-data env :compile-syntax-check symbol)\n    #?(:clj (RuntimeException. ^String msg) :cljs (js/Error. msg))))\n\n(defn error\n  ([env msg]\n   (error env msg nil))\n  ([env msg cause]\n   (ex-info (message env msg)\n     (assoc (source-info env) :tag :cljs/analysis-error)\n     cause)))\n\n(defn analysis-error?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (= :cljs/analysis-error (:tag (ex-data ex))))\n\n(defn has-error-data?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (contains? (ex-data ex) :clojure.error/phase))\n\n#?(:clj\n   (defmacro wrapping-errors [env & body]\n     `(try\n        ~@body\n        (catch Throwable err#\n          (cond\n            (has-error-data? err#) (throw err#)\n            (analysis-error? err#) (throw (ex-info nil (error-data ~env :compilation) err#))\n            :else (throw (ex-info nil (error-data ~env :compilation) (error ~env (.getMessage err#) err#))))))))\n\n;; namespaces implicit to the inclusion of cljs.core\n(def implicit-nses '#{goog goog.object goog.string goog.array Math String})\n\n(defn implicit-import?\n  #?(:cljs {:tag boolean})\n  [env prefix suffix]\n  (contains? implicit-nses prefix))\n\n(declare get-expander)\n\n(defn confirm-var-exist-warning [env prefix suffix]\n  (fn [env prefix suffix]\n    (warning :undeclared-var env\n      {:prefix         prefix\n       :suffix         suffix\n       :macro-present? (not (nil? (get-expander (symbol (str prefix) (str suffix)) env)))})))\n\n(defn loaded-js-ns?\n  \"Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.\"\n  #?(:cljs {:tag boolean})\n  [env prefix]\n  (when-not (gets @env/*compiler* ::namespaces prefix)\n    (let [ns (:ns env)]\n      (or (some? (get (:requires ns) prefix))\n          (some? (get (:imports ns) prefix))))))\n\n(defn- internal-js-module-exists?\n  [js-module-index module]\n  ;; we need to check both keys and values of the JS module index, because\n  ;; macroexpansion will be looking for the provided name - António Monteiro\n  (contains?\n    (into #{}\n      (mapcat (fn [[k v]]\n                [k (:name v)]))\n      js-module-index)\n    (str module)))\n\n(def js-module-exists?* (memoize internal-js-module-exists?))\n\n(defn js-module-exists?\n  [module]\n  (js-module-exists?* (get-in @env/*compiler* [:js-module-index]) module))\n\n(defn node-module-dep?\n  #?(:cljs {:tag boolean})\n  [module]\n  #?(:clj (contains?\n            (get-in @env/*compiler* [:node-module-index])\n            (str module))\n     :cljs (try\n             (and (= *target* \"nodejs\")\n                  (boolean (js/require.resolve (str module))))\n             (catch :default _\n               false))))\n\n(defn dep-has-global-exports?\n  [module]\n  (let [global-exports (get-in @env/*compiler* [:js-dependency-index (str module) :global-exports])]\n    (or (contains? global-exports (symbol module))\n        (contains? global-exports (name module)))))\n\n(defn confirm-var-exists\n  ([env prefix suffix]\n   (let [warn (confirm-var-exist-warning env prefix suffix)]\n     (confirm-var-exists env prefix suffix warn)))\n  ([env prefix suffix missing-fn]\n   (let [sufstr     (str suffix)\n         suffix-str (if (and #?(:clj  (not= \"..\" sufstr)\n                                :cljs (not (identical? \"..\" sufstr))) ;; leave cljs.core$macros/.. alone\n                          #?(:clj  (re-find #\"\\.\" sufstr)\n                             :cljs ^boolean (.test #\"\\.\" sufstr)))\n                      (first (string/split sufstr #\"\\.\"))\n                      suffix)\n         suffix     (symbol suffix-str)]\n     (when (and (not (implicit-import? env prefix suffix))\n                (not (loaded-js-ns? env prefix))\n                (not (and (= 'cljs.core prefix) (= 'unquote suffix)))\n                (nil? (gets @env/*compiler* ::namespaces prefix :defs suffix))\n                (not (js-module-exists? prefix)))\n       (missing-fn env prefix suffix)))))\n\n(defn confirm-var-exists-throw []\n  (fn [env prefix suffix]\n    (confirm-var-exists env prefix suffix\n      (fn [env prefix suffix]\n        (throw (error env (str \"Unable to resolve var: \" suffix \" in this context\")))))))\n\n(defn resolve-ns-alias\n  ([env name]\n   (resolve-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:requires (:ns env)) sym not-found))))\n\n(defn resolve-macro-ns-alias\n  ([env name]\n   (resolve-macro-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:require-macros (:ns env)) sym not-found))))\n\n(defn confirm-ns\n  \"Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found.\"\n  [env ns-sym]\n  (when (and (not= 'cljs.core ns-sym)\n             (nil? (get implicit-nses ns-sym))\n             (nil? (get (-> env :ns :requires) ns-sym))\n             ;; something else may have loaded the namespace, i.e. load-file\n             (nil? (gets @env/*compiler* ::namespaces ns-sym))\n             ;; macros may refer to namespaces never explicitly required\n             ;; confirm that the library at least exists\n             #?(:clj (nil? (util/ns->source ns-sym)))\n             (not (js-module-exists? ns-sym)))\n    (warning :undeclared-ns env {:ns-sym ns-sym :js-provide ns-sym})))\n\n(defn core-name?\n  \"Is sym visible from core in the current compilation namespace?\"\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (and (or (some? (gets @env/*compiler* ::namespaces 'cljs.core :defs sym))\n           (if-some [mac (get-expander sym env)]\n             (let [^Namespace ns (-> mac meta :ns)]\n               (= (.getName ns) #?(:clj 'cljs.core :cljs 'cljs.core$macros)))\n             false))\n       (not (contains? (-> env :ns :excludes) sym))))\n\n(defn public-name?\n  \"Is sym public?\"\n  #?(:cljs {:tag boolean})\n  [ns sym]\n  (let [var-ast (or (gets @env/*compiler* ::namespaces ns :defs sym)\n                    #?(:clj  (gets @env/*compiler* ::namespaces ns :macros sym)\n                       :cljs (gets @env/*compiler* ::namespaces (symbol (str (name ns) \"$macros\")) :defs sym)))]\n    (and (some? var-ast)\n         (not (or (:private var-ast)\n                  (:anonymous var-ast))))))\n\n(defn js-tag? [x]\n  (and (symbol? x)\n       (or (= 'js x)\n           (= \"js\" (namespace x)))))\n\n(defn normalize-js-tag [x]\n  ;; if not 'js, assume constructor\n  (if-not (= 'js x)\n    (with-meta 'js\n      {:prefix (conj (->> (string/split (name x) #\"\\.\")\n                       (map symbol) vec)\n                 'prototype)})\n    x))\n\n(defn ->type-set\n  \"Ensures that a type tag is a set.\"\n  [t]\n  (if #?(:clj  (set? t)\n         :cljs (cljs-set? t))\n    t\n    #{t}))\n\n(defn canonicalize-type [t]\n  \"Ensures that a type tag is either nil, a type symbol, or a non-singleton\n  set of type symbols, absorbing clj-nil into seq and all types into any.\"\n  (cond\n    (symbol? t) t\n    (empty? t) nil\n    (== 1 (count t)) (first t)\n    (contains? t 'any) 'any\n    (contains? t 'seq) (let [res (disj t 'clj-nil)]\n                         (if (== 1 (count res))\n                           'seq\n                           res))\n    :else t))\n\n(defn add-types\n  \"Produces a union of types.\"\n  ([] 'any)\n  ([t1] t1)\n  ([t1 t2]\n   (if (or (nil? t1)\n           (nil? t2))\n     'any\n     (-> (set/union (->type-set t1) (->type-set t2))\n       canonicalize-type)))\n  ([t1 t2 & ts]\n   (apply add-types (add-types t1 t2) ts)))\n\n(def alias->type\n  '{object   Object\n    string   String\n    number   Number\n    array    Array\n    function Function\n    boolean  Boolean\n    symbol   Symbol})\n\n(defn has-extern?*\n  ([pre externs]\n   (let [pre (if-some [me (find\n                            (get-in externs '[Window prototype])\n                            (first pre))]\n               (if-some [tag (-> me first meta :tag)]\n                 (into [tag 'prototype] (next pre))\n                 pre)\n               pre)]\n     (has-extern?* pre externs externs)))\n  ([pre externs top]\n   (cond\n     (empty? pre) true\n     :else\n     (let [x  (first pre)\n           me (find externs x)]\n       (cond\n         (not me) false\n         :else\n         (let [[x' externs'] me\n               xmeta (meta x')]\n           (if (and (= 'Function (:tag xmeta)) (:ctor xmeta))\n             (or (has-extern?* (into '[prototype] (next pre)) externs' top)\n                 (has-extern?* (next pre) externs' top))\n             (recur (next pre) externs' top))))))))\n\n(defn has-extern?\n  ([pre]\n    (has-extern? pre (get @env/*compiler* ::externs)))\n  ([pre externs]\n   (or (has-extern?* pre externs)\n       (when (= 1 (count pre))\n         (let [x (first pre)]\n           (or (get-in externs (conj '[Window prototype] x))\n               (get-in externs (conj '[Number] x)))))\n       (-> (last pre) str (string/starts-with? \"cljs$\")))))\n\n(defn js-tag\n  ([pre]\n   (js-tag pre :tag))\n  ([pre tag-type]\n   (js-tag pre tag-type (get @env/*compiler* ::externs)))\n  ([pre tag-type externs]\n   (js-tag pre tag-type externs externs))\n  ([pre tag-type externs top]\n   (when-let [[p externs' :as me] (find externs (first pre))]\n     (let [tag (-> p meta tag-type)]\n       (if (= (count pre) 1)\n         (when tag (symbol \"js\" (str (alias->type tag tag))))\n         (or (js-tag (next pre) tag-type externs' top)\n             (js-tag (into '[prototype] (next pre)) tag-type (get top tag) top)))))))\n\n(defn dotted-symbol? [sym]\n  (let [s (str sym)]\n    #?(:clj  (and (.contains s \".\")\n                  (not (.contains s \"..\")))\n       :cljs (and ^boolean (goog.string/contains s \".\")\n                  (not ^boolean (goog.string/contains s \"..\"))))))\n\n(defn munge-node-lib [name]\n  (str \"node$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                    :cljs \"$$\")))))\n\n(defn munge-global-export [name]\n  (str \"global$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                      :cljs \"$$\")))))\n\n(defn resolve-alias\n  \"Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original.\"\n  [ns sym]\n  ;; Conditionally alias aget/aset fns to checked variants\n  (if (and (= 'cljs.core ns)\n           ('#{aget aset} sym)\n           (checked-arrays))\n    (get-in '{:warn  {aget checked-aget\n                      aset checked-aset}\n              :error {aget checked-aget'\n                      aset checked-aset'}}\n      [(checked-arrays) sym])\n    sym))\n\n(defn ns->module-type [ns]\n  (cond\n    (js-module-exists? ns) :js\n    (node-module-dep? ns) :node\n    (dep-has-global-exports? ns) :global))\n\n(defmulti resolve* (fn [env sym full-ns current-ns] (ns->module-type full-ns)))\n\n(defmethod resolve* :js\n  [env sym full-ns current-ns]\n  {:name (symbol (str full-ns) (str (name sym)))\n   :op :js-var\n   :ns full-ns})\n\n(defmethod resolve* :node\n  [env sym full-ns current-ns]\n  {:name (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n   :op :js-var\n   :ns current-ns})\n\n(defmethod resolve* :global\n  [env sym full-ns current-ns]\n  (let [pre (into '[Object] (->> (string/split (name sym) #\"\\.\") (map symbol) vec))]\n    (when-not (has-extern? pre)\n      (swap! env/*compiler* update-in\n        (into [::namespaces current-ns :externs] pre) merge {}))\n    {:name (symbol (str current-ns) (str (munge-global-export full-ns) \".\" (name sym)))\n     :op :js-var\n     :ns current-ns\n     :tag (with-meta 'js {:prefix pre})}))\n\n(def ^:private private-var-access-exceptions\n  \"Specially-treated symbols for which we don't trigger :private-var-access warnings.\"\n  '#{cljs.core/checked-aget\n     cljs.core/checked-aset\n     cljs.core/checked-aget'\n     cljs.core/checked-aset'})\n\n(defmethod resolve* :default\n  [env sym full-ns current-ns]\n  (let [sym-ast (gets @env/*compiler* ::namespaces full-ns :defs (symbol (name sym)))\n        sym-name (symbol (str full-ns) (str (name sym)))]\n    (when (and (not= current-ns full-ns)\n               (:private sym-ast)\n               (not *private-var-access-nowarn*)\n               (not (contains? private-var-access-exceptions sym-name)))\n      (warning :private-var-access env\n        {:sym sym-name}))\n    (merge sym-ast\n      {:name sym-name\n       :op :var\n       :ns   full-ns})))\n\n(defn required? [ns env]\n  (or (contains? (set (vals (gets env :ns :requires))) ns)\n      (contains? (set (vals (gets env :ns :uses))) ns)))\n\n(defn invokeable-ns?\n  \"Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function.\"\n  [ns env]\n  (let [ns (resolve-ns-alias env ns)]\n    (and (required? ns env)\n         (or (js-module-exists? ns)\n             (node-module-dep? ns)\n             (dep-has-global-exports? ns)))))\n\n(defn resolve-invokeable-ns [ns current-ns env]\n  (let [ns (resolve-ns-alias env ns)\n        module-type (ns->module-type ns)]\n    (case module-type\n      :js     {:name (symbol\n                       (or (gets @env/*compiler* :js-module-index ns :name)\n                           (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns 'js}\n      :node   {:name (symbol (str current-ns)\n                       (munge-node-lib (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns}\n      :global {:name (symbol (str current-ns)\n                       (munge-global-export (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns})))\n\n;; core.async calls `macroexpand-1` manually with an ill-formed\n;; :locals map. Normally :locals maps symbols maps, but\n;; core.async adds entries mapping symbols to symbols. We work\n;; around that specific case here. This is called defensively\n;; every time we lookup the :locals map.\n(defn handle-symbol-local [sym lb]\n  (if (symbol? lb)\n    {:name sym}\n    lb))\n\n(defn resolve-var\n  \"Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.\"\n  ([env sym] (resolve-var env sym nil))\n  ([env sym confirm]\n   (let [locals (:locals env)]\n     (if #?(:clj  (= \"js\" (namespace sym))\n            :cljs (identical? \"js\" (namespace sym)))\n       (let [symn (-> sym name symbol)\n             shadowed-by-local (handle-symbol-local symn (get locals symn))]\n         (cond\n           (some? shadowed-by-local)\n           (do (warning :js-shadowed-by-local env {:name sym})\n               (assoc shadowed-by-local :op :local))\n\n           :else\n           (let [pre (->> (string/split (name sym) #\"\\.\") (map symbol) vec)]\n             (when (and (not (has-extern? pre))\n                        ;; ignore exists? usage\n                        (not (-> sym meta ::no-resolve)))\n               (swap! env/*compiler* update-in\n                 (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))\n             (merge\n               {:name sym\n                :op :js-var\n                :ns   'js\n                :tag  (with-meta (or (js-tag pre) (:tag (meta sym)) 'js) {:prefix pre})}\n               (when-let [ret-tag (js-tag pre :ret-tag)]\n                 {:js-fn-var true\n                  :ret-tag ret-tag})))))\n       (let [s  (str sym)\n             lb (handle-symbol-local sym (get locals sym))\n             current-ns (-> env :ns :name)]\n         (cond\n           (some? lb) (assoc lb :op :local)\n\n           (some? (namespace sym))\n           (let [ns      (namespace sym)\n                 ns      (if #?(:clj  (= \"clojure.core\" ns)\n                                :cljs (identical? \"clojure.core\" ns))\n                           \"cljs.core\"\n                           ns)\n                 full-ns (resolve-ns-alias env ns\n                           (or (and (js-module-exists? ns)\n                                    (gets @env/*compiler* :js-module-index ns :name))\n                             (symbol ns)))]\n             (when (some? confirm)\n               (when (not= current-ns full-ns)\n                 (confirm-ns env full-ns))\n               (confirm env full-ns (symbol (name sym))))\n             (resolve* env sym full-ns current-ns))\n\n           (dotted-symbol? sym)\n           (let [idx    (.indexOf s \".\")\n                 prefix (symbol (subs s 0 idx))\n                 suffix (subs s (inc idx))]\n             (if-some [lb (handle-symbol-local prefix (get locals prefix))]\n               {:op :local\n                :name (symbol (str (:name lb) \".\" suffix))}\n               (if-some [full-ns (gets @env/*compiler* ::namespaces current-ns :imports prefix)]\n                 {:op :js-var\n                  :name (symbol (str full-ns) suffix)}\n                 (if-some [info (gets @env/*compiler* ::namespaces current-ns :defs prefix)]\n                   (merge info\n                     {:name (symbol (str current-ns) (str sym))\n                      :op :var\n                      :ns current-ns})\n                   (merge (gets @env/*compiler* ::namespaces prefix :defs (symbol suffix))\n                     {:name (if (= \"\" prefix) (symbol suffix) (symbol (str prefix) suffix))\n                      :op :var\n                      :ns prefix})))))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :uses sym))\n           (let [full-ns (gets @env/*compiler* ::namespaces current-ns :uses sym)]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :renames sym))\n           (let [qualified-symbol (gets @env/*compiler* ::namespaces current-ns :renames sym)\n                 full-ns (symbol (namespace qualified-symbol))\n                 sym     (symbol (name qualified-symbol))]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :imports sym))\n           (recur env (gets @env/*compiler* ::namespaces current-ns :imports sym) confirm)\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :defs sym))\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))\n\n           (core-name? env sym)\n           (do\n             (when (some? confirm)\n               (confirm env 'cljs.core sym))\n             (merge (gets @env/*compiler* ::namespaces 'cljs.core :defs sym)\n               {:name (symbol \"cljs.core\" (str sym))\n                :op :var\n                :ns 'cljs.core}))\n\n           (invokeable-ns? s env)\n           (resolve-invokeable-ns s current-ns env)\n\n           :else\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))))))))\n\n(defn resolve-existing-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists.\"\n  [env sym]\n  (if-not (-> sym meta ::no-resolve)\n    (resolve-var env sym confirm-var-exists)\n    (resolve-var env sym)))\n\n(defn confirm-bindings\n  \"Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars.\"\n  [env names]\n  (doseq [name names]\n    (let [env (assoc env :ns (get-namespace *cljs-ns*))\n          ev (resolve-existing-var env name)]\n      (when (and ev (not (-> ev :dynamic)))\n        (warning :dynamic env {:ev ev :name (:name ev)})))))\n\n(defn resolve-macro-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"\n  [env sym]\n  (let [ns (-> env :ns :name)\n        namespaces (get @env/*compiler* ::namespaces)]\n    (cond\n      (some? (namespace sym))\n      (let [ns (namespace sym)\n            ns (if (= \"clojure.core\" ns) \"cljs.core\" ns)\n            full-ns (resolve-macro-ns-alias env ns)\n            #?@(:cljs [full-ns (if-not (string/ends-with? (str full-ns) \"$macros\")\n                                 (symbol (str full-ns \"$macros\"))\n                                 full-ns)])]\n        #?(:clj (get-in namespaces [full-ns :macros (symbol (name sym))])\n           :cljs (get-in namespaces [full-ns :defs (symbol (name sym))])))\n\n      (some? (get-in namespaces [ns :use-macros sym]))\n      (let [full-ns (get-in namespaces [ns :use-macros sym])]\n        (get-in namespaces [full-ns :macros sym]))\n\n      (some? (get-in namespaces [ns :rename-macros sym]))\n      (let [qualified-symbol (get-in namespaces [ns :rename-macros sym])\n            full-ns (symbol (namespace qualified-symbol))\n            sym     (symbol (name qualified-symbol))]\n        (get-in namespaces [full-ns :macros sym]))\n\n      :else\n      (let [ns (cond\n                 (some? (get-in namespaces [ns :macros sym])) ns\n                 (core-name? env sym) #?(:clj  'cljs.core\n                                         :cljs CLJS_CORE_MACROS_SYM))]\n        (when (some? ns)\n          #?(:clj  (get-in namespaces [ns :macros sym])\n             :cljs (get-in namespaces [ns :defs sym])))))))\n\n(declare analyze analyze-symbol analyze-seq)\n\n;; Note: This is the set of parse multimethod dispatch values,\n;; along with '&, and differs from cljs.core/special-symbol?\n(def specials '#{if def fn* do let* loop* letfn* throw try recur new set!\n                 ns deftype* defrecord* . js* & quote case* var ns*})\n\n(def ^:dynamic *recur-frames* nil)\n(def ^:dynamic *loop-lets* ())\n(def ^:dynamic *allow-redef* false)\n(def ^:dynamic *allow-ns* true)\n\n#?(:clj\n   (defmacro disallowing-recur [& body]\n     `(binding [*recur-frames* (cons nil *recur-frames*)] ~@body)))\n\n#?(:clj\n   (defmacro allowing-redef [& body]\n     `(binding [*allow-redef* true] ~@body)))\n\n#?(:clj\n   (defmacro disallowing-ns* [& body]\n     `(binding [*allow-ns* false] ~@body)))\n\n;; TODO: move this logic out - David\n(defn analyze-keyword\n  [env sym]\n  (register-constant! env sym)\n  {:op :const :val sym :env env :form sym :tag 'cljs.core/Keyword})\n\n(defn get-tag [e]\n  (if-some [tag (-> e :form meta :tag)]\n    tag\n    (if-some [tag (-> e :tag)]\n      tag\n      (-> e :info :tag))))\n\n(defn find-matching-method [f params]\n  ;; if local fn, need to look in :info\n  (let [methods (or (:methods f) (-> f :info :methods))\n        c       (count params)]\n    (some\n      (fn [m]\n        (and (or (== (:fixed-arity m) c)\n                 (:variadic? m))\n             m))\n      methods)))\n\n(defn type?\n  #?(:cljs {:tag boolean})\n  [env t]\n  ;; don't use resolve-existing-var to avoid warnings\n  (when (and (some? t) (symbol? t))\n    (let [var (resolve-var env t)]\n      (if-some [type (:type var)]\n        type\n          (if-some [type (-> var :info :type)]\n            type\n              (if-some [proto (:protocol-symbol var)]\n                proto\n                (get '#{cljs.core/PersistentHashMap cljs.core/List} t)))))))\n\n(declare infer-tag)\n\n(def NOT_NATIVE '#{clj not-native})\n\n(def BOOLEAN_OR_SEQ '#{boolean seq})\n\n(defn unwrap-quote [{:keys [op] :as expr}]\n  (if #?(:clj (= op :quote)\n         :cljs (keyword-identical? op :quote))\n    (:expr expr)\n    expr))\n\n(defn infer-if [env e]\n  (let [{:keys [op form]} (unwrap-quote (:test e))\n        then-tag (infer-tag env (:then e))]\n    (if (and #?(:clj (= op :const)\n                :cljs (keyword-identical? op :const))\n             (not (nil? form))\n             (not (false? form)))\n      then-tag\n      (let [else-tag (infer-tag env (:else e))]\n        (cond\n          (or #?(:clj (= then-tag else-tag)\n                 :cljs (symbol-identical? then-tag else-tag))\n              #?(:clj (= else-tag IGNORE_SYM)\n                 :cljs (symbol-identical? else-tag IGNORE_SYM))) then-tag\n          #?(:clj (= then-tag IGNORE_SYM)\n             :cljs (symbol-identical? then-tag IGNORE_SYM)) else-tag\n          ;; TODO: temporary until we move not-native -> clj - David\n          (and (or (some? (get NOT_NATIVE then-tag)) (type? env then-tag))\n               (or (some? (get NOT_NATIVE else-tag)) (type? env else-tag)))\n          'clj\n          :else\n          (if (and (some? (get BOOLEAN_OR_SEQ then-tag))\n                   (some? (get BOOLEAN_OR_SEQ else-tag)))\n            'seq\n            (let [then-tag (if #?(:clj (set? then-tag)\n                                  :cljs (cljs-set? then-tag))\n                             then-tag #{then-tag})\n                  else-tag (if #?(:clj (set? else-tag)\n                                  :cljs (cljs-set? else-tag))\n                             else-tag #{else-tag})]\n              (into then-tag else-tag))))))))\n\n(defn infer-invoke [env {f :fn :keys [args] :as e}]\n  (let [me (assoc (find-matching-method f args) :op :fn-method)]\n    (if-some [ret-tag (infer-tag env me)]\n      ret-tag\n      (let [{:keys [info]} f]\n        (if-some [ret-tag (if (or (true? (:fn-var info))\n                                  (true? (:js-fn-var info)))\n                            (:ret-tag info)\n                            (when (= 'js (:ns info)) 'js))]\n          ret-tag\n          ANY_SYM)))))\n\n(defn infer-tag\n  \"Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node\"\n  [env e]\n    (if-some [tag (get-tag e)]\n      tag\n      (case (:op e)\n        :recur    IGNORE_SYM\n        :throw    IGNORE_SYM\n        :let      (infer-tag env (:body e))\n        :loop     (infer-tag env (:body e))\n        :do       (infer-tag env (:ret e))\n        :fn-method (infer-tag env (:body e))\n        :def      (infer-tag env (:init e))\n        :invoke   (infer-invoke env e)\n        :if       (infer-if env e)\n        :const    (case (:form e)\n                    true BOOLEAN_SYM\n                    false BOOLEAN_SYM\n                    ANY_SYM)\n        :quote    (infer-tag env (:expr e))\n        (:var :local :js-var :binding)\n                  (if-some [init (:init e)]\n                    (infer-tag env init)\n                    (infer-tag env (:info e)))\n        (:host-field :host-call)      ANY_SYM\n        :js       ANY_SYM\n        nil)))\n\n(defmulti parse (fn [op & rest] op))\n\n(defn var-meta\n  ([var]\n    (var-meta var nil))\n  ([var expr-env]\n   (let [sym (:name var)\n         ks [:ns :doc :file :line :column]\n         m (merge\n             (let [user-meta (:meta var)\n                   uks (keys user-meta)]\n               (zipmap uks\n                 (map #(list 'quote (get user-meta %)) uks)))\n             (assoc (zipmap ks (map #(list 'quote (get var %)) ks))\n               :name `(quote ~(symbol (name (:name var))))\n               :test `(when ~sym (.-cljs$lang$test ~sym))\n               :arglists (let [arglists (:arglists var)\n                               arglists' (if (= 'quote (first arglists))\n                                           (second arglists)\n                                           arglists)]\n                           (list 'quote\n                             (doall (map with-meta arglists'\n                                      (:arglists-meta var)))))))]\n     (if expr-env\n       (analyze expr-env m)\n       m))))\n\n(defn var-ast\n  [env sym]\n  ;; we need to dissoc locals for the `(let [x 1] (def x x))` case, because we\n  ;; want the var's AST and `resolve-var` will check locals first. - António Monteiro\n  (binding [*private-var-access-nowarn* true]\n    (let [env      (dissoc env :locals)\n          var      (resolve-var env sym (confirm-var-exists-throw))\n          expr-env (assoc env :context :expr)]\n      (when-some [var-ns (:ns var)]\n        {:var  (analyze expr-env sym)\n         :sym  (analyze expr-env `(quote ~(symbol (name var-ns) (name (:name var)))))\n         :meta (var-meta var expr-env)}))))\n\n(defmethod parse 'var\n  [op env [_ sym :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to var\")))\n  (when-not (symbol? sym)\n    (throw (error env \"Argument to var must be symbol\")))\n  (merge\n    {:env env\n     :op :the-var\n     :children [:var :sym :meta]\n     :form form}\n    (var-ast env sym)))\n\n(def ^:private predicate->tag\n  '{\n    ;; Base values\n    cljs.core/nil?            clj-nil\n    cljs.core/undefined?      clj-nil\n    cljs.core/false?          boolean\n    cljs.core/true?           boolean\n    cljs.core/zero?           number\n    cljs.core/infinite?       number\n\n    ;; Base types\n    cljs.core/boolean?        boolean\n    cljs.core/string?         string\n    cljs.core/char?           string\n    cljs.core/number?         number\n    cljs.core/integer?        number\n    cljs.core/float?          number\n    cljs.core/double?         number\n    cljs.core/array?          array\n    cljs.core/seq?            seq\n\n    ;; JavaScript types\n    cljs.core/regexp?         js/RegExp\n\n    ;; Types\n    cljs.core/keyword?        cljs.core/Keyword\n    cljs.core/var?            cljs.core/Var\n    cljs.core/symbol?         cljs.core/Symbol\n    cljs.core/volatile?       cljs.core/Volatile\n    cljs.core/delay?          cljs.core/Delay\n    cljs.core/reduced?        cljs.core/Reduced\n\n    ;;; Note: For non-marker protocol entries below, we\n    ;;; omit predicates that are based on satisfies? because\n    ;;; we cannot safely apply the fast-path optimization\n    ;;; which is enabled when the protocol type is inferred.\n    ;;; If adding a non-marker entry here, also add a test to\n    ;;; cljs.extend-to-native-test/test-extend-to-protocols.\n\n    ;; Protocols\n    cljs.core/map-entry?      cljs.core/IMapEntry\n    cljs.core/uuid?           cljs.core/IUUID\n    cljs.core/tagged-literal? cljs.core/ITaggedLiteral\n    cljs.core/inst?           cljs.core/Inst\n    cljs.core/sequential?     cljs.core/ISequential\n    cljs.core/list?           cljs.core/IList\n    cljs.core/record?         cljs.core/IRecord\n    cljs.core/chunked-seq?    cljs.core/IChunkedSeq\n\n    ;; Composites\n    cljs.core/seqable?        #{cljs.core/ISeqable array string}\n    cljs.core/ident?          #{cljs.core/Keyword cljs.core/Symbol}\n    })\n\n(defn- simple-predicate-induced-tag\n  \"Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x).\"\n  [env test]\n  (when (and (list? test)\n             (== 2 (count test))\n             (every? symbol? test))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when-let [tag (predicate->tag (:name analyzed-fn))]\n          (let [sym (last test)]\n            (when (and (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(defn- type-check-induced-tag\n  \"Look for a type-check-induced tag when the test expression is the use of\n   instance? on a local, as in (instance? ICounted x).\"\n  [env test]\n  (when (and (list? test)\n             (== 3 (count test))\n             (every? symbol? test))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when ('#{cljs.core/instance?} (:name analyzed-fn))\n          (let [analyzed-type (no-warn (analyze (assoc env :context :expr) (second test)))\n                tag (:name analyzed-type)\n                sym (last test)]\n            (when (and (= :var (:op analyzed-type))\n                       (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(defn- truth-induced-tag\n  \"Refine a tag to exclude clj-nil if the test is a simple symbol.\"\n  [env test]\n  (when (and (symbol? test)\n             (nil? (namespace test)))\n    (let [analyzed-symbol (no-warn (analyze (assoc env :context :expr) test))]\n      (when-let [tag (:tag analyzed-symbol)]\n        (when (and (set? tag)\n                   (contains? tag 'clj-nil))\n          [test (canonicalize-type (disj tag 'clj-nil))])))))\n\n(defn- set-test-induced-tags\n  \"Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type.\"\n  [env test]\n  (let [[local tag] (or (simple-predicate-induced-tag env test)\n                        (type-check-induced-tag env test)\n                        (truth-induced-tag env test))]\n    (cond-> env\n      local (assoc-in [:locals local :tag] tag))))\n\n(defmethod parse 'if\n  [op env [_ test then else :as form] name _]\n  (when (< (count form) 3)\n    (throw (compile-syntax-error env \"Too few arguments to if\" 'if)))\n  (when (> (count form) 4)\n    (throw (compile-syntax-error env \"Too many arguments to if\" 'if)))\n  (let [test-expr (disallowing-recur (analyze (assoc env :context :expr) test))\n        then-expr (allowing-redef (analyze (set-test-induced-tags env test) then))\n        else-expr (allowing-redef (analyze env else))]\n    {:env env :op :if :form form\n     :test test-expr :then then-expr :else else-expr\n     :unchecked *unchecked-if*\n     :children [:test :then :else]}))\n\n(defmethod parse 'case*\n  [op env [_ sym tests thens default :as form] name _]\n  (assert (symbol? sym) \"case* must switch on symbol\")\n  (assert (every? vector? tests) \"case* tests must be grouped in vectors\")\n  (let [expr-env (assoc env :context :expr)\n        v        (disallowing-recur (analyze expr-env sym))\n        tests    (mapv #(mapv (fn [t] (analyze expr-env t)) %) tests)\n        thens    (mapv #(analyze env %) thens)\n        nodes    (mapv (fn [tests then]\n                         {:op :case-node\n                          ;synthetic node, no :form\n                          :env env\n                          :tests (mapv (fn [test]\n                                         {:op :case-test\n                                          :form (:form test)\n                                          :env expr-env\n                                          :test test\n                                          :children [:test]})\n                                       tests)\n                          :then {:op :case-then\n                                 :form (:form then)\n                                 :env env\n                                 :then then\n                                 :children [:then]}\n                          :children [:tests :then]})\n                       tests\n                       thens)\n        default  (analyze env default)]\n    (assert (every? (fn [t]\n                      (or\n                        (-> t :info :const)\n                        (and (= :const (:op t))\n                             ((some-fn number? string? char?) (:form t)))))\n              (apply concat tests))\n      \"case* tests must be numbers, strings, or constants\")\n    {:env env :op :case :form form\n     :test v :nodes nodes :default default\n     :children [:test :nodes :default]}))\n\n(defmethod parse 'throw\n  [op env [_ throw-form :as form] name _]\n  (cond\n    (= 1 (count form))\n    (throw\n      (error env \"Too few arguments to throw, throw expects a single Error instance\"))\n    (< 2 (count form))\n    (throw\n      (error env \"Too many arguments to throw, throw expects a single Error instance\")))\n  (let [throw-expr (disallowing-recur (analyze (assoc env :context :expr) throw-form))]\n    {:env env :op :throw :form form\n     :exception throw-expr\n     :children [:exception]}))\n\n(defmethod parse 'try\n  [op env [_ & body :as form] name _]\n  (let [catchenv (update-in env [:context] #(if (= :expr %) :return %))\n        catch? (every-pred seq? #(= (first %) 'catch))\n        default? (every-pred catch? #(= (second %) :default))\n        finally? (every-pred seq? #(= (first %) 'finally))\n\n        {:keys [body cblocks dblock fblock]}\n        (loop [parser {:state :start :forms body\n                       :body [] :cblocks [] :dblock nil :fblock nil}]\n          (if (seq? (:forms parser))\n            (let [[form & forms*] (:forms parser)\n                  parser* (assoc parser :forms forms*)]\n              (case (:state parser)\n                :start (cond\n                         (catch? form) (recur (assoc parser :state :catches))\n                         (finally? form) (recur (assoc parser :state :finally))\n                         :else (recur (update-in parser* [:body] conj form)))\n                :catches (cond\n                           (default? form) (recur (assoc parser* :dblock form :state :finally))\n                           (catch? form) (recur (update-in parser* [:cblocks] conj form))\n                           (finally? form) (recur (assoc parser :state :finally))\n                           :else (throw (error env \"Invalid try form\")))\n                :finally (recur (assoc parser* :fblock form :state :done))\n                :done (throw (error env \"Unexpected form after finally\"))))\n            parser))\n\n        finally (when (seq fblock)\n                  (-> (disallowing-recur (analyze (assoc env :context :statement) `(do ~@(rest fblock))))\n                      (assoc :body? true)))\n        e (when (or (seq cblocks) dblock) (gensym \"e\"))\n        default (if-let [[_ _ name & cb] dblock]\n                  `(cljs.core/let [~name ~e] ~@cb)\n                  `(throw ~e))\n        cblock (if (seq cblocks)\n                 `(cljs.core/cond\n                   ~@(mapcat\n                      (fn [[_ type name & cb]]\n                        (when name (assert (not (namespace name)) \"Can't qualify symbol in catch\"))\n                        `[(cljs.core/instance? ~type ~e)\n                          (cljs.core/let [~name ~e] ~@cb)])\n                      cblocks)\n                   :else ~default)\n                 default)\n        locals (:locals catchenv)\n        locals (if e\n                 (assoc locals e\n                        {:name e\n                         :line (get-line e env)\n                         :column (get-col e env)})\n                 locals)\n        catch (when cblock\n                (disallowing-recur (analyze (assoc catchenv :locals locals) cblock)))\n        try (disallowing-recur (analyze (if (or e finally) catchenv env) `(do ~@body)))]\n\n    {:env env :op :try :form form\n     :body (assoc try :body? true)\n     :finally finally\n     :name e\n     :catch catch\n     :children (vec\n                 (concat [:body]\n                         (when catch\n                           [:catch])\n                         (when finally\n                           [:finally])))}))\n\n(defn valid-proto [x]\n  (when (symbol? x) x))\n\n(defn elide-env [env ast opts]\n  (dissoc ast :env))\n\n(defn replace-env-pass [new-env]\n  (fn [env ast opts]\n    (assoc ast :env new-env)))\n\n(defn ast-children [ast]\n  (mapcat (fn [c]\n            (let [g (get ast c)]\n              (cond\n                (vector? g) g\n                g [g])))\n          (:children ast)))\n\n(defn constant-value?\n  [{:keys [op] :as ast}]\n  (or (#{:quote :const} op)\n      (and (#{:map :set :vector} op)\n           (every? constant-value? (ast-children ast)))))\n\n(defn const-expr->constant-value [{:keys [op] :as e}]\n  (case op\n    :quote  (const-expr->constant-value (:expr e))\n    :const  (:val e)\n    :map    (zipmap (map const-expr->constant-value (:keys e))\n                    (map const-expr->constant-value (:vals e)))\n    :set    (into #{} (map const-expr->constant-value (:items e)))\n    :vector (into [] (map const-expr->constant-value (:items e)))))\n\n(defn- earmuffed? [sym]\n  (let [s (name sym)]\n    (and (> (count s) 2)\n         (string/starts-with? s \"*\")\n         (string/ends-with? s \"*\"))))\n\n(defn- core-ns? [ns-sym]\n  (let [s (name ns-sym)]\n    (and (not= 'cljs.user ns-sym)\n         (or (string/starts-with? s \"cljs.\")\n             (string/starts-with? s \"clojure.\")))))\n\n(defmethod parse 'def\n  [op env form _ _]\n  (when (> (count form) 4)\n    (throw (error env \"Too many arguments to def\")))\n  (let [pfn (fn\n              ([_ sym] {:sym sym})\n              ([_ sym init] {:sym sym :init init})\n              ([_ sym doc init] {:sym sym :doc doc :init init}))\n        args (apply pfn form)\n        sym (:sym args)\n        const? (-> sym meta :const)\n        sym-meta (meta sym)\n        tag (-> sym meta :tag)\n        protocol (-> sym meta :protocol valid-proto)\n        dynamic (-> sym meta :dynamic)\n        ns-name (-> env :ns :name)\n        locals (:locals env)\n        clash-ns (symbol (str ns-name \".\" sym))\n        sym-ns   (namespace sym)\n        sym      (cond\n                   (and sym-ns (not #?(:clj  (= (symbol sym-ns) ns-name)\n                                       :cljs (symbol-identical? (symbol sym-ns) ns-name))))\n                   (throw (error env (str \"Can't def ns-qualified name in namespace \" sym-ns)))\n\n                   (some? sym-ns)\n                   (symbol (name sym))\n\n                   :else sym)]\n    (when (some? (get-in @env/*compiler* [::namespaces clash-ns]))\n      (warning :ns-var-clash env\n        {:ns (symbol (str ns-name \".\" sym))\n         :var (symbol (str ns-name) (str sym))}))\n    (when (some? (:const (resolve-var (dissoc env :locals) sym)))\n      (throw (error env \"Can't redefine a constant\")))\n    (when-some [doc (:doc args)]\n      (when-not (string? doc)\n        (throw (error env \"Too many arguments to def\"))))\n    (when (and (not dynamic)\n               (earmuffed? sym)\n               (not (core-ns? ns-name)))\n      (warning :non-dynamic-earmuffed-var env\n        {:var (str sym)}))\n    (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n      (when (and (not *allow-redef*)\n                 (not (:declared v))\n                 (not (:declared sym-meta))\n                 *file-defs*\n                 (get @*file-defs* sym))\n        (warning :redef-in-file env {:sym sym :line (:line v)}))\n      (when (and (:declared v)\n                 (:arglists v)\n                 (not= (:arglists v) (:arglists sym-meta)))\n        (warning :declared-arglists-mismatch env {:ns-name  ns-name :sym sym\n                                                  :declared (second (:arglists v))\n                                                  :defined  (second (:arglists sym-meta))})))\n    (let [env (if (or (and (not= ns-name 'cljs.core)\n                           (core-name? env sym))\n                      (some? (get-in @env/*compiler* [::namespaces ns-name :uses sym])))\n                (let [ev (resolve-existing-var (dissoc env :locals)\n                           ;; ::no-resolve true is to suppress \"can't take value\n                           ;; of macro warning\" when sym resolves to a macro\n                           (with-meta sym {::no-resolve true}))\n                      conj-to-set (fnil conj #{})]\n                  (when (public-name? (:ns ev) sym)\n                    (warning :redef env {:sym sym :ns (:ns ev) :ns-name ns-name}))\n                  (swap! env/*compiler* update-in [::namespaces ns-name :excludes]\n                     conj-to-set sym)\n                  (update-in env [:ns :excludes] conj-to-set sym))\n                env)\n          var-name (:name (resolve-var (dissoc env :locals) sym))\n          init-expr (when (contains? args :init)\n                      (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n                        (merge\n                          {:name var-name}\n                          sym-meta\n                          (when (true? dynamic) {:dynamic true})\n                          (source-info var-name env)))\n                      (disallowing-recur\n                        (disallowing-ns*\n                          (analyze (assoc env :context :expr) (:init args) sym))))\n          fn-var? (and (some? init-expr) (= (:op init-expr) :fn))\n          tag (if fn-var?\n                (or (:ret-tag init-expr) tag (:inferred-ret-tag init-expr))\n                (or tag (:tag init-expr)))\n          export-as (when-let [export-val (-> sym meta :export)]\n                      (if (= true export-val) var-name export-val))\n          doc (or (:doc args) (-> sym meta :doc))]\n      (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n        (when (and (not (-> sym meta :declared))\n                   (and (true? (:fn-var v)) (not fn-var?)))\n          (warning :fn-var env {:ns-name ns-name :sym sym})))\n\n      ;; declare must not replace any analyzer data of an already def'd sym\n      (when (or (nil? (get-in @env/*compiler* [::namespaces ns-name :defs sym]))\n                (not (:declared sym-meta)))\n        (when *file-defs*\n          (swap! *file-defs* conj sym))\n\n        (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n          (merge\n            {:name var-name}\n            ;; remove actual test metadata, as it includes non-valid EDN and\n            ;; cannot be present in analysis cached to disk - David\n            (cond-> sym-meta\n              (:test sym-meta) (assoc :test true))\n            {:meta (-> sym-meta\n                       (dissoc :test)\n                       (update-in [:file]\n                         (fn [f]\n                           (if (= (-> env :ns :name) 'cljs.core)\n                             \"cljs/core.cljs\"\n                             f))))}\n            (when doc {:doc doc})\n            (when const?\n              (let [const-expr\n                    (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n                      (analyze env (:init args)))]\n                (when (constant-value? const-expr)\n                  {:const-expr const-expr})))\n            (when (true? dynamic) {:dynamic true})\n            (source-info var-name env)\n            ;; the protocol a protocol fn belongs to\n            (when protocol\n              {:protocol protocol})\n            ;; symbol for reified protocol\n            (when-let [protocol-symbol (-> sym meta :protocol-symbol)]\n              {:protocol-symbol protocol-symbol\n               :info (-> protocol-symbol meta :protocol-info)\n               :impls #{}})\n            (when fn-var?\n              (let [params (map #(vec (map :name (:params %))) (:methods init-expr))]\n                (merge\n                  {:fn-var (not (:macro sym-meta))\n                   ;; protocol implementation context\n                   :protocol-impl (:protocol-impl init-expr)\n                   ;; inline protocol implementation context\n                   :protocol-inline (:protocol-inline init-expr)}\n                  (if-some [top-fn-meta (:top-fn sym-meta)]\n                    top-fn-meta\n                    {:variadic? (:variadic? init-expr)\n                     :max-fixed-arity (:max-fixed-arity init-expr)\n                     :method-params params\n                     :arglists (:arglists sym-meta)\n                     :arglists-meta (doall (map meta (:arglists sym-meta)))}))))\n            (when (and (:declared sym-meta)\n                       (:arglists sym-meta))\n              {:declared true\n               :fn-var true\n               :method-params (second (:arglists sym-meta))})\n            (if (and fn-var? (some? tag))\n              {:ret-tag tag}\n              (when tag {:tag tag})))))\n      (merge\n        {:env env\n         :op :def\n         :form form\n         :ns ns-name\n         :name var-name\n         :var (assoc\n                (analyze\n                  (-> env (dissoc :locals)\n                    (assoc :context :expr)\n                    (assoc :def-var true))\n                  sym)\n                :op :var)\n         :doc doc\n         :jsdoc (:jsdoc sym-meta)}\n        (when (true? (:def-emits-var env))\n          {:var-ast (var-ast env sym)})\n        (when-some [test (:test sym-meta)]\n          {:test (analyze (assoc env :context :expr) test)})\n        (when (some? tag)\n          (if fn-var?\n            {:ret-tag tag}\n            {:tag tag}))\n        (when (true? dynamic) {:dynamic true})\n        (when (some? export-as) {:export export-as})\n        (if (some? init-expr)\n          {:init init-expr\n           :children [:var :init]}\n          {:children [:var]})))))\n\n(defn analyze-fn-method-param [env]\n  (fn [[locals params] [arg-id name]]\n    (when (namespace name)\n      (throw (error env (str \"Can't use qualified name as parameter: \" name))))\n    (let [line   (get-line name env)\n          column (get-col name env)\n          nmeta  (meta name)\n          tag    (:tag nmeta)\n          shadow (when (some? locals)\n                   (handle-symbol-local name (locals name)))\n          env    (merge (select-keys env [:context])\n                   {:line line :column column})\n          param  {:op :binding\n                  :name name\n                  :line line\n                  :column column\n                  :tag tag\n                  :shadow shadow\n                  :local :arg\n                  :arg-id arg-id\n                  ;; Give the fn params the same shape\n                  ;; as a :var, so it gets routed\n                  ;; correctly in the compiler\n                  :env env\n                  :info {:name name :shadow shadow}\n                  :binding-form? true}]\n     [(assoc locals name param) (conj params param)])))\n\n(defn analyze-fn-method-body [env form recur-frames]\n  (binding [*recur-frames* recur-frames]\n    (analyze env form)))\n\n(defn- analyze-fn-method [env locals form type analyze-body?]\n  (let [param-names     (first form)\n        variadic        (boolean (some '#{&} param-names))\n        param-names     (vec (remove '#{&} param-names))\n        body            (next form)\n        step            (analyze-fn-method-param env)\n        step-init       [locals []]\n        [locals params] (reduce step step-init (map-indexed vector param-names))\n        params'         (if (true? variadic)\n                          (butlast params)\n                          params)\n        fixed-arity     (count params')\n        recur-frame     {:protocol-impl (:protocol-impl env)\n                         :params        params\n                         :flag          (atom nil)\n                         :tags          (atom [])}\n        recur-frames    (cons recur-frame *recur-frames*)\n        body-env        (assoc env :context :return :locals locals)\n        body-form       `(do ~@body)\n        expr            (when analyze-body?\n                          (analyze-fn-method-body body-env body-form recur-frames))\n        recurs          @(:flag recur-frame)]\n    (merge\n      {:env env\n       :op :fn-method\n       :variadic? variadic\n       :params params\n       :fixed-arity fixed-arity\n       :type type\n       :form form\n       :recurs recurs}\n      (if (some? expr)\n        {:body (assoc expr :body? true)\n         :children [:params :body]}\n        {:children [:params]}))))\n\n(declare analyze-wrap-meta)\n\n(defn fn-name-var [env locals name]\n  (when (some? name)\n    (let [ns       (-> env :ns :name)\n          shadow   (handle-symbol-local name (get locals name))\n          shadow   (when (nil? shadow)\n                     (get-in env [:js-globals name]))\n          fn-scope (:fn-scope env)\n          name-var {:name name\n                    :op :binding\n                    :local :fn\n                    :info {:fn-self-name true\n                           :fn-scope fn-scope\n                           :ns ns\n                           :shadow shadow}}\n          tag      (-> name meta :tag)\n          ret-tag  (when (some? tag)\n                     {:ret-tag tag})]\n      (merge name-var ret-tag))))\n\n(defn analyze-fn-methods-pass2* [menv locals type meths]\n  (mapv #(analyze-fn-method menv locals % type true) meths))\n\n(defn analyze-fn-methods-pass2 [menv locals type meths]\n  (analyze-fn-methods-pass2* menv locals type meths))\n\n(defmethod parse 'fn*\n  [op env [_ & args :as form] name _]\n  (let [named-fn?    (symbol? (first args))\n        [name meths] (if named-fn?\n                         [(first args) (next args)]\n                         [name (seq args)])\n        ;; turn (fn [] ...) into (fn ([]...))\n        meths        (if (vector? (first meths))\n                       (list meths)\n                       meths)\n        locals       (:locals env)\n        name-var     (fn-name-var env locals name)\n        env          (if (some? name)\n                       (update-in env [:fn-scope] conj name-var)\n                       env)\n        locals       (if (and (some? locals)\n                              named-fn?)\n                       (assoc locals name name-var)\n                       locals)\n        form-meta    (meta form)\n        type         (::type form-meta)\n        proto-impl   (::protocol-impl form-meta)\n        proto-inline (::protocol-inline form-meta)\n        menv         (if (> (count meths) 1)\n                       (assoc env :context :expr)\n                       env)\n        menv         (merge menv\n                       {:protocol-impl proto-impl\n                        :protocol-inline proto-inline})\n        methods      (map #(disallowing-ns* (analyze-fn-method menv locals % type (nil? name))) meths)\n        mfa          (transduce (map :fixed-arity) max 0 methods)\n        variadic     (boolean (some :variadic? methods))\n        locals       (if named-fn?\n                       (update-in locals [name] assoc\n                         ;; TODO: can we simplify? - David\n                         :fn-var true\n                         :variadic? variadic\n                         :max-fixed-arity mfa\n                         :method-params (map :params methods))\n                       locals)\n        methods      (if (some? name)\n                       ;; a second pass with knowledge of our function-ness/arity\n                       ;; lets us optimize self calls\n                       (disallowing-ns* (analyze-fn-methods-pass2 menv locals type meths))\n                       (vec methods))\n        form         (vary-meta form dissoc ::protocol-impl ::protocol-inline ::type)\n        js-doc       (when (true? variadic)\n                       \"@param {...*} var_args\")\n        children     (if (some? name-var)\n                       [:local :methods]\n                       [:methods])\n        inferred-ret-tag (let [inferred-tags (map (partial infer-tag env) (map :body methods))]\n                           (when (apply = inferred-tags)\n                             (first inferred-tags)))\n        ast   (merge {:op :fn\n                      :env env\n                      :form form\n                      :name name-var\n                      :methods methods\n                      :variadic? variadic\n                      :tag 'function\n                      :inferred-ret-tag inferred-ret-tag\n                      :recur-frames *recur-frames*\n                      :loop-lets *loop-lets*\n                      :jsdoc [js-doc]\n                      :max-fixed-arity mfa\n                      :protocol-impl proto-impl\n                      :protocol-inline proto-inline\n                      :children children}\n                     (when (some? name-var)\n                       {:local name-var}))]\n    (let [variadic-methods (into []\n                             (comp (filter :variadic?) (take 1))\n                             methods)\n          variadic-params  (if (pos? (count variadic-methods))\n                             (count (:params (nth variadic-methods 0)))\n                             0)\n          param-counts     (into [] (map (comp count :params)) methods)]\n      (when (< 1 (count variadic-methods))\n        (warning :multiple-variadic-overloads env {:name name-var}))\n      (when (not (or (zero? variadic-params) (== variadic-params (+ 1 mfa))))\n        (warning :variadic-max-arity env {:name name-var}))\n      (when (not= (distinct param-counts) param-counts)\n        (warning :overload-arity env {:name name-var})))\n    (analyze-wrap-meta ast)))\n\n(defmethod parse 'letfn*\n  [op env [_ bindings & exprs :as form] name _]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error env \"bindings must be vector of even number of elements\")))\n  (let [n->fexpr (into {} (map (juxt first second) (partition 2 bindings)))\n        names    (keys n->fexpr)\n        context  (:context env)\n        ;; first pass to collect information for recursive references\n        [meth-env bes]\n        (reduce (fn [[{:keys [locals] :as env} bes] n]\n                  (let [ret-tag (-> n meta :tag)\n                        fexpr (no-warn (analyze env (n->fexpr n)))\n                        be (cond->\n                             {:name n\n                              :op :binding\n                              :fn-var true\n                              :line (get-line n env)\n                              :column (get-col n env)\n                              :local :letfn\n                              :shadow (handle-symbol-local n (locals n))\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr))}\n                             ret-tag (assoc :ret-tag ret-tag))]\n                    [(assoc-in env [:locals n] be)\n                     (conj bes be)]))\n                [env []] names)\n        meth-env (assoc meth-env :context :expr)\n        ;; the real pass\n        [meth-env bes]\n        (reduce (fn [[meth-env bes] {:keys [name shadow] :as be}]\n                  (let [env (assoc-in meth-env [:locals name] shadow)\n                        fexpr (analyze env (n->fexpr name))\n                        be' (assoc be\n                              :init fexpr\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr)))]\n                    [(assoc-in env [:locals name] be')\n                     (conj bes be')]))\n          [meth-env []] bes)\n        expr (-> (analyze (assoc meth-env :context (if (= :expr context) :return context)) `(do ~@exprs))\n                 (assoc :body? true))]\n    {:env env :op :letfn :bindings bes :body expr :form form\n     :children [:bindings :body]}))\n\n(defn analyze-do-statements* [env exprs]\n  (mapv #(analyze (assoc env :context :statement) %) (butlast exprs)))\n\n(defn analyze-do-statements [env exprs]\n  (disallowing-recur (analyze-do-statements* env exprs)))\n\n(defmethod parse 'do\n  [op env [_ & exprs :as form] _ _]\n  (let [statements (analyze-do-statements env exprs)]\n    (if (<= (count exprs) 1)\n      (let [ret      (analyze env (first exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements :ret ret\n         :children children})\n      (let [ret-env  (if (= :statement (:context env))\n                       (assoc env :context :statement)\n                       (assoc env :context :return))\n            ret      (analyze ret-env (last exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements\n         :ret ret\n         :children children}))))\n\n(defn analyze-let-binding-init [env init loop-lets]\n  (binding [*loop-lets* loop-lets]\n    (analyze env init)))\n\n(defn get-let-tag [name init-expr]\n  (if-some [tag (-> name meta :tag)]\n      tag\n        (if-some [tag (-> init-expr :tag)]\n          tag\n          (-> init-expr :info :tag))))\n\n(defn analyze-let-bindings* [encl-env bindings op]\n  (loop [bes []\n         env (assoc encl-env :context :expr)\n         bindings (seq (partition 2 bindings))]\n\n      (if-some [[name init] (first bindings)]\n        (let []\n          (when (or (some? (namespace name))\n                  #?(:clj  (.contains (str name) \".\")\n                     :cljs ^boolean (goog.string/contains (str name) \".\")))\n            (throw (error encl-env (str \"Invalid local name: \" name))))\n          (let [init-expr (analyze-let-binding-init env init (cons {:params bes} *loop-lets*))\n                line (get-line name env)\n                col (get-col name env)\n                shadow (handle-symbol-local name (get-in env [:locals name]))\n                be {:name name\n                    :line line\n                    :column col\n                    :init init-expr\n                    :tag (get-let-tag name init-expr)\n                    :local op\n                    :shadow shadow\n                    ;; Give let* bindings same shape as var so\n                    ;; they get routed correctly in the compiler\n                    :op :binding\n                    :env {:line line :column col}\n                    :info {:name name\n                           :shadow shadow}\n                    :binding-form? true}\n                be (if (= :fn (:op init-expr))\n                     ;; TODO: can we simplify - David\n                     (merge be\n                       {:fn-var true\n                        ;; copy over the :fn-method information we need for invoke type inference\n                        :methods (into [] (map #(select-keys % [:tag :fixed-arity :variadic?]) (:methods init-expr)))\n                        :variadic? (:variadic? init-expr)\n                        :max-fixed-arity (:max-fixed-arity init-expr)\n                        :method-params (map :params (:methods init-expr))})\n                     be)\n                be (add-identity be)]\n            (recur (conj bes be)\n              (assoc-in env [:locals name] be)\n              (next bindings))))\n        [bes env])))\n\n(defn analyze-let-bindings [encl-env bindings op]\n  (disallowing-recur (analyze-let-bindings* encl-env bindings op)))\n\n(defn analyze-let-body* [env context exprs]\n  (analyze (assoc env :context (if (= :expr context) :return context)) `(do ~@exprs)))\n\n(defn analyze-let-body [env context exprs recur-frames loop-lets]\n  (binding [*recur-frames* recur-frames\n            *loop-lets* loop-lets]\n    (analyze-let-body* env context exprs)))\n\n(defn analyze-let\n  [encl-env [_ bindings & exprs :as form] is-loop widened-tags]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error encl-env \"bindings must be vector of even number of elements\")))\n  (let [context      (:context encl-env)\n        op           (if (true? is-loop) :loop :let)\n        bindings     (if widened-tags\n                       (vec (mapcat\n                              (fn [[name init] widened-tag]\n                                [(vary-meta name assoc :tag widened-tag) init])\n                              (partition 2 bindings)\n                              widened-tags))\n                       bindings)\n        [bes env]    (analyze-let-bindings encl-env bindings op)\n        recur-frame  (when (true? is-loop)\n                       {:params bes\n                        :flag (atom nil)\n                        :tags (atom (mapv :tag bes))})\n        recur-frames (if recur-frame\n                       (cons recur-frame *recur-frames*)\n                       *recur-frames*)\n        loop-lets    (cond\n                       (true? is-loop) *loop-lets*\n                       (some? *loop-lets*) (cons {:params bes} *loop-lets*))\n        ;; Accumulate warnings for deferred replay iff there's a possibility of re-analyzing\n        warn-acc     (when (and is-loop\n                                (not widened-tags))\n                       (atom []))\n        expr         (if warn-acc\n                       (with-warning-handlers [(accumulating-warning-handler warn-acc)]\n                         (analyze-let-body env context exprs recur-frames loop-lets))\n                       (analyze-let-body env context exprs recur-frames loop-lets))\n        children     [:bindings :body]\n        nil->any     (fnil identity 'any)]\n    (if (and is-loop\n             (not widened-tags)\n             (not= (mapv nil->any @(:tags recur-frame))\n                   (mapv (comp nil->any :tag) bes)))\n      (recur encl-env form is-loop @(:tags recur-frame))\n      (do\n        (when warn-acc\n          (replay-accumulated-warnings warn-acc))\n        {:op       op\n         :env      encl-env\n         :bindings bes\n         :body     (assoc expr :body? true)\n         :form     form\n         :children children}))))\n\n(defmethod parse 'let*\n  [op encl-env form _ _]\n  (analyze-let encl-env form false nil))\n\n(defmethod parse 'loop*\n  [op encl-env form _ _]\n  (analyze-let encl-env form true nil))\n\n(defmethod parse 'recur\n  [op env [_ & exprs :as form] _ _]\n  (let [context (:context env)\n        frame (first *recur-frames*)\n        ;; Add dummy implicit target object if recuring to proto impl method head\n        add-implicit-target-object? (and (:protocol-impl frame)\n                                         (= (count exprs) (dec (count (:params frame)))))\n        exprs (cond->> exprs add-implicit-target-object? (cons nil))\n        exprs (disallowing-recur (vec (map #(analyze (assoc env :context :expr) %) exprs)))]\n    (when-not frame\n      (throw (error env \"Can't recur here\")))\n    (when-not (= (count exprs) (count (:params frame)))\n      (throw (error env (str \"recur argument count mismatch, expected: \"\n                          (count (:params frame)) \" args, got: \" (count exprs)))))\n    (when (and (:protocol-impl frame)\n               (not add-implicit-target-object?))\n      (warning :protocol-impl-recur-with-target env {:form (:form (first exprs))}))\n    (reset! (:flag frame) true)\n    (swap! (:tags frame) (fn [tags]\n                           (mapv (fn [tag expr]\n                                   (add-types tag (:tag expr)))\n                             tags exprs)))\n    (assoc {:env env :op :recur :form form}\n      :frame frame\n      :exprs exprs\n      :children [:exprs])))\n\n(defn analyze-const\n  [env form]\n  (let [;; register constants\n        {:keys [tag]} (analyze (assoc env :quoted? true) form)]\n    {:op       :const\n     :env      env\n     :literal? true\n     :val      form\n     :tag      tag\n     :form     form}))\n\n(defmethod parse 'quote\n  [_ env [_ x :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to quote\")))\n  (let [expr (analyze-const env x)]\n    {:op :quote\n     :expr expr\n     :env env\n     :form form\n     :tag (:tag expr)\n     :children [:expr]}))\n\n(defmethod parse 'new\n  [_ env [_ ctor & args :as form] _ _]\n  (disallowing-recur\n   (let [enve (assoc env :context :expr)\n         ctorexpr (analyze enve ctor)\n         ctor-var (when (#{:var :local :js-var} (:op ctorexpr))\n                    (resolve-existing-var env ctor))\n         record-args\n         (when (and (:record ctor-var) (not (-> ctor meta :internal-ctor)))\n           (repeat 3 (analyze enve nil)))\n         argexprs (into (vec (map #(analyze enve %) args)) record-args)\n         known-num-fields (:num-fields ctor-var)\n         argc (count args)]\n     (when (and (not (-> ctor meta :internal-ctor))\n                (some? known-num-fields) (not= known-num-fields argc))\n       (warning :fn-arity env {:argc argc :ctor ctor}))\n     {:env env :op :new :form form :class ctorexpr :args argexprs\n      :children [:class :args]\n      :tag (let [name (-> ctorexpr :info :name)]\n             (or ('{js/Object object\n                    js/String string\n                    js/Array  array\n                    js/Number number\n                    js/Function function\n                    js/Boolean boolean} name)\n                 name))})))\n\n(defmethod parse 'set!\n  [_ env [_ target val alt :as form] _ _]\n  (let [[target val] (if alt\n                       ;; (set! o -prop val)\n                       [`(. ~target ~val) alt]\n                       [target val])]\n    (disallowing-recur\n      (binding [*private-var-access-nowarn* true]\n        (let [enve  (assoc env :context :expr)\n              texpr (cond\n                      (symbol? target)\n                      (do\n                        (cond\n                          (and (= target '*unchecked-if*)   ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-if* val)\n\n                          (and (= target '*unchecked-arrays*) ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-arrays* val)\n\n                          (and (= target '*warn-on-infer*)\n                               (or (true? val) (false? val)))\n                          (set! *cljs-warnings* (assoc *cljs-warnings* :infer-warning val)))\n                        (when (some? (:const (resolve-var (dissoc env :locals) target)))\n                          (throw (error env \"Can't set! a constant\")))\n                        (let [local (handle-symbol-local target (-> env :locals target))]\n                          (when-not (or (nil? local)\n                                        (and (:field local)\n                                             (or (:mutable local)\n                                                 (:unsynchronized-mutable local)\n                                                 (:volatile-mutable local))))\n                            (throw (error env \"Can't set! local var or non-mutable field\"))))\n                        (analyze-symbol enve target))\n\n                      :else\n                      (when (seq? target)\n                        (let [texpr (analyze-seq enve target nil)]\n                          (when (:field texpr)\n                            texpr))))\n              vexpr (analyze enve val)]\n          ;; as top level fns are decomposed for Closure cross-module code motion, we need to\n          ;; restore their :methods information\n          (when (seq? target)\n            (let [sym  (some-> target second)\n                  meta (meta sym)]\n              (when-let [info (and (= :fn (:op vexpr)) (:top-fn meta))]\n                (swap! env/*compiler* update-in\n                  [::namespaces (-> env :ns :name) :defs sym :methods]\n                  (fnil conj [])\n                  ;; just use original fn meta, as the fn method is already desugared\n                  ;; only get tag from analysis\n                  (merge\n                    (select-keys info [:fixed-arity :variadic?])\n                    (select-keys (-> vexpr :methods first) [:tag]))))))\n          (when-not texpr\n            (throw (error env \"set! target must be a field or a symbol naming a var\")))\n          (cond\n            (and (not (:def-emits-var env))                 ;; non-REPL context\n                 (some? ('#{*unchecked-if* *unchecked-arrays* *warn-on-infer*} target)))\n            {:env env :op :no-op}\n\n            :else\n            {:env env :op :set! :form form :target texpr :val vexpr\n             :children [:target :val]}))))))\n\n#?(:clj (declare analyze-file))\n\n#?(:clj\n   (defn locate-src\n     \"Given a namespace return the corresponding ClojureScript (.cljs or .cljc)\n     resource on the classpath or file from the root of the build.\"\n     [ns]\n     (or (util/ns->source ns)\n       ;; Find sources available in inputs given to cljs.closure/build - Juho Teperi\n       (some (fn [source]\n               (if (= ns (:ns source))\n                 (:source-file source)))\n             (:sources @env/*compiler*))\n       ;; Find sources in directory given to cljs.compiler/compile-root - Juho Teperi\n       (let [rootp (when-let [root (:root @env/*compiler*)]\n                     (.getPath ^File root))\n             cljsf (io/file rootp (ns->relpath ns :cljs))\n             cljcf (io/file rootp (ns->relpath ns :cljc))]\n         (if (and (.exists cljsf) (.isFile cljsf))\n           cljsf\n           (if (and (.exists cljcf) (.isFile cljcf))\n             cljcf))))))\n\n(defn foreign-dep?\n  #?(:cljs {:tag boolean})\n  [dep]\n  (let [js-index (:js-dependency-index @env/*compiler*)]\n    (if-some [[_ {:keys [foreign]}] (find js-index (name dep))]\n      foreign\n      false)))\n\n(defn analyze-deps\n  \"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.\"\n  ([lib deps env]\n   (analyze-deps lib deps env\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([lib deps env opts]\n   (let [compiler @env/*compiler*]\n     (binding [*cljs-dep-set* (vary-meta (conj *cljs-dep-set* lib) update-in [:dep-path] conj lib)]\n       (assert (every? #(not (contains? *cljs-dep-set* %)) deps)\n         (str \"Circular dependency detected, \"\n           (apply str\n             (interpose \" -> \"\n               (conj (-> *cljs-dep-set* meta :dep-path)\n                 (some *cljs-dep-set* deps))))))\n       (doseq [dep deps]\n         (when-not (or (some? (get-in compiler [::namespaces dep :defs]))\n                       (contains? (:js-dependency-index compiler) (name dep))\n                       (node-module-dep? dep)\n                       (js-module-exists? (name dep))\n                       #?(:clj (deps/find-classpath-lib dep)))\n           #?(:clj (if-some [src (locate-src dep)]\n                     (analyze-file src opts)\n                     (throw\n                       (error env\n                         (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))\n              :cljs (throw\n                      (error env\n                        (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))))))))\n\n(defn missing-use? [lib sym cenv]\n  (let [js-lib (get-in cenv [:js-dependency-index (name lib)])]\n    (and (= (get-in cenv [::namespaces lib :defs sym] ::not-found) ::not-found)\n         (not (= (get js-lib :group) :goog))\n         (not (get js-lib :closure-lib))\n         (not (node-module-dep? lib))\n         (not (dep-has-global-exports? lib)))))\n\n(defn missing-rename? [sym cenv]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))]\n    (missing-use? lib sym cenv)))\n\n(defn missing-use-macro? [lib sym]\n  ;; guard against string requires\n  (when (symbol? lib)\n    (let [the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n      (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym))))))\n\n(defn missing-rename-macro? [sym]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))\n        the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n    (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym)))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-uses\n  [uses env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use? lib sym cenv)) uses))))\n\n;; returns (s/map-of symbol? qualified-symbol?)\n(defn missing-renames [renames env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[_ qualified-sym]] (missing-rename? qualified-sym cenv)) renames))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use-macro? lib sym)) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (not (missing-use-macro? lib sym))) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-rename-macros [rename-macros env]\n  (into {} (filter (fn [[_ qualified-sym]] (not (missing-rename-macro? qualified-sym))) rename-macros)))\n\n(defn check-uses [uses env]\n  (let [cenv @env/*compiler*]\n    (doseq [[sym lib] uses]\n      (when (missing-use? lib sym cenv)\n        (throw\n          (error env\n            (error-message :undeclared-ns-form {:type \"var\" :lib lib :sym sym})))))))\n\n(defn check-use-macros\n  ([use-macros env]\n    (check-use-macros use-macros nil env))\n  ([use-macros missing-uses env]\n   (let [cenv @env/*compiler*]\n     (doseq [[sym lib] use-macros]\n       (when (missing-use-macro? lib sym)\n         (throw\n           (error env\n             (error-message :undeclared-ns-form {:type \"macro\" :lib lib :sym sym})))))\n     (check-uses (missing-use-macros missing-uses env) env)\n     (inferred-use-macros missing-uses env))))\n\n(defn check-use-macros-inferring-missing\n  [{:keys [name uses use-macros] :as ast} env]\n  (let [missing-uses        (when (and *analyze-deps* (seq uses))\n                              (missing-uses uses env))\n        maybe-macros        (apply dissoc uses (keys missing-uses))\n        remove-missing-uses #(apply dissoc % (keys missing-uses))\n        ast' (-> ast\n               (update-in [:use-macros]\n                 #(-> %\n                   (merge (check-use-macros use-macros missing-uses env))\n                   (merge (inferred-use-macros maybe-macros env))))\n               (update-in [:uses] remove-missing-uses))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :use-macros] merge (:use-macros ast'))\n        (update-in [::namespaces name :uses] remove-missing-uses)))\n    ast'))\n\n(defn check-rename-macros-inferring-missing\n  [{:keys [name renames] :as ast} env]\n  (let [missing-renames        (when (and *analyze-deps* (seq renames))\n                                 (missing-renames renames env))\n        maybe-macros           (apply dissoc renames (keys missing-renames))\n        missing-rename-macros  (inferred-rename-macros missing-renames env)\n        remove-missing-renames #(apply dissoc % (keys missing-renames))\n        ast' (-> ast\n               (update-in [:rename-macros]\n                 #(-> %\n                   (merge missing-rename-macros)\n                   (merge (inferred-rename-macros maybe-macros env))))\n               (update-in [:renames] remove-missing-renames))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :rename-macros] merge (:rename-macros ast'))\n        (update-in [::namespaces name :renames] remove-missing-renames)))\n    ast'))\n\n(defn parse-ns-error-msg [spec msg]\n  (str msg \"; offending spec: \" (pr-str spec)))\n\n(defn basic-validate-ns-spec [env macros? spec]\n  (when-not (or (symbol? spec) (string? spec) (sequential? spec))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"))))\n  (when (sequential? spec)\n    (when-not (or (symbol? (first spec)) (string? (first spec)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Library name must be specified as a symbol in :require / :require-macros\"))))\n    (when-not (odd? (count spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"))))\n    (when-not (every? #{:as :refer :rename} (map first (partition 2 (next spec))))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as, :refer and :rename options supported in :require / :require-macros\"))))\n    (when-not (let [fs (frequencies (next spec))]\n                (and (<= (fs :as 0) 1)\n                     (<= (fs :refer 0) 1)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Each of :as and :refer options may only be specified once in :require / :require-macros\"))))))\n\n(defn parse-ns-excludes [env args]\n  (reduce\n    (fn [s [k & filters]]\n      (if (= k :refer-clojure)\n        (do\n          (when (seq (:excludes s))\n            (throw (error env \"Only one :refer-clojure form is allowed per namespace definition\")))\n          (let [valid-kws #{:exclude :rename}\n                xs\n                (loop [fs (seq filters)\n                       ret {:excludes #{}\n                            :renames {}}\n                       err (not (even? (count filters)))]\n                  (cond\n                    (true? err)\n                    (throw\n                      (error env \"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\"))\n\n                    (some? fs)\n                    (let [kw (first fs)]\n                      (if (valid-kws kw)\n                        (let [refs (second fs)]\n                          (cond\n                            (not (or (and (= kw :exclude) (sequential? refs) (every? symbol? refs))\n                                     (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs))))\n                            (recur fs ret true)\n\n                            (= kw :exclude)\n                            (recur (nnext fs) (update-in ret [:excludes] into refs) false)\n\n                            (= kw :rename)\n                            (recur (nnext fs) (update-in ret [:renames] merge refs) false)))\n                        (recur fs ret true)))\n\n                    :else ret))]\n            (merge-with into s xs)))\n        s))\n    {:excludes #{}\n     :renames {}} args))\n\n(defn use->require [env [lib & filters :as spec]]\n  (when-not (and (symbol? lib) (odd? (count spec)))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"))))\n  (loop [fs (seq filters) ret [lib] err false]\n    (cond\n      (true? err)\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\")))\n\n      (some? fs)\n      (let [kw (first fs)\n            only? (= kw :only)]\n        (if (or only? (= kw :rename))\n          (if (some? (some #{(if only? :refer kw)} ret))\n            (throw\n              (error env\n                (parse-ns-error-msg spec\n                  \"Each of :only and :rename options may only be specified once in :use / :use-macros\")))\n            (let [refs (second fs)]\n              (if-not (or (and only? (sequential? refs) (every? symbol? refs))\n                          (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs)))\n                (recur fs ret true)\n                (recur (nnext fs) (into ret [(if only? :refer kw) refs]) false))))\n          (recur fs ret true )))\n\n      :else (if (some? (some #{:refer} ret))\n              ret\n              (recur fs ret true)))))\n\n(defn parse-require-spec [env macros? deps aliases spec]\n  (if (or (symbol? spec) (string? spec))\n    (recur env macros? deps aliases [spec])\n    (do\n      (basic-validate-ns-spec env macros? spec)\n      (let [[lib & opts] spec\n            ;; We need to load JS modules by the name that has been created by the\n            ;; Google Closure compiler, e.g. module$resources$libs$calculator.\n            ;; This means that we need to create an alias from the module name\n            ;; given with :provides to the new name.\n            [lib js-module-provides] (if-some [js-module-name (gets @env/*compiler* :js-module-index (str lib) :name)]\n                                       [(symbol js-module-name) lib]\n                                       [lib nil])\n            {alias :as referred :refer renamed :rename\n             :or {alias (if (string? lib)\n                          (symbol (munge lib))\n                          lib)}}\n            (apply hash-map opts)\n            referred-without-renamed (seq (remove (set (keys renamed)) referred))\n            [rk uk renk] (if macros? [:require-macros :use-macros :rename-macros] [:require :use :rename])]\n        (when-not (or (symbol? alias) (nil? alias))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":as must be followed by a symbol in :require / :require-macros\"))))\n        (when (some? alias)\n          (let [alias-type (if macros? :macros :fns)\n                lib'       ((alias-type @aliases) alias)]\n            (when (and (some? lib') (not= lib lib'))\n              (throw (error env (parse-ns-error-msg spec \":as alias must be unique\"))))\n            (swap! aliases\n              update-in [alias-type]\n              conj [alias lib] (when js-module-provides [js-module-provides lib]))))\n        (when-not (or (and (sequential? referred)\n                           (every? symbol? referred))\n                      (nil? referred))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":refer must be followed by a sequence of symbols in :require / :require-macros\"))))\n        (when-not macros?\n          (swap! deps conj lib))\n        (merge\n          (when (some? alias)\n            {rk (merge {alias lib} {lib lib}\n                  (when js-module-provides {js-module-provides lib}))})\n          (when (some? referred-without-renamed)\n            {uk (apply hash-map (interleave referred-without-renamed (repeat lib)))})\n          (when (some? renamed)\n            {renk (reduce (fn [m [original renamed]]\n                            (when-not (some #{original} referred)\n                              (throw (error env\n                                       (str \"Renamed symbol \" original \" not referred\"))))\n                            (assoc m renamed (symbol (str lib) (str original))))\n                    {} renamed)}))))))\n\n(defn parse-import-spec [env deps spec]\n  (when-not (or (and (sequential? spec)\n                     (every? symbol? spec))\n                (and (symbol? spec) (nil? (namespace spec))))\n    (throw (error env (parse-ns-error-msg spec \"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"))))\n  (let [import-map (if (sequential? spec)\n                     (->> (rest spec)\n                       (map #(vector % (symbol (str (first spec) \".\" %))))\n                       (into {}))\n                     {(symbol (last (string/split (str spec) #\"\\.\"))) spec})]\n    (doseq [[_ spec] import-map]\n      (swap! deps conj spec))\n    {:import  import-map\n     :require import-map}))\n\n#?(:clj (declare parse-ns))\n\n(defn macro-autoload-ns?\n  \"Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.\"\n  #?(:cljs {:tag boolean})\n  [form]\n  (when *macro-infer*\n    (let [ns (if (sequential? form) (first form) form)\n         {:keys [use-macros require-macros]}\n         (or (get-in @env/*compiler* [::namespaces ns])\n             #?(:clj\n                (when-let [res (util/ns->source ns)]\n                  (:ast (parse-ns res)))))]\n      (or (some #{ns} (vals use-macros))\n          (some #{ns} (vals require-macros))))))\n\n(defn clj-ns->cljs-ns\n  \"Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs\"\n  [sym]\n  (let [segs (string/split (clojure.core/name sym) #\"\\.\")]\n    (if (= \"clojure\" (first segs))\n      (symbol (string/join \".\" (cons \"cljs\" (next segs))))\n      sym)))\n\n#?(:clj\n   (defn aliasable-clj-ns?\n     \"Predicate for testing with a symbol represents an aliasable clojure namespace.\"\n     [sym]\n     (when-not (util/ns->source sym)\n       (let [[seg1 :as segs] (string/split (clojure.core/name sym) #\"\\.\")]\n         (when (= \"clojure\" seg1)\n           (let [sym' (clj-ns->cljs-ns sym)]\n             (util/ns->source sym')))))))\n\n#?(:clj\n   (defn process-rewrite-form [[k & specs :as form]]\n     (letfn [(process-spec [maybe-spec]\n               (let [[lib & xs] (if (sequential? maybe-spec)\n                                  maybe-spec\n                                  [maybe-spec])]\n                 (if (and (symbol? lib) (aliasable-clj-ns? lib))\n                   (let [lib' (clj-ns->cljs-ns lib)\n                         spec (cons lib' xs)]\n                     (into (if xs [spec] []) [(list lib' :as lib)]))\n                   [maybe-spec])))]\n       (if (#{:use :require} k)\n         (cons k (mapcat process-spec specs))\n         form))))\n\n#?(:clj\n   (defn rewrite-cljs-aliases\n     \"Alias non-existing clojure.* namespaces to existing cljs.* namespaces if\n      possible.\"\n     [args]\n     (map process-rewrite-form args)))\n\n(defn canonicalize-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (as-> (second quoted-spec-or-kw) spec\n                (if (or (vector? spec) (map? spec)) spec [spec]))))]\n    (map canonicalize specs)))\n\n(defn canonicalize-import-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (second quoted-spec-or-kw)))]\n    (map canonicalize specs)))\n\n(defn desugar-ns-specs\n  \"Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared.\"\n  [args]\n  (let [{:keys [require] :as indexed}\n        (->> args\n          (map (fn [[k & specs]] [k (into [] specs)]))\n          (into {}))\n        sugar-keys #{:include-macros :refer-macros}\n        ;; drop spec k and value from spec for generated :require-macros\n        remove-from-spec\n        (fn [pred spec]\n          (if-not (and (sequential? spec) (some pred spec))\n            spec\n            (let [[l r] (split-with (complement pred) spec)]\n              (recur pred (concat l (drop 2 r))))))\n        ;; rewrite :refer-macros to :refer for generated :require-macros\n        replace-refer-macros\n        (fn [spec]\n          (if-not (sequential? spec)\n            spec\n            (map (fn [x] (if (= x :refer-macros) :refer x)) spec)))\n        reload-spec? #(#{:reload :reload-all} %)\n        to-macro-specs\n        (fn [specs]\n          (->> specs\n            (filter\n              (fn [x]\n                (or (and (sequential? x)\n                         (some sugar-keys x))\n                    (reload-spec? x)\n                    (macro-autoload-ns? x))))\n            (map (fn [x]\n                   (if-not (reload-spec? x)\n                     (->> x (remove-from-spec #{:include-macros})\n                            (remove-from-spec #{:refer})\n                            (remove-from-spec #{:rename})\n                            (replace-refer-macros))\n                     x)))))\n        remove-sugar (partial remove-from-spec sugar-keys)]\n    (if-some [require-specs (seq (to-macro-specs require))]\n      (map (fn [x]\n             (if-not (reload-spec? x)\n               (let [[k v] x]\n                 (cons k (map remove-sugar v)))\n               x))\n        (update-in indexed [:require-macros] (fnil into []) require-specs))\n      args)))\n\n(defn find-def-clash [env ns segments]\n  (let [to-check (map (fn [xs]\n                        [(symbol (string/join \".\" (butlast xs)))\n                         (symbol (last xs))])\n                   (drop 2 (reductions conj [] segments)))]\n    (doseq [[clash-ns name] to-check]\n      (when (get-in @env/*compiler* [::namespaces clash-ns :defs name])\n        (warning :ns-var-clash env\n          {:ns ns\n           :var (symbol (str clash-ns) (str name))})))))\n\n(defn macro-ns-name [name]\n  (let [name-str (str name)]\n    (if-not #?(:clj  (.endsWith name-str \"$macros\")\n               :cljs (gstring/endsWith name-str \"$macros\"))\n      (symbol (str name-str \"$macros\"))\n      name)))\n\n(defmethod parse 'ns\n  [_ env [_ name & args :as form] _ opts]\n  (when-not *allow-ns*\n    (throw (error env \"Namespace declarations must appear at the top-level.\")))\n  (when-not (symbol? name)\n    (throw (error env \"Namespaces must be named by a symbol.\")))\n  (let [name (cond-> name (:macros-ns opts) macro-ns-name)]\n    (let [segments (string/split (clojure.core/name name) #\"\\.\")]\n      (when (= 1 (count segments))\n        (warning :single-segment-namespace env {:name name}))\n      (let [segment (some js-reserved segments)]\n        (when (some? segment)\n          (warning :munged-namespace env {:name name})))\n      (find-def-clash env name segments)\n      #?(:clj\n         (when (some (complement util/valid-js-id-start?) segments)\n           (throw\n             (AssertionError.\n               (str \"Namespace \" name \" has a segment starting with an invaild \"\n                    \"JavaScript identifier\"))))))\n    (let [docstring    (when (string? (first args)) (first args))\n          mdocstr      (-> name meta :doc)\n          args         (if (some? docstring) (next args) args)\n          metadata     (when (map? (first args)) (first args))\n          args         (desugar-ns-specs\n                         #?(:clj  (rewrite-cljs-aliases\n                                    (if metadata (next args) args))\n                            :cljs (if (some? metadata) (next args) args)))\n          name         (vary-meta name merge metadata)\n          {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n          core-renames (reduce (fn [m [original renamed]]\n                                 (assoc m renamed (symbol \"cljs.core\" (str original))))\n                         {} core-renames)\n          deps         (atom [])\n          aliases      (atom {:fns {} :macros {}})\n          spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                        :require-macros (partial parse-require-spec env true deps aliases)\n                        :use            (comp (partial parse-require-spec env false deps aliases)\n                                          (partial use->require env))\n                        :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                          (partial use->require env))\n                        :import         (partial parse-import-spec env deps)}\n          valid-forms  (atom #{:use :use-macros :require :require-macros :import})\n          reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n          reloads      (atom {})\n          {uses :use requires :require renames :rename\n           use-macros :use-macros require-macros :require-macros\n           rename-macros :rename-macros imports :import :as params}\n          (reduce\n            (fn [m [k & libs :as libspec]]\n              (when-not (#{:use :use-macros :require :require-macros :import} k)\n                (throw (error env (str \"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \" libspec \" instead.\"))))\n              (when-not (@valid-forms k)\n                (throw (error env (str \"Only one \" k \" form is allowed per namespace definition\"))))\n              (swap! valid-forms disj k)\n              ;; check for spec type reloads\n              (when-not (= :import k)\n                (when (some? (some #{:reload} libs))\n                  (swap! reload assoc k :reload))\n                (when (some? (some #{:reload-all} libs))\n                  (swap! reload assoc k :reload-all)))\n              ;; check for individual ns reloads from REPL interactions\n              (when-let [xs (seq (filter #(-> % meta :reload) libs))]\n                (swap! reloads assoc k\n                  (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n              (apply merge-with merge m\n                (map (spec-parsers k)\n                  (remove #{:reload :reload-all} libs))))\n            {} (remove (fn [[r]] (= r :refer-clojure)) args))\n          ;; patch `require-macros` and `use-macros` in Bootstrap for namespaces\n          ;; that require their own macros\n          #?@(:cljs [[require-macros use-macros]\n                     (map (fn [spec-map]\n                            (if (:macros-ns opts)\n                              (let [ns (symbol (subs (str name) 0 (- (count (str name)) 7)))]\n                                (reduce (fn [m [k v]]\n                                          (cond-> m\n                                            (not (symbol-identical? v ns))\n                                            (assoc k v)))\n                                  {} spec-map))\n                              spec-map)) [require-macros use-macros])])]\n      (set! *cljs-ns* name)\n      (let [ns-info\n            {:name           name\n             :doc            (or docstring mdocstr)\n             :excludes       excludes\n             :use-macros     use-macros\n             :require-macros require-macros\n             :rename-macros  rename-macros\n             :uses           uses\n             :requires       requires\n             :renames        (merge renames core-renames)\n             :imports        imports}]\n        (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n        (merge {:op      :ns\n                :env     env\n                :form    form\n                :deps    (into [] (distinct @deps))\n                :reload  @reload\n                :reloads @reloads}\n          (cond-> ns-info\n            (@reload :use)\n            (update-in [:uses]\n              (fn [m] (with-meta m {(@reload :use) true})))\n            (@reload :require)\n            (update-in [:requires]\n              (fn [m] (with-meta m {(@reload :require) true})))))))))\n\n(defn- check-duplicate-aliases\n  [env old new]\n  (let [ns-name (:name old)]\n    (doseq [k [:requires :require-macros]]\n      (let [old-aliases (get old k)\n            new-aliases (get new k)]\n        (when-some [alias (some (set (keys new-aliases))\n                            (->> old-aliases\n                              (remove (fn [[k v :as entry]]\n                                        (or (= k v)\n                                            (= entry (find new-aliases k)))))\n                              keys))]\n          (throw (error env\n                   (str \"Alias \" alias \" already exists in namespace \" ns-name\n                     \", aliasing \" (get old-aliases alias)))))))))\n\n(defmethod parse 'ns*\n  [_ env [_ quoted-specs :as form] _ opts]\n  (when-let [not-quoted (->> (remove keyword? quoted-specs)\n                          (remove #(and (seq? %) (= 'quote (first %))) )\n                          first)]\n    (throw (error env (str \"Arguments to \" (name (first quoted-specs))\n                        \" must be quoted. Offending spec: \" not-quoted))))\n  (when-not *allow-ns*\n    (throw (error env (str \"Calls to `\" (name (first quoted-specs))\n                        \"` must appear at the top-level.\"))))\n  (let [specs        (if (= :import (first quoted-specs))\n                       (canonicalize-import-specs quoted-specs)\n                       (canonicalize-specs quoted-specs))\n        name         (-> env :ns :name)\n        args         (desugar-ns-specs\n                       #?(:clj  (list (process-rewrite-form\n                                        specs))\n                          :cljs (list specs)))\n        {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n        core-renames (reduce (fn [m [original renamed]]\n                               (assoc m renamed (symbol \"cljs.core\" (str original))))\n                       {} core-renames)\n        deps         (atom [])\n        aliases      (atom {:fns {} :macros {}})\n        spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                      :require-macros (partial parse-require-spec env true deps aliases)\n                      :use            (comp (partial parse-require-spec env false deps aliases)\n                                        (partial use->require env))\n                      :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                        (partial use->require env))\n                      :import         (partial parse-import-spec env deps)}\n        reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n        reloads      (atom {})\n        {uses :use requires :require renames :rename\n         use-macros :use-macros require-macros :require-macros\n         rename-macros :rename-macros imports :import :as params}\n        (reduce\n          (fn [m [k & libs]]\n            ;; check for spec type reloads\n            (when-not (= :import k)\n              (when (some? (some #{:reload} libs))\n                (swap! reload assoc k :reload))\n              (when (some? (some #{:reload-all} libs))\n                (swap! reload assoc k :reload-all)))\n            ;; check for individual ns reloads from REPL interactions\n            (when-some [xs (seq (filter #(-> % meta :reload) libs))]\n              (swap! reloads assoc k\n                (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n            (apply merge-with merge m\n              (map (spec-parsers k)\n                (remove #{:reload :reload-all} libs))))\n          {} (remove (fn [[r]] (= r :refer-clojure)) args))]\n    (set! *cljs-ns* name)\n    (let [require-info\n          {:name           name\n           :excludes       excludes\n           :use-macros     use-macros\n           :require-macros require-macros\n           :rename-macros  rename-macros\n           :uses           uses\n           :requires       requires\n           :renames        (merge renames core-renames)\n           :imports        imports}\n          ns-info\n          (let [ns-info' (get-in @env/*compiler* [::namespaces name])]\n            (if (pos? (count ns-info'))\n              (let [merge-keys\n                    [:use-macros :require-macros :rename-macros\n                     :uses :requires :renames :imports]]\n                #?(:clj\n                   (when *check-alias-dupes*\n                     (check-duplicate-aliases env ns-info' require-info)))\n                (merge\n                  ns-info'\n                  {:excludes excludes}\n                  (merge-with merge\n                    (select-keys ns-info' merge-keys)\n                    (select-keys require-info merge-keys))))\n              require-info))]\n      (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n      (merge {:op      :ns*\n              :env     env\n              :form    form\n              :deps    (into [] (distinct @deps))\n              :reload  @reload\n              :reloads @reloads}\n        (cond-> require-info\n          (@reload :use)\n          (update-in [:uses]\n            (fn [m] (with-meta m {(@reload :use) true})))\n          (@reload :require)\n          (update-in [:requires]\n            (fn [m] (with-meta m {(@reload :require) true}))))))))\n\n(defn parse-type\n  [op env [_ tsym fields pmasks body :as form]]\n  (let [t (:name (resolve-var (dissoc env :locals) tsym))\n        locals (reduce (fn [m fld]\n                         (assoc m fld\n                                {:name fld\n                                 :line (get-line fld env)\n                                 :column (get-col fld env)\n                                 :local :field\n                                 :field true\n                                 :mutable (-> fld meta :mutable)\n                                 :unsynchronized-mutable (-> fld meta :unsynchronized-mutable)\n                                 :volatile-mutable (-> fld meta :volatile-mutable)\n                                 :tag (-> fld meta :tag)\n                                 :shadow (m fld)}))\n                       {} (if (= :defrecord op)\n                            (concat fields '[__meta __extmap ^:mutable __hash])\n                            fields))\n        protocols (-> tsym meta :protocols)]\n    (swap! env/*compiler* update-in [::namespaces (-> env :ns :name) :defs tsym]\n           (fn [m]\n             (let [m (assoc (or m {})\n                       :name t\n                       :tag 'function\n                       :type true\n                       :num-fields (count fields)\n                       :record (= :defrecord op))]\n               (merge m\n                      (dissoc (meta tsym) :protocols)\n                      {:protocols protocols}\n                      (source-info tsym env)))))\n    {:op op :env env :form form :t t :fields fields :pmasks pmasks\n     :tag 'function\n     :protocols (disj protocols 'cljs.core/Object)\n     :children [#_:fields :body]\n     :body (analyze (assoc env :locals locals) body)}))\n\n(defmethod parse 'deftype*\n  [_ env form _ _]\n  (parse-type :deftype env form))\n\n(defmethod parse 'defrecord*\n  [_ env form _ _]\n  (parse-type :defrecord env form) )\n\n;; dot accessor code\n\n(def ^:private property-symbol? #(boolean (and (symbol? %) (re-matches #\"^-.*\" (name %)))))\n\n(defn- classify-dot-form\n  [[target member args]]\n  [(cond (nil? target) ::error\n         :default      ::expr)\n   (cond (property-symbol? member) ::property\n         (symbol? member)          ::symbol\n         (seq? member)             ::list\n         :default                  ::error)\n   (cond (nil? args) ()\n         :default    ::expr)])\n\n(defmulti build-dot-form #(classify-dot-form %))\n\n;; (. o -p)\n;; (. (...) -p)\n(defmethod build-dot-form [::expr ::property ()]\n  [[target prop _]]\n  {:dot-action ::access :target target :field (-> prop name (.substring 1) symbol)})\n\n;; (. o -p <args>)\n(defmethod build-dot-form [::expr ::property ::list]\n  [[target prop args]]\n  #?(:clj  (throw (Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))\n     :cljs (throw (js/Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))))\n\n(defn- build-method-call\n  \"Builds the intermediate method call map used to reason about the parsed form during\n  compilation.\"\n  [target meth args]\n  (if (symbol? meth)\n    {:dot-action ::call :target target :method meth :args args}\n    {:dot-action ::call :target target :method (first meth) :args args}))\n\n;; (. o m 1 2)\n(defmethod build-dot-form [::expr ::symbol ::expr]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o m)\n(defmethod build-dot-form [::expr ::symbol ()]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o (m))\n;; (. o (m 1 2))\n(defmethod build-dot-form [::expr ::list ()]\n  [[target meth-expr _]]\n  (build-method-call target (first meth-expr) (rest meth-expr)))\n\n(defmethod build-dot-form :default\n  [dot-form]\n  #?(:clj  (throw\n             (Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))\n     :cljs (throw\n             (js/Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))))\n\n(defn analyze-dot [env target field member+ form]\n  (let [v [target field member+]\n        {:keys [dot-action target method field args]} (build-dot-form v)\n        enve       (assoc env :context :expr)\n        targetexpr (analyze enve target)\n        form-meta  (meta form)\n        target-tag (:tag targetexpr)\n        prop       (or field method)\n        tag        (or (:tag form-meta)\n                       (and (js-tag? target-tag)\n                            (vary-meta (normalize-js-tag target-tag)\n                              update-in [:prefix] (fnil conj '[Object]) prop))\n                       nil)]\n    (when (and (not= 'constructor prop)\n               (not (string/starts-with? (str prop) \"cljs$\")))\n      ;; Adding to Object\n      (when (= 'Object (first (-> tag meta :prefix)))\n        (warning :infer-warning env\n          {:warn-type :object :form form :property prop}))\n      (when (not= 'js target-tag)\n        ;; Cannot determine type of the target\n        (when (or (nil? target-tag) ('#{any} target-tag))\n          (warning :infer-warning env\n            {:warn-type :target :form form}))\n        ;; Unresolveable property on existing extern\n        (let [[pre' pre] ((juxt butlast identity) (-> tag meta :prefix))]\n          (when (and (has-extern? pre') (not (has-extern? pre)))\n            (warning :infer-warning env\n              {:warn-type :property :form form\n               :type (symbol \"js\"\n                       (string/join \".\"\n                         (cond-> pre' (= 'prototype (last pre')) butlast)))\n               :property prop})))))\n    (when (js-tag? tag)\n      (let [pre (-> tag meta :prefix)]\n        (when-not (has-extern? pre)\n          (swap! env/*compiler* update-in\n            (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))))\n    (case dot-action\n      ::access (let [children [:target]]\n                 {:op :host-field\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :field field\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :tag) tag)\n                         tag)})\n      ::call   (let [argexprs (mapv #(analyze enve %) args)\n                     children [:target :args]]\n                 {:op :host-call\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :method method\n                  :args argexprs\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :ret-tag) 'js)\n                         tag)}))))\n\n(defmethod parse '.\n  [_ env [_ target & [field & member+] :as form] _ _]\n  (disallowing-recur (analyze-dot env target field member+ form)))\n\n(defn get-js-tag [form]\n  (let [form-meta (meta form)]\n    (if-some [tag (:tag form-meta)]\n      tag\n      (when (true? (:numeric form-meta))\n        'number))))\n\n(defn js-star-interp\n  [env ^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)\n            inner (:name (resolve-existing-var env (symbol (subs s (+ 2 idx) end))))]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (cons inner\n              (js-star-interp env (subs s (inc end))))))))))\n\n(defn js-star-seg\n  [^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (js-star-seg (subs s (inc end)))))))))\n\n(def NUMERIC_SET '#{any number long double})\n\n(defn numeric-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO: type inference is not strong enough to detect that\n  ;; when functions like first won't return nil, so variadic\n  ;; numeric functions like cljs.core/< would produce a spurious\n  ;; warning without this - David\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    :else\n    (if (and (symbol? t) (some? (get NUMERIC_SET t)))\n      true\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'number)\n            (contains? t 'long)\n            (contains? t 'double)\n            (contains? t 'any)\n            (contains? t 'js))))))\n\n(def array-types\n  '#{array objects ints longs floats doubles chars shorts bytes boolean})\n\n(defn array-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO same inference caveats as the numeric-type? fn above\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    (= 'any t) true\n    (contains? array-types t) true\n    :else\n    (boolean\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'any)\n            (contains? t 'js)\n            (some array-types t))))))\n\n(defn analyze-js-star* [env jsform args form]\n  (let [enve      (assoc env :context :expr)\n        argexprs  (vec (map #(analyze enve %) args))\n        form-meta (meta form)\n        segs      (js-star-seg jsform)\n        tag       (get-js-tag form)\n        js-op     (:js-op form-meta)\n        numeric   (:numeric form-meta)\n        validate  (fn [warning-type valid-types?]\n                    (let [types (map #(infer-tag env %) argexprs)]\n                      (when-not (valid-types? types)\n                        (warning warning-type env\n                          {:js-op js-op\n                           :types (into [] types)}))))\n        op-match? (fn [sym]\n                    #?(:clj  (= sym (:js-op form-meta))\n                       :cljs (symbol-identical? sym (:js-op form-meta))))]\n    (when (true? numeric)\n      (validate :invalid-arithmetic #(every? numeric-type? %)))\n    {:op :js\n     :env env\n     :segs segs\n     :args argexprs\n     :tag tag\n     :form form\n     :children [:args]\n     :js-op js-op\n     :numeric numeric}))\n\n(defn analyze-js-star [env jsform args form]\n  (disallowing-recur (analyze-js-star* env jsform args form)))\n\n(defmethod parse 'js*\n  [op env [_ jsform & args :as form] _ _]\n  (when-not (string? jsform)\n    (throw (error env \"Invalid js* form\")))\n  (if (some? args)\n    (analyze-js-star env jsform args form)\n    (let [code      (apply str (js-star-interp env jsform))\n          tag       (get-js-tag form)\n          form-meta (meta form)\n          js-op     (:js-op form-meta)\n          numeric   (:numeric form-meta)]\n      {:op :js\n       :env env\n       :form form\n       :code code\n       :tag tag\n       :js-op js-op\n       :numeric numeric})))\n\n;; TODO: analyzed analyzed? should take pass name as qualified keyword arg\n;; then compiler passes can mark/check individually - David\n\n(defn- unsorted-map? [x]\n  (and (map? x)\n       (not (sorted? x))))\n\n(defn analyzed\n  \"Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass.\"\n  [x]\n  (cond\n    (unsorted-map? x) (assoc x ::analyzed true)\n    :else (vary-meta x assoc ::analyzed true)))\n\n(defn analyzed?\n  \"Returns boolean if the form has already been marked as analyzed.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (boolean\n    (cond\n      (unsorted-map? x) (::analyzed x)\n      :else (::analyzed (meta x)))))\n\n(defn- all-values?\n  #?(:cljs {:tag boolean})\n  [exprs]\n  (every? #(or (nil? %) (symbol? %) (string? %) (number? %) (true? %) (false? %)) exprs))\n\n(defn- valid-arity?\n  #?(:cljs {:tag boolean})\n  [argc method-params]\n  (boolean (some #{argc} (map count method-params))))\n\n(defn parse-invoke*\n  [env [f & args :as form]]\n  (let [enve    (assoc env :context :expr)\n        fexpr   (analyze enve f)\n        argc    (count args)\n        fn-var? (-> fexpr :info :fn-var)\n        kw?     (= 'cljs.core/Keyword (:tag fexpr))\n        cur-ns  (-> env :ns :name)\n        HO-invoke? (and (boolean *cljs-static-fns*)\n                        (not fn-var?)\n                        (not (js-tag? f))\n                        (not kw?)\n                        (not (analyzed? f)))\n        ;; function expressions, eg: ((deref m) x) or ((:x m) :a)\n        bind-f-expr? (and HO-invoke?\n                          (not (symbol? f)))\n        ;; Higher order invokes with (some) argument expressions. Bind the arguments\n        ;; to avoid exponential complexity that is created by the IFn arity check branch.\n        bind-args? (and HO-invoke?\n                        (not (all-values? args)))]\n    (when ^boolean fn-var?\n      (let [{^boolean variadic :variadic? :keys [max-fixed-arity method-params name ns macro]} (:info fexpr)]\n        ;; don't warn about invalid arity when when compiling a macros namespace\n        ;; that requires itself, as that code is not meant to be executed in the\n        ;; `$macros` ns - António Monteiro\n        (when (and #?(:cljs (not (and (gstring/endsWith (str cur-ns) \"$macros\")\n                                      (symbol-identical? cur-ns ns)\n                                      (true? macro))))\n                   (not (valid-arity? argc method-params))\n                   (or (not variadic)\n                       (and variadic (< argc max-fixed-arity))))\n          (warning :fn-arity env {:name name :argc argc}))))\n    (when (and kw? (not (or (== 1 argc) (== 2 argc))))\n      (warning :fn-arity env {:name (first form) :argc argc}))\n    (let [deprecated? (-> fexpr :info :deprecated)\n          no-warn? (-> form meta :deprecation-nowarn)]\n      (when (and (boolean deprecated?)\n                 (not (boolean no-warn?)))\n        (warning :fn-deprecated env {:fexpr fexpr})))\n    (when (some? (-> fexpr :info :type))\n      (warning :invoke-ctor env {:fexpr fexpr}))\n    (if (or bind-args? bind-f-expr?)\n      (let [arg-syms (when bind-args? (take argc (repeatedly gensym)))\n            f-sym (when bind-f-expr? (gensym \"fexpr__\"))\n            bindings (cond-> []\n                       bind-args? (into (interleave arg-syms args))\n                       bind-f-expr? (conj f-sym (analyzed f)))]\n        (analyze env\n          `(let [~@bindings]\n             (~(analyzed (if bind-f-expr? f-sym f))\n               ~@(if bind-args? arg-syms args)))))\n      (let [ana-expr #(analyze enve %)\n            argexprs (mapv ana-expr args)]\n        {:env env :op :invoke :form form :fn fexpr :args argexprs\n         :children [:fn :args]}))))\n\n(defn parse-invoke\n  [env form]\n  (disallowing-recur (parse-invoke* env form)))\n\n(defn desugar-dotted-expr [{:keys [op] :as expr}]\n  (case op\n    (:var :local) (if (dotted-symbol? (symbol (name (:name expr))))\n                    (let [s      (name (:name expr))\n                          idx    (.lastIndexOf s \".\")\n                          _ (assert (not= (inc idx) (count s)))\n                          prefix (with-meta (symbol (namespace (:name expr)) (subs s 0 idx))\n                                            (meta (:form expr)))\n                          field (symbol (subs s (inc idx)))]\n                      (assert (not (:const-expr expr)))\n                      {:op :host-field\n                       :env (:env expr)\n                       :form (list '. prefix field)\n                       :target (desugar-dotted-expr (-> expr\n                                                        (assoc :name prefix\n                                                               :form prefix)\n                                                        (dissoc :tag)\n                                                        (assoc-in [:info :name] prefix)\n                                                        (assoc-in [:env :context] :expr)))\n                       :field field\n                       :tag (:tag expr)\n                       :children [:target]})\n                    expr)\n    ;:var\n    expr))\n\n\n(defn analyze-symbol\n  \"Finds the var associated with sym\"\n  [env sym]\n  (if ^boolean (:quoted? env)\n    (do\n      (register-constant! env sym)\n      (analyze-wrap-meta {:op :const :val sym :env env :form sym :tag 'cljs.core/Symbol}))\n    (let [{:keys [line column]} (meta sym)\n          env  (if-not (nil? line)\n                 (assoc env :line line)\n                 env)\n          env  (if-not (nil? column)\n                 (assoc env :column column)\n                 env)\n          ret  {:env env :form sym}\n          lcls (:locals env)]\n      (if-some [lb (handle-symbol-local sym (get lcls sym))]\n        (merge\n          (assoc ret :op :local :info lb)\n          ;; this is a temporary workaround for core.async see CLJS-3030 - David\n          (when (map? lb)\n            (select-keys lb [:name :local :arg-id :variadic? :init])))\n        (let [sym-meta (meta sym)\n              sym-ns (namespace sym)\n              cur-ns (str (-> env :ns :name))\n              ;; when compiling a macros namespace that requires itself, we need\n              ;; to resolve calls to `my-ns.core/foo` to `my-ns.core$macros/foo`\n              ;; to avoid undeclared variable warnings - António Monteiro\n              #?@(:cljs [sym (if (and sym-ns\n                                   (not= sym-ns \"cljs.core\")\n                                   (gstring/endsWith cur-ns \"$macros\")\n                                   (not (gstring/endsWith sym-ns \"$macros\"))\n                                   (= sym-ns (subs cur-ns 0 (- (count cur-ns) 7))))\n                               (symbol (str sym-ns \"$macros\") (name sym))\n                               sym)])\n              info     (if-not (contains? sym-meta ::analyzed)\n                         (resolve-existing-var env sym)\n                         (resolve-var env sym))]\n          (assert (:op info) (:op info))\n          (desugar-dotted-expr\n            (if-not (true? (:def-var env))\n              (merge\n                (assoc ret :info info)\n                (select-keys info [:op :name :ns :tag])\n                (when-let [const-expr (:const-expr info)]\n                  {:const-expr const-expr}))\n              (let [info (resolve-var env sym)]\n                (merge (assoc ret :op :var :info info)\n                       (select-keys info [:op :name :ns :tag]))))))))))\n\n(defn excluded?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :excludes sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :excludes sym))))\n\n(defn used?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :use-macros sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :use-macros sym))))\n\n(defn get-expander-ns [env ^String nstr]\n  ;; first check for clojure.* -> cljs.* cases\n  (let [res  (or (resolve-macro-ns-alias env nstr nil)\n                 (resolve-ns-alias env nstr nil))\n        nstr (if (some? res) (str res) nstr)]\n    (cond\n     #?@(:clj  [(= \"clojure.core\" nstr) (find-ns 'cljs.core)]\n         :cljs [(identical? \"clojure.core\" nstr) (find-macros-ns CLJS_CORE_MACROS_SYM)])\n     #?@(:clj  [(= \"clojure.repl\" nstr) (find-ns 'cljs.repl)]\n         :cljs [(identical? \"clojure.repl\" nstr) (find-macros-ns 'cljs.repl)])\n     #?@(:clj  [(.contains nstr \".\") (find-ns (symbol nstr))]\n         :cljs [(goog.string/contains nstr \".\") (find-macros-ns (symbol nstr))])\n     :else (some-> env :ns :require-macros (get (symbol nstr)) #?(:clj  find-ns\n                                                                  :cljs find-macros-ns)))))\n\n(defn get-expander* [sym env]\n  (when-not (or (some? (gets env :locals sym)) ; locals hide macros\n                (and (excluded? env sym) (not (used? env sym))))\n    (let [nstr (namespace sym)]\n      (cond\n        (some? nstr)\n        (let [ns (get-expander-ns env nstr)]\n          (when (some? ns)\n            (.findInternedVar ^clojure.lang.Namespace ns (symbol (name sym)))))\n\n        (some? (gets env :ns :rename-macros sym))\n        (let [qualified-symbol (gets env :ns :rename-macros sym)\n              nsym (symbol (namespace qualified-symbol))\n              sym  (symbol (name qualified-symbol))]\n          (.findInternedVar ^clojure.lang.Namespace\n            #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym))\n\n        :else\n        (let [nsym (gets env :ns :use-macros sym)]\n          (if (and (some? nsym) (symbol? nsym))\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym)\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns 'cljs.core) :cljs (find-macros-ns CLJS_CORE_MACROS_SYM)) sym)))))))\n\n(defn get-expander\n  \"Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander.\"\n  [sym env]\n  (let [mvar (get-expander* sym env)]\n    (when (and (some? mvar)\n            #?(:clj  (.isMacro ^clojure.lang.Var mvar)\n               :cljs ^boolean (.isMacro mvar)))\n      mvar)))\n\n#?(:cljs\n   (let [cached-var (delay (get (ns-interns* 'cljs.spec.alpha) 'macroexpand-check))]\n     (defn get-macroexpand-check-var []\n       (when (some? (find-ns-obj 'cljs.spec.alpha))\n         @cached-var))))\n\n(defn- var->sym [var]\n  #?(:clj  (symbol (str (.-ns ^clojure.lang.Var var)) (str (.-sym ^clojure.lang.Var var)))\n     :cljs (.-sym var)))\n\n(defn- do-macroexpand-check\n  [env form mac-var]\n  (when (not (-> @env/*compiler* :options :spec-skip-macros))\n    (let [mchk #?(:clj (some-> (find-ns 'clojure.spec.alpha)\n                       (ns-resolve 'macroexpand-check))\n                :cljs (get-macroexpand-check-var))]\n    (when (some? mchk)\n      (try\n        (mchk mac-var (next form))\n        (catch #?(:clj Throwable :cljs :default) e\n          (throw (ex-info nil (error-data env :macro-syntax-check (var->sym mac-var)) e))))))))\n\n(defn macroexpand-1*\n  [env form]\n  (let [op (first form)]\n    (if (contains? specials op)\n      (do\n        (when (= 'ns op)\n          (do-macroexpand-check env form (get-expander 'cljs.core/ns-special-form env)))\n        form)\n      ;else\n        (if-some [mac-var (when (symbol? op) (get-expander op env))]\n          (#?@(:clj [binding [*ns* (create-ns *cljs-ns*)]]\n               :cljs [do])\n            (do-macroexpand-check env form mac-var)\n            (let [form' (try\n                          (apply @mac-var form env (rest form))\n                          #?(:clj (catch ArityException e\n                                    (throw (ArityException. (- (.actual e) 2) (.name e)))))\n                          (catch #?(:clj Throwable :cljs :default) e\n                            (throw (ex-info nil (error-data env :macroexpansion (var->sym mac-var)) e))))]\n              (if #?(:clj (seq? form') :cljs (cljs-seq? form'))\n                (let [sym' (first form')\n                      sym  (first form)]\n                  (if #?(:clj  (= sym' 'js*)\n                         :cljs (symbol-identical? sym' JS_STAR_SYM))\n                    (let [sym   (if (some? (namespace sym))\n                                  sym\n                                  (symbol \"cljs.core\" (str sym)))\n                          js-op {:js-op sym}\n                          numeric #?(:clj  (-> mac-var meta ::numeric)\n                                     :cljs (let [mac-var-ns   (symbol (namespace (.-sym mac-var)))\n                                                 mac-var-name (symbol (name (.-sym mac-var)))]\n                                             (get-in @env/*compiler*\n                                               [::namespaces mac-var-ns :defs mac-var-name :meta ::numeric])))\n                          js-op (if (true? numeric)\n                                  (assoc js-op :numeric true)\n                                  js-op)]\n                      (vary-meta form' merge js-op))\n                    form'))\n                form')))\n          (if (symbol? op)\n            (let [opname (str op)]\n              (cond\n                (identical? \\.\n                  #?(:clj  (first opname)\n                     :cljs (.charAt opname 0)))\n                (let [[target & args] (next form)]\n                  (with-meta (list* #?(:clj '. :cljs DOT_SYM) target (symbol (subs opname 1)) args)\n                    (meta form)))\n\n                (identical? \\.\n                  #?(:clj  (last opname)\n                     :cljs (.charAt opname (dec (. opname -length)))))\n                (with-meta\n                  (list* #?(:clj 'new :cljs NEW_SYM) (symbol (subs opname 0 (dec (count opname)))) (next form))\n                  (meta form))\n\n                :else form))\n            form)))))\n\n(defn macroexpand-1\n  \"Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once.\"\n  [env form]\n  (wrapping-errors env (macroexpand-1* env form)))\n\n(declare analyze-list)\n\n(defn analyze-seq* [op env form name opts]\n  (if (contains? specials op)\n    (parse op env form name opts)\n    (parse-invoke env form)))\n\n(defn analyze-seq*-wrap [op env form name opts]\n  (wrapping-errors env\n    (analyze-seq* op env form name opts)))\n\n(defn analyze-seq\n  ([env form name]\n   (analyze-seq env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (if ^boolean (:quoted? env)\n     (analyze-list env form)\n     (let [line (-> form meta :line)\n           line (if (nil? line)\n                  (:line env)\n                  line)\n           col  (-> form meta :column)\n           col  (if (nil? col)\n                  (:column env)\n                  col)\n           env  (assoc env :line line :column col)]\n       (let [op (first form)]\n         (when (nil? op)\n           (throw (error env \"Can't call nil\")))\n         (let [mform (macroexpand-1 env form)]\n           (if (identical? form mform)\n             (analyze-seq*-wrap op env form name opts)\n             (analyze env mform name opts))))))))\n\n(defn analyze-map\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        ks (disallowing-recur (mapv #(analyze expr-env %) (keys form)))\n        vs (disallowing-recur (mapv #(analyze expr-env %) (vals form)))]\n    (analyze-wrap-meta {:op :map :env env :form form\n                        :keys ks :vals vs\n                        :children [:keys :vals]\n                        :tag 'cljs.core/IMap})))\n\n;; :list is not used in the emitter any more, but analyze-list is called from analyze-const\n;; to hit the `register-constant!` cases for symbols and keywords.\n(defn analyze-list\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :list :env env :form form :items items :children [:items] :tag 'cljs.core/IList})))\n\n(defn analyze-vector\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :vector :env env :form form :items items :children [:items] :tag 'cljs.core/IVector})))\n\n(defn analyze-set\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :set :env env :form form :items items :children [:items] :tag 'cljs.core/ISet})))\n\n(defn analyze-js-value\n  [env ^JSValue form]\n  (let [val (.-val form)\n        expr-env (assoc env :context :expr)]\n    (if (map? val)\n      (let [keys (vec (keys val))\n            vals (disallowing-recur\n                   (mapv #(analyze expr-env %) (vals val)))]\n        {:op :js-object\n         :env env\n         :form form\n         :keys keys\n         :vals vals\n         :children [:vals]\n         :tag 'object})\n      (let [items (disallowing-recur\n                    (mapv #(analyze expr-env %) val))]\n        {:op :js-array\n         :env env\n         :form form\n         :items items\n         :children [:items]\n         :tag 'array}))))\n\n(defn record-ns+name [x]\n  (map symbol\n       #?(:clj\n          ((juxt (comp #(string/join \".\" %) butlast) last)\n           (string/split (.getName ^Class (type x)) #\"\\.\"))\n          :cljs\n          (string/split (pr-str (type x)) #\"/\"))))\n\n(defn analyze-record\n  [env x]\n  (let [;; register constansts\n        _items_   (disallowing-recur\n                    (analyze (assoc env :context :expr) (into {} x)))\n        [ns name] (record-ns+name x)]\n    {:op :const\n     :val x\n     :env env\n     :form x\n     :tag (symbol (str ns) (str name))}))\n\n(defn elide-reader-meta [m]\n  (dissoc m :file :line :column :end-column :end-line :source))\n\n(defn elide-analyzer-meta [m]\n  (dissoc m ::analyzed))\n\n(defn elide-irrelevant-meta [m]\n  (-> m elide-reader-meta elide-analyzer-meta))\n\n(defn analyze-wrap-meta [expr]\n  (let [form (:form expr)\n        m    (elide-irrelevant-meta (meta form))]\n    (if (some? (seq m))\n      (let [env (:env expr) ; take on expr's context ourselves\n            expr (assoc-in expr [:env :context] :expr) ; change expr to :expr\n            meta-expr (analyze-map (:env expr) m)]\n        {:op :with-meta :env env :form form\n         :meta meta-expr :expr expr :children [:meta :expr]})\n      expr)))\n\n(defn infer-type [env {:keys [tag] :as ast} _]\n  (if (or (nil? tag) (= 'function tag))\n    ;; infer-type won't get a chance to process :methods\n    ;; so treat :fn as a special case for now, could probably\n    ;; fix up to use :children to walk child nodes\n    (if (= :fn (:op ast))\n      (update ast :methods\n        (fn [ms] (into [] (map #(infer-type env % _)) ms)))\n      (if-some [tag (infer-tag env ast)]\n        (assoc ast :tag tag)\n        ast))\n    ast))\n\n(defn- repl-self-require? [env deps]\n  (and (:repl-env env) (some #{*cljs-ns*} deps)))\n\n#?(:clj\n   (defn ns-side-effects\n     [env {:keys [op] :as ast} opts]\n     (if (#{:ns :ns*} op)\n       (let [{:keys [name deps uses require-macros use-macros reload reloads]} ast]\n         (when (and *analyze-deps* (seq deps))\n           (analyze-deps\n             (if (repl-self-require? env deps) 'cljs.user name)\n             deps env (dissoc opts :macros-ns)))\n         (if *load-macros*\n           (do\n             (load-core)\n             (doseq [nsym (vals use-macros)]\n               (let [k (or (:use-macros reload)\n                         (get-in reloads [:use-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (doseq [nsym (vals require-macros)]\n               (let [k (or (:require-macros reload)\n                         (get-in reloads [:require-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (-> ast\n               (check-use-macros-inferring-missing env)\n               (check-rename-macros-inferring-missing env)))\n           (do\n             (check-uses\n               (when (and *analyze-deps* (seq uses))\n                 (missing-uses uses env))\n               env)\n             ast)))\n       ast)))\n\n;; A set of validators that can be used to do static type\n;; checking of runtime fns based on inferred argument types.\n(def invoke-arg-type-validators\n  (let [aget-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (rest %)))\n                        :warning-type :invalid-array-access}\n        aset-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (butlast (rest %))))\n                        :warning-type :invalid-array-access}]\n    {'cljs.core/checked-aget  aget-validator\n     'cljs.core/checked-aset  aset-validator\n     'cljs.core/checked-aget' aget-validator\n     'cljs.core/checked-aset' aset-validator}))\n\n(defn check-invoke-arg-types\n  [env {:keys [op] :as ast} opts]\n  (when (and (not (analyzed? ast))\n             #?(:clj  (= :invoke op)\n                :cljs (keyword-identical? :invoke op)))\n    (when-some [[name {:keys [valid? warning-type]}] (find invoke-arg-type-validators (-> ast :fn :info :name))]\n      (let [types (mapv :tag (:args ast))]\n        (when-not (valid? types)\n          (warning warning-type env\n            {:name  name\n             :types types})))))\n  (analyzed ast))\n\n#?(:clj\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (seq? form) (seq form)) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (map? form) (analyze-map env form)\n       (vector? form) (analyze-vector env form)\n       (set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) 'clj-nil\n                   (number? form) 'number\n                   (string? form) 'string\n                   (instance? Character form) 'string\n                   (true? form) 'boolean\n                   (false? form) 'boolean\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n#?(:cljs\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (cljs-seq? form) (some? (seq form))) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (cljs-map? form) (analyze-map env form)\n       (cljs-vector? form) (analyze-vector env form)\n       (cljs-set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? cljs.tagged-literals/JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) CLJ_NIL_SYM\n                   (number? form) NUMBER_SYM\n                   (string? form) STRING_SYM\n                   (true? form) BOOLEAN_SYM\n                   (false? form) BOOLEAN_SYM\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n(defn analyze* [env form name opts]\n  (let [passes *passes*\n        passes (if (nil? passes)\n                 #?(:clj  [infer-type check-invoke-arg-types ns-side-effects]\n                    :cljs [infer-type check-invoke-arg-types])\n                 passes)\n        form   (if (instance? LazySeq form)\n                 (if (seq form) form ())\n                 form)\n        ast    (analyze-form env form name opts)]\n    (reduce (fn [ast pass] (pass env ast opts)) ast passes)))\n\n(defn analyze\n  \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.\"\n  ([env form] (analyze env form nil))\n  ([env form name]\n   (analyze env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (wrapping-errors env\n     (if (analyzed? form)\n       (no-warn (analyze* env form name opts))\n       (analyze* env form name opts)))))\n\n(defn add-consts\n  \"Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source.\"\n  [compiler-state constants-map]\n  (reduce-kv\n    (fn [compiler-state sym value]\n      (let [ns (symbol (namespace sym))]\n        (update-in compiler-state\n          [::namespaces ns :defs (symbol (name sym))] merge\n          {:const-expr\n           (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n             (analyze (empty-env) value))})))\n    compiler-state constants-map))\n\n#?(:clj\n   (defn- source-path\n     \"Returns a path suitable for providing to tools.reader as a 'filename'.\"\n     [x]\n     (cond\n       (instance? File x) (.getAbsolutePath ^File x)\n       :default (str x))))\n\n(defn resolve-symbol [sym]\n  (if (and (not (namespace sym))\n           (dotted-symbol? sym))\n    sym\n    (:name (binding [*private-var-access-nowarn* true]\n             (resolve-var (assoc @env/*compiler* :ns (get-namespace *cljs-ns*))\n               sym)))))\n\n#?(:clj\n   (defn forms-seq*\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([^Reader rdr] (forms-seq* rdr nil))\n     ([^Reader rdr filename]\n      {:pre [(instance? Reader rdr)]}\n      (let [eof-sentinel (Object.)\n            opts (merge\n                   {:eof eof-sentinel}\n                   (if (and filename (= (util/ext filename) \"cljc\"))\n                     {:read-cond :allow :features #{:cljs}}))\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq_\n            (fn forms-seq_ []\n              (lazy-seq\n                (let [form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))\n                                     reader/resolve-symbol resolve-symbol]\n                             (reader/read opts pbr))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq_))))))]\n        (forms-seq_)))))\n\n#?(:clj\n   (defn forms-seq\n     \"DEPRECATED: Seq of Clojure/ClojureScript forms from [f], which can be anything\n     for which `clojure.java.io/reader` can produce a `java.io.Reader`. Optionally\n     accepts a [filename] argument, which the reader will use in any emitted errors.\"\n     ([f] (forms-seq f (source-path f)))\n     ([f filename] (forms-seq f filename false))\n     ([f filename return-reader?]\n      (let [rdr (io/reader f)\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq*\n            (fn forms-seq* []\n              (lazy-seq\n                (let [eof-sentinel (Object.)\n                      form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))]\n                             (reader/read pbr nil eof-sentinel))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq*))))))]\n        (if (true? return-reader?)\n          [(forms-seq*) rdr]\n          (forms-seq*))))))\n\n#?(:clj\n   (defn gen-user-ns\n     [src]\n     (if (sequential? src)\n       (symbol (str \"cljs.user.source$form$\" (util/content-sha (pr-str src) 7)))\n       (let [full-name (str src)\n             name (.substring full-name\n                    (inc (.lastIndexOf full-name \"/\"))\n                    (.lastIndexOf full-name \".\"))]\n         (symbol (str \"cljs.user.\" name (util/content-sha full-name 7)))))))\n\n#?(:clj\n   (defn ^:dynamic parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n\n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src]\n      (parse-ns src nil\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (ensure\n        (let [src (if (symbol? src)\n                    (util/ns->source src)\n                    src)\n              ijs\n              (binding [env/*compiler* (if (false? (:restore opts))\n                                         env/*compiler*\n                                         (atom @env/*compiler*))\n                        *cljs-ns* 'cljs.user\n                        *cljs-file* src\n                        *macro-infer*\n                        (or (when (contains? opts :macro-infer)\n                              (:macro-infer opts))\n                          false)\n                        *analyze-deps*\n                        (or (when (contains? opts :analyze-deps)\n                              (:analyze-deps opts))\n                          false)\n                        *load-macros*\n                        (or (when (contains? opts :load-macros)\n                              (:load-macros opts))\n                          false)]\n                (let [rdr (when-not (sequential? src) (io/reader src))]\n                  (try\n                    (loop [forms (if rdr\n                                   (forms-seq* rdr (source-path src))\n                                   src)\n                           ret (merge\n                                 {:file         dest\n                                  :source-file  (when rdr src)\n                                  :source-forms (when-not rdr src)\n                                  :macros-ns    (:macros-ns opts)\n                                  :requires     (cond-> #{'cljs.core}\n                                                  (get-in @env/*compiler* [:options :emit-constants])\n                                                  (conj constants-ns-sym))}\n                                 (when (and dest (.exists ^File dest))\n                                   {:lines (with-open [reader (io/reader dest)]\n                                             (-> reader line-seq count))}))]\n                      (if (seq forms)\n                        (let [env (empty-env)\n                              ast (no-warn (analyze env (first forms) nil opts))]\n                          (cond\n                            (= :ns (:op ast))\n                            (let [ns-name (:name ast)\n                                  ns-name (if (and (= 'cljs.core ns-name)\n                                                   (= \"cljc\" (util/ext src)))\n                                            'cljs.core$macros\n                                            ns-name)\n                                  deps (merge (:uses ast) (:requires ast))]\n                              (merge\n                                {:ns           (or ns-name 'cljs.user)\n                                 :provides     [ns-name]\n                                 :requires     (if (= 'cljs.core ns-name)\n                                                 (set (vals deps))\n                                                 (cond-> (conj (set (vals deps)) 'cljs.core)\n                                                   (get-in @env/*compiler* [:options :emit-constants])\n                                                   (conj constants-ns-sym)))\n                                 :file         dest\n                                 :source-file  (when rdr src)\n                                 :source-forms (when-not rdr src)\n                                 :ast          ast\n                                 :macros-ns    (or (:macros-ns opts)\n                                                   (= 'cljs.core$macros ns-name))}\n                                (when (and dest (.exists ^File dest))\n                                  {:lines (with-open [reader (io/reader dest)]\n                                            (-> reader line-seq count))})))\n\n                            (= :ns* (:op ast))\n                            (let [deps (merge (:uses ast) (:requires ast))]\n                              (recur (rest forms)\n                                (cond-> (update-in ret [:requires] into (set (vals deps)))\n                                  ;; we need to defer generating the user namespace\n                                  ;; until we actually need or it will break when\n                                  ;; `src` is a sequence of forms - António Monteiro\n                                  (not (:ns ret))\n                                  (assoc :ns (gen-user-ns src) :provides [(gen-user-ns src)]))))\n\n                            :else ret))\n                        ret))\n                    (finally\n                      (when rdr\n                        (.close ^Reader rdr))))))]\n          (cond-> ijs\n            (not (contains? ijs :ns))\n            (merge\n              {:ns (gen-user-ns src)\n               :provides [(gen-user-ns src)]})))))))\n\n#?(:clj\n   (defn- cache-analysis-ext\n     ([] (cache-analysis-ext (get-in @env/*compiler* [:options :cache-analysis-format] :transit)))\n     ([format]\n      (if (and (= format :transit) @transit) \"json\" \"edn\"))))\n\n#?(:clj\n   (defn build-affecting-options [opts]\n     (select-keys opts\n       [:static-fns :fn-invoke-direct :optimize-constants :elide-asserts :target\n        :cache-key :checked-arrays :language-out])))\n\n#?(:clj\n   (defn build-affecting-options-sha [path opts]\n     (let [m (assoc (build-affecting-options opts) :path path)]\n       (util/content-sha (pr-str m) 7))))\n\n#?(:clj\n   (defn ^File cache-base-path\n     ([path]\n      (cache-base-path path nil))\n     ([path opts]\n      (io/file (System/getProperty \"user.home\")\n        \".cljs\" \".aot_cache\" (util/clojurescript-version)\n        (build-affecting-options-sha path opts)))))\n\n#?(:clj\n   (defn cacheable-files\n     ([rsrc ext]\n      (cacheable-files rsrc ext nil))\n     ([rsrc ext opts]\n      (let [{:keys [ns]} (parse-ns rsrc)\n            path (cache-base-path (util/path rsrc) opts)\n            name (util/ns->relpath ns nil File/separatorChar)]\n        (into {}\n          (map\n            (fn [[k v]]\n              [k (io/file path\n                   (if (and (= (str \"cljs\" File/separatorChar \"core$macros\") name)\n                         (= :source k))\n                     (str \"cljs\" File/separatorChar \"core.cljc\")\n                     (str name v)))]))\n          {:source (str \".\" ext)\n           :output-file \".js\"\n           :source-map \".js.map\"\n           :analysis-cache-edn (str \".\" ext \".cache.edn\")\n           :analysis-cache-json (str \".\" ext \".cache.json\")})))))\n\n#?(:clj\n   (defn cache-file\n     \"Given a ClojureScript source file returns the read/write path to the analysis\n      cache file. Defaults to the read path which is usually also the write path.\"\n     ([src] (cache-file src \"out\"))\n     ([src output-dir] (cache-file src (parse-ns src) output-dir))\n     ([src ns-info output-dir]\n      (cache-file src ns-info output-dir :read nil))\n     ([src ns-info output-dir mode]\n      (cache-file src ns-info output-dir mode nil))\n     ([src ns-info output-dir mode opts]\n      {:pre [(map? ns-info)]}\n      (let [ext (cache-analysis-ext)]\n        (if-let [core-cache\n                 (and (= mode :read)\n                      (= (:ns ns-info) 'cljs.core)\n                      (io/resource (str \"cljs/core.cljs.cache.aot.\" ext)))]\n          core-cache\n          (let [aot-cache-file\n                (when (util/url? src)\n                  ((keyword (str \"analysis-cache-\" ext))\n                    (cacheable-files src (util/ext src) opts)))]\n            (if (and aot-cache-file (.exists ^File aot-cache-file))\n              aot-cache-file\n              (let [target-file (util/to-target-file output-dir ns-info\n                                  (util/ext (:source-file ns-info)))]\n                (io/file (str target-file \".cache.\" ext))))))))))\n\n#?(:clj\n   (defn requires-analysis?\n     \"Given a src, a resource, and output-dir, a compilation output directory\n      return true or false depending on whether src needs to be (re-)analyzed.\n      Can optionally pass cache, the analysis cache file.\"\n     ([src] (requires-analysis? src \"out\"))\n     ([src output-dir]\n      (let [cache (cache-file src output-dir)]\n        (requires-analysis? src cache output-dir nil)))\n     ([src cache output-dir]\n      (requires-analysis? src cache output-dir nil))\n     ([src cache output-dir opts]\n      (cond\n        (util/url? cache)\n        (let [path (.getPath ^URL cache)]\n          (if (or (.endsWith path \"cljs/core.cljs.cache.aot.edn\")\n                  (.endsWith path \"cljs/core.cljs.cache.aot.json\"))\n            false\n            (throw (Exception. (str \"Invalid anlaysis cache, must be file not URL \" cache)))))\n\n        (and (util/file? cache)\n             (not (.exists ^File cache)))\n        true\n\n        :else\n        (let [out-src   (util/to-target-file output-dir (parse-ns src))\n              cache-src (:output-file (cacheable-files src (util/ext src) opts))]\n          (if (and (not (.exists out-src))\n                   (not (.exists ^File cache-src)))\n            true\n            (or (not cache) (util/changed? src cache))))))))\n\n#?(:clj\n   (defn- get-spec-vars\n     []\n     (when-let [spec-ns (find-ns 'cljs.spec.alpha)]\n       (locking load-mutex\n         {:registry-ref (ns-resolve spec-ns 'registry-ref)\n          :speced-vars  (ns-resolve spec-ns '_speced_vars)})))\n   :cljs\n   (let [registry-ref (delay (get (ns-interns* 'cljs.spec.alpha$macros) 'registry-ref))\n         ;; Here, we look up the symbol '-speced-vars because ns-interns*\n         ;; is implemented by invoking demunge on the result of js-keys.\n         speced-vars  (delay (get (ns-interns* 'cljs.spec.alpha$macros) '-speced-vars))]\n     (defn- get-spec-vars []\n       (when (some? (find-ns-obj 'cljs.spec.alpha$macros))\n         {:registry-ref @registry-ref\n          :speced-vars  @speced-vars}))))\n\n(defn dump-specs\n  \"Dumps registered speced vars for a given namespace into the compiler\n  environment.\"\n  [ns]\n  (let [spec-vars (get-spec-vars)\n        ns-str    (str ns)]\n    (swap! env/*compiler* update-in [::namespaces ns]\n      merge\n      (when-let [registry-ref (:registry-ref spec-vars)]\n        {:cljs.spec/registry-ref\n         (into []\n           (filter (fn [[k _]] (= ns-str (namespace k))))\n           @@registry-ref)})\n      (when-let [speced-vars (:speced-vars spec-vars)]\n        {:cljs.spec/speced-vars\n         (into []\n           (filter\n             (fn [v]\n               (or (= ns-str (namespace v))\n                   (= ns (-> v meta :fdef-ns)))))\n           @@speced-vars)}))))\n\n(defn register-specs\n  \"Registers speced vars found in a namespace analysis cache.\"\n  [cached-ns]\n  #?(:clj (try\n            (locking load-mutex\n              (clojure.core/require 'cljs.spec.alpha))\n            (catch Throwable t)))\n  (let [{:keys [registry-ref speced-vars]} (get-spec-vars)]\n    (when-let [registry (seq (:cljs.spec/registry-ref cached-ns))]\n      (when registry-ref\n        (swap! @registry-ref into registry)))\n    (when-let [vars (seq (:cljs.spec/speced-vars cached-ns))]\n      (when speced-vars\n        (swap! @speced-vars into vars)))))\n\n#?(:clj\n   (defn write-analysis-cache\n     ([ns cache-file]\n       (write-analysis-cache ns cache-file nil))\n     ([ns ^File cache-file src]\n      (util/mkdirs cache-file)\n      (dump-specs ns)\n      (let [ext (util/ext cache-file)\n            analysis (dissoc (get-in @env/*compiler* [::namespaces ns]) :macros)]\n        (case ext\n          \"edn\"  (spit cache-file\n                   (str \";; Analyzed by ClojureScript \" (util/clojurescript-version) \"\\n\"\n                     (pr-str analysis)))\n          \"json\" (when-let [{:keys [writer write]} @transit]\n                   (write\n                     (writer (FileOutputStream. cache-file) :json\n                       transit-write-opts)\n                     analysis))))\n      (when src\n        (.setLastModified ^File cache-file (util/last-modified src))))))\n\n#?(:clj\n   (defn read-analysis-cache\n     ([cache-file src]\n      (read-analysis-cache cache-file src nil))\n     ([^File cache-file src opts]\n       ;; we want want to keep dependency analysis information\n       ;; don't revert the environment - David\n      (let [{:keys [ns]} (parse-ns src\n                           (merge opts\n                             {:restore false\n                              :analyze-deps true\n                              :load-macros true}))\n            ext          (util/ext cache-file)\n            cached-ns    (case ext\n                           \"edn\"  (edn/read-string (slurp cache-file))\n                           \"json\" (let [{:keys [reader read]} @transit]\n                                    (with-open [is (io/input-stream cache-file)]\n                                      (read (reader is :json transit-read-opts)))))]\n        (when (or *verbose* (:verbose opts))\n          (util/debug-prn \"Reading analysis cache for\" (str src)))\n        (swap! env/*compiler*\n          (fn [cenv]\n            (do\n              (register-specs cached-ns)\n              (doseq [x (get-in cached-ns [::constants :order])]\n                (register-constant! x))\n              (-> cenv\n                (assoc-in [::namespaces ns] cached-ns)))))))))\n\n(defn analyze-form-seq\n  ([forms]\n   (analyze-form-seq forms\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([forms opts]\n   (analyze-form-seq forms opts false))\n  ([forms opts return-last?]\n   (let [env (assoc (empty-env) :build-options opts)]\n     (binding [*file-defs* nil\n               #?@(:clj [*unchecked-if* false\n                         *unchecked-arrays* false])\n               *cljs-ns* 'cljs.user\n               *cljs-file* nil\n               reader/*alias-map* (or reader/*alias-map* {})]\n       (loop [ns nil forms forms last-ast nil]\n         (if (some? forms)\n           (let [form (first forms)\n                 env  (assoc env :ns (get-namespace *cljs-ns*))\n                 ast  (analyze env form nil opts)]\n             (if (= (:op ast) :ns)\n               (recur (:name ast) (next forms) ast)\n               (recur ns (next forms) ast)))\n           (if return-last?\n             last-ast\n             ns)))))))\n\n(defn ensure-defs\n  \"Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)\"\n  [ns]\n  (swap! env/*compiler* update-in [::namespaces ns :defs] #(or % {})))\n\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n\n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f]\n      (analyze-file f\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([f opts]\n      (analyze-file f false opts))\n     ([f skip-cache opts]\n      (binding [*file-defs*        (atom #{})\n                *unchecked-if*     false\n                *unchecked-arrays* false\n                *cljs-warnings*    *cljs-warnings*]\n        (let [output-dir (util/output-directory opts)\n              res        (cond\n                           (instance? File f) f\n                           (instance? URL f) f\n                           (re-find #\"^file://\" f) (URL. f)\n                           :else (io/resource f))]\n          (assert res (str \"Can't find \" f \" in classpath\"))\n          (ensure\n            (let [ns-info (parse-ns res)\n                  path    (if (instance? File res)\n                            (.getPath ^File res)\n                            (.getPath ^URL res))\n                  cache   (when (:cache-analysis opts)\n                            (cache-file res ns-info output-dir :read opts))]\n              (when-not (get-in @env/*compiler* [::namespaces (:ns ns-info) :defs])\n                (if (or skip-cache (not cache) (requires-analysis? res cache output-dir opts))\n                  (binding [*cljs-ns* 'cljs.user\n                            *cljs-file* path\n                            reader/*alias-map* (or reader/*alias-map* {})]\n                    (when (or *verbose* (:verbose opts))\n                      (util/debug-prn \"Analyzing\" (str res)))\n                    (let [env (assoc (empty-env) :build-options opts)\n                          ns  (with-open [rdr (io/reader res)]\n                                (loop [ns nil forms (seq (forms-seq* rdr (util/path res)))]\n                                  (if forms\n                                    (let [form (first forms)\n                                          env (assoc env :ns (get-namespace *cljs-ns*))\n                                          ast (analyze env form nil opts)]\n                                      (cond\n                                        (= (:op ast) :ns)\n                                        (recur (:name ast) (next forms))\n\n                                        (and (nil? ns) (= (:op ast) :ns*))\n                                        (recur (gen-user-ns res) (next forms))\n\n                                        :else\n                                        (recur ns (next forms))))\n                                    ns)))]\n                      (ensure-defs ns)\n                      (when (and cache (true? (:cache-analysis opts)))\n                        (write-analysis-cache ns cache res))))\n                  (try\n                    (read-analysis-cache cache res opts)\n                    (catch Throwable e\n                      (analyze-file f true opts))))))))))))\n","~:reader-features",["^W",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.analyzer/*cljs-ns*","cljs.analyzer/*cljs-file*","cljs.analyzer/*checked-arrays*","cljs.analyzer/*check-alias-dupes*","cljs.analyzer/*cljs-static-fns*","cljs.analyzer/*fn-invoke-direct*","cljs.analyzer/*cljs-macros-path*","cljs.analyzer/*cljs-macros-is-classpath*","cljs.analyzer/*cljs-dep-set*","cljs.core/with-meta","cljs.analyzer/*analyze-deps*","cljs.analyzer/*load-tests*","cljs.analyzer/*load-macros*","cljs.analyzer/*reload-macros*","cljs.analyzer/*macro-infer*","cljs.analyzer/*passes*","cljs.analyzer/*file-defs*","cljs.analyzer/*private-var-access-nowarn*","cljs.analyzer/constants-ns-sym","cljs.analyzer/identity-counter","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.analyzer/add-identity","m","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/inc","cljs.analyzer/*verbose*","cljs.analyzer/-cljs-macros-loaded","cljs.analyzer/*cljs-warnings*","cljs.analyzer/unchecked-arrays?","cljs.core/*unchecked-arrays*","cljs.analyzer/checked-arrays","cljs.core/not","cljs.core/deref","cljs.env/*compiler*","cljs.analyzer/js-reserved","cljs.analyzer/es5-allowed","cljs.analyzer/SENTINEL","var_args","G__72348","cljs.analyzer/gets","js/Error","k0","k1","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core.get.cljs$core$IFn$_invoke$arity$2","k2","k3","cljs.analyzer/CLJ_NIL_SYM","cljs.analyzer/NUMBER_SYM","cljs.analyzer/STRING_SYM","cljs.analyzer/BOOLEAN_SYM","cljs.analyzer/JS_STAR_SYM","cljs.analyzer/DOT_SYM","cljs.analyzer/NEW_SYM","cljs.analyzer/CLJS_CORE_SYM","cljs.analyzer/CLJS_CORE_MACROS_SYM","cljs.analyzer/IGNORE_SYM","cljs.analyzer/ANY_SYM","cljs.analyzer/cljs-seq?","x","cljs.core/PROTOCOL_SENTINEL","cljs.analyzer/cljs-map?","cljs.analyzer/cljs-vector?","cljs.analyzer/cljs-set?","cljs.analyzer/munge-path","ss","cljs.core/munge","G__72392","cljs.analyzer/ns->relpath","ns","cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2","ext","clojure.string/replace","cljs.core/name","G__72399","cljs.analyzer/topo-sort","get-deps","cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4","cljs.core/sorted-map","cljs.core/memoize","depth","state","memo-get-deps","deps","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2","cljs.core/into","seq__72404","cljs.core/seq","chunk__72405","count__72406","i__72407","temp__5753__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","dep","seq__72429","chunk__72430","count__72431","i__72432","vec__72448","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__72452","<depth","_","cljs.core.subseq.cljs$core$IFn$_invoke$arity$3","cljs.core/<","clojure.set/difference","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/concat","cljs.core/vals","cljs.analyzer/ast?","cljs.core/map?","cljs.core/contains?","js/cljs","js/cljs.analyzer","js/cljs.analyzer.error-message","method-table__4613__auto__","prefer-table__4614__auto__","method-cache__4615__auto__","cached-hierarchy__4616__auto__","hierarchy__4617__auto__","fexpr__72481","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/error-message","warning-type","info","clojure.string.join.cljs$core$IFn$_invoke$arity$2","p__72503","map__72507","cljs.core/hash-map","ns-sym","js-provide","clojure.string/includes?","cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1","p__72516","map__72518","or__4131__auto__","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","p__72593","map__72594","name","types","G__72606","cljs.core/every?","cljs.core/rest","cljs.core/butlast","p__72619","map__72620","munged","clojure.string.split.cljs$core$IFn$_invoke$arity$2","p1__72617#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__72627","map__72629","var","p__72635","map__72636","p__72643","map__72645","protocol","method","p__72659","map__72660","module-type","file","p__72668","map__72669","preprocess","p__72675","map__72676","p__72678","map__72679","warn-type","form","type","property","G__72687","cljs.core/Keyword","cljs.analyzer/default-warning-handler","env","extra","s","*print-fn*-orig-val__72701","*print-fn*-temp-val__72702","cljs.core/*print-fn*","cljs.core/*print-err-fn*","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","G__72703","G__72704","cljs.analyzer/message","cljs.analyzer/*cljs-warning-handlers*","cljs.analyzer/repeat-char","c","n","ret","cljs.analyzer/hex-format","pad","hex","len","cljs.analyzer/gen-constant-id","value","prefix","cljs.core/Symbol","cljs.core/type","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","p1__72718#","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","G__72729","cljs.analyzer/register-constant!","val","cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2","cenv","G__72734","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","table","p__72736","map__72737","seen","order","constants","G__72743","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/default-namespaces","cljs.analyzer/namespaces","js/cljs.analyzer.t_cljs$analyzer72748","cljs.analyzer/t_cljs$analyzer72748","_72750","meta72749","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","cljs.analyzer/->t_cljs$analyzer72748","G__72775","cljs.analyzer/get-namespace","key","cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2","temp__5755__auto__","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/get-line","cljs.core/meta","cljs.analyzer/get-col","G__72804","cljs.analyzer/intern-macros","cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2","reload","cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","cljs.core/ns-interns*","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p__72832","vec__72833","v","p__72822","vec__72823","k","vm","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/empty-env","val__55722__auto__","cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0","cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1","p1__72851#","cljs.core/PersistentVector","p__72860","map__72861","cljs.analyzer/source-info->error-data","line","column","G__72887","cljs.analyzer/source-info","cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2","G__72900","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/select-keys","cljs.analyzer/warning","seq__72908","chunk__72910","count__72911","i__72912","handler","cljs.analyzer/accumulating-warning-handler","warn-acc","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/conj","cljs.analyzer/replay-accumulated-warnings","p1__72933#","cljs.core/run!","G__72942","cljs.analyzer/error-data","phase","cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3","symbol","cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1","cljs.analyzer/compile-syntax-error","msg","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3","G__72952","cljs.analyzer/error","cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3","cause","cljs.analyzer/analysis-error?","ex","cljs.core/ex-data","cljs.analyzer/has-error-data?","cljs.analyzer/implicit-nses","cljs.analyzer/implicit-import?","suffix","cljs.analyzer/confirm-var-exist-warning","G__72974","G__72975","cljs.analyzer/get-expander","cljs.analyzer/loaded-js-ns?","cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/internal-js-module-exists?","js-module-index","module","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1","p__73009","vec__73012","cljs.analyzer/js-module-exists?*","cljs.analyzer/js-module-exists?","G__73018","G__73019","cljs.analyzer/node-module-dep?","e73020","cljs.core/*target*","cljs.core/boolean","js/require.resolve","cljs.analyzer/dep-has-global-exports?","global-exports","G__73035","cljs.analyzer/confirm-var-exists","warn","cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4","missing-fn","sufstr","suffix-str","cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5","cljs.analyzer/confirm-var-exists-throw","cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2","G__73060","cljs.analyzer/resolve-ns-alias","cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3","not-found","sym","G__73067","cljs.analyzer/resolve-macro-ns-alias","cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/confirm-ns","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/core-name?","and__4120__auto__","mac","cljs.analyzer/public-name?","var-ast","cljs.analyzer/js-tag?","cljs.core/namespace","cljs.analyzer/normalize-js-tag","cljs.core/symbol","cljs.core/vec","cljs.analyzer/->type-set","t","cljs.analyzer/canonicalize-type","cljs.core/empty?","res","cljs.core.disj.cljs$core$IFn$_invoke$arity$2","G__73107","cljs.analyzer/add-types","args-arr__4751__auto__","len__4730__auto__","i__4731__auto__","argseq__4752__auto__","cljs.core/IndexedSeq","seq73102","G__73103","G__73104","self__4717__auto__","t1","t2","clojure.set.union.cljs$core$IFn$_invoke$arity$2","ts","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/alias->type","G__73120","cljs.analyzer/has-extern?*","pre","externs","me","cljs.core/find","tag","cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3","top","vec__73135","x'","externs'","xmeta","G__73156","cljs.analyzer/has-extern?","cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2","cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2","cljs.core/last","clojure.string/starts-with?","G__73169","cljs.analyzer/js-tag","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2","tag-type","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4","vec__73172","p","G__73175","cljs.analyzer/dotted-symbol?","goog.string/contains","cljs.analyzer/munge-node-lib","cljs.analyzer/munge-global-export","cljs.analyzer/resolve-alias","fexpr__73215","cljs.analyzer/ns->module-type","js/cljs.analyzer.resolve*","fexpr__73218","cljs.analyzer/resolve*","full-ns","current-ns","cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1","cljs.core/merge","cljs.analyzer/private-var-access-exceptions","sym-ast","sym-name","cljs.analyzer/required?","cljs.core/set","cljs.analyzer/invokeable-ns?","cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/resolve-invokeable-ns","G__73272","cljs.analyzer/handle-symbol-local","lb","G__73333","cljs.analyzer/resolve-var","cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3","confirm","locals","symn","shadowed-by-local","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1","ret-tag","G__73371","G__73372","G__73373","idx","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","qualified-symbol","G__73406","G__73407","G__73408","cljs.analyzer/resolve-existing-var","cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/confirm-bindings","names","seq__73428","chunk__73429","count__73430","i__73431","ev","cljs.analyzer/resolve-macro-var","namespaces","cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2","clojure.string/ends-with?","cljs.analyzer/specials","cljs.analyzer/*recur-frames*","cljs.analyzer/*loop-lets*","cljs.analyzer/*allow-redef*","cljs.analyzer/*allow-ns*","cljs.analyzer/analyze-keyword","cljs.analyzer/get-tag","e","cljs.analyzer/find-matching-method","f","params","methods","cljs.core/some","cljs.analyzer/type?","proto","cljs.analyzer/NOT_NATIVE","cljs.analyzer/BOOLEAN_OR_SEQ","p__73541","map__73542","cljs.analyzer/unwrap-quote","op","expr","cljs.core/keyword-identical?","cljs.analyzer/infer-if","map__73548","then-tag","G__73552","G__73553","cljs.analyzer/infer-tag","else-tag","G__73558","G__73559","cljs.core/symbol-identical?","p__73585","map__73587","cljs.analyzer/infer-invoke","args","map__73593","G__73632","G__73633","G__73634","G__73635","G__73636","G__73637","G__73638","G__73643","G__73644","G__73645","G__73646","G__73647","G__73649","G__73650","init","G__73653","G__73654","js/cljs.analyzer.parse","fexpr__73667","cljs.analyzer/parse","rest","G__73676","cljs.analyzer/var-meta","cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2","expr-env","ks","user-meta","uks","cljs.core/keys","cljs.core/zipmap","p1__73669#","cljs.core/List","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","p1__73670#","arglists","arglists'","cljs.core/second","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/analyze","cljs.analyzer/var-ast","*private-var-access-nowarn*-orig-val__73688","*private-var-access-nowarn*-temp-val__73689","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","temp__5757__auto__","var-ns","G__73693","G__73694","p__73695","vec__73696","cljs.analyzer/predicate->tag","cljs.analyzer/simple-predicate-induced-tag","test","cljs.core/list?","cljs.core/symbol?","analyzed-fn","*cljs-warnings*-orig-val__73703","*cljs-warnings*-temp-val__73704","cljs.core.repeat.cljs$core$IFn$_invoke$arity$1","G__73705","G__73706","G__73707","cljs.analyzer/type-check-induced-tag","*cljs-warnings*-orig-val__73708","*cljs-warnings*-temp-val__73709","G__73714","G__73715","G__73718","fexpr__73717","analyzed-type","*cljs-warnings*-orig-val__73719","*cljs-warnings*-temp-val__73720","G__73721","G__73722","cljs.analyzer/truth-induced-tag","analyzed-symbol","*cljs-warnings*-orig-val__73751","*cljs-warnings*-temp-val__73752","G__73754","G__73755","cljs.core/set?","cljs.analyzer/set-test-induced-tags","vec__73761","local","G__73766","p__73774","vec__73778","then","else","test-expr","*recur-frames*-orig-val__73785","*recur-frames*-temp-val__73786","cljs.core/cons","G__73787","G__73788","then-expr","*allow-redef*-orig-val__73789","*allow-redef*-temp-val__73790","G__73792","G__73793","else-expr","*allow-redef*-orig-val__73800","*allow-redef*-temp-val__73801","cljs.core/*unchecked-if*","p__73810","vec__73812","tests","thens","default","*recur-frames*-orig-val__73821","*recur-frames*-temp-val__73822","p1__73805#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","p1__73806#","nodes","cljs.core.mapv.cljs$core$IFn$_invoke$arity$3","p__73835","vec__73841","throw-form","throw-expr","*recur-frames*-orig-val__73848","*recur-frames*-temp-val__73849","G__73864","G__73865","p__73879","vec__73883","seq__73884","first__73885","body","map__73886","catchenv","p1__73868#","catch?","p1__73869#","cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2","cljs.core/seq?","default?","p1__73870#","finally?","p1__73871#","cblocks","dblock","fblock","parser","vec__73914","seq__73915","first__73916","forms*","parser*","G__73917","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","finally","*recur-frames*-orig-val__73931","*recur-frames*-temp-val__73932","G__73939","G__73940","cljs.core.gensym.cljs$core$IFn$_invoke$arity$1","temp__5751__auto__","vec__73969","seq__73970","first__73971","cb","cblock","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","p__74002","vec__74010","seq__74011","first__74012","catch","*recur-frames*-orig-val__74032","*recur-frames*-temp-val__74033","G__74034","G__74035","try","*recur-frames*-orig-val__74037","*recur-frames*-temp-val__74038","G__74039","G__74040","cljs.analyzer/valid-proto","cljs.analyzer/elide-env","ast","opts","cljs.analyzer/replace-env-pass","new-env","cljs.analyzer/ast-children","g","cljs.core/vector?","p__74083","map__74085","cljs.analyzer/constant-value?","fexpr__74092","fexpr__74097","p__74105","map__74107","cljs.analyzer/const-expr->constant-value","G__74110","G__74111","cljs.analyzer/earmuffed?","cljs.analyzer/core-ns?","pfn","doc","const?","sym-meta","dynamic","ns-name","clash-ns","sym-ns","conj-to-set","var-name","init-expr","*recur-frames*-orig-val__74237","*recur-frames*-temp-val__74238","*allow-ns*-orig-val__74244","*allow-ns*-temp-val__74245","G__74246","G__74247","G__74248","fn-var?","export-as","export-val","G__74288","const-expr","*passes*-orig-val__74296","*passes*-temp-val__74297","G__74308","G__74309","protocol-symbol","p1__74143#","top-fn-meta","G__74337","G__74338","G__74344","G__74345","cljs.analyzer/analyze-fn-method-param","p__74364","p__74365","vec__74366","vec__74369","arg-id","nmeta","shadow","param","cljs.analyzer/analyze-fn-method-body","recur-frames","*recur-frames*-orig-val__74382","*recur-frames*-temp-val__74383","cljs.analyzer/analyze-fn-method","analyze-body?","vec__74407","param-names","variadic","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","step","step-init","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core/vector","params'","fixed-arity","recur-frame","body-env","body-form","recurs","cljs.analyzer/fn-name-var","fn-scope","name-var","cljs.analyzer/analyze-fn-methods-pass2*","menv","meths","p1__74434#","cljs.analyzer/analyze-fn-methods-pass2","p__74447","vec__74448","seq__74449","first__74450","vec__74454","named-fn?","form-meta","proto-impl","proto-inline","p1__74443#","*allow-ns*-orig-val__74463","*allow-ns*-temp-val__74464","mfa","cljs.core.transduce.cljs$core$IFn$_invoke$arity$4","cljs.core.map.cljs$core$IFn$_invoke$arity$1","cljs.core/max","cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic","cljs.core/assoc","*allow-ns*-orig-val__74477","*allow-ns*-temp-val__74478","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5","cljs.core/dissoc","js-doc","children","inferred-ret-tag","inferred-tags","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/=","variadic-methods","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.filter.cljs$core$IFn$_invoke$arity$1","cljs.core.take.cljs$core$IFn$_invoke$arity$1","variadic-params","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","param-counts","cljs.analyzer/analyze-wrap-meta","p__74503","vec__74505","seq__74506","first__74507","bindings","exprs","cljs.core/even?","vec__74520","vec__74523","n->fexpr","cljs.core.juxt.cljs$core$IFn$_invoke$arity$2","cljs.core.partition.cljs$core$IFn$_invoke$arity$2","context","meth-env","bes","p__74529","vec__74532","map__74535","fexpr","*cljs-warnings*-orig-val__74546","*cljs-warnings*-temp-val__74547","G__74556","G__74557","be","G__74558","p__74572","p__74573","vec__74574","map__74577","G__74580","G__74581","be'","G__74586","G__74587","cljs.analyzer/analyze-do-statements*","p1__74589#","G__74598","G__74599","cljs.analyzer/analyze-do-statements","*recur-frames*-orig-val__74614","*recur-frames*-temp-val__74615","p__74653","vec__74654","seq__74655","first__74656","statements","G__74658","G__74659","ret-env","G__74662","G__74663","cljs.analyzer/analyze-let-binding-init","loop-lets","*loop-lets*-orig-val__74670","*loop-lets*-temp-val__74671","cljs.analyzer/get-let-tag","cljs.analyzer/analyze-let-bindings*","encl-env","vec__74713","G__74719","G__74720","col","p1__74680#","cljs.analyzer/analyze-let-bindings","*recur-frames*-orig-val__74731","*recur-frames*-temp-val__74732","cljs.analyzer/analyze-let-body*","G__74736","G__74737","cljs.analyzer/analyze-let-body","*recur-frames*-orig-val__74742","*loop-lets*-orig-val__74743","*recur-frames*-temp-val__74744","*loop-lets*-temp-val__74745","p__74752","vec__74756","seq__74757","first__74758","cljs.analyzer/analyze-let","is-loop","widened-tags","vec__74760","p__74767","vec__74775","widened-tag","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4","*cljs-warning-handlers*-orig-val__74787","*cljs-warning-handlers*-temp-val__74788","nil->any","cljs.core/identity","p__74807","vec__74808","seq__74809","first__74810","frame","add-implicit-target-object?","G__74826","*recur-frames*-orig-val__74827","*recur-frames*-temp-val__74828","p1__74803#","G__74830","G__74831","cljs.core/reset!","tags","cljs.analyzer/analyze-const","map__74846","G__74848","G__74849","p__74858","vec__74859","p__74887","vec__74888","seq__74889","first__74890","ctor","*recur-frames*-orig-val__74891","*recur-frames*-temp-val__74892","enve","ctorexpr","ctor-var","G__74899","fexpr__74898","record-args","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","argexprs","p1__74872#","known-num-fields","argc","fexpr__74909","p__74920","vec__74921","target","alt","vec__74926","*recur-frames*-orig-val__74945","*recur-frames*-temp-val__74946","*private-var-access-nowarn*-orig-val__74955","*private-var-access-nowarn*-temp-val__74956","texpr","G__74986","cljs.analyzer/analyze-symbol","cljs.analyzer/analyze-seq","vexpr","G__74998","meta","fexpr__75012","cljs.analyzer/foreign-dep?","js-index","vec__75024","map__75027","foreign","G__75046","cljs.analyzer/analyze-deps","lib","cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4","compiler","*cljs-dep-set*-orig-val__75060","*cljs-dep-set*-temp-val__75061","seq__75068","chunk__75069","count__75070","i__75071","G__75115","G__75116","G__75136","G__75137","cljs.analyzer/missing-use?","js-lib","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/missing-rename?","cljs.analyzer/missing-use-macro?","the-ns","cljs.core/find-macros-ns","cljs.analyzer/missing-rename-macro?","cljs.analyzer/missing-uses","uses","p__75197","vec__75198","cljs.analyzer/missing-renames","renames","p__75209","vec__75210","qualified-sym","cljs.analyzer/missing-use-macros","use-macros","p__75227","vec__75228","cljs.analyzer/inferred-use-macros","p__75243","vec__75246","cljs.analyzer/inferred-rename-macros","rename-macros","p__75255","vec__75262","cljs.analyzer/check-uses","seq__75298","chunk__75299","count__75300","i__75301","vec__75323","vec__75335","G__75327","G__75328","G__75338","G__75339","G__75347","cljs.analyzer/check-use-macros","cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3","missing-uses","seq__75354","chunk__75355","count__75356","i__75357","vec__75385","vec__75392","G__75390","G__75391","G__75396","G__75397","p__75410","map__75411","cljs.analyzer/check-use-macros-inferring-missing","p1__75404#","maybe-macros","remove-missing-uses","ast'","p1__75406#","p1__75407#","p__75463","map__75468","cljs.analyzer/check-rename-macros-inferring-missing","p1__75441#","missing-renames","missing-rename-macros","remove-missing-renames","p1__75442#","p1__75443#","cljs.analyzer/parse-ns-error-msg","spec","cljs.analyzer/basic-validate-ns-spec","macros?","cljs.core/sequential?","cljs.core/odd?","fs","cljs.core/frequencies","G__75517","G__75518","G__75521","G__75522","cljs.analyzer/parse-ns-excludes","p__75530","vec__75534","seq__75535","first__75536","filters","valid-kws","xs","err","kw","refs","p1__75525#","cljs.core/nnext","cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic","p__75583","vec__75584","seq__75585","first__75586","cljs.analyzer/use->require","only?","p1__75579#","cljs.analyzer/parse-require-spec","aliases","vec__75742","seq__75743","first__75744","vec__75745","map__75748","vec__75749","js-module-provides","js-module-name","alias","referred","renamed","referred-without-renamed","rk","uk","renk","alias-type","lib'","fexpr__75763","cljs.core.interleave.cljs$core$IFn$_invoke$arity$2","p__75782","vec__75784","original","cljs.analyzer/parse-import-spec","import-map","p1__75791#","seq__75807","chunk__75808","count__75809","i__75810","vec__75826","vec__75836","cljs.analyzer/macro-autoload-ns?","map__75845","require-macros","cljs.analyzer/clj-ns->cljs-ns","segs","cljs.analyzer/canonicalize-specs","specs","quoted-spec-or-kw","canonicalize","cljs.analyzer/canonicalize-import-specs","cljs.analyzer/desugar-ns-specs","map__75883","p1__75876#","require","indexed","p__75885","vec__75887","seq__75888","first__75889","sugar-keys","remove-from-spec","pred","vec__75905","l","r","cljs.core/split-with","cljs.core/complement","cljs.core.drop.cljs$core$IFn$_invoke$arity$2","replace-refer-macros","reload-spec?","fexpr__75926","to-macro-specs","remove-sugar","require-specs","vec__75945","cljs.analyzer/find-def-clash","segments","to-check","cljs.core.reductions.cljs$core$IFn$_invoke$arity$3","seq__75958","chunk__75959","count__75960","i__75961","vec__75975","vec__75978","cljs.analyzer/macro-ns-name","name-str","goog.string/endsWith","p__75992","vec__75994","seq__75995","first__75996","G__76000","segment","map__76002","map__76003","vec__76004","docstring","mdocstr","metadata","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3","excludes","core-renames","p__76022","vec__76024","spec-parsers","cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","valid-forms","reloads","requires","imports","p__76045","vec__76046","seq__76047","first__76048","libs","libspec","fexpr__76053","fexpr__76054","cljs.core/disj","p1__75989#","p1__75990#","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","cljs.core/merge-with","p__76081","vec__76084","spec-map","p__76097","vec__76098","G__76101","ns-info","G__76109","G__76111","fexpr__76110","G__76113","fexpr__76112","G__76118","fexpr__76117","G__76121","fexpr__76120","cljs.analyzer/check-duplicate-aliases","old","new","seq__76141","chunk__76142","count__76143","i__76144","old-aliases","new-aliases","p__76184","vec__76189","p__76271","vec__76275","entry","p__76325","vec__76327","quoted-specs","not-quoted","cljs.core/keyword?","p1__76307#","map__76358","map__76360","p__76365","vec__76366","p__76375","vec__76382","seq__76383","first__76384","p1__76310#","p1__76311#","p__76406","vec__76407","require-info","ns-info'","merge-keys","G__76433","G__76438","fexpr__76437","G__76448","fexpr__76447","G__76455","fexpr__76454","G__76459","fexpr__76458","p__76464","vec__76466","cljs.analyzer/parse-type","tsym","fields","pmasks","fld","protocols","G__76486","G__76487","p1__76499#","cljs.analyzer/property-symbol?","cljs.core/re-matches","p__76507","vec__76508","cljs.analyzer/classify-dot-form","member","js/cljs.analyzer.build-dot-form","fexpr__76526","p1__76518#","cljs.analyzer/build-dot-form","p__76538","vec__76539","prop","p__76545","vec__76546","cljs.analyzer/build-method-call","meth","p__76554","vec__76555","p__76558","vec__76559","p__76563","vec__76564","meth-expr","dot-form","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/analyze-dot","field","member+","map__76569","dot-action","targetexpr","target-tag","fexpr__76574","vec__76577","pre'","G__76581","fexpr__76580","G__76584","G__76585","p1__76567#","p__76590","vec__76591","seq__76592","first__76593","vec__76594","seq__76595","first__76596","*recur-frames*-orig-val__76597","*recur-frames*-temp-val__76598","cljs.analyzer/get-js-tag","cljs.analyzer/js-star-interp","end","inner","cljs.core/LazySeq","G__76620","G__76621","cljs.analyzer/js-star-seg","G__76652","cljs.analyzer/NUMERIC_SET","cljs.analyzer/numeric-type?","cljs.analyzer/array-types","cljs.analyzer/array-type?","cljs.analyzer/analyze-js-star*","jsform","p1__76690#","js-op","numeric","validate","valid-types?","p1__76691#","op-match?","p1__76692#","cljs.analyzer/analyze-js-star","*recur-frames*-orig-val__76710","*recur-frames*-temp-val__76711","p__76715","vec__76717","seq__76718","first__76719","code","cljs.core/str","cljs.analyzer/unsorted-map?","cljs.core/sorted?","cljs.analyzer/analyzed","cljs.analyzer/analyzed?","cljs.analyzer/all-values?","p1__76731#","cljs.analyzer/valid-arity?","method-params","p__76740","vec__76742","seq__76743","first__76744","cljs.analyzer/parse-invoke*","kw?","cur-ns","HO-invoke?","bind-f-expr?","bind-args?","map__76748","max-fixed-arity","macro","G__76758","G__76759","deprecated?","no-warn?","arg-syms","cljs.core.take.cljs$core$IFn$_invoke$arity$2","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","cljs.core/gensym","f-sym","G__76762","cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic","G__76763","G__76764","cljs.core.concat.cljs$core$IFn$_invoke$arity$1","p1__76739#","ana-expr","cljs.analyzer/parse-invoke","*recur-frames*-orig-val__76766","*recur-frames*-temp-val__76768","p__76769","map__76770","cljs.analyzer/desugar-dotted-expr","G__76772","G__76781","G__76816","map__76818","lcls","cljs.analyzer/excluded?","cljs.analyzer/used?","cljs.analyzer/get-expander-ns","nstr","G__76848","cljs.analyzer/get-expander*","nsym","mvar","cached-var","cljs.core/Delay","cljs.analyzer/get-macroexpand-check-var","cljs.core/find-ns-obj","cljs.analyzer/var->sym","cljs.analyzer/do-macroexpand-check","mac-var","mchk","e76898","G__76899","G__76900","cljs.analyzer/macroexpand-1*","form'","e76910","sym'","mac-var-ns","mac-var-name","opname","vec__76907","seq__76908","first__76909","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/macroexpand-1","err__55773__auto__","e76920","cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/analyze-seq*","cljs.analyzer/analyze-seq*-wrap","e76944","G__76949","cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4","cljs.analyzer/analyze-list","mform","cljs.analyzer/analyze-map","*recur-frames*-orig-val__76962","*recur-frames*-temp-val__76963","p1__76959#","vs","*recur-frames*-orig-val__76968","*recur-frames*-temp-val__76969","p1__76960#","G__76970","items","*recur-frames*-orig-val__76973","*recur-frames*-temp-val__76974","p1__76972#","G__76975","cljs.analyzer/analyze-vector","*recur-frames*-orig-val__76980","*recur-frames*-temp-val__76981","p1__76976#","G__76982","cljs.analyzer/analyze-set","*recur-frames*-orig-val__76984","*recur-frames*-temp-val__76985","p1__76983#","G__76987","cljs.analyzer/analyze-js-value","keys","vals","*recur-frames*-orig-val__76991","*recur-frames*-temp-val__76992","p1__76989#","*recur-frames*-orig-val__76994","*recur-frames*-temp-val__76995","p1__76990#","cljs.analyzer/record-ns+name","cljs.analyzer/analyze-record","vec__77002","_items_","*recur-frames*-orig-val__77005","*recur-frames*-temp-val__77006","G__77008","G__77009","cljs.analyzer/elide-reader-meta","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.analyzer/elide-analyzer-meta","cljs.analyzer/elide-irrelevant-meta","meta-expr","p__77021","map__77022","cljs.analyzer/infer-type","cljs.core.update.cljs$core$IFn$_invoke$arity$3","ms","p1__77015#","cljs.analyzer/repl-self-require?","cljs.analyzer/invoke-arg-type-validators","p1__77050#","p1__77051#","aget-validator","aset-validator","p__77052","map__77053","cljs.analyzer/check-invoke-arg-types","vec__77058","map__77061","valid?","cljs.analyzer/analyze-form","cljs.core/record?","cljs.tagged-literals/JSValue","G__77089","cljs.analyzer/analyze*","passes","pass","G__77101","cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3","cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4","e77107","*cljs-warnings*-orig-val__77109","*cljs-warnings*-temp-val__77110","cljs.analyzer/add-consts","compiler-state","constants-map","cljs.core/reduce-kv","*passes*-orig-val__77112","*passes*-temp-val__77113","cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/resolve-symbol","*private-var-access-nowarn*-orig-val__77114","*private-var-access-nowarn*-temp-val__77115","registry-ref","speced-vars","cljs.analyzer/get-spec-vars","cljs.analyzer/dump-specs","spec-vars","ns-str","p__77191","vec__77192","cljs.analyzer/register-specs","cached-ns","map__77201","registry","vars","G__77217","cljs.analyzer/analyze-form-seq","forms","cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2","cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3","return-last?","*file-defs*-orig-val__77221","*cljs-ns*-orig-val__77222","*cljs-file*-orig-val__77223","*alias-map*-orig-val__77224","*file-defs*-temp-val__77225","*cljs-ns*-temp-val__77226","*cljs-file*-temp-val__77227","*alias-map*-temp-val__77228","cljs.tools.reader/*alias-map*","last-ast","cljs.analyzer/ensure-defs","p1__77234#"]]],"~:cache-keys",["~#cmap",[["^1U","cljs/tools/reader/impl/utils.cljs"],[1630228358603,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^W",[]],"~:deps-syms",["^1<","^C","^1B","^18"]]],["^1U","goog/math/math.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","~$goog.array","~$goog.asserts"]]],["^1U","cljs/env.cljc"],[1630228118934,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C"]]],["^1U","goog/array/array.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^2;"]]],["^1U","goog/debug/error.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],["^1U","cljs/tools/reader/edn.cljs"],[1630228358603,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","~$cljs.tools.reader.impl.errors","^1=","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","^19","^18","~$goog.string.StringBuffer"]]],["^1U","goog/dom/nodetype.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],["^1U","cljs/tools/reader/impl/inspect.cljs"],[1630228358603,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C"]]],["^1U","cljs/tools/reader.cljs"],[1630228358603,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","^1=","^2=","^2>","^2<","^2:","^18","^2?"]]],["^1U","goog/object/object.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^1U","goog/math/long.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^2;","~$goog.reflect"]]],["^1U","goog/string/internal.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],["^1U","goog/functions/functions.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],["^1U","goog/structs/map.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1U","cljs/reader.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","~$goog.object","^19","~$cljs.tools.reader.edn","^2?"]]],["^1U","goog/asserts/asserts.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1U","cljs/tagged_literals.cljc"],[1630228118934,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","^1C"]]],["^1U","goog/uri/uri.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^2:","^2;","^18","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1U","goog/base.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",[]]],["^1U","goog/structs/structs.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^2:","^2D"]]],["^1U","cljs/tools/reader/impl/errors.cljs"],[1630228358603,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","^1=","^1B","~$cljs.tools.reader.impl.inspect"]]],["^1U","clojure/string.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","^18","^2?"]]],["^1U","goog/string/string.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","~$goog.string.internal"]]],["^1U","goog/reflect/reflect.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],["^1U","goog/string/stringbuffer.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],["^1U","cljs/tools/reader/reader_types.cljs"],[1630228358603,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","^2=","^18","^2?"]]],["^1U","goog/iter/iter.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^2:","^2;","~$goog.functions","~$goog.math"]]],["^1U","cljs/tools/reader/impl/commons.cljs"],[1630228358603,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","^2<","^1=","^2="]]],["^1U","cljs/core.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["~$goog.math.Long","~$goog.math.Integer","^18","^2D","^2:","~$goog.Uri","^2?"]]],["^1U","goog/math/integer.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<"]]],["^1U","clojure/set.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C"]]],["^1U","goog/uri/utils.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^2:","^2;","^18"]]],["^1U","cljs/analyzer.cljc"],[1630228118934,"^26",["^ ","^27",null,"^28",["^W",[]],"^29",["^1<","^C","^18","^1B","^16","^1>","^1;","^19","^1=","^1C"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer/macros.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env/macros.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/analyzer.cljc","^7",9,"^8",5,"^9",9,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",["^ ","^M","^N","^O","^N","^P","^N","^Q","^N","^R","^N","^S","^N","^T","^U"],"^V",["^W",["^T","^X","^Y","^Z"]],"~:shadow/js-access-properties",["^W",["resolve"]],"^[","^10","^13",null,"^14",["^ ","^15","^16","^17","^18","^19","^19","^18","^18","^1:","^1;","^C","^C","^1<","^1<","^1=","^1=","^1>","^1>","^16","^16","^1?","^1=","^1;","^1;","^1@","^1>","^1A","^1B","^1B","^1B","^1C","^1C","^1D","^1C","^1E","^19"],"^1F",["^W",["^1G","^1H"]],"~:shadow/js-access-global",["^W",["require","Error"]],"^1I",null,"~:defs",["^ ","~$type?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1365,"^8",7,"^9",1365,"^:",12,"~:arglists",["^1K",["~$quote",["^1K",[["^1@","~$t"]]]]],"~:tag","~$boolean"],"^[","~$cljs.analyzer/type?","^6","cljs/analyzer.cljc","^:",12,"~:method-params",["^1K",[["^1@","~$t"]]],"~:protocol-impl",null,"~:arglists-meta",["^1K",[null,null]],"^8",1,"~:variadic?",false,"^7",1365,"~:ret-tag","^3O","^9",1365,"~:max-fixed-arity",2,"^3N","^3O","~:fn-var",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$t"]]]]]],"~$get-namespace",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",602,"^8",7,"^9",602,"^:",20,"^3L",["^1K",["^3M",["^1K",[["~$key"],["~$cenv","^3Y"]]]]],"~:jsdoc",["^1K",["@param {...*} var_args"]],"~:top-fn",["^ ","^3T",false,"~:fixed-arity",2,"^3V",2,"^3Q",["^1K",[["^3Y"],["^3Z","^3Y"]]],"^3L",["^1K",[["^3Y"],["^3Z","^3Y"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/get-namespace","^6","cljs/analyzer.cljc","^:",20,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^3Y"],["^3Z","^3Y"]]],"^3L",["^1K",[["^3Y"],["^3Z","^3Y"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^3Y"],["^3Z","^3Y"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"~:methods",[["^ ","^41",1,"^3T",false,"^3N","~$any"],["^ ","^41",2,"^3T",false,"^3N",["^W",[null,"^44","~$cljs.core/IMap","~$clj-nil"]]]],"^7",602,"^9",602,"^3V",2,"^3W",true,"^3L",["^1K",[["^3Y"],["^3Z","^3Y"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$error-message",["^ ","^[","~$cljs.analyzer/error-message","^6","cljs/analyzer.cljc","^7",299,"^8",1,"^9",299,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",299,"^8",11,"^9",299,"^:",24],"^3N","~$cljs.core/MultiFn"],"~$elide-reader-meta",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3951,"^8",7,"^9",3951,"^:",24,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"^[","~$cljs.analyzer/elide-reader-meta","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["~$m"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3951,"^3U",["^W",["~$clj","^46"]],"^9",3951,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"~$missing-rename?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2581,"^8",7,"^9",2581,"^:",22,"^3L",["^1K",["^3M",["^1K",[["~$sym","^3Z"]]]]]],"^[","~$cljs.analyzer/missing-rename?","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^4>","^3Z"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2581,"^3U","^3O","^9",2581,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>","^3Z"]]]]]],"~$resolve-invokeable-ns",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1121,"^8",7,"^9",1121,"^:",28,"^3L",["^1K",["^3M",["^1K",[["^1L","~$current-ns","^1@"]]]]]],"^[","~$cljs.analyzer/resolve-invokeable-ns","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["^1L","^4A","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1121,"^9",1121,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L","^4A","^1@"]]]]]],"~$analyze-let",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2310,"^8",7,"^9",2310,"^:",18,"^3L",["^1K",["^3M",["^1K",[["~$encl-env",["~$_","~$bindings","~$&","~$exprs","^1P","~$form"],"~$is-loop","~$widened-tags"]]]]]],"^[","~$cljs.analyzer/analyze-let","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^4D","~$p__74752","^4H","^4I"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2310,"^3U","^45","^9",2310,"^3V",4,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4D",["~$_","^4E","~$&","^4F","^1P","^4G"],"^4H","^4I"]]]]]],"~$var-meta",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1466,"^8",7,"^9",1466,"^:",15,"^3L",["^1K",["^3M",["^1K",[["~$var"],["^4M","~$expr-env"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^4M"],["^4M","^4N"]]],"^3L",["^1K",[["^4M"],["^4M","^4N"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/var-meta","^6","cljs/analyzer.cljc","^:",15,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^4M"],["^4M","^4N"]]],"^3L",["^1K",[["^4M"],["^4M","^4N"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^4M"],["^4M","^4N"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N","^44"],["^ ","^41",2,"^3T",false,"^3N",["^W",["^44","^46"]]]],"^7",1466,"^9",1466,"^3V",2,"^3W",true,"^3L",["^1K",[["^4M"],["^4M","^4N"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$desugar-ns-specs",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2932,"^8",7,"^9",2932,"^:",23,"^3L",["^1K",["^3M",["^1K",[["~$args"]]]]],"~:doc","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"^[","~$cljs.analyzer/desugar-ns-specs","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^4Q"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2932,"^3U",["^W",[null,"~$cljs.core/LazySeq"]],"^9",2932,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4Q"]]]]],"^4R","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"~$replay-accumulated-warnings",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",730,"^8",8,"^9",730,"^:",35,"~:private",true,"^3L",["^1K",["^3M",["^1K",[["~$warn-acc"]]]]]],"^4V",true,"^[","~$cljs.analyzer/replay-accumulated-warnings","^6","cljs/analyzer.cljc","^:",35,"^3Q",["^1K",[["^4W"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",730,"^3U","^46","^9",730,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4W"]]]]]],"~$js-tag?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",914,"^8",7,"^9",914,"^:",14,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/js-tag?","^6","cljs/analyzer.cljc","^:",14,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",914,"^3U","^3O","^9",914,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$classify-dot-form",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3268,"^8",8,"^9",3268,"^:",25,"^4V",true,"^3L",["^1K",["^3M",["^1K",[[["~$target","~$member","^4Q"]]]]]]],"^4V",true,"^[","~$cljs.analyzer/classify-dot-form","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["~$p__76507"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3268,"^3U","~$cljs.core/IVector","^9",3268,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^50","^51","^4Q"]]]]]]],"~$NUMBER_SYM",["^ ","^[","~$cljs.analyzer/NUMBER_SYM","^6","cljs/analyzer.cljc","^7",224,"^8",4,"^9",224,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",224,"^8",9,"^9",224,"^:",19],"^3N","~$cljs.core/Symbol"],"~$ensure-defs",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4580,"^8",7,"^9",4580,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^1L"]]]]],"^4R","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"^[","~$cljs.analyzer/ensure-defs","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^1L"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",4580,"^3U",["^W",[null,"^44"]],"^9",4580,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L"]]]]],"^4R","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"~$analyze-map",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3877,"^8",7,"^9",3877,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-map","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3877,"^3U","^44","^9",3877,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$NUMERIC_SET",["^ ","^[","~$cljs.analyzer/NUMERIC_SET","^6","cljs/analyzer.cljc","^7",3425,"^8",1,"^9",3425,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3425,"^8",6,"^9",3425,"^:",17],"^3N","~$cljs.core/ISet"],"~$analyze-record",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3939,"^8",7,"^9",3939,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^1@","~$x"]]]]]],"^[","~$cljs.analyzer/analyze-record","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^1@","~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3939,"^3U","^45","^9",3939,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$x"]]]]]],"~$analyze-seq*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3843,"^8",7,"^9",3843,"^:",19,"^3L",["^1K",["^3M",["^1K",[["~$op","^1@","^4G","~$name","~$opts"]]]]]],"^[","~$cljs.analyzer/analyze-seq*","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^5B","^1@","^4G","^5C","^5D"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3843,"^3U","^44","^9",3843,"^3V",5,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5B","^1@","^4G","^5C","^5D"]]]]]],"~$constants-ns-sym",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",67,"^8",6,"^9",67,"^:",22],"^[","~$cljs.analyzer/constants-ns-sym","^6","cljs/analyzer.cljc","^:",22,"^8",1,"^7",67,"^9",67,"^3N","^57","^4R","The namespace of the constants table as a symbol."],"~$resolve-alias",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1039,"^8",7,"^9",1039,"^:",20,"^3L",["^1K",["^3M",["^1K",[["^1L","^4>"]]]]],"^4R","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"^[","~$cljs.analyzer/resolve-alias","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^1L","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1039,"^3U",["^W",[null,"^44"]],"^9",1039,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L","^4>"]]]]],"^4R","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"~$*cljs-dep-set*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",57,"^8",16,"^9",57,"^:",30,"~:dynamic",true],"^[","~$cljs.analyzer/*cljs-dep-set*","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^5K",true,"^7",57,"^9",57,"^3N",["^W",["^4<","~$cljs.core/MetaFn","^46"]]],"~$resolve-var",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^:",18,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^4>"],["^1@","^4>","~$confirm"]]],"^3L",["^1K",[["^1@","^4>"],["^1@","^4>","^5O"]]],"^3S",["^1K",[null,null]]],"^8",7,"^7",1149,"^9",1149,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"],["^1@","^4>","^5O"]]]]],"^4R","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.","^3[",["^1K",["@param {...*} var_args"]]],"^[","~$cljs.analyzer/resolve-var","^6","cljs/analyzer.cljc","^:",18,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^4>"],["^1@","^4>","^5O"]]],"^3L",["^1K",[["^1@","^4>"],["^1@","^4>","^5O"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@","^4>"],["^1@","^4>","^5O"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N",["^W",["^4<","^44","^45","^46"]]]],"^7",1149,"^9",1149,"^3V",3,"^3W",true,"^3L",["^1K",[["^1@","^4>"],["^1@","^4>","^5O"]]],"^4R","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.","^3[",["^1K",["@param {...*} var_args"]]],"~$analyze-fn-method",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2019,"^8",8,"^9",2019,"^:",25,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$locals","^4G","~$type","~$analyze-body?"]]]]]],"^4V",true,"^[","~$cljs.analyzer/analyze-fn-method","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^1@","^5R","^4G","^5S","^5T"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2019,"^3U",["^W",["^44","^46"]],"^9",2019,"^3V",5,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^5R","^4G","^5S","^5T"]]]]]],"~$JS_STAR_SYM",["^ ","^[","~$cljs.analyzer/JS_STAR_SYM","^6","cljs/analyzer.cljc","^7",232,"^8",4,"^9",232,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",232,"^8",9,"^9",232,"^:",20],"^3N","^57"],"~$js-star-seg",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3415,"^8",7,"^9",3415,"^:",18,"^3L",["^1K",["^3M",["^1K",[["~$s"]]]]]],"^[","~$cljs.analyzer/js-star-seg","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["~$s"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3415,"^3U","^4<","^9",3415,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$s"]]]]]],"~$dep-has-global-exports?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",831,"^8",7,"^9",831,"^:",30,"^3L",["^1K",["^3M",["^1K",[["~$module"]]]]]],"^[","~$cljs.analyzer/dep-has-global-exports?","^6","cljs/analyzer.cljc","^:",30,"^3Q",["^1K",[["^5["]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",831,"^3U","^3O","^9",831,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5["]]]]]],"~$register-specs",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4488,"^8",7,"^9",4488,"^:",21,"^3L",["^1K",["^3M",["^1K",[["~$cached-ns"]]]]],"^4R","Registers speced vars found in a namespace analysis cache."],"^[","~$cljs.analyzer/register-specs","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^62"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",4488,"^3U",["^W",[null,"^44","^46"]],"^9",4488,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^62"]]]]],"^4R","Registers speced vars found in a namespace analysis cache."],"~$*passes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",63,"^8",16,"^9",63,"^:",24,"^5K",true],"^[","~$cljs.analyzer/*passes*","^6","cljs/analyzer.cljc","^:",24,"^8",1,"^5K",true,"^7",63,"^9",63,"^3N","^46"],"~$has-extern?*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",972,"^8",7,"^9",972,"^:",19,"^3L",["^1K",["^3M",["^1K",[["~$pre","~$externs"],["^67","^68","~$top"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^67","^68"],["^67","^68","^69"]]],"^3L",["^1K",[["^67","^68"],["^67","^68","^69"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/has-extern?*","^6","cljs/analyzer.cljc","^:",19,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^67","^68"],["^67","^68","^69"]]],"^3L",["^1K",[["^67","^68"],["^67","^68","^69"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^67","^68"],["^67","^68","^69"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N",["^W",["^3O","^44"]]]],"^7",972,"^9",972,"^3V",3,"^3W",true,"^3L",["^1K",[["^67","^68"],["^67","^68","^69"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$handle-symbol-local",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1144,"^8",7,"^9",1144,"^:",26,"^3L",["^1K",["^3M",["^1K",[["^4>","~$lb"]]]]]],"^[","~$cljs.analyzer/handle-symbol-local","^6","cljs/analyzer.cljc","^:",26,"^3Q",["^1K",[["^4>","^6<"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1144,"^3U",["^W",[null,"^45"]],"^9",1144,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>","^6<"]]]]]],"~$get-expander-ns",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3704,"^8",7,"^9",3704,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^1@","~$nstr"]]]]]],"^[","~$cljs.analyzer/get-expander-ns","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^1@","^6?"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3704,"^3U",["^W",["~$cljs.core/Namespace","^44","^46"]],"^9",3704,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^6?"]]]]]],"~$message",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",714,"^8",7,"^9",714,"^:",14,"^3L",["^1K",["^3M",["^1K",[["^1@","~$s"]]]]]],"^[","~$cljs.analyzer/message","^6","cljs/analyzer.cljc","^:",14,"^3Q",["^1K",[["^1@","~$s"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",714,"^3U","^1A","^9",714,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$s"]]]]]],"~$parse-invoke",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3611,"^8",7,"^9",3611,"^:",19,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/parse-invoke","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3611,"^9",3611,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$*cljs-warning-handlers*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",517,"^8",16,"^9",517,"^:",39,"^5K",true],"^[","~$cljs.analyzer/*cljs-warning-handlers*","^6","cljs/analyzer.cljc","^:",39,"^8",1,"^5K",true,"^7",517,"^9",517,"^3N","^54"],"~$analyze-seq*-wrap",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3848,"^8",7,"^9",3848,"^:",24,"^3L",["^1K",["^3M",["^1K",[["^5B","^1@","^4G","^5C","^5D"]]]]]],"^[","~$cljs.analyzer/analyze-seq*-wrap","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["^5B","^1@","^4G","^5C","^5D"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3848,"^9",3848,"^3V",5,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5B","^1@","^4G","^5C","^5D"]]]]]],"~$confirm-bindings",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1272,"^8",7,"^9",1272,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^1@","~$names"]]]]],"^4R","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"^[","~$cljs.analyzer/confirm-bindings","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^1@","^6K"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1272,"^3U","^46","^9",1272,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^6K"]]]]],"^4R","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"~$has-extern?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",998,"^8",7,"^9",998,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^67"],["^67","^68"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^67"],["^67","^68"]]],"^3L",["^1K",[["^67"],["^67","^68"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/has-extern?","^6","cljs/analyzer.cljc","^:",18,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^67"],["^67","^68"]]],"^3L",["^1K",[["^67"],["^67","^68"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^67"],["^67","^68"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N","^44"],["^ ","^41",2,"^3T",false,"^3N",["^W",["^3O","^44"]]]],"^7",998,"^9",998,"^3V",2,"^3W",true,"^3L",["^1K",[["^67"],["^67","^68"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$foreign-dep?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2533,"^8",7,"^9",2533,"^:",19,"^3L",["^1K",["^3M",["^1K",[["~$dep"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/foreign-dep?","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^6P"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2533,"^3U","^3O","^9",2533,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^6P"]]]]]],"~$missing-rename-macro?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2592,"^8",7,"^9",2592,"^:",28,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"^[","~$cljs.analyzer/missing-rename-macro?","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2592,"^3U","^3O","^9",2592,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"~$missing-uses",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2599,"^8",7,"^9",2599,"^:",19,"^3L",["^1K",["^3M",["^1K",[["~$uses","^1@"]]]]]],"^[","~$cljs.analyzer/missing-uses","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^6U","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2599,"^3U",["^W",[null,"^4<","^44"]],"^9",2599,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^6U","^1@"]]]]]],"~$get-macroexpand-check-var",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3756,"^8",12,"^9",3756,"^:",37,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"^[","~$cljs.analyzer/get-macroexpand-check-var","^6","cljs/analyzer.cljc","^:",37,"^3Q",["^1K",[[]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",6,"^3T",false,"^7",3756,"^3U",["^W",["^44","^46"]],"^9",3756,"^3V",0,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"~$missing-use?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2573,"^8",7,"^9",2573,"^:",19,"^3L",["^1K",["^3M",["^1K",[["~$lib","^4>","^3Z"]]]]]],"^[","~$cljs.analyzer/missing-use?","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^6Z","^4>","^3Z"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2573,"^3U","^3O","^9",2573,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^6Z","^4>","^3Z"]]]]]],"~$hex-format",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",531,"^8",8,"^9",531,"^:",18,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["~$s","~$pad"]]]]]],"^4V",true,"^[","~$cljs.analyzer/hex-format","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["~$s","^71"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",531,"^3U","^1A","^9",531,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$s","^71"]]]]]],"~$es5-allowed",["^ ","^[","~$cljs.analyzer/es5-allowed","^6","cljs/analyzer.cljc","^7",194,"^8",1,"^9",194,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",194,"^8",6,"^9",194,"^:",17],"^3N","^5>"],"~$NEW_SYM",["^ ","^[","~$cljs.analyzer/NEW_SYM","^6","cljs/analyzer.cljc","^7",238,"^8",4,"^9",238,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",238,"^8",9,"^9",238,"^:",16],"^3N","^57"],"~$source-info->error-data",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",695,"^8",8,"^9",695,"^:",31,"^4V",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","~:keys",["~$file","~$line","~$column"]]]]]]]],"^4V",true,"^[","~$cljs.analyzer/source-info->error-data","^6","cljs/analyzer.cljc","^:",31,"^3Q",["^1K",[["~$p__72860"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",695,"^3U","^45","^9",695,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^79","^7:","^7;"]]]]]]]],"~$get-spec-vars",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4461,"^8",13,"^9",4461,"^:",26,"^4V",true,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"^4V",true,"^[","~$cljs.analyzer/get-spec-vars","^6","cljs/analyzer.cljc","^:",26,"^3Q",["^1K",[[]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",6,"^3T",false,"^7",4461,"^3U",["^W",["^45","^46"]],"^9",4461,"^3V",0,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"~$analyze",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^:",14,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^1@","^4G"],["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3L",["^1K",[["^1@","^4G"],["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3S",["^1K",[null,null,null]]],"^8",7,"^7",4114,"^9",4114,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"],["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]]]],"^4R","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.","^3[",["^1K",["@param {...*} var_args"]]],"^[","~$cljs.analyzer/analyze","^6","cljs/analyzer.cljc","^:",14,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^1@","^4G"],["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3L",["^1K",[["^1@","^4G"],["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3S",["^1K",[null,null,null]]],"^3Q",["^1K",[["^1@","^4G"],["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3R",null,"^41",4,"^3S",["^1K",[null,null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N","^44"],["^ ","^41",4,"^3T",false]],"^7",4114,"^9",4114,"^3V",4,"^3W",true,"^3L",["^1K",[["^1@","^4G"],["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^4R","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.","^3[",["^1K",["@param {...*} var_args"]]],"~$used?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3698,"^8",7,"^9",3698,"^:",12,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/used?","^6","cljs/analyzer.cljc","^:",12,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3698,"^3U","^3O","^9",3698,"^3V",2,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]]],"~$node-module-dep?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",819,"^8",7,"^9",819,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^5["]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/node-module-dep?","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^5["]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",819,"^3U","^3O","^9",819,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5["]]]]]],"~$parse-type",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3219,"^8",7,"^9",3219,"^:",17,"^3L",["^1K",["^3M",["^1K",[["^5B","^1@",["~$_","~$tsym","~$fields","~$pmasks","~$body","^1P","^4G"]]]]]]],"^[","~$cljs.analyzer/parse-type","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^5B","^1@","~$p__76464"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3219,"^3U","^45","^9",3219,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5B","^1@",["~$_","^7G","^7H","^7I","^7J","^1P","^4G"]]]]]]],"~$gets",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",200,"^8",7,"^9",200,"^:",11,"^3L",["^1K",["^3M",["^1K",[["~$m","~$k0","~$k1"],["~$m","^7N","^7O","~$k2"],["~$m","^7N","^7O","^7P","~$k3"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",5,"^3V",5,"^3Q",["^1K",[["~$m","^7N","^7O"],["~$m","^7N","^7O","^7P"],["~$m","^7N","^7O","^7P","^7Q"]]],"^3L",["^1K",[["~$m","^7N","^7O"],["~$m","^7N","^7O","^7P"],["~$m","^7N","^7O","^7P","^7Q"]]],"^3S",["^1K",[null,null,null]]]],"^[","~$cljs.analyzer/gets","^6","cljs/analyzer.cljc","^:",11,"^40",["^ ","^3T",false,"^41",5,"^3V",5,"^3Q",["^1K",[["~$m","^7N","^7O"],["~$m","^7N","^7O","^7P"],["~$m","^7N","^7O","^7P","^7Q"]]],"^3L",["^1K",[["~$m","^7N","^7O"],["~$m","^7N","^7O","^7P"],["~$m","^7N","^7O","^7P","^7Q"]]],"^3S",["^1K",[null,null,null]]],"^3Q",["^1K",[["~$m","^7N","^7O"],["~$m","^7N","^7O","^7P"],["~$m","^7N","^7O","^7P","^7Q"]]],"^3R",null,"^41",5,"^3S",["^1K",[null,null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",3,"^3T",false,"^3N",["^W",["^44","^46"]]],["^ ","^41",4,"^3T",false,"^3N",["^W",["^44","^46"]]],["^ ","^41",5,"^3T",false,"^3N",["^W",["^44","^46"]]]],"^7",200,"^9",200,"^3V",5,"^3W",true,"^3L",["^1K",[["~$m","^7N","^7O"],["~$m","^7N","^7O","^7P"],["~$m","^7N","^7O","^7P","^7Q"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$check-rename-macros-inferring-missing",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2662,"^8",7,"^9",2662,"^:",44,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5C","~$renames"],"^1P","~$ast"],"^1@"]]]]]],"^[","~$cljs.analyzer/check-rename-macros-inferring-missing","^6","cljs/analyzer.cljc","^:",44,"^3Q",["^1K",[["~$p__75463","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2662,"^3U",["^W",["^4<","^44"]],"^9",2662,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5C","^7T"],"^1P","^7U"],"^1@"]]]]]],"~$*allow-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1327,"^8",16,"^9",1327,"^:",26,"^5K",true],"^[","~$cljs.analyzer/*allow-ns*","^6","cljs/analyzer.cljc","^:",26,"^8",1,"^5K",true,"^7",1327,"^9",1327,"^3N","^3O"],"~$analyze-const",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2394,"^8",7,"^9",2394,"^:",20,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-const","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2394,"^3U","^45","^9",2394,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$simple-predicate-induced-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1571,"^8",8,"^9",1571,"^:",36,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$test"]]]]],"^4R","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"^4V",true,"^[","~$cljs.analyzer/simple-predicate-induced-tag","^6","cljs/analyzer.cljc","^:",36,"^3Q",["^1K",[["^1@","^81"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1571,"^3U",["^W",["^54","^46"]],"^9",1571,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^81"]]]]],"^4R","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"~$infer-invoke",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1423,"^8",7,"^9",1423,"^:",19,"^3L",["^1K",["^3M",["^1K",[["^1@",["^ ","~$f","~:fn","^78",["^4Q"],"^1P","~$e"]]]]]]],"^[","~$cljs.analyzer/infer-invoke","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^1@","~$p__73585"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1423,"^3U",["^W",["^44","^57","^46"]],"^9",1423,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@",["^ ","~$f","^84","^78",["^4Q"],"^1P","~$e"]]]]]]],"~$*cljs-static-fns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",53,"^8",16,"^9",53,"^:",33,"^5K",true],"^[","~$cljs.analyzer/*cljs-static-fns*","^6","cljs/analyzer.cljc","^:",33,"^8",1,"^5K",true,"^7",53,"^9",53,"^3N","^3O"],"~$array-types",["^ ","^[","~$cljs.analyzer/array-types","^6","cljs/analyzer.cljc","^7",3449,"^8",1,"^9",3449,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3449,"^8",6,"^9",3449,"^:",17],"^3N","^5>"],"~$*check-alias-dupes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",52,"^8",16,"^9",52,"^:",35,"^5K",true],"^[","~$cljs.analyzer/*check-alias-dupes*","^6","cljs/analyzer.cljc","^:",35,"^8",1,"^5K",true,"^7",52,"^9",52,"^3N","^3O"],"~$macro-ns-name",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2994,"^8",7,"^9",2994,"^:",20,"^3L",["^1K",["^3M",["^1K",[["^5C"]]]]]],"^[","~$cljs.analyzer/macro-ns-name","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^5C"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2994,"^3U",["^W",[null,"^44","^57"]],"^9",2994,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5C"]]]]]],"~$*reload-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",61,"^8",16,"^9",61,"^:",31,"^5K",true],"^[","~$cljs.analyzer/*reload-macros*","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^5K",true,"^7",61,"^9",61,"^3N","^3O"],"~$resolve-existing-var",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1264,"^8",7,"^9",1264,"^:",27,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"^[","~$cljs.analyzer/resolve-existing-var","^6","cljs/analyzer.cljc","^:",27,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1264,"^3U",["^W",["^4<","^44","^45","^46"]],"^9",1264,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"~$required?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1107,"^8",7,"^9",1107,"^:",16,"^3L",["^1K",["^3M",["^1K",[["^1L","^1@"]]]]]],"^[","~$cljs.analyzer/required?","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[["^1L","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1107,"^3U","^3O","^9",1107,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L","^1@"]]]]]],"~$NOT_NATIVE",["^ ","^[","~$cljs.analyzer/NOT_NATIVE","^6","cljs/analyzer.cljc","^7",1381,"^8",1,"^9",1381,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1381,"^8",6,"^9",1381,"^:",16],"^3N","^5>"],"~$IGNORE_SYM",["^ ","^[","~$cljs.analyzer/IGNORE_SYM","^6","cljs/analyzer.cljc","^7",246,"^8",1,"^9",246,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",246,"^8",6,"^9",246,"^:",16],"^3N","^57"],"~$parse-invoke*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3555,"^8",7,"^9",3555,"^:",20,"^3L",["^1K",["^3M",["^1K",[["^1@",["~$f","~$&","^4Q","^1P","^4G"]]]]]]],"^[","~$cljs.analyzer/parse-invoke*","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^1@","~$p__76740"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3555,"^3U",["^W",["^44","^45"]],"^9",3555,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@",["~$f","~$&","^4Q","^1P","^4G"]]]]]]],"~$*checked-arrays*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",51,"^8",16,"^9",51,"^:",32,"^5K",true],"^[","~$cljs.analyzer/*checked-arrays*","^6","cljs/analyzer.cljc","^:",32,"^8",1,"^5K",true,"^7",51,"^9",51,"^3N","^3O"],"~$ast-children",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1770,"^8",7,"^9",1770,"^:",19,"^3L",["^1K",["^3M",["^1K",[["^7U"]]]]]],"^[","~$cljs.analyzer/ast-children","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^7U"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1770,"^3U","^44","^9",1770,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^7U"]]]]]],"~$loaded-js-ns?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",792,"^8",7,"^9",792,"^:",20,"^3L",["^1K",["^3M",["^1K",[["^1@","~$prefix"]]]]],"^4R","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.","^3N","^3O"],"^[","~$cljs.analyzer/loaded-js-ns?","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^1@","^8Q"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",792,"^3U","^3O","^9",792,"^3V",2,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^8Q"]]]]],"^4R","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked."],"~$analyze-vector",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3895,"^8",7,"^9",3895,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-vector","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3895,"^3U","^44","^9",3895,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$unwrap-quote",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1385,"^8",7,"^9",1385,"^:",19,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","~$expr"]]]]]]],"^[","~$cljs.analyzer/unwrap-quote","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["~$p__73541"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1385,"^3U",["^W",[null,"^44"]],"^9",1385,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","^8V"]]]]]]],"~$namespaces",["^ ","^[","~$cljs.analyzer/namespaces","^6","cljs/analyzer.cljc","^7",588,"^8",1,"^9",588,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",588,"^8",6,"^9",588,"^:",16],"^3N","~$cljs.analyzer/t_cljs$analyzer72748"],"~$predicate->tag",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1517,"^8",16,"^9",1517,"^:",30,"^4V",true],"^4V",true,"^[","~$cljs.analyzer/predicate->tag","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^7",1517,"^9",1517,"^3N","^45"],"~$elide-analyzer-meta",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3954,"^8",7,"^9",3954,"^:",26,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"^[","~$cljs.analyzer/elide-analyzer-meta","^6","cljs/analyzer.cljc","^:",26,"^3Q",["^1K",[["~$m"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3954,"^3U",["^W",["^4<","^46"]],"^9",3954,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"~$ns->relpath",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^:",21,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^1L"],["^1L","~$ext"]]],"^3L",["^1K",[["^1L"],["^1L","^95"]]],"^3S",["^1K",[null,null]]],"^8",10,"^7",271,"^9",271,"^3L",["^1K",["^3M",["^1K",[["^1L"],["^1L","^95"]]]]],"^4R","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.","^3[",["^1K",["@param {...*} var_args"]]],"^[","~$cljs.analyzer/ns->relpath","^6","cljs/analyzer.cljc","^:",21,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^1L"],["^1L","^95"]]],"^3L",["^1K",[["^1L"],["^1L","^95"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1L"],["^1L","^95"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N","^44"],["^ ","^41",2,"^3T",false,"^3N","^1A"]],"^7",271,"^9",271,"^3V",2,"^3W",true,"^3L",["^1K",[["^1L"],["^1L","^95"]]],"^4R","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.","^3[",["^1K",["@param {...*} var_args"]]],"~$compile-syntax-error",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",742,"^8",8,"^9",742,"^:",28,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$msg","~$symbol"]]]]]],"^4V",true,"^[","~$cljs.analyzer/compile-syntax-error","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["^1@","^98","^99"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",742,"^3U","~$cljs.core/ExceptionInfo","^9",742,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^98","^99"]]]]]],"~$analyze-let-body",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2305,"^8",7,"^9",2305,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^1@","~$context","^4F","~$recur-frames","~$loop-lets"]]]]]],"^[","~$cljs.analyzer/analyze-let-body","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^1@","^9=","^4F","^9>","^9?"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2305,"^9",2305,"^3V",5,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^9=","^4F","^9>","^9?"]]]]]],"~$cljs-set?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",263,"^8",19,"^9",263,"^:",28,"^3N","^3O","^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-set?","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^7",263,"^3U","^3O","^9",263,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$get-col",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",626,"^8",7,"^9",626,"^:",14,"^3L",["^1K",["^3M",["^1K",[["~$x","^1@"]]]]]],"^[","~$cljs.analyzer/get-col","^6","cljs/analyzer.cljc","^:",14,"^3Q",["^1K",[["~$x","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",626,"^3U","^44","^9",626,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x","^1@"]]]]]],"~$type-check-induced-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1586,"^8",8,"^9",1586,"^:",30,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^81"]]]]],"^4R","Look for a type-check-induced tag when the test expression is the use of\n   instance? on a local, as in (instance? ICounted x)."],"^4V",true,"^[","~$cljs.analyzer/type-check-induced-tag","^6","cljs/analyzer.cljc","^:",30,"^3Q",["^1K",[["^1@","^81"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1586,"^3U",["^W",["^54","^46"]],"^9",1586,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^81"]]]]],"^4R","Look for a type-check-induced tag when the test expression is the use of\n   instance? on a local, as in (instance? ICounted x)."],"~$basic-validate-ns-spec",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2684,"^8",7,"^9",2684,"^:",29,"^3L",["^1K",["^3M",["^1K",[["^1@","~$macros?","~$spec"]]]]]],"^[","~$cljs.analyzer/basic-validate-ns-spec","^6","cljs/analyzer.cljc","^:",29,"^3Q",["^1K",[["^1@","^9H","^9I"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2684,"^3U","^46","^9",2684,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^9H","^9I"]]]]]],"~$*cljs-warnings*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",128,"^8",16,"^9",128,"^:",31,"^5K",true],"^[","~$cljs.analyzer/*cljs-warnings*","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^5K",true,"^7",128,"^9",128,"^3N","^45"],"~$alias->type",["^ ","^[","~$cljs.analyzer/alias->type","^6","cljs/analyzer.cljc","^7",963,"^8",1,"^9",963,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",963,"^8",6,"^9",963,"^:",17],"^3N","^45"],"~$analyzed?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3536,"^8",7,"^9",3536,"^:",16,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]],"^4R","Returns boolean if the form has already been marked as analyzed.","^3N","^3O"],"^[","~$cljs.analyzer/analyzed?","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3536,"^3U","^3O","^9",3536,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]],"^4R","Returns boolean if the form has already been marked as analyzed."],"~$analyze-deps",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^:",19,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^6Z","~$deps","^1@"],["^6Z","^9R","^1@","^5D"]]],"^3L",["^1K",[["^6Z","^9R","^1@"],["^6Z","^9R","^1@","^5D"]]],"^3S",["^1K",[null,null]]],"^8",7,"^7",2541,"^9",2541,"^3L",["^1K",["^3M",["^1K",[["^6Z","^9R","^1@"],["^6Z","^9R","^1@","^5D"]]]]],"^4R","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.","^3[",["^1K",["@param {...*} var_args"]]],"^[","~$cljs.analyzer/analyze-deps","^6","cljs/analyzer.cljc","^:",19,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^6Z","^9R","^1@"],["^6Z","^9R","^1@","^5D"]]],"^3L",["^1K",[["^6Z","^9R","^1@"],["^6Z","^9R","^1@","^5D"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^6Z","^9R","^1@"],["^6Z","^9R","^1@","^5D"]]],"^3R",null,"^41",4,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",3,"^3T",false,"^3N","^44"],["^ ","^41",4,"^3T",false]],"^7",2541,"^9",2541,"^3V",4,"^3W",true,"^3L",["^1K",[["^6Z","^9R","^1@"],["^6Z","^9R","^1@","^5D"]]],"^4R","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.","^3[",["^1K",["@param {...*} var_args"]]],"~$array-type?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3452,"^8",7,"^9",3452,"^:",18,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/array-type?","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["~$t"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3452,"^3U","^3O","^9",3452,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]]],"~$dotted-symbol?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1024,"^8",7,"^9",1024,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"^[","~$cljs.analyzer/dotted-symbol?","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1024,"^3U","^3O","^9",1024,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"~$*cljs-macros-is-classpath*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",56,"^8",16,"^9",56,"^:",42,"^5K",true],"^[","~$cljs.analyzer/*cljs-macros-is-classpath*","^6","cljs/analyzer.cljc","^:",42,"^8",1,"^5K",true,"^7",56,"^9",56,"^3N","^3O"],"~$*allow-redef*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1326,"^8",16,"^9",1326,"^:",29,"^5K",true],"^[","~$cljs.analyzer/*allow-redef*","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^5K",true,"^7",1326,"^9",1326,"^3N","^3O"],"~$analyze-fn-method-body",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2015,"^8",7,"^9",2015,"^:",29,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^9>"]]]]]],"^[","~$cljs.analyzer/analyze-fn-method-body","^6","cljs/analyzer.cljc","^:",29,"^3Q",["^1K",[["^1@","^4G","^9>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2015,"^9",2015,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^9>"]]]]]],"~$infer-type",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3971,"^8",7,"^9",3971,"^:",17,"^3L",["^1K",["^3M",["^1K",[["^1@",["^ ","^78",["~$tag"],"^1P","^7U"],"~$_"]]]]]],"^[","~$cljs.analyzer/infer-type","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^1@","~$p__77021","~$_"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3971,"^3U",["^W",[null,"^4<","^44"]],"^9",3971,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@",["^ ","^78",["^:3"],"^1P","^7U"],"~$_"]]]]]],"~$parse-import-spec",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2844,"^8",7,"^9",2844,"^:",24,"^3L",["^1K",["^3M",["^1K",[["^1@","^9R","^9I"]]]]]],"^[","~$cljs.analyzer/parse-import-spec","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["^1@","^9R","^9I"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2844,"^3U","^45","^9",2844,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^9R","^9I"]]]]]],"~$clj-ns->cljs-ns",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2876,"^8",7,"^9",2876,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]],"^4R","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"^[","~$cljs.analyzer/clj-ns->cljs-ns","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2876,"^3U",["^W",[null,"^44","^57"]],"^9",2876,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]],"^4R","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"~$constant-value?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1778,"^8",7,"^9",1778,"^:",22,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","^7U"]]]]]]],"^[","~$cljs.analyzer/constant-value?","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["~$p__74083"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1778,"^3U",["^W",["^3O","^44"]],"^9",1778,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","^7U"]]]]]]],"~$dump-specs",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4466,"^8",7,"^9",4466,"^:",17,"^3L",["^1K",["^3M",["^1K",[["^1L"]]]]],"^4R","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"^[","~$cljs.analyzer/dump-specs","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^1L"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",4466,"^3U",["^W",[null,"^44"]],"^9",4466,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L"]]]]],"^4R","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"~$*fn-invoke-direct*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",54,"^8",16,"^9",54,"^:",34,"^5K",true],"^[","~$cljs.analyzer/*fn-invoke-direct*","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^5K",true,"^7",54,"^9",54,"^3N","^3O"],"~$use->require",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2754,"^8",7,"^9",2754,"^:",19,"^3L",["^1K",["^3M",["^1K",[["^1@",["^6Z","~$&","~$filters","^1P","^9I"]]]]]]],"^[","~$cljs.analyzer/use->require","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^1@","~$p__75583"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2754,"^3U","^44","^9",2754,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@",["^6Z","~$&","^:B","^1P","^9I"]]]]]]],"~$inferred-use-macros",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2615,"^8",7,"^9",2615,"^:",26,"^3L",["^1K",["^3M",["^1K",[["~$use-macros","^1@"]]]]]],"^[","~$cljs.analyzer/inferred-use-macros","^6","cljs/analyzer.cljc","^:",26,"^3Q",["^1K",[["^:F","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2615,"^3U",["^W",[null,"^4<","^44"]],"^9",2615,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^:F","^1@"]]]]]],"~$error-data",["^ ","^3K",null,"^5",["^ ","^4V",true,"^6","cljs/analyzer.cljc","^:",18,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","~$phase"],["^1@","^:I","^99"]]],"^3L",["^1K",[["^1@","^:I"],["^1@","^:I","^99"]]],"^3S",["^1K",[null,null]]],"^8",8,"^7",733,"^9",733,"^3L",["^1K",["^3M",["^1K",[["^1@","^:I"],["^1@","^:I","^99"]]]]],"^3[",["^1K",["@param {...*} var_args"]]],"^4V",true,"^[","~$cljs.analyzer/error-data","^6","cljs/analyzer.cljc","^:",18,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^:I"],["^1@","^:I","^99"]]],"^3L",["^1K",[["^1@","^:I"],["^1@","^:I","^99"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@","^:I"],["^1@","^:I","^99"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N",["^W",["^44","^46"]]]],"^7",733,"^9",733,"^3V",3,"^3W",true,"^3L",["^1K",[["^1@","^:I"],["^1@","^:I","^99"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$analyze-symbol",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3642,"^8",7,"^9",3642,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Finds the var associated with sym"],"^[","~$cljs.analyzer/analyze-symbol","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3642,"^3U",["^W",["^44","^46"]],"^9",3642,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Finds the var associated with sym"],"~$truth-induced-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1604,"^8",8,"^9",1604,"^:",25,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^81"]]]]],"^4R","Refine a tag to exclude clj-nil if the test is a simple symbol."],"^4V",true,"^[","~$cljs.analyzer/truth-induced-tag","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^1@","^81"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1604,"^3U",["^W",["^54","^46"]],"^9",1604,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^81"]]]]],"^4R","Refine a tag to exclude clj-nil if the test is a simple symbol."],"~$confirm-var-exists",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",837,"^8",7,"^9",837,"^:",25,"^3L",["^1K",["^3M",["^1K",[["^1@","^8Q","~$suffix"],["^1@","^8Q","^:P","~$missing-fn"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^1@","^8Q","^:P"],["^1@","^8Q","^:P","^:Q"]]],"^3L",["^1K",[["^1@","^8Q","^:P"],["^1@","^8Q","^:P","^:Q"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/confirm-var-exists","^6","cljs/analyzer.cljc","^:",25,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^1@","^8Q","^:P"],["^1@","^8Q","^:P","^:Q"]]],"^3L",["^1K",[["^1@","^8Q","^:P"],["^1@","^8Q","^:P","^:Q"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@","^8Q","^:P"],["^1@","^8Q","^:P","^:Q"]]],"^3R",null,"^41",4,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",3,"^3T",false,"^3N","^44"],["^ ","^41",4,"^3T",false,"^3N",["^W",["^44","^46"]]]],"^7",837,"^9",837,"^3V",4,"^3W",true,"^3L",["^1K",[["^1@","^8Q","^:P"],["^1@","^8Q","^:P","^:Q"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$analyze-keyword",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1342,"^8",7,"^9",1342,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]]],"^[","~$cljs.analyzer/analyze-keyword","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1342,"^3U","^45","^9",1342,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]]],"~$SENTINEL",["^ ","^[","~$cljs.analyzer/SENTINEL","^6","cljs/analyzer.cljc","^7",198,"^8",10,"^9",198,"^:",23,"^5",["^ ","^6","cljs/analyzer.cljc","^7",198,"^8",15,"^9",198,"^:",23],"^3N","~$object"],"~$analyze-let-bindings",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2299,"^8",7,"^9",2299,"^:",27,"^3L",["^1K",["^3M",["^1K",[["^4D","^4E","^5B"]]]]]],"^[","~$cljs.analyzer/analyze-let-bindings","^6","cljs/analyzer.cljc","^:",27,"^3Q",["^1K",[["^4D","^4E","^5B"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2299,"^9",2299,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4D","^4E","^5B"]]]]]],"~$munge-global-export",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1035,"^8",7,"^9",1035,"^:",26,"^3L",["^1K",["^3M",["^1K",[["^5C"]]]]]],"^[","~$cljs.analyzer/munge-global-export","^6","cljs/analyzer.cljc","^:",26,"^3Q",["^1K",[["^5C"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1035,"^3U","^1A","^9",1035,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5C"]]]]]],"~$*loop-lets*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1325,"^8",16,"^9",1325,"^:",27,"^5K",true],"^[","~$cljs.analyzer/*loop-lets*","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^5K",true,"^7",1325,"^9",1325,"^3N","~$cljs.core/IList"],"~$->type-set",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",928,"^8",7,"^9",928,"^:",17,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]],"^4R","Ensures that a type tag is a set."],"^[","~$cljs.analyzer/->type-set","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["~$t"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",928,"^3U",["^W",[null,"^5>"]],"^9",928,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]],"^4R","Ensures that a type tag is a set."],"~$js-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1009,"^8",7,"^9",1009,"^:",13,"^3L",["^1K",["^3M",["^1K",[["^67"],["^67","~$tag-type"],["^67","^;6","^68"],["^67","^;6","^68","^69"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^67"],["^67","^;6"],["^67","^;6","^68"],["^67","^;6","^68","^69"]]],"^3L",["^1K",[["^67"],["^67","^;6"],["^67","^;6","^68"],["^67","^;6","^68","^69"]]],"^3S",["^1K",[null,null,null,null]]]],"^[","~$cljs.analyzer/js-tag","^6","cljs/analyzer.cljc","^:",13,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^67"],["^67","^;6"],["^67","^;6","^68"],["^67","^;6","^68","^69"]]],"^3L",["^1K",[["^67"],["^67","^;6"],["^67","^;6","^68"],["^67","^;6","^68","^69"]]],"^3S",["^1K",[null,null,null,null]]],"^3Q",["^1K",[["^67"],["^67","^;6"],["^67","^;6","^68"],["^67","^;6","^68","^69"]]],"^3R",null,"^41",4,"^3S",["^1K",[null,null,null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N","^44"],["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N","^44"],["^ ","^41",4,"^3T",false,"^3N",["^W",["^44","^57","^46"]]]],"^7",1009,"^9",1009,"^3V",4,"^3W",true,"^3L",["^1K",[["^67"],["^67","^;6"],["^67","^;6","^68"],["^67","^;6","^68","^69"]]],"^3[",["^1K",["@param {...*} var_args"]]],"^X",["^ ","^[","~$cljs.analyzer/js-reserved","^6","cljs/analyzer.cljc","^7",179,"^8",1,"^9",179,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",179,"^8",6,"^9",179,"^:",17],"^3N","^5>"],"~$*load-tests*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",59,"^8",16,"^9",59,"^:",28,"^5K",true],"^[","~$cljs.analyzer/*load-tests*","^6","cljs/analyzer.cljc","^:",28,"^8",1,"^5K",true,"^7",59,"^9",59,"^3N","^3O"],"~$check-use-macros-inferring-missing",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2644,"^8",7,"^9",2644,"^:",41,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5C","^6U","^:F"],"^1P","^7U"],"^1@"]]]]]],"^[","~$cljs.analyzer/check-use-macros-inferring-missing","^6","cljs/analyzer.cljc","^:",41,"^3Q",["^1K",[["~$p__75410","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2644,"^3U",["^W",["^4<","^44"]],"^9",2644,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5C","^6U","^:F"],"^1P","^7U"],"^1@"]]]]]],"~$canonicalize-type",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",936,"^8",7,"^9",936,"^:",24,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]]],"^[","~$cljs.analyzer/canonicalize-type","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["~$t"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",936,"^3U",["^W",[null,"^4<","^44","^57","^46"]],"^9",936,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]]],"~$macroexpand-1*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3776,"^8",7,"^9",3776,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/macroexpand-1*","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3776,"^3U",["^W",[null,"^4<","^5M","^46"]],"^9",3776,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$var->sym",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3760,"^8",8,"^9",3760,"^:",16,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^4M"]]]]]],"^4V",true,"^[","~$cljs.analyzer/var->sym","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[["^4M"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3760,"^3U","^44","^9",3760,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4M"]]]]]],"~$check-use-macros",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2631,"^8",7,"^9",2631,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^:F","^1@"],["^:F","^6T","^1@"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^:F","^1@"],["^:F","^6T","^1@"]]],"^3L",["^1K",[["^:F","^1@"],["^:F","^6T","^1@"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/check-use-macros","^6","cljs/analyzer.cljc","^:",23,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^:F","^1@"],["^:F","^6T","^1@"]]],"^3L",["^1K",[["^:F","^1@"],["^:F","^6T","^1@"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^:F","^1@"],["^:F","^6T","^1@"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N",["^W",[null,"^4<","^44"]]]],"^7",2631,"^9",2631,"^3V",3,"^3W",true,"^3L",["^1K",[["^:F","^1@"],["^:F","^6T","^1@"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$get-expander",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3744,"^8",7,"^9",3744,"^:",19,"^3L",["^1K",["^3M",["^1K",[["^4>","^1@"]]]]],"^4R","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"^[","~$cljs.analyzer/get-expander","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^4>","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3744,"^3U",["^W",["^44","^46"]],"^9",3744,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>","^1@"]]]]],"^4R","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"~$analyze-js-star",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3499,"^8",7,"^9",3499,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^1@","~$jsform","^4Q","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-js-star","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^1@","^;I","^4Q","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3499,"^9",3499,"^3V",4,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^;I","^4Q","^4G"]]]]]],"~$cljs-map?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",255,"^8",19,"^9",255,"^:",28,"^3N","^3O","^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-map?","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^7",255,"^3U","^3O","^9",255,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$t_cljs$analyzer72748",["^ ","~:num-fields",1,"~:protocols",["^W",["~$cljs.core/IMeta","~$cljs.core/IDeref","~$cljs.core/IWithMeta"]],"^[","^8[","^6","cljs/analyzer.cljc","~:type",true,"~:anonymous",true,"^8",6,"^7",596,"~:record",false,"^3N","~$function","~:skip-protocol-flag",["^W",["^;P","^;Q","^;R"]]],"~$do-macroexpand-check",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3764,"^8",8,"^9",3764,"^:",28,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","~$mac-var"]]]]]],"^4V",true,"^[","~$cljs.analyzer/do-macroexpand-check","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["^1@","^4G","^;Y"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3764,"^3U",["^W",[null,"^46"]],"^9",3764,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^;Y"]]]]]],"~$build-dot-form",["^ ","^[","~$cljs.analyzer/build-dot-form","^6","cljs/analyzer.cljc","^7",3279,"^8",1,"^9",3279,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3279,"^8",11,"^9",3279,"^:",25],"^3N","^49"],"~$register-constant!",["^ ","^3K",null,"^5",["^ ","^4V",true,"^6","cljs/analyzer.cljc","^:",26,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["~$val"],["^1@","^<2"]]],"^3L",["^1K",[["^<2"],["^1@","^<2"]]],"^3S",["^1K",[null,null]]],"^8",8,"^7",560,"^9",560,"^3L",["^1K",["^3M",["^1K",[["^<2"],["^1@","^<2"]]]]],"^3[",["^1K",["@param {...*} var_args"]]],"^4V",true,"^[","~$cljs.analyzer/register-constant!","^6","cljs/analyzer.cljc","^:",26,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^<2"],["^1@","^<2"]]],"^3L",["^1K",[["^<2"],["^1@","^<2"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^<2"],["^1@","^<2"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N","^44"],["^ ","^41",2,"^3T",false,"^3N",["^W",[null,"^44"]]]],"^7",560,"^9",560,"^3V",2,"^3W",true,"^3L",["^1K",[["^<2"],["^1@","^<2"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$js-star-interp",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3403,"^8",7,"^9",3403,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^1@","~$s"]]]]]],"^[","~$cljs.analyzer/js-star-interp","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^1@","~$s"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3403,"^3U","^4<","^9",3403,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$s"]]]]]],"~$*recur-frames*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1324,"^8",16,"^9",1324,"^:",30,"^5K",true],"^[","~$cljs.analyzer/*recur-frames*","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^5K",true,"^7",1324,"^9",1324,"^3N","^46"],"~$STRING_SYM",["^ ","^[","~$cljs.analyzer/STRING_SYM","^6","cljs/analyzer.cljc","^7",227,"^8",4,"^9",227,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",227,"^8",9,"^9",227,"^:",19],"^3N","^57"],"~$analyze-fn-methods-pass2*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2076,"^8",7,"^9",2076,"^:",32,"^3L",["^1K",["^3M",["^1K",[["~$menv","^5R","^5S","~$meths"]]]]]],"^[","~$cljs.analyzer/analyze-fn-methods-pass2*","^6","cljs/analyzer.cljc","^:",32,"^3Q",["^1K",[["^<;","^5R","^5S","^<<"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2076,"^3U","^4<","^9",2076,"^3V",4,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^<;","^5R","^5S","^<<"]]]]]],"^Y",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3835,"^8",7,"^9",3835,"^:",20,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]],"^4R","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"^[","~$cljs.analyzer/macroexpand-1","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3835,"^9",3835,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]],"^4R","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"~$resolve-macro-var",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1282,"^8",7,"^9",1282,"^:",24,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"^[","~$cljs.analyzer/resolve-macro-var","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1282,"^3U",["^W",[null,"^44","^46"]],"^9",1282,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"~$analyze-let-binding-init",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2243,"^8",7,"^9",2243,"^:",31,"^3L",["^1K",["^3M",["^1K",[["^1@","~$init","^9?"]]]]]],"^[","~$cljs.analyzer/analyze-let-binding-init","^6","cljs/analyzer.cljc","^:",31,"^3Q",["^1K",[["^1@","^<B","^9?"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2243,"^9",2243,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^<B","^9?"]]]]]],"~$infer-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1435,"^8",7,"^9",1435,"^:",16,"^3L",["^1K",["^3M",["^1K",[["^1@","~$e"]]]]],"^4R","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"^[","~$cljs.analyzer/infer-tag","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[["^1@","~$e"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1435,"^3U",["^W",[null,"^44"]],"^9",1435,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$e"]]]]],"^4R","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"~$canonicalize-import-specs",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2925,"^8",7,"^9",2925,"^:",32,"^3L",["^1K",["^3M",["^1K",[["~$specs"]]]]]],"^[","~$cljs.analyzer/canonicalize-import-specs","^6","cljs/analyzer.cljc","^:",32,"^3Q",["^1K",[["^<G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2925,"^9",2925,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^<G"]]]]]],"~$analyze-form-seq",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4553,"^8",7,"^9",4553,"^:",23,"^3L",["^1K",["^3M",["^1K",[["~$forms"],["^<J","^5D"],["^<J","^5D","~$return-last?"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^<J"],["^<J","^5D"],["^<J","^5D","^<K"]]],"^3L",["^1K",[["^<J"],["^<J","^5D"],["^<J","^5D","^<K"]]],"^3S",["^1K",[null,null,null]]]],"^[","~$cljs.analyzer/analyze-form-seq","^6","cljs/analyzer.cljc","^:",23,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^<J"],["^<J","^5D"],["^<J","^5D","^<K"]]],"^3L",["^1K",[["^<J"],["^<J","^5D"],["^<J","^5D","^<K"]]],"^3S",["^1K",[null,null,null]]],"^3Q",["^1K",[["^<J"],["^<J","^5D"],["^<J","^5D","^<K"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N","^44"],["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false]],"^7",4553,"^9",4553,"^3V",3,"^3W",true,"^3L",["^1K",[["^<J"],["^<J","^5D"],["^<J","^5D","^<K"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$analyze-let-body*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2302,"^8",7,"^9",2302,"^:",24,"^3L",["^1K",["^3M",["^1K",[["^1@","^9=","^4F"]]]]]],"^[","~$cljs.analyzer/analyze-let-body*","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["^1@","^9=","^4F"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2302,"^3U","^44","^9",2302,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^9=","^4F"]]]]]],"~$analyze-js-star*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3470,"^8",7,"^9",3470,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^1@","^;I","^4Q","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-js-star*","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^1@","^;I","^4Q","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3470,"^3U","^45","^9",3470,"^3V",4,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^;I","^4Q","^4G"]]]]]],"~$inferred-rename-macros",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2620,"^8",7,"^9",2620,"^:",29,"^3L",["^1K",["^3M",["^1K",[["~$rename-macros","^1@"]]]]]],"^[","~$cljs.analyzer/inferred-rename-macros","^6","cljs/analyzer.cljc","^:",29,"^3Q",["^1K",[["^<R","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2620,"^3U",["^W",[null,"^4<","^44"]],"^9",2620,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^<R","^1@"]]]]]],"~$parse-ns-error-msg",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2681,"^8",7,"^9",2681,"^:",25,"^3L",["^1K",["^3M",["^1K",[["^9I","^98"]]]]]],"^[","~$cljs.analyzer/parse-ns-error-msg","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^9I","^98"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2681,"^3U","^1A","^9",2681,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^9I","^98"]]]]]],"~$missing-use-macro?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2586,"^8",7,"^9",2586,"^:",25,"^3L",["^1K",["^3M",["^1K",[["^6Z","^4>"]]]]]],"^[","~$cljs.analyzer/missing-use-macro?","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^6Z","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2586,"^3U",["^W",["^3O","^46"]],"^9",2586,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^6Z","^4>"]]]]]],"~$CLJ_NIL_SYM",["^ ","^[","~$cljs.analyzer/CLJ_NIL_SYM","^6","cljs/analyzer.cljc","^7",221,"^8",4,"^9",221,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",221,"^8",9,"^9",221,"^:",20],"^3N","^57"],"~$record-ns+name",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3931,"^8",7,"^9",3931,"^:",21,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/record-ns+name","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3931,"^3U","^4T","^9",3931,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$analyzed",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3528,"^8",7,"^9",3528,"^:",15,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]],"^4R","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"^[","~$cljs.analyzer/analyzed","^6","cljs/analyzer.cljc","^:",15,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3528,"^3U",["^W",["^4<","^44","^5M","^46"]],"^9",3528,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]],"^4R","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"~$add-identity",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",73,"^8",8,"^9",73,"^:",20,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"^4V",true,"^[","~$cljs.analyzer/add-identity","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["~$m"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",73,"^3U",["^W",["^4<","^44"]],"^9",73,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"~$resolve-symbol",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4156,"^8",7,"^9",4156,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"^[","~$cljs.analyzer/resolve-symbol","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",4156,"^3U",["^W",[null,"^44"]],"^9",4156,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"~$missing-renames",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2605,"^8",7,"^9",2605,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^7T","^1@"]]]]]],"^[","~$cljs.analyzer/missing-renames","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^7T","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2605,"^3U",["^W",[null,"^4<","^44"]],"^9",2605,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^7T","^1@"]]]]]],"~$resolve*",["^ ","^[","~$cljs.analyzer/resolve*","^6","cljs/analyzer.cljc","^7",1060,"^8",1,"^9",1060,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1060,"^8",11,"^9",1060,"^:",19],"^3N","^49"],"~$*cljs-macros-path*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",55,"^8",16,"^9",55,"^:",34,"^5K",true],"^[","~$cljs.analyzer/*cljs-macros-path*","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^5K",true,"^7",55,"^9",55,"^3N","^1A"],"~$confirm-var-exist-warning",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",785,"^8",7,"^9",785,"^:",32,"^3L",["^1K",["^3M",["^1K",[["^1@","^8Q","^:P"]]]]]],"^[","~$cljs.analyzer/confirm-var-exist-warning","^6","cljs/analyzer.cljc","^:",32,"^3Q",["^1K",[["^1@","^8Q","^:P"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",785,"^3U","^;V","^9",785,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^8Q","^:P"]]]]]],"~$repeat-char",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",525,"^8",8,"^9",525,"^:",19,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["~$c","~$n"]]]]]],"^4V",true,"^[","~$cljs.analyzer/repeat-char","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["~$c","~$n"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",525,"^9",525,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$c","~$n"]]]]]],"~$unchecked-arrays?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",168,"^8",7,"^9",168,"^:",24,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"^[","~$cljs.analyzer/unchecked-arrays?","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[[]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",168,"^3U","^3O","^9",168,"^3V",0,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"~$core-ns?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1799,"^8",8,"^9",1799,"^:",16,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["~$ns-sym"]]]]]],"^4V",true,"^[","~$cljs.analyzer/core-ns?","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[["^=C"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1799,"^3U","^3O","^9",1799,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^=C"]]]]]],"~$analyze-dot",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3330,"^8",7,"^9",3330,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^1@","^50","~$field","~$member+","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-dot","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^1@","^50","^=F","^=G","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3330,"^9",3330,"^3V",5,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^50","^=F","^=G","^4G"]]]]]],"~$analyze-do-statements",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2217,"^8",7,"^9",2217,"^:",28,"^3L",["^1K",["^3M",["^1K",[["^1@","^4F"]]]]]],"^[","~$cljs.analyzer/analyze-do-statements","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["^1@","^4F"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2217,"^9",2217,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4F"]]]]]],"~$get-line",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",623,"^8",7,"^9",623,"^:",15,"^3L",["^1K",["^3M",["^1K",[["~$x","^1@"]]]]]],"^[","~$cljs.analyzer/get-line","^6","cljs/analyzer.cljc","^:",15,"^3Q",["^1K",[["~$x","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",623,"^3U","^44","^9",623,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x","^1@"]]]]]],"~$analyze-do-statements*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2214,"^8",7,"^9",2214,"^:",29,"^3L",["^1K",["^3M",["^1K",[["^1@","^4F"]]]]]],"^[","~$cljs.analyzer/analyze-do-statements*","^6","cljs/analyzer.cljc","^:",29,"^3Q",["^1K",[["^1@","^4F"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2214,"^3U","^4<","^9",2214,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4F"]]]]]],"~$analyze-seq",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3852,"^8",7,"^9",3852,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3L",["^1K",[["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/analyze-seq","^6","cljs/analyzer.cljc","^:",18,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3L",["^1K",[["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3R",null,"^41",4,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",3,"^3T",false,"^3N","^44"],["^ ","^41",4,"^3T",false,"^3N","^44"]],"^7",3852,"^9",3852,"^3V",4,"^3W",true,"^3L",["^1K",[["^1@","^4G","^5C"],["^1@","^4G","^5C","^5D"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$desugar-dotted-expr",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3615,"^8",7,"^9",3615,"^:",26,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","^8V"]]]]]]],"^[","~$cljs.analyzer/desugar-dotted-expr","^6","cljs/analyzer.cljc","^:",26,"^3Q",["^1K",[["~$p__76769"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3615,"^9",3615,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","^8V"]]]]]]],"~$private-var-access-exceptions",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1085,"^8",16,"^9",1085,"^:",45,"^4V",true],"^4V",true,"^[","~$cljs.analyzer/private-var-access-exceptions","^6","cljs/analyzer.cljc","^:",45,"^8",1,"^7",1085,"^9",1085,"^3N","^5>","^4R","Specially-treated symbols for which we don't trigger :private-var-access warnings."],"~$all-values?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3545,"^8",8,"^9",3545,"^:",19,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^4F"]]]]],"^3N","^3O"],"^4V",true,"^[","~$cljs.analyzer/all-values?","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^4F"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3545,"^3U","^3O","^9",3545,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4F"]]]]]],"~$find-def-clash",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2983,"^8",7,"^9",2983,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^1@","^1L","~$segments"]]]]]],"^[","~$cljs.analyzer/find-def-clash","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^1@","^1L","^=Y"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2983,"^3U","^46","^9",2983,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^1L","^=Y"]]]]]],"~$has-error-data?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",760,"^8",7,"^9",760,"^:",22,"^3L",["^1K",["^3M",["^1K",[["~$ex"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/has-error-data?","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^>0"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",760,"^3U","^3O","^9",760,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^>0"]]]]]],"~$get-expander*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3719,"^8",7,"^9",3719,"^:",20,"^3L",["^1K",["^3M",["^1K",[["^4>","^1@"]]]]]],"^[","~$cljs.analyzer/get-expander*","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^4>","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3719,"^3U",["^W",["^44","^46"]],"^9",3719,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>","^1@"]]]]]],"~$fn-name-var",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2057,"^8",7,"^9",2057,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^1@","^5R","^5C"]]]]]],"^[","~$cljs.analyzer/fn-name-var","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^1@","^5R","^5C"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2057,"^3U",["^W",["^44","^46"]],"^9",2057,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^5R","^5C"]]]]]],"~$munge-node-lib",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1031,"^8",7,"^9",1031,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^5C"]]]]]],"^[","~$cljs.analyzer/munge-node-lib","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^5C"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1031,"^3U","^1A","^9",1031,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5C"]]]]]],"~$internal-js-module-exists?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",802,"^8",8,"^9",802,"^:",34,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["~$js-module-index","^5["]]]]]],"^4V",true,"^[","~$cljs.analyzer/internal-js-module-exists?","^6","cljs/analyzer.cljc","^:",34,"^3Q",["^1K",[["^>9","^5["]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",802,"^3U","^3O","^9",802,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^>9","^5["]]]]]],"~$*load-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",60,"^8",16,"^9",60,"^:",29,"^5K",true],"^[","~$cljs.analyzer/*load-macros*","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^5K",true,"^7",60,"^9",60,"^3N","^3O"],"~$add-types",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^:",16,"^40",["^ ","^3T",true,"^41",2,"^3V",2,"^3Q",["^1K",[[],["~$t1"],["^>>","~$t2"]]],"^3L",["^1K",[[],["^>>"],["^>>","^>?"],["^>>","^>?","~$&","~$ts"]]],"^3S",["^1K",[null,null,null,null]]],"^8",7,"^7",950,"^9",950,"^3L",["^1K",["^3M",["^1K",[[],["^>>"],["^>>","^>?"],["^>>","^>?","~$&","^>@"]]]]],"^4R","Produces a union of types.","^3[",["^1K",["@param {...*} var_args"]]],"^[","~$cljs.analyzer/add-types","^6","cljs/analyzer.cljc","^:",16,"^40",["^ ","^3T",true,"^41",2,"^3V",2,"^3Q",["^1K",[[],["^>>"],["^>>","^>?"]]],"^3L",["^1K",[[],["^>>"],["^>>","^>?"],["^>>","^>?","~$&","^>@"]]],"^3S",["^1K",[null,null,null,null]]],"^3Q",["^1K",[[],["^>>"],["^>>","^>?"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null,null,null]],"^8",1,"^3T",true,"^43",[["^ ","^41",0,"^3T",false,"^3N","^57"],["^ ","^41",1,"^3T",false],["^ ","^41",2,"^3T",false,"^3N",["^W",[null,"^4<","^44","^57","^46"]]],["^ ","^41",2,"^3T",true,"^3N","^44"]],"^7",950,"^9",950,"^3V",2,"^3W",true,"^3L",["^1K",[[],["^>>"],["^>>","^>?"],["^>>","^>?","~$&","^>@"]]],"^4R","Produces a union of types.","^3[",["^1K",["@param {...*} var_args"]]],"~$excluded?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3692,"^8",7,"^9",3692,"^:",16,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/excluded?","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3692,"^3U","^3O","^9",3692,"^3V",2,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]]],"~$empty-env",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",681,"^8",7,"^9",681,"^:",16,"^3L",["^1K",["^3M",["^1K",[[]]]]],"^4R","Construct an empty analysis environment. Required to analyze forms."],"^[","~$cljs.analyzer/empty-env","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[[]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",681,"^9",681,"^3V",0,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[]]]]],"^4R","Construct an empty analysis environment. Required to analyze forms."],"~$public-name?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",903,"^8",7,"^9",903,"^:",19,"^3L",["^1K",["^3M",["^1K",[["^1L","^4>"]]]]],"^4R","Is sym public?","^3N","^3O"],"^[","~$cljs.analyzer/public-name?","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^1L","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",903,"^3U","^3O","^9",903,"^3V",2,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L","^4>"]]]]],"^4R","Is sym public?"],"~$default-warning-handler",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",509,"^8",7,"^9",509,"^:",30,"^3L",["^1K",["^3M",["^1K",[["~$warning-type","^1@","~$extra"]]]]]],"^[","~$cljs.analyzer/default-warning-handler","^6","cljs/analyzer.cljc","^:",30,"^3Q",["^1K",[["^>I","^1@","^>J"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",509,"^3U",["^W",[null,"^46"]],"^9",509,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^>I","^1@","^>J"]]]]]],"~$resolve-ns-alias",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",863,"^8",7,"^9",863,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^1@","^5C"],["^1@","^5C","~$not-found"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3L",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/resolve-ns-alias","^6","cljs/analyzer.cljc","^:",23,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3L",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N",["^W",[null,"^44"]]]],"^7",863,"^9",863,"^3V",3,"^3W",true,"^3L",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$intern-macros",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^:",20,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^1L"],["^1L","~$reload"]]],"^3L",["^1K",[["^1L"],["^1L","^>P"]]],"^3S",["^1K",[null,null]]],"^8",7,"^7",629,"^9",629,"^3L",["^1K",["^3M",["^1K",[["^1L"],["^1L","^>P"]]]]],"^4R","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.","^3[",["^1K",["@param {...*} var_args"]]],"^[","~$cljs.analyzer/intern-macros","^6","cljs/analyzer.cljc","^:",20,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^1L"],["^1L","^>P"]]],"^3L",["^1K",[["^1L"],["^1L","^>P"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1L"],["^1L","^>P"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N","^44"],["^ ","^41",2,"^3T",false,"^3N",["^W",[null,"^44","^46"]]]],"^7",629,"^9",629,"^3V",2,"^3W",true,"^3L",["^1K",[["^1L"],["^1L","^>P"]]],"^4R","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.","^3[",["^1K",["@param {...*} var_args"]]],"~$const-expr->constant-value",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1784,"^8",7,"^9",1784,"^:",33,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","~$e"]]]]]]],"^[","~$cljs.analyzer/const-expr->constant-value","^6","cljs/analyzer.cljc","^:",33,"^3Q",["^1K",[["~$p__74105"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1784,"^9",1784,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[["^ ","^78",["^5B"],"^1P","~$e"]]]]]]],"~$BOOLEAN_OR_SEQ",["^ ","^[","~$cljs.analyzer/BOOLEAN_OR_SEQ","^6","cljs/analyzer.cljc","^7",1383,"^8",1,"^9",1383,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1383,"^8",6,"^9",1383,"^:",20],"^3N","^5>"],"~$*macro-infer*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",62,"^8",16,"^9",62,"^:",29,"^5K",true],"^[","~$cljs.analyzer/*macro-infer*","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^5K",true,"^7",62,"^9",62,"^3N","^3O"],"~$DOT_SYM",["^ ","^[","~$cljs.analyzer/DOT_SYM","^6","cljs/analyzer.cljc","^7",235,"^8",4,"^9",235,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",235,"^8",9,"^9",235,"^:",16],"^3N","^57"],"~$gen-constant-id",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",540,"^8",7,"^9",540,"^:",22,"^3L",["^1K",["^3M",["^1K",[["~$value"]]]]]],"^[","~$cljs.analyzer/gen-constant-id","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^?0"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",540,"^3U",["^W",["^44","^57"]],"^9",540,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^?0"]]]]]],"~$BOOLEAN_SYM",["^ ","^[","~$cljs.analyzer/BOOLEAN_SYM","^6","cljs/analyzer.cljc","^7",229,"^8",1,"^9",229,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",229,"^8",6,"^9",229,"^:",17],"^3N","^57"],"~$macro-autoload-ns?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2861,"^8",7,"^9",2861,"^:",25,"^3L",["^1K",["^3M",["^1K",[["^4G"]]]]],"^4R","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.","^3N","^3O"],"^[","~$cljs.analyzer/macro-autoload-ns?","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2861,"^3U","^3O","^9",2861,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4G"]]]]],"^4R","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true."],"~$get-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1347,"^8",7,"^9",1347,"^:",14,"^3L",["^1K",["^3M",["^1K",[["~$e"]]]]]],"^[","~$cljs.analyzer/get-tag","^6","cljs/analyzer.cljc","^:",14,"^3Q",["^1K",[["~$e"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1347,"^3U","^44","^9",1347,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$e"]]]]]],"~$implicit-nses",["^ ","^[","~$cljs.analyzer/implicit-nses","^6","cljs/analyzer.cljc","^7",776,"^8",1,"^9",776,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",776,"^8",6,"^9",776,"^:",19],"^3N","^5>"],"~$valid-proto",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1760,"^8",7,"^9",1760,"^:",18,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/valid-proto","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1760,"^3U",["^W",["^57","^46"]],"^9",1760,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$normalize-js-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",919,"^8",7,"^9",919,"^:",23,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/normalize-js-tag","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",919,"^3U",["^W",[null,"^4<","^5M","^46"]],"^9",919,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$analyze-list",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3889,"^8",7,"^9",3889,"^:",19,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-list","^6","cljs/analyzer.cljc","^:",19,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3889,"^3U","^44","^9",3889,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$warning",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",721,"^8",7,"^9",721,"^:",14,"^3L",["^1K",["^3M",["^1K",[["^>I","^1@","^>J"]]]]]],"^[","~$cljs.analyzer/warning","^6","cljs/analyzer.cljc","^:",14,"^3Q",["^1K",[["^>I","^1@","^>J"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",721,"^3U","^46","^9",721,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^>I","^1@","^>J"]]]]]],"~$implicit-import?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",778,"^8",7,"^9",778,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^1@","^8Q","^:P"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/implicit-import?","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^1@","^8Q","^:P"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",778,"^3U","^3O","^9",778,"^3V",3,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^8Q","^:P"]]]]]],"~$->t_cljs$analyzer72748",["^ ","^3K",null,"^5",["^ ","^;T",true,"^;O",["^W",["^;P","^;Q","^;R"]],"^;W",["^W",["^;P","^;Q","^;R"]],"~:factory","~:positional","^3L",["^1K",["^3M",["^1K",[["~$meta72749"]]]]],"^4R","Positional factory function for cljs.analyzer/t_cljs$analyzer72748.","^6",null],"^;O",["^W",["^;P","^;Q","^;R"]],"^[","~$cljs.analyzer/->t_cljs$analyzer72748","^6","cljs/analyzer.cljc","^3Q",["^1K",[["^?G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^;T",true,"^8",6,"^3T",false,"^?E","^?F","^7",596,"^3U","^8[","^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^?G"]]]]],"^;W",["^W",["^;P","^;Q","^;R"]],"^4R","Positional factory function for cljs.analyzer/t_cljs$analyzer72748."],"~$missing-use-macros",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2610,"^8",7,"^9",2610,"^:",25,"^3L",["^1K",["^3M",["^1K",[["^:F","^1@"]]]]]],"^[","~$cljs.analyzer/missing-use-macros","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^:F","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2610,"^3U",["^W",[null,"^4<","^44"]],"^9",2610,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^:F","^1@"]]]]]],"~$analyze*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4102,"^8",7,"^9",4102,"^:",15,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^5C","^5D"]]]]]],"^[","~$cljs.analyzer/analyze*","^6","cljs/analyzer.cljc","^:",15,"^3Q",["^1K",[["^1@","^4G","^5C","^5D"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",4102,"^3U",["^W",[null,"^44"]],"^9",4102,"^3V",4,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^5C","^5D"]]]]]],"~$-cljs-macros-loaded",["^ ","^[","~$cljs.analyzer/-cljs-macros-loaded","^6","cljs/analyzer.cljc","^7",126,"^8",1,"^9",126,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",126,"^8",6,"^9",126,"^:",25],"^3N","~$cljs.core/Atom"],"~$check-uses",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2623,"^8",7,"^9",2623,"^:",17,"^3L",["^1K",["^3M",["^1K",[["^6U","^1@"]]]]]],"^[","~$cljs.analyzer/check-uses","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^6U","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2623,"^3U","^46","^9",2623,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^6U","^1@"]]]]]],"~$set-test-induced-tags",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1615,"^8",8,"^9",1615,"^:",29,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^81"]]]]],"^4R","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"^4V",true,"^[","~$cljs.analyzer/set-test-induced-tags","^6","cljs/analyzer.cljc","^:",29,"^3Q",["^1K",[["^1@","^81"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1615,"^3U",["^W",[null,"^4<","^44"]],"^9",1615,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^81"]]]]],"^4R","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"~$find-matching-method",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1354,"^8",7,"^9",1354,"^:",27,"^3L",["^1K",["^3M",["^1K",[["~$f","~$params"]]]]]],"^[","~$cljs.analyzer/find-matching-method","^6","cljs/analyzer.cljc","^:",27,"^3Q",["^1K",[["~$f","^?U"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1354,"^3U",["^W",["^44","^46"]],"^9",1354,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$f","^?U"]]]]]],"~$*private-var-access-nowarn*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",65,"^8",16,"^9",65,"^:",43,"^5K",true],"^[","~$cljs.analyzer/*private-var-access-nowarn*","^6","cljs/analyzer.cljc","^:",43,"^8",1,"^5K",true,"^7",65,"^9",65,"^3N","^3O"],"~$invoke-arg-type-validators",["^ ","^[","~$cljs.analyzer/invoke-arg-type-validators","^6","cljs/analyzer.cljc","^7",4032,"^8",1,"^9",4032,"^:",32,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4032,"^8",6,"^9",4032,"^:",32],"^3N","^45"],"~$*cljs-file*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",50,"^8",16,"^9",50,"^:",27,"^5K",true],"^[","~$cljs.analyzer/*cljs-file*","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^5K",true,"^7",50,"^9",50,"^3N","^46"],"~$CLJS_CORE_MACROS_SYM",["^ ","^[","~$cljs.analyzer/CLJS_CORE_MACROS_SYM","^6","cljs/analyzer.cljc","^7",244,"^8",4,"^9",244,"^:",29,"^5",["^ ","^6","cljs/analyzer.cljc","^7",244,"^8",9,"^9",244,"^:",29],"^3N","^57"],"~$*file-defs*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",64,"^8",16,"^9",64,"^:",27,"^5K",true],"^[","~$cljs.analyzer/*file-defs*","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^5K",true,"^7",64,"^9",64,"^3N","^46"],"~$infer-if",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1391,"^8",7,"^9",1391,"^:",15,"^3L",["^1K",["^3M",["^1K",[["^1@","~$e"]]]]]],"^[","~$cljs.analyzer/infer-if","^6","cljs/analyzer.cljc","^:",15,"^3Q",["^1K",[["^1@","~$e"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1391,"^3U",["^W",[null,"^4<","^44","^57"]],"^9",1391,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$e"]]]]]],"~$topo-sort",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",279,"^8",10,"^9",279,"^:",19,"^3L",["^1K",["^3M",["^1K",[["~$x","~$get-deps"],["~$x","~$depth","~$state","~$memo-get-deps"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["~$x","^@8"],["~$x","^@9","^@:","^@;"]]],"^3L",["^1K",[["~$x","^@8"],["~$x","^@9","^@:","^@;"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/topo-sort","^6","cljs/analyzer.cljc","^:",19,"^40",["^ ","^3T",false,"^41",4,"^3V",4,"^3Q",["^1K",[["~$x","^@8"],["~$x","^@9","^@:","^@;"]]],"^3L",["^1K",[["~$x","^@8"],["~$x","^@9","^@:","^@;"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["~$x","^@8"],["~$x","^@9","^@:","^@;"]]],"^3R",null,"^41",4,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",4,"^3T",false,"^3N",["^W",["^4T","^46"]]]],"^7",279,"^9",279,"^3V",4,"^3W",true,"^3L",["^1K",[["~$x","^@8"],["~$x","^@9","^@:","^@;"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$*verbose*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",124,"^8",16,"^9",124,"^:",25,"^5K",true],"^[","~$cljs.analyzer/*verbose*","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^5K",true,"^7",124,"^9",124,"^3N","^3O"],"~$analyze-js-value",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3907,"^8",7,"^9",3907,"^:",23,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-js-value","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3907,"^3U","^45","^9",3907,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$ns->module-type",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1054,"^8",7,"^9",1054,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^1L"]]]]]],"^[","~$cljs.analyzer/ns->module-type","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^1L"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1054,"^3U",["^W",["~$cljs.core/Keyword","^46"]],"^9",1054,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L"]]]]]],"~$source-info",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",701,"^8",7,"^9",701,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^1@"],["^5C","^1@"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^1@"],["^5C","^1@"]]],"^3L",["^1K",[["^1@"],["^5C","^1@"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/source-info","^6","cljs/analyzer.cljc","^:",18,"^40",["^ ","^3T",false,"^41",2,"^3V",2,"^3Q",["^1K",[["^1@"],["^5C","^1@"]]],"^3L",["^1K",[["^1@"],["^5C","^1@"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@"],["^5C","^1@"]]],"^3R",null,"^41",2,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",1,"^3T",false,"^3N",["^W",["^44","^46"]]],["^ ","^41",2,"^3T",false,"^3N",["^W",["^44","^45","^46"]]]],"^7",701,"^9",701,"^3V",2,"^3W",true,"^3L",["^1K",[["^1@"],["^5C","^1@"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$analyze-fn-method-param",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1987,"^8",7,"^9",1987,"^:",30,"^3L",["^1K",["^3M",["^1K",[["^1@"]]]]]],"^[","~$cljs.analyzer/analyze-fn-method-param","^6","cljs/analyzer.cljc","^:",30,"^3Q",["^1K",[["^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1987,"^3U","^;V","^9",1987,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@"]]]]]],"~$repl-self-require?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3984,"^8",8,"^9",3984,"^:",26,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^9R"]]]]]],"^4V",true,"^[","~$cljs.analyzer/repl-self-require?","^6","cljs/analyzer.cljc","^:",26,"^3Q",["^1K",[["^1@","^9R"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3984,"^3U",["^W",["^44","^46"]],"^9",3984,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^9R"]]]]]],"~$analyze-set",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3901,"^8",7,"^9",3901,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"^[","~$cljs.analyzer/analyze-set","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^1@","^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3901,"^3U","^44","^9",3901,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G"]]]]]],"~$numeric-type?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3427,"^8",7,"^9",3427,"^:",20,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/numeric-type?","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["~$t"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3427,"^3U","^3O","^9",3427,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$t"]]]]]],"~$munge-path",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",267,"^8",10,"^9",267,"^:",20,"^3L",["^1K",["^3M",["^1K",[["~$ss"]]]]]],"^[","~$cljs.analyzer/munge-path","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^@O"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^7",267,"^3U",["^W",["^44","~$js","^1A","^57"]],"^9",267,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^@O"]]]]]],"~$ast?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",294,"^8",7,"^9",294,"^:",11,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/ast?","^6","cljs/analyzer.cljc","^:",11,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",294,"^3U","^3O","^9",294,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$checked-arrays",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",171,"^8",7,"^9",171,"^:",21,"^3L",["^1K",["^3M",["^1K",[[]]]]],"^4R","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"^[","~$cljs.analyzer/checked-arrays","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[[]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",171,"^3U",["^W",["^3O","^46"]],"^9",171,"^3V",0,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[]]]]],"^4R","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"~$elide-env",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1763,"^8",7,"^9",1763,"^:",16,"^3L",["^1K",["^3M",["^1K",[["^1@","^7U","^5D"]]]]]],"^[","~$cljs.analyzer/elide-env","^6","cljs/analyzer.cljc","^:",16,"^3Q",["^1K",[["^1@","^7U","^5D"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1763,"^3U",["^W",["^4<","^46"]],"^9",1763,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^7U","^5D"]]]]]],"~$identity-counter",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",71,"^8",16,"^9",71,"^:",32,"^4V",true],"^4V",true,"^[","~$cljs.analyzer/identity-counter","^6","cljs/analyzer.cljc","^:",32,"^8",1,"^7",71,"^9",71,"^3N","^?O"],"~$js-module-exists?*",["^ ","^[","~$cljs.analyzer/js-module-exists?*","^6","cljs/analyzer.cljc","^7",813,"^8",1,"^9",813,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",813,"^8",6,"^9",813,"^:",24],"^3N","^;V"],"~$parse-require-spec",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2788,"^8",7,"^9",2788,"^:",25,"^3L",["^1K",["^3M",["^1K",[["^1@","^9H","^9R","~$aliases","^9I"]]]]]],"^[","~$cljs.analyzer/parse-require-spec","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^1@","^9H","^9R","^A1","^9I"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2788,"^3U",["^W",["^44","^46"]],"^9",2788,"^3V",5,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^9H","^9R","^A1","^9I"]]]]]],"~$analyze-wrap-meta",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3960,"^8",7,"^9",3960,"^:",24,"^3L",["^1K",["^3M",["^1K",[["^8V"]]]]]],"^[","~$cljs.analyzer/analyze-wrap-meta","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["^8V"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3960,"^3U",["^W",[null,"^45"]],"^9",3960,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^8V"]]]]]],"~$ANY_SYM",["^ ","^[","~$cljs.analyzer/ANY_SYM","^6","cljs/analyzer.cljc","^7",248,"^8",1,"^9",248,"^:",13,"^5",["^ ","^6","cljs/analyzer.cljc","^7",248,"^8",6,"^9",248,"^:",13],"^3N","^57"],"~$property-symbol?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3266,"^8",16,"^9",3266,"^:",32,"^4V",true],"^4V",true,"^[","~$cljs.analyzer/property-symbol?","^6","cljs/analyzer.cljc","^:",32,"^3Q",["^1K",[["~$p1__76499#"]]],"^3R",null,"^3S",["^1K",[]],"^8",1,"^3T",false,"^7",3266,"^3U","^3O","^9",3266,"^3V",1,"^3W",true,"^3L",null],"~$cljs-seq?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",251,"^8",19,"^9",251,"^:",28,"^3N","^3O","^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-seq?","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^7",251,"^3U","^3O","^9",251,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$get-js-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3396,"^8",7,"^9",3396,"^:",17,"^3L",["^1K",["^3M",["^1K",[["^4G"]]]]]],"^[","~$cljs.analyzer/get-js-tag","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^4G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3396,"^3U",["^W",["^44","^57","^46"]],"^9",3396,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4G"]]]]]],"~$parse",["^ ","^[","~$cljs.analyzer/parse","^6","cljs/analyzer.cljc","^7",1464,"^8",1,"^9",1464,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1464,"^8",11,"^9",1464,"^:",16],"^3N","^49"],"~$*analyze-deps*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",58,"^8",16,"^9",58,"^:",30,"^5K",true],"^[","~$cljs.analyzer/*analyze-deps*","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^5K",true,"^7",58,"^9",58,"^3N","^3O"],"~$analyze-let-bindings*",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2254,"^8",7,"^9",2254,"^:",28,"^3L",["^1K",["^3M",["^1K",[["^4D","^4E","^5B"]]]]]],"^[","~$cljs.analyzer/analyze-let-bindings*","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["^4D","^4E","^5B"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2254,"^3U","^54","^9",2254,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4D","^4E","^5B"]]]]]],"~$analysis-error?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",755,"^8",7,"^9",755,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^>0"]]]]],"^3N","^3O"],"^[","~$cljs.analyzer/analysis-error?","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^>0"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",755,"^3U","^3O","^9",755,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^>0"]]]]]],"~$replace-env-pass",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1766,"^8",7,"^9",1766,"^:",23,"^3L",["^1K",["^3M",["^1K",[["~$new-env"]]]]]],"^[","~$cljs.analyzer/replace-env-pass","^6","cljs/analyzer.cljc","^:",23,"^3Q",["^1K",[["^AG"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1766,"^3U","^;V","^9",1766,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^AG"]]]]]],"~$valid-arity?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3550,"^8",8,"^9",3550,"^:",20,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["~$argc","~$method-params"]]]]],"^3N","^3O"],"^4V",true,"^[","~$cljs.analyzer/valid-arity?","^6","cljs/analyzer.cljc","^:",20,"^3Q",["^1K",[["^AJ","^AK"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3550,"^3U","^3O","^9",3550,"^3V",2,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^AJ","^AK"]]]]]],"~$parse-ns-excludes",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2714,"^8",7,"^9",2714,"^:",24,"^3L",["^1K",["^3M",["^1K",[["^1@","^4Q"]]]]]],"^[","~$cljs.analyzer/parse-ns-excludes","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["^1@","^4Q"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2714,"^3U",["^W",[null,"^44"]],"^9",2714,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4Q"]]]]]],"~$analyze-fn-methods-pass2",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2079,"^8",7,"^9",2079,"^:",31,"^3L",["^1K",["^3M",["^1K",[["^<;","^5R","^5S","^<<"]]]]]],"^[","~$cljs.analyzer/analyze-fn-methods-pass2","^6","cljs/analyzer.cljc","^:",31,"^3Q",["^1K",[["^<;","^5R","^5S","^<<"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2079,"^3U","^4<","^9",2079,"^3V",4,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^<;","^5R","^5S","^<<"]]]]]],"~$core-name?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",892,"^8",7,"^9",892,"^:",17,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Is sym visible from core in the current compilation namespace?","^3N","^3O"],"^[","~$cljs.analyzer/core-name?","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",892,"^3U","^3O","^9",892,"^3V",2,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]],"^4R","Is sym visible from core in the current compilation namespace?"],"~$get-let-tag",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2247,"^8",7,"^9",2247,"^:",18,"^3L",["^1K",["^3M",["^1K",[["^5C","~$init-expr"]]]]]],"^[","~$cljs.analyzer/get-let-tag","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^5C","^AT"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2247,"^3U","^44","^9",2247,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5C","^AT"]]]]]],"~$specials",["^ ","^[","~$cljs.analyzer/specials","^6","cljs/analyzer.cljc","^7",1321,"^8",1,"^9",1321,"^:",14,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1321,"^8",6,"^9",1321,"^:",14],"^3N","^5>"],"~$elide-irrelevant-meta",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3957,"^8",7,"^9",3957,"^:",28,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"^[","~$cljs.analyzer/elide-irrelevant-meta","^6","cljs/analyzer.cljc","^:",28,"^3Q",["^1K",[["~$m"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3957,"^3U",["^W",["^4<","^46"]],"^9",3957,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$m"]]]]]],"~$resolve-macro-ns-alias",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",870,"^8",7,"^9",870,"^:",29,"^3L",["^1K",["^3M",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3L",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/resolve-macro-ns-alias","^6","cljs/analyzer.cljc","^:",29,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3L",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N",["^W",[null,"^44"]]]],"^7",870,"^9",870,"^3V",3,"^3W",true,"^3L",["^1K",[["^1@","^5C"],["^1@","^5C","^>M"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$unsorted-map?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3524,"^8",8,"^9",3524,"^:",21,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^4V",true,"^[","~$cljs.analyzer/unsorted-map?","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3524,"^3U","^3O","^9",3524,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$check-invoke-arg-types",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4044,"^8",7,"^9",4044,"^:",29,"^3L",["^1K",["^3M",["^1K",[["^1@",["^ ","^78",["^5B"],"^1P","^7U"],"^5D"]]]]]],"^[","~$cljs.analyzer/check-invoke-arg-types","^6","cljs/analyzer.cljc","^:",29,"^3Q",["^1K",[["^1@","~$p__77052","^5D"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",4044,"^3U",["^W",["^4<","^44","^5M","^46"]],"^9",4044,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@",["^ ","^78",["^5B"],"^1P","^7U"],"^5D"]]]]]],"~$check-duplicate-aliases",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3109,"^8",8,"^9",3109,"^:",31,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^1@","~$old","~$new"]]]]]],"^4V",true,"^[","~$cljs.analyzer/check-duplicate-aliases","^6","cljs/analyzer.cljc","^:",31,"^3Q",["^1K",[["^1@","^B6","^B7"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3109,"^3U","^46","^9",3109,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^B6","^B7"]]]]]],"~$confirm-ns",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",877,"^8",7,"^9",877,"^:",17,"^3L",["^1K",["^3M",["^1K",[["^1@","^=C"]]]]],"^4R","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"^[","~$cljs.analyzer/confirm-ns","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^1@","^=C"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",877,"^3U","^46","^9",877,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^=C"]]]]],"^4R","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"~$default-namespaces",["^ ","^[","~$cljs.analyzer/default-namespaces","^6","cljs/analyzer.cljc","^7",580,"^8",1,"^9",580,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",580,"^8",6,"^9",580,"^:",24],"^3N","^45"],"~$CLJS_CORE_SYM",["^ ","^[","~$cljs.analyzer/CLJS_CORE_SYM","^6","cljs/analyzer.cljc","^7",241,"^8",4,"^9",241,"^:",22,"^5",["^ ","^6","cljs/analyzer.cljc","^7",241,"^8",9,"^9",241,"^:",22],"^3N","^57"],"~$earmuffed?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1793,"^8",8,"^9",1793,"^:",18,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"^4V",true,"^[","~$cljs.analyzer/earmuffed?","^6","cljs/analyzer.cljc","^:",18,"^3Q",["^1K",[["^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1793,"^3U","^3O","^9",1793,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4>"]]]]]],"~$accumulating-warning-handler",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",725,"^8",8,"^9",725,"^:",36,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^4W"]]]]]],"^4V",true,"^[","~$cljs.analyzer/accumulating-warning-handler","^6","cljs/analyzer.cljc","^:",36,"^3Q",["^1K",[["^4W"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",725,"^3U","^;V","^9",725,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^4W"]]]]]],"~$canonicalize-specs",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2917,"^8",7,"^9",2917,"^:",25,"^3L",["^1K",["^3M",["^1K",[["^<G"]]]]]],"^[","~$cljs.analyzer/canonicalize-specs","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^<G"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",2917,"^9",2917,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^<G"]]]]]],"~$build-method-call",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3293,"^8",8,"^9",3293,"^:",25,"^4V",true,"^3L",["^1K",["^3M",["^1K",[["^50","~$meth","^4Q"]]]]],"^4R","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"^4V",true,"^[","~$cljs.analyzer/build-method-call","^6","cljs/analyzer.cljc","^:",25,"^3Q",["^1K",[["^50","^BF","^4Q"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",3293,"^3U","^45","^9",3293,"^3V",3,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^50","^BF","^4Q"]]]]],"^4R","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"~$confirm-var-exists-throw",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",857,"^8",7,"^9",857,"^:",31,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"^[","~$cljs.analyzer/confirm-var-exists-throw","^6","cljs/analyzer.cljc","^:",31,"^3Q",["^1K",[[]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",857,"^3U","^;V","^9",857,"^3V",0,"^3W",true,"^3L",["^1K",["^3M",["^1K",[[]]]]]],"~$js-module-exists?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",815,"^8",7,"^9",815,"^:",24,"^3L",["^1K",["^3M",["^1K",[["^5["]]]]]],"^[","~$cljs.analyzer/js-module-exists?","^6","cljs/analyzer.cljc","^:",24,"^3Q",["^1K",[["^5["]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",815,"^3U","^44","^9",815,"^3V",1,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^5["]]]]]],"~$analyze-form",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4081,"^8",10,"^9",4081,"^:",22,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^5C","^5D"]]]]]],"^[","~$cljs.analyzer/analyze-form","^6","cljs/analyzer.cljc","^:",22,"^3Q",["^1K",[["^1@","^4G","^5C","^5D"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^7",4081,"^3U",["^W",["^4<","^44","^45","^46"]],"^9",4081,"^3V",4,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4G","^5C","^5D"]]]]]],"~$var-ast",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1491,"^8",7,"^9",1491,"^:",14,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]]],"^[","~$cljs.analyzer/var-ast","^6","cljs/analyzer.cljc","^:",14,"^3Q",["^1K",[["^1@","^4>"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1491,"^9",1491,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1@","^4>"]]]]]],"~$add-consts",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4133,"^8",7,"^9",4133,"^:",17,"^3L",["^1K",["^3M",["^1K",[["~$compiler-state","~$constants-map"]]]]],"^4R","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"^[","~$cljs.analyzer/add-consts","^6","cljs/analyzer.cljc","^:",17,"^3Q",["^1K",[["^BQ","^BR"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",4133,"^3U",["^W",[null,"^44"]],"^9",4133,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^BQ","^BR"]]]]],"^4R","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"~$error",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",747,"^8",7,"^9",747,"^:",12,"^3L",["^1K",["^3M",["^1K",[["^1@","^98"],["^1@","^98","~$cause"]]]]],"^3[",["^1K",["@param {...*} var_args"]],"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^98"],["^1@","^98","^BU"]]],"^3L",["^1K",[["^1@","^98"],["^1@","^98","^BU"]]],"^3S",["^1K",[null,null]]]],"^[","~$cljs.analyzer/error","^6","cljs/analyzer.cljc","^:",12,"^40",["^ ","^3T",false,"^41",3,"^3V",3,"^3Q",["^1K",[["^1@","^98"],["^1@","^98","^BU"]]],"^3L",["^1K",[["^1@","^98"],["^1@","^98","^BU"]]],"^3S",["^1K",[null,null]]],"^3Q",["^1K",[["^1@","^98"],["^1@","^98","^BU"]]],"^3R",null,"^41",3,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^43",[["^ ","^41",2,"^3T",false,"^3N","^44"],["^ ","^41",3,"^3T",false,"^3N","^9;"]],"^7",747,"^9",747,"^3V",3,"^3W",true,"^3L",["^1K",[["^1@","^98"],["^1@","^98","^BU"]]],"^3[",["^1K",["@param {...*} var_args"]]],"~$invokeable-ns?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1111,"^8",7,"^9",1111,"^:",21,"^3L",["^1K",["^3M",["^1K",[["^1L","^1@"]]]]],"^4R","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"^[","~$cljs.analyzer/invokeable-ns?","^6","cljs/analyzer.cljc","^:",21,"^3Q",["^1K",[["^1L","^1@"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",1,"^3T",false,"^7",1111,"^3U",["^W",["^3O","^44"]],"^9",1111,"^3V",2,"^3W",true,"^3L",["^1K",["^3M",["^1K",[["^1L","^1@"]]]]],"^4R","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"~$cljs-vector?",["^ ","^3K",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",259,"^8",19,"^9",259,"^:",31,"^3N","^3O","^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-vector?","^6","cljs/analyzer.cljc","^:",31,"^3Q",["^1K",[["~$x"]]],"^3R",null,"^3S",["^1K",[null,null]],"^8",4,"^3T",false,"^7",259,"^3U","^3O","^9",259,"^3V",1,"^3N","^3O","^3W",true,"^3L",["^1K",["^3M",["^1K",[["~$x"]]]]]],"~$*cljs-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",49,"^8",16,"^9",49,"^:",25,"^5K",true],"^[","~$cljs.analyzer/*cljs-ns*","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^5K",true,"^7",49,"^9",49,"^3N","^57"]],"^1H",["^ ","^N","^N","^U","^U","^C","^C","^1C","^1C","^1D","^1C"],"~:cljs.analyzer/constants",["^ ","^1F",["^W",["~$cljs.core/array?","~:args","~$cljs.core/IRecord","~:invoke-ctor","~$&","~$seq","~:ns*","^3","~$console","^4","~$case*","~:extending-base-js-type","~:case-then","~$Window","~:cljs.analyzer/namespaces","~:tags","~:unsupported-preprocess-value","~$defrecord*","~:argc","~:finally","~:statement","~$cljs.spec.alpha$macros","~$js/Function","~$cljs.core/boolean?","~:suffix","~$cljs.core/char?","~$cljs.core/PersistentHashMap","~:deftype","~$try","~$checked-aget'","~:fns","~$Object","~:defined","~:ret","~$cljs.core/sequential?","~$cljs.core/checked-aset'","~:redef","~:fexpr","~:children","~:fdef-ns","^1N","~$js/RegExp","~$cljs.core/when","~$cljs.core/keyword?","~:ctor","~$aget","~:recurs","~:body?","~:identity","^1","~:fname","^4<","^3O","~:js-shadowed-by-local","^54","~$location","~:let","^3K","~$cljs.core/Reduced","^84","~:unsupported-js-module-type","^:W","~:goog","~:only","~:invalid-protocol-symbol","~:done","~:group","^5","~:ev","~$cljs.core$macros","~:host-field","~:frame","^;2","~$Symbol","~:valid?","~:externs","~$cljs.core/checked-aget'","~:fn-scope","~:do","~:private-var-access","~$String","~$registry-ref","~:macros-ns","~:macro-syntax-check","~$cljs.core/var?","~:pmasks","~:init","~:cljs.analyzer/property","~:numeric","^4V","~:exprs","~:else","~:protocol-duped-method","~:protocol-symbol","~:cblocks","~:clojure.error/phase","^44","~$floats","~:protocol","~:cljs.analyzer/symbol","~$*warn-on-infer*","~:cljs.analyzer/externs","~$ns*","~$checked-aset'","~:if","~:fn-method","~$escape","~:global","~$cljs.core/Volatile","^L","^V","~:macros","~:locals","~:tests","~:js-globals","~:return","~$finally","^@C","~:method","~:use","~:segs","~$Function","~:default","~:repl-env","^;N","^18","~:cljs.analyzer/call","~:new","~$loop*","~:property","~:case-test","^;O","~$cljs.core/map-entry?","^12","~:bindings","~:warn","~:global-exports","~:def-emits-var","^[","~:munged-namespace","~:binding-form?","~$cljs.core/double?","^1P","~$cljs.core/Object","~$cljs.core/string?","~$Array","~$cljs.core/Delay","~$*unchecked-arrays*","~:flag","~:loop-lets","~:clojure.error/symbol","~:unchecked","~$cljs.core.constants","^C","^6","~:fields","~:spec-skip-macros","^@Q","^5>","~:undeclared-macros-ns","~$long","~$double","^:","~:single-segment-namespace","~$cljs.core/Var","~$__hash","~:start","~$screen","~:inferred-ret-tag","~:fn-arity","^40","~$cljs.core/Inst","^1G","~:params","~:warning-type","~:macro-present?","^1<","~:dblock","~:js-module-index","~:fn-self-name","~$js/Boolean","~:val","~:advanced","~$longs","~:compile-syntax-check","~:recur","~:field","~:with-meta","^;S","~$.-cljs$lang$test","^2D","~$js/String","~$do","~$__meta","~:const-expr","~$-speced-vars","~:state","^3Q","~:rename","~$number","~$objects","~:vals","~:js-dependency-index","~:ns-name","^3R","^41","^11","~:current-symbol","^1Y","~:js-provide","~:env","~:cljs.analyzer/type","~:letfn","~:node","~:infer-warning","~:vector","~:variadic-max-arity","~$cljs.core/inst?","~$letfn*","~:export","~:cljs.analyzer/analyzed","~:protocol-with-variadic-method","~$if","^3S","^13","~:cljs.analyzer/protocol-inline","~$global","~:cljs.analyzer/constant-table","^B7","~:fn-deprecated","~$cljs.core/float?","^1L","^99","~:literal?","~:sym","^;T","~:no-op","~:catches","~:prefix","^8","~$unquote","~:types","~:cljs.analyzer/protocol-impl","~:loop","~:dot-action","~:undeclared-var","~$cljs.core/true?","~:internal-ctor","~:module-type","~:case-node","~$cljs.core/List","~:root-source-info","~$cljs.core/let","~$process","~:declared-arglists-mismatch","~:cljs.analyzer/expr","~:include-macros","~$cljs.core/checked-aget","~$cljs.core/number?","~:clojure.error/column","^14","~:preamble-missing","~:clojure.error/line","~$cljs.core/volatile?","~:binding","~$cljs.core/ns-special-form","~$require","~$cljs.core/cond","^3T","~:unsynchronized-mutable","~$cljs.core/integer?","~:const","~:js-fn-var","~:cljs.analyzer/access","^78","~$deftype*","~$let*","~$js/Array","~$cljs.core/infinite?","~:set!","^43","~$not-native","~$js*","~$cljs.core/undefined?","~$cljs.core/ISeqable","~:undeclared-protocol-symbol","~$alert","~:build-options","~:nodes","~:cljs.spec/speced-vars","^1F","~:js-array","^5K","~:clojure.error/source","^7","~:expr","~$Boolean","~:arg","~:list","~:var","~$history","~$fn*","~:cljs/analysis-error","~:protocol-info","~:quote","~$recur","~:macro","~$cljs.core/IMapEntry","~:invalid-array-access","~:unprovided","~:deprecation-nowarn","~$Math","~:ns-var-clash","~$cljs.core/uuid?","~:deprecated","^1I","~:case","~:undeclared-ns","~$cljs.core/record?","~:class","~:preprocess","~:catch","~:arg-id","~:recur-frames","~$window","^;U","~$array","^3I","~$cljs.core/reduced?","~$cljs.core/tagged-literal?","~$cljs.core/nil?","~:cljs.spec/registry-ref","^1A","~:non-dynamic-earmuffed-var","~:quoted?","~:declared","~$cljs.core/zero?","~$cljs.core/false?","~:cljs.analyzer/not-found","~:defrecord","~:lib","^5[","~$cljs.core/list?","~:info","~:code","^3U","~:cljs.analyzer/error","^;V","~:then","~$ignore","~:js-object","~:def-var","^9","~:cljs.analyzer/no-resolve","~:js-op","~$exports","~:var-ast","~:context","~$Number","~:invoke","~:throw","~:reload","~:undeclared-ns-form","~$doubles","~:order","~:no-such-method","^1M","~:error","~$document","~$checked-aset","~:def","~:reload-all","^1H","^?G","~:exception","^3V","~:t","~:options","~$set!","^1J","~:missing","^3N","~:invalid-arithmetic","^20","~:protocol-deprecated","~:target","~$cljs.repl","~$.","^4M","~:mutable","~:reloads","~$cljs.core/ITaggedLiteral","~$cljs.core/seqable?","~$aset","^3M","^C1","~:try","^57","~$cljs.core/symbol?","~:set","~:items","~$prototype","~$chars","^3W","~:js-var","^3L","~:protocol-impl-recur-with-target","~:volatile-mutable","~:import","~$macroexpand-check","~$ints","~:impls","~:hierarchy","~$catch","~:shadow","~$js/Object","~:body","~:host-call","~:ns-sym","~:macroexpansion","^4R","^?","~:overload-arity","~:speced-vars","~:local","~:closure-lib","~:cljs.analyzer/numeric","^2:","~$cljs.core/seq?","~$cljs.core/IChunkedSeq","~:protocol-multiple-impls","~$navigator","^3[","~$js/Number","~$cljs.core/ISequential","~$cljs.core/delay?","~:redef-in-file","~:clj","~$constructor","~:protocol-invalid-method","~:invalid-arity","~$cljs.core/regexp?","^1[","~:extend-type-invalid-method-shape","~:the-var","~:suggested-symbol","~:map","~$cljs.core/IUUID","~$__extmap","~:cljs.analyzer/list","~:object","~:test","~:foreign","~:multiple-variadic-overloads","~:warn-type","~$checked-aget","~$shorts","~$*unchecked-if*","~$throw","~:forms","~:fblock","^45","~:dep-path","^46","~:registry-ref","~$cljs.core/instance?","^1S","~$cljs.core/checked-aset","^1O","~:statements","~$def","~:compilation","~$cljs.core/ident?","~:refer-macros","~$cljs.user","~$cljs.core/chunked-seq?","~$unescape","~:protocol-impl-with-variadic-method","~$bytes"]],"^IY",["^KW","^KN","^EZ","^D2","^C5","^C:","^C?","^CS","^D4","^D8","^D;","^DH","^DT","^EN","^F4","^F:","^G1","^G3","^G8","^G=","^GI","^GR","^GX","^HA","^5K","^HU","^HV","^HY","^I1","^I>","^IW","^J8","^J9","^3W","^JH","^JV","^K1","^K6","^K9","^K<","^KF","^KZ","^FD","^J5","^46","^FR","^1A","^3O","^H>","~~~:t~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^25",[["^L2","~:static-fns"],true,["^L2","~:elide-asserts"],true,["^L2","~:optimize-constants"],null,["^L2","^1X"],null,["^L2","~:external-config"],null,["^L2","~:tooling-config"],null,["^L2","~:emit-constants"],null,["^L2","~:load-tests"],false,["^L2","~:form-size-threshold"],null,["^L2","~:infer-externs"],true,["^L2","^1Z"],null,["~:js-options","~:js-provider"],"^JP",["~:mode"],"~:release",["^L2","~:fn-invoke-direct"],null,["^L2","~:source-map"],"/dev/null"]]]