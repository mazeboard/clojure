["^ ","~:output",["^ ","~:js","goog.provide('taoensso.timbre.appenders.core');\n/**\n * Returns a simple `println` appender for Clojure/Script.\n *   Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n * \n *   :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}.\n * @param {...*} var_args\n */\ntaoensso.timbre.appenders.core.println_appender = (function taoensso$timbre$appenders$core$println_appender(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___73068 = arguments.length;\nvar i__4731__auto___73069 = (0);\nwhile(true){\nif((i__4731__auto___73069 < len__4730__auto___73068)){\nargs__4736__auto__.push((arguments[i__4731__auto___73069]));\n\nvar G__73070 = (i__4731__auto___73069 + (1));\ni__4731__auto___73069 = G__73070;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ntaoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic = (function (p__73021){\nvar vec__73022 = p__73021;\nvar _opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73022,(0),null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"enabled?\",\"enabled?\",-1376075057),true,new cljs.core.Keyword(null,\"async?\",\"async?\",1523057758),false,new cljs.core.Keyword(null,\"min-level\",\"min-level\",1634684919),null,new cljs.core.Keyword(null,\"rate-limit\",\"rate-limit\",1748082022),null,new cljs.core.Keyword(null,\"output-fn\",\"output-fn\",1600951539),new cljs.core.Keyword(null,\"inherit\",\"inherit\",-1840815422),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),((function (vec__73022,_opts){\nreturn (function (data){\nvar map__73026 = data;\nvar map__73026__$1 = (((((!((map__73026 == null))))?(((((map__73026.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__73026.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__73026):map__73026);\nvar output_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__73026__$1,new cljs.core.Keyword(null,\"output_\",\"output_\",-36797880));\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.force(output_)], 0));\n});})(vec__73022,_opts))\n], null);\n});\n\ntaoensso.timbre.appenders.core.println_appender.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ntaoensso.timbre.appenders.core.println_appender.cljs$lang$applyTo = (function (seq73016){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq73016));\n});\n\n/**\n * Returns a simple js/console appender for ClojureScript.\n * \n *   For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n *  `/taoensso/timbre/appenders/core\\.js$`\n *  `/taoensso/timbre\\.js$`\n *  `/cljs/core\\.js$`\n * \n *   [1] Ref. https://goo.gl/ZejSvR\n * @param {...*} var_args\n */\ntaoensso.timbre.appenders.core.console_appender = (function taoensso$timbre$appenders$core$console_appender(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___73071 = arguments.length;\nvar i__4731__auto___73072 = (0);\nwhile(true){\nif((i__4731__auto___73072 < len__4730__auto___73071)){\nargs__4736__auto__.push((arguments[i__4731__auto___73072]));\n\nvar G__73073 = (i__4731__auto___73072 + (1));\ni__4731__auto___73072 = G__73073;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn taoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ntaoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic = (function (p__73045){\nvar vec__73046 = p__73045;\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__73046,(0),null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"enabled?\",\"enabled?\",-1376075057),true,new cljs.core.Keyword(null,\"async?\",\"async?\",1523057758),false,new cljs.core.Keyword(null,\"min-level\",\"min-level\",1634684919),null,new cljs.core.Keyword(null,\"rate-limit\",\"rate-limit\",1748082022),null,new cljs.core.Keyword(null,\"output-fn\",\"output-fn\",1600951539),new cljs.core.Keyword(null,\"inherit\",\"inherit\",-1840815422),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),(((typeof console !== 'undefined'))?(function (){var level__GT_logger = ((function (vec__73046,opts){\nreturn (function (level){\nvar or__4131__auto__ = (function (){var G__73056 = level;\nvar G__73056__$1 = (((G__73056 instanceof cljs.core.Keyword))?G__73056.fqn:null);\nswitch (G__73056__$1) {\ncase \"trace\":\nreturn console.trace;\n\nbreak;\ncase \"debug\":\nreturn console.debug;\n\nbreak;\ncase \"info\":\nreturn console.info;\n\nbreak;\ncase \"warn\":\nreturn console.warn;\n\nbreak;\ncase \"error\":\nreturn console.error;\n\nbreak;\ncase \"fatal\":\nreturn console.error;\n\nbreak;\ncase \"report\":\nreturn console.info;\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__73056__$1)].join('')));\n\n}\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn console.log;\n}\n});})(vec__73046,opts))\n;\nreturn ((function (level__GT_logger,vec__73046,opts){\nreturn (function (data){\nvar temp__5753__auto__ = level__GT_logger(new cljs.core.Keyword(null,\"level\",\"level\",1290497552).cljs$core$IFn$_invoke$arity$1(data));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar logger = temp__5753__auto__;\nif(cljs.core.truth_((function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"raw-console?\",\"raw-console?\",-2061489061).cljs$core$IFn$_invoke$arity$1(data);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(data,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"?meta\",\"?meta\",-793560773),new cljs.core.Keyword(null,\"raw-console?\",\"raw-console?\",-2061489061)], null));\n}\n})())){\nvar output = (function (){var G__73059 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(data,new cljs.core.Keyword(null,\"msg_\",\"msg_\",-1925147000),\"\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"?err\",\"?err\",549653299),null], 0));\nvar fexpr__73058 = new cljs.core.Keyword(null,\"output-fn\",\"output-fn\",1600951539).cljs$core$IFn$_invoke$arity$1(data);\nreturn (fexpr__73058.cljs$core$IFn$_invoke$arity$1 ? fexpr__73058.cljs$core$IFn$_invoke$arity$1(G__73059) : fexpr__73058.call(null,G__73059));\n})();\nvar args = (function (){var vargs = new cljs.core.Keyword(null,\"vargs\",\"vargs\",-966597273).cljs$core$IFn$_invoke$arity$1(data);\nvar temp__5751__auto__ = new cljs.core.Keyword(null,\"?err\",\"?err\",549653299).cljs$core$IFn$_invoke$arity$1(data);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar err = temp__5751__auto__;\nreturn cljs.core.cons(output,cljs.core.cons(err,vargs));\n} else {\nreturn cljs.core.cons(output,vargs);\n}\n})();\nreturn logger.apply(console,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));\n} else {\nreturn logger.call(console,cljs.core.force(new cljs.core.Keyword(null,\"output_\",\"output_\",-36797880).cljs$core$IFn$_invoke$arity$1(data)));\n}\n} else {\nreturn null;\n}\n});\n;})(level__GT_logger,vec__73046,opts))\n})():((function (vec__73046,opts){\nreturn (function (data){\nreturn null;\n});})(vec__73046,opts))\n)], null);\n});\n\ntaoensso.timbre.appenders.core.console_appender.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ntaoensso.timbre.appenders.core.console_appender.cljs$lang$applyTo = (function (seq73036){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq73036));\n});\n\n/**\n * DEPRECATED\n */\ntaoensso.timbre.appenders.core.console__QMARK_appender = taoensso.timbre.appenders.core.console_appender;\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Core Timbre appenders without any special dependency requirements.\n  These can be aliased into the main Timbre ns for convenience.","~:file","taoensso/timbre/appenders/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",35],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.test","~$cljs.test","~$clojure.core","~$cljs.core","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$have","~$taoensso.encore","~$have?","^P"],"~:excludes",["~#set",[]],"~:name","~$taoensso.timbre.appenders.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^Z","~$str","^Z","^P","^P","~$enc","^P","^E","^E","~$goog","^11"],"~:seen",["^S",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P","^10","^P","^E","^E"],"~:form",["~#list",["~$ns","^U","Core Timbre appenders without any special dependency requirements.\n  These can be aliased into the main Timbre ns for convenience.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^17",["^13",["^Z","~:as","^["],["^P","^19","^10","~:refer-macros",["^O","^Q"]]]]]],"~:flags",["^ ","^13",["^S",[]]],"~:js-deps",["^ "],"~:deps",["^11","^E","^Z","^P"]],"^W","^U","~:resource-id",["~:shadow.build.classpath/resource","taoensso/timbre/appenders/core.cljs"],"~:compiled-at",1630228761086,"~:resource-name","taoensso/timbre/appenders/core.cljs","~:warnings",[],"~:source","(ns taoensso.timbre.appenders.core\n  \"Core Timbre appenders without any special dependency requirements.\n  These can be aliased into the main Timbre ns for convenience.\"\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n       \n           \n                            \n                                                    \n\n        \n  (:require\n   [clojure.string  :as str]\n   [taoensso.encore :as enc :refer-macros [have have?]]))\n\n;; TODO Add a simple official rolling spit appender?\n\n;;;; Println appender (clj & cljs)\n\n                                                     \n                                                      \n                                      \n\n     \n                                     \n                                        \n\n                                                                       \n\n(defn println-appender\n  \"Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}.\"\n\n  ;; Unfortunately no easy way to check if *print-fn* is set. Metadata on the\n  ;; default throwing fn would be nice...\n\n  [&                                                    [_opts]]\n  (let [            \n                          \n                                           \n                                           \n                       ]\n\n    {:enabled?   true\n     :async?     false\n     :min-level  nil\n     :rate-limit nil\n     :output-fn  :inherit\n     :fn\n     (fn [data]\n       (let [{:keys [output_]} data]\n                (println (force output_))\n              \n                     \n                           \n                                                       \n                             \n                             \n                         \n\n                                  \n                                                    \n                                                      ))}))\n\n(comment (println-appender))\n\n;;;; Spit appender (clj only)\n\n     \n                   \n                                                      \n                            \n                                       \n                              \n                   \n                    \n                  \n                  \n                       \n      \n                  \n                                  \n           \n                                                                \n                                     \n                                             \n                                         \n                                                     \n                                                     \n                                                                  \n\n                                                     \n                                                                       \n\n(comment\n  (spit-appender)\n  (let [f (:fn (spit-appender))]\n    (enc/qb 1000 (f {:output_ \"boo\"}))))\n\n;;;; js/console appender (cljs only)\n\n      \n(defn console-appender\n  \"Returns a simple js/console appender for ClojureScript.\n\n  For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n    `/taoensso/timbre/appenders/core\\\\.js$`\n    `/taoensso/timbre\\\\.js$`\n    `/cljs/core\\\\.js$`\n\n  [1] Ref. https://goo.gl/ZejSvR\"\n\n  ;; TODO Any way of using something like `Function.prototype.bind`\n  ;; (Ref. https://goo.gl/IZzkQB) to get accurate line numbers in all\n  ;; browsers w/o the need for Blackboxing?\n\n  [& [opts]]\n  {:enabled?   true\n   :async?     false\n   :min-level  nil\n   :rate-limit nil\n   :output-fn  :inherit\n   :fn\n   (if (exists? js/console)\n     (let [;; Don't cache this; some libs dynamically replace js/console\n           level->logger\n           (fn [level]\n             (or\n               (case level\n                 :trace  js/console.trace\n                 :debug  js/console.debug\n                 :info   js/console.info\n                 :warn   js/console.warn\n                 :error  js/console.error\n                 :fatal  js/console.error\n                 :report js/console.info)\n               js/console.log))]\n\n       (fn [data]\n         (when-let [logger (level->logger (:level data))]\n\n           (if (or (:raw-console? data)\n                   (get-in data [:?meta :raw-console?])) ; Undocumented\n\n             (let [output\n                   ((:output-fn data)\n                    (assoc data\n                      :msg_  \"\"\n                      :?err nil))\n\n                   args ; (<output> ?<raw-error> <raw-arg1> <raw-arg2> ...)\n                   (let [vargs (:vargs data)]\n                     (if-let [err (:?err data)]\n                       (cons output (cons err vargs))\n                       (cons output           vargs)))]\n\n               (.apply logger js/console (into-array args)))\n             (.call    logger js/console (force (:output_ data)))))))\n\n     (fn [data] nil))})\n\n(comment (console-appender))\n\n;;;; Deprecated\n\n       (def console-?appender \"DEPRECATED\" console-appender)\n\n;;;;;;;;;;;; This file autogenerated from src/taoensso/timbre/appenders/core.cljx\n","~:reader-features",["^S",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","taoensso.timbre.appenders.core/println-appender","p__73021","vec__73022","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq73016","self__4718__auto__","cljs.core/seq","_opts","data","map__73026","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","output_","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","cljs.core/force","taoensso.timbre.appenders.core/console-appender","p__73045","vec__73046","seq73036","opts","js/console","level->logger","level","or__4131__auto__","G__73056","cljs.core/Keyword","js/Error","js/console.trace","js/console.debug","js/console.info","js/console.warn","js/console.error","js/console.log","temp__5753__auto__","logger","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","output","G__73059","fexpr__73058","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","args","vargs","temp__5751__auto__","err","cljs.core/cons","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","taoensso.timbre.appenders.core/console-?appender"]]],"~:cache-keys",["~#cmap",[["^1?","goog/dom/tagname.js"],[1630228359392,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^S",[]],"~:deps-syms",["^11","~$goog.dom.HtmlElement"]]],["^1?","goog/async/freelist.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/labs/useragent/platform.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.labs.userAgent.util","~$goog.string"]]],["^1?","goog/timer/timer.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.Promise","~$goog.events.EventTarget"]]],["^1?","cljs/tools/reader/impl/utils.cljs"],[1630228358603,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^Z","^1R"]]],["^1?","goog/math/math.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.array","~$goog.asserts"]]],["^1?","goog/string/stringformat.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1R"]]],["^1?","goog/events/eventtype.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1?","goog/labs/useragent/browser.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1Q","~$goog.object","~$goog.string.internal"]]],["^1?","goog/array/array.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V"]]],["^1?","goog/useragent/useragent.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1Q","~$goog.reflect","^1R"]]],["^1?","goog/structs/prioritypool.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1?","goog/async/run.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1?","taoensso/encore.cljs"],[1630228119299,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^Z","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^1Y","^1R","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1?","goog/debug/error.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/async/workqueue.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V","~$goog.async.FreeList"]]],["^1?","goog/events/events.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^1W","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1?","goog/promise/resolver.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/events/browserfeature.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1X"]]],["^1?","cljs/tools/reader/edn.cljs"],[1630228358603,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^1R","^2<"]]],["^1?","goog/structs/priorityqueue.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.structs.Heap"]]],["^1?","goog/net/xhrio.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.Timer","^1U","^1V","^2F","^1T","~$goog.json.hybrid","~$goog.log","^2C","^2B","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^1Y","^1R","^2A","~$goog.structs.Map","~$goog.uri.utils","^1X"]]],["^1?","goog/promise/thenable.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/dom/nodetype.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","cljs/tools/reader/impl/inspect.cljs"],[1630228358603,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E"]]],["^1?","cljs/tools/reader.cljs"],[1630228358603,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^2K","^2L","^2M","^2J","^1U","^1R","^2<"]]],["^1?","goog/net/wrapperxmlhttpfactory.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1?","goog/events/eventtarget.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.Disposable","^1V","^2=","~$goog.events.Event","^2H","^2I","^1Y"]]],["^1?","goog/disposable/disposable.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.disposable.IDisposable"]]],["^1?","goog/object/object.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/structs/set.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^2A","~$goog.structs.Collection","^2U"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^1?","goog/math/long.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V","^22"]]],["^1?","goog/events/listener.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.events.ListenableKey"]]],["^1?","goog/events/listenermap.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","~$goog.events.Listener","^1Y"]]],["^1?","goog/events/eventid.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","taoensso/truss.cljs"],[1630228118689,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","~$taoensso.truss.impl"]]],["^1?","goog/string/internal.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/functions/functions.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","taoensso/truss/impl.cljs"],[1630228118689,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^28"]]],["^1?","goog/net/eventtype.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/structs/map.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1?","goog/net/xhriopool.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^2>","~$goog.structs.PriorityPool"]]],["^1?","goog/structs/queue.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U"]]],["^1?","goog/labs/useragent/engine.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1Q","^1R"]]],["^1?","taoensso/timbre/appenders/core.cljs"],[1630228119105,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^Z","^P"]]],["^1?","cljs/reader.cljs"],[1630228118934,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^1Y","^2N","^2:","^2<"]]],["^1?","goog/asserts/asserts.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1?","goog/debug/logbuffer.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V","~$goog.debug.LogRecord"]]],["^1?","goog/uri/uri.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1V","^1R","^2A","^2U","^2V","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1?","goog/net/errorcode.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/disposable/idisposable.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/promise/promise.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","~$goog.Thenable","^1V","^2E","~$goog.async.run","^27","^38","~$goog.promise.Resolver"]]],["^1?","goog/debug/logrecord.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/base.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",[]]],["^1?","goog/json/hybrid.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V","~$goog.json"]]],["^1?","goog/structs/structs.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1Y"]]],["^1?","cljs/tools/reader/impl/errors.cljs"],[1630228358603,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^2K","^Z","~$cljs.tools.reader.impl.inspect"]]],["^1?","clojure/string.cljs"],[1630228118934,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^1R","^2<"]]],["^1?","goog/structs/pool.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^2Y","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1?","goog/net/httpstatus.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/structs/heap.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1Y","~$goog.structs.Node"]]],["^1?","goog/debug/entrypointregistry.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V"]]],["^1?","goog/string/string.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1Z"]]],["^1?","goog/reflect/reflect.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/labs/useragent/util.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1Z"]]],["^1?","goog/debug/debug.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","~$goog.debug.errorcontext","^1X"]]],["^1?","goog/string/stringbuffer.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/debug/errorcontext.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","cljs/tools/reader/reader_types.cljs"],[1630228358603,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^2L","^1R","^2<"]]],["^1?","goog/iter/iter.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1V","~$goog.functions","~$goog.math"]]],["^1?","goog/async/nexttick.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^2F","~$goog.dom.TagName","^3F","^1[","^20"]]],["^1?","goog/debug/logger.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1V","~$goog.debug","~$goog.debug.LogBuffer","^3:"]]],["^1?","goog/events/event.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^2Y","~$goog.events.EventId"]]],["^1?","cljs/tools/reader/impl/commons.cljs"],[1630228358603,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E","^2J","^2K","^2L"]]],["^1?","goog/dom/htmlelement.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","cljs/core.cljs"],[1630228118934,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["~$goog.math.Long","~$goog.math.Integer","^1R","^1Y","^1U","~$goog.Uri","^2<"]]],["^1?","goog/log/log.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^3I","~$goog.debug.LogManager","^3:","~$goog.debug.Logger"]]],["^1?","goog/structs/collection.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/events/browserevent.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^3I","^1W","^2Z","~$goog.events.EventType","^22","^1X"]]],["^1?","goog/math/integer.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/structs/node.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","clojure/set.cljs"],[1630228118934,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^E"]]],["^1?","goog/uri/utils.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1U","^1V","^1R"]]],["^1?","goog/json/json.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]],["^1?","goog/events/listenable.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^3K"]]],["^1?","goog/net/xmlhttpfactory.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^2W"]]],["^1?","goog/net/xmlhttp.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11","^1V","~$goog.net.WrapperXmlHttpFactory","^2X"]]],["^1?","goog/net/xhrlike.js"],[1630228359392,"^1L",["^ ","^1M",null,"^1N",["^S",[]],"^1O",["^11"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/encore/2.94.0/encore-2.94.0.jar!/taoensso/encore.clj",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/edn.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Core Timbre appenders without any special dependency requirements.\n  These can be aliased into the main Timbre ns for convenience.","^8","taoensso/timbre/appenders/core.cljs","^9",1,"^:",5,"^;",1,"^<",35],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M"],"^N",["^ ","^O","^P","^Q","^P"],"^R",["^S",[]],"^T","^U","^X",null,"^Y",["^ ","^Z","^Z","^[","^Z","^P","^P","^10","^P","^E","^E","^11","^11"],"^12",["^S",["^13"]],"~:shadow/js-access-global",["^S",["Error"]],"^14",null,"~:defs",["^ ","~$println-appender",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/timbre/appenders/core.cljs","^<",23,"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",0,"~:max-fixed-arity",0,"~:method-params",[["^17",[["~$_opts"]]]],"~:arglists",["^17",[["~$&",["^4R"]]]],"~:arglists-meta",["^17",[null]]],"^:",7,"^9",29,"^;",29,"^4S",["^17",["~$quote",["^17",[["~$&",["^4R"]]]]]],"^7","Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}.","~:jsdoc",["^17",["@param {...*} var_args"]]],"^T","~$taoensso.timbre.appenders.core/println-appender","^8","taoensso/timbre/appenders/core.cljs","^<",23,"^4M",["^ ","^4N",true,"^4O",0,"^4P",0,"^4Q",[["^17",[["^4R"]]]],"^4S",["^17",[["~$&",["^4R"]]]],"^4T",["^17",[null]]],"^4Q",[["^17",[["^4R"]]]],"~:protocol-impl",null,"^4O",0,"^4T",["^17",[null]],"^:",1,"^4N",true,"~:methods",[["^ ","^4O",0,"^4N",true,"~:tag","~$cljs.core/IMap"]],"^9",29,"~:ret-tag","~$any","^;",29,"^4P",0,"~:fn-var",true,"^4S",["^17",[["~$&",["^4R"]]]],"^7","Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}.","^4V",["^17",["@param {...*} var_args"]]],"~$console-appender",["^ ","^4L",null,"^5",["^ ","^8","taoensso/timbre/appenders/core.cljs","^<",23,"^4M",["^ ","^4N",true,"^4O",0,"^4P",0,"^4Q",[["^17",[["~$opts"]]]],"^4S",["^17",[["~$&",["^54"]]]],"^4T",["^17",[null]]],"^:",7,"^9",104,"^;",104,"^4S",["^17",["^4U",["^17",[["~$&",["^54"]]]]]],"^7","Returns a simple js/console appender for ClojureScript.\n\n  For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n    `/taoensso/timbre/appenders/core\\.js$`\n    `/taoensso/timbre\\.js$`\n    `/cljs/core\\.js$`\n\n  [1] Ref. https://goo.gl/ZejSvR","^4V",["^17",["@param {...*} var_args"]]],"^T","~$taoensso.timbre.appenders.core/console-appender","^8","taoensso/timbre/appenders/core.cljs","^<",23,"^4M",["^ ","^4N",true,"^4O",0,"^4P",0,"^4Q",[["^17",[["^54"]]]],"^4S",["^17",[["~$&",["^54"]]]],"^4T",["^17",[null]]],"^4Q",[["^17",[["^54"]]]],"^4X",null,"^4O",0,"^4T",["^17",[null]],"^:",1,"^4N",true,"^4Y",[["^ ","^4O",0,"^4N",true,"^4Z","^4["]],"^9",104,"^50","^51","^;",104,"^4P",0,"^52",true,"^4S",["^17",[["~$&",["^54"]]]],"^7","Returns a simple js/console appender for ClojureScript.\n\n  For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n    `/taoensso/timbre/appenders/core\\.js$`\n    `/taoensso/timbre\\.js$`\n    `/cljs/core\\.js$`\n\n  [1] Ref. https://goo.gl/ZejSvR","^4V",["^17",["@param {...*} var_args"]]],"~$console-?appender",["^ ","^T","~$taoensso.timbre.appenders.core/console-?appender","^8","taoensso/timbre/appenders/core.cljs","^9",167,"^:",8,"^;",167,"^<",30,"^5",["^ ","^8","taoensso/timbre/appenders/core.cljs","^9",167,"^:",13,"^;",167,"^<",30],"^7","DEPRECATED"]],"^15",["^ ","^P","^P","^10","^P","^E","^E"],"~:cljs.analyzer/constants",["^ ","^12",["^S",["~:inherit","~:fn","~:rate-limit","~:vargs","~:output_","~:msg_","~:enabled?","~:level","~:output-fn","~:?err","~:min-level","~:raw-console?","~:?meta","~:async?"]],"~:order",["^5?","^5F","^5C","^5;","^5A","^5:","^59","^5=","^5@","^5D","^5E","^5>","^5B","^5<"]],"^1;",["^ ","^13",["^S",[]]],"^1<",["^ "],"^1=",["^11","^E","^Z","^P"]],"^W","^U","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1K",[["^5J","~:static-fns"],true,["^5J","~:elide-asserts"],true,["^5J","~:optimize-constants"],null,["^5J","^1B"],null,["^5J","~:external-config"],null,["^5J","~:tooling-config"],null,["^5J","~:emit-constants"],null,["^5J","~:load-tests"],false,["^5J","~:form-size-threshold"],null,["^5J","~:infer-externs"],true,["^5J","^1D"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^5J","~:fn-invoke-direct"],null,["^5J","~:source-map"],"/dev/null"]]]