["^ ","~:output",["^ ","~:js","goog.provide('orchestra_cljs.spec.test');\ngoog.require('cljs.core');\ngoog.require('goog.object');\ngoog.require('goog.userAgent.product');\ngoog.require('clojure.string');\ngoog.require('cljs.stacktrace');\ngoog.require('cljs.pprint');\ngoog.require('cljs.spec.alpha');\ngoog.require('cljs.spec.gen.alpha');\norchestra_cljs.spec.test.distinct_by = (function orchestra_cljs$spec$test$distinct_by(f,coll){\nvar step = (function orchestra_cljs$spec$test$distinct_by_$_step(xs,seen){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar fexpr__55511 = (function (p__55513,seen__$1){\nwhile(true){\nvar vec__55514 = p__55513;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55514,(0),null);\nvar xs__$1 = vec__55514;\nvar temp__5753__auto__ = cljs.core.seq(xs__$1);\nif(temp__5753__auto__){\nvar s = temp__5753__auto__;\nvar v = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x));\nif(cljs.core.contains_QMARK_(seen__$1,v)){\nvar G__55905 = cljs.core.rest(s);\nvar G__55906 = seen__$1;\np__55513 = G__55905;\nseen__$1 = G__55906;\ncontinue;\n} else {\nreturn cljs.core.cons(x,orchestra_cljs$spec$test$distinct_by_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,v)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreturn fexpr__55511(xs,seen);\n}),null,null));\n});\nreturn step(coll,cljs.core.PersistentHashSet.EMPTY);\n});\norchestra_cljs.spec.test.no_fspec = (function orchestra_cljs$spec$test$no_fspec(v,spec){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Fn at \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(v),\" is not spec'ed.\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),v,new cljs.core.Keyword(null,\"spec\",\"spec\",347520401),spec,new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592),new cljs.core.Keyword(null,\"no-fspec\",\"no-fspec\",-1763393966)], null));\n});\norchestra_cljs.spec.test.no_args_spec = (function orchestra_cljs$spec$test$no_args_spec(v,spec){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Args for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(v),\" are not spec'ed.\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),v,new cljs.core.Keyword(null,\"spec\",\"spec\",347520401),spec,new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592),new cljs.core.Keyword(null,\"no-args-spec\",\"no-args-spec\",-1769472786)], null));\n});\n/**\n * if false, instrumented fns call straight through\n */\norchestra_cljs.spec.test._STAR_instrument_enabled_STAR_ = true;\norchestra_cljs.spec.test.get_host_port = (function orchestra_cljs$spec$test$get_host_port(){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(\"browser\",cljs.core._STAR_target_STAR_)){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"host\",\"host\",-1558485167),window.location.host,new cljs.core.Keyword(null,\"port\",\"port\",1534937262),window.location.port], null);\n}\n});\norchestra_cljs.spec.test.get_ua_product = (function orchestra_cljs$spec$test$get_ua_product(){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(\"browser\",cljs.core._STAR_target_STAR_)){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.SAFARI)){\nreturn new cljs.core.Keyword(null,\"safari\",\"safari\",497115653);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.CHROME)){\nreturn new cljs.core.Keyword(null,\"chrome\",\"chrome\",1718738387);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.FIREFOX)){\nreturn new cljs.core.Keyword(null,\"firefox\",\"firefox\",1283768880);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.IE)){\nreturn new cljs.core.Keyword(null,\"ie\",\"ie\",2038473780);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});\norchestra_cljs.spec.test.get_env = (function orchestra_cljs$spec$test$get_env(){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ua-product\",\"ua-product\",938384227),orchestra_cljs.spec.test.get_ua_product()], null);\n});\norchestra_cljs.spec.test.find_caller = (function orchestra_cljs$spec$test$find_caller(st){\nvar search_spec_fn = (function orchestra_cljs$spec$test$find_caller_$_search_spec_fn(frame){\nif(cljs.core.truth_(frame)){\nvar s = new cljs.core.Keyword(null,\"function\",\"function\",-2127255473).cljs$core$IFn$_invoke$arity$1(frame);\nvar and__4120__auto__ = typeof s === 'string';\nif(and__4120__auto__){\nvar and__4120__auto____$1 = (!(clojure.string.blank_QMARK_(s)));\nif(and__4120__auto____$1){\nreturn cljs.core.re_find(/cljs\\.spec\\.test\\.spec_checking_fn/,s);\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n} else {\nreturn null;\n}\n});\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(search_spec_fn,cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__55554_SHARP_){\nreturn cljs.core.not(search_spec_fn(p1__55554_SHARP_));\n}),st)));\n});\norchestra_cljs.spec.test.spec_checking_fn = (function orchestra_cljs$spec$test$spec_checking_fn(v,f,raw_fn_spec){\nvar fn_spec = (function (){var fexpr__55632 = cljs.core.deref(new cljs.core.Var(function(){return cljs.spec.alpha.maybe_spec;},new cljs.core.Symbol(\"cljs.spec.alpha\",\"maybe-spec\",\"cljs.spec.alpha/maybe-spec\",1954004993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null),new cljs.core.Symbol(null,\"maybe-spec\",\"maybe-spec\",-741366888,null),\"cljs/spec/alpha.cljs\",18,1,105,105,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"spec-or-k\",\"spec-or-k\",1986391440,null)], null)),\"spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil.\",(cljs.core.truth_(cljs.spec.alpha.maybe_spec)?cljs.spec.alpha.maybe_spec.cljs$lang$test:null)])));\nreturn (fexpr__55632.cljs$core$IFn$_invoke$arity$1 ? fexpr__55632.cljs$core$IFn$_invoke$arity$1(raw_fn_spec) : fexpr__55632.call(null,raw_fn_spec));\n})();\nvar conform_BANG_ = ((function (fn_spec){\nreturn (function (v__$1,role,spec,data,data_key){\nvar conformed = cljs.spec.alpha.conform(spec,data);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs.spec.alpha\",\"invalid\",\"cljs.spec.alpha/invalid\",-1220295119),conformed)){\nvar caller = orchestra_cljs.spec.test.find_caller((function (){var G__55661 = orchestra_cljs.spec.test.get_host_port();\nvar G__55662 = (new Error()).stack;\nvar G__55663 = orchestra_cljs.spec.test.get_env();\nvar G__55664 = null;\nreturn (cljs.stacktrace.parse_stacktrace.cljs$core$IFn$_invoke$arity$4 ? cljs.stacktrace.parse_stacktrace.cljs$core$IFn$_invoke$arity$4(G__55661,G__55662,G__55663,G__55664) : cljs.stacktrace.parse_stacktrace.call(null,G__55661,G__55662,G__55663,G__55664));\n})());\nvar via = (function (){var temp__5755__auto__ = (function (){var fexpr__55674 = new cljs.core.Var(function(){return cljs.spec.alpha.spec_name;},new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec-name\",\"cljs.spec.alpha/spec-name\",888422400,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null),new cljs.core.Symbol(null,\"spec-name\",\"spec-name\",-1420007703,null),\"cljs/spec/alpha.cljs\",17,1,93,93,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"spec\",\"spec\",1988051928,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.spec_name)?cljs.spec.alpha.spec_name.cljs$lang$test:null)]));\nreturn (fexpr__55674.cljs$core$IFn$_invoke$arity$1 ? fexpr__55674.cljs$core$IFn$_invoke$arity$1(spec) : fexpr__55674.call(null,spec));\n})();\nif((temp__5755__auto__ == null)){\nreturn cljs.core.PersistentVector.EMPTY;\n} else {\nvar n = temp__5755__auto__;\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null);\n}\n})();\nvar ed = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.spec.alpha.explain_data_STAR_(spec,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [role], null),via,cljs.core.PersistentVector.EMPTY,data),data_key,data,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592),new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844)], 0)),(cljs.core.truth_(caller)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"orchestra-cljs.spec.test\",\"caller\",\"orchestra-cljs.spec.test/caller\",-1310233030),caller], null):null)], 0));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Call to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var fexpr__55710 = new cljs.core.Var(function(){return cljs.spec.alpha.__GT_sym;},new cljs.core.Symbol(\"cljs.spec.alpha\",\"->sym\",\"cljs.spec.alpha/->sym\",-2031271081,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null),new cljs.core.Symbol(null,\"->sym\",\"->sym\",696606926,null),\"cljs/spec/alpha.cljs\",13,1,323,323,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null)),\"Returns a symbol from a symbol or var\",(cljs.core.truth_(cljs.spec.alpha.__GT_sym)?cljs.spec.alpha.__GT_sym.cljs$lang$test:null)]));\nreturn (fexpr__55710.cljs$core$IFn$_invoke$arity$1 ? fexpr__55710.cljs$core$IFn$_invoke$arity$1(v__$1) : fexpr__55710.call(null,v__$1));\n})()),\" did not conform to spec:\\n\",(function (){var sb__4661__auto__ = (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR__orig_val__55716_55944 = cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR__orig_val__55717_55945 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_newline_STAR__temp_val__55718_55946 = true;\nvar _STAR_print_fn_STAR__temp_val__55719_55947 = ((function (_STAR_print_newline_STAR__orig_val__55716_55944,_STAR_print_fn_STAR__orig_val__55717_55945,_STAR_print_newline_STAR__temp_val__55718_55946,sb__4661__auto__,caller,via,ed,conformed,fn_spec){\nreturn (function (x__4662__auto__){\nreturn sb__4661__auto__.append(x__4662__auto__);\n});})(_STAR_print_newline_STAR__orig_val__55716_55944,_STAR_print_fn_STAR__orig_val__55717_55945,_STAR_print_newline_STAR__temp_val__55718_55946,sb__4661__auto__,caller,via,ed,conformed,fn_spec))\n;\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__55718_55946;\n\ncljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__55719_55947;\n\ntry{cljs.spec.alpha.explain_out(ed);\n}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__55717_55945;\n\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__55716_55944;\n}\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);\n})()].join(''),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ed,new cljs.core.Keyword(\"orchestra.spec\",\"var\",\"orchestra.spec/var\",-1159122057),v__$1));\n} else {\nreturn conformed;\n}\n});})(fn_spec))\n;\nvar pure_variadic_QMARK_ = (function (){var and__4120__auto__ = new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)));\nif(cljs.core.truth_(and__4120__auto__)){\nreturn (new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v))) === (0));\n} else {\nreturn and__4120__auto__;\n}\n})();\nvar apply_SINGLEQUOTE_ = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_){\nreturn (function (f__$1,args){\nif(cljs.core.truth_((function (){var and__4120__auto__ = (args == null);\nif(and__4120__auto__){\nreturn pure_variadic_QMARK_;\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn f__$1.cljs$core$IFn$_invoke$arity$variadic();\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f__$1,args);\n}\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_))\n;\nvar ret = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_){\nreturn (function() { \nvar G__55964__delegate = function (args){\nif(orchestra_cljs.spec.test._STAR_instrument_enabled_STAR_){\nvar orig__55347__auto__ = cljs.core.deref(new cljs.core.Var(function(){return orchestra_cljs.spec.test._STAR_instrument_enabled_STAR_;},new cljs.core.Symbol(\"orchestra-cljs.spec.test\",\"*instrument-enabled*\",\"orchestra-cljs.spec.test/*instrument-enabled*\",1683543280,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"orchestra-cljs.spec.test\",\"orchestra-cljs.spec.test\",-7792857,null),new cljs.core.Symbol(null,\"*instrument-enabled*\",\"*instrument-enabled*\",1714892871,null),\"orchestra_cljs/spec/test.cljs\",46,1,true,46,46,cljs.core.List.EMPTY,\"if false, instrumented fns call straight through\",((orchestra_cljs.spec.test._STAR_instrument_enabled_STAR_)?orchestra_cljs.spec.test._STAR_instrument_enabled_STAR_.cljs$lang$test:null)])));\norchestra_cljs.spec.test._STAR_instrument_enabled_STAR_ = null;\n\ntry{var cargs = (cljs.core.truth_(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(fn_spec))?conform_BANG_(v,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(fn_spec),args,new cljs.core.Keyword(\"cljs.spec.alpha\",\"args\",\"cljs.spec.alpha/args\",1870769783)):null);\nvar ret = (function (){var _STAR_instrument_enabled_STAR__orig_val__55742 = orchestra_cljs.spec.test._STAR_instrument_enabled_STAR_;\nvar _STAR_instrument_enabled_STAR__temp_val__55743 = true;\norchestra_cljs.spec.test._STAR_instrument_enabled_STAR_ = _STAR_instrument_enabled_STAR__temp_val__55743;\n\ntry{return apply_SINGLEQUOTE_(f,args);\n}finally {orchestra_cljs.spec.test._STAR_instrument_enabled_STAR_ = _STAR_instrument_enabled_STAR__orig_val__55742;\n}})();\nvar cret = (cljs.core.truth_(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(fn_spec))?conform_BANG_(v,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(fn_spec),ret,new cljs.core.Keyword(\"cljs.spec.alpha\",\"ret\",\"cljs.spec.alpha/ret\",1165997503)):null);\nvar temp__5753__auto___55987 = new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(fn_spec);\nif(cljs.core.truth_(temp__5753__auto___55987)){\nvar spec_55988 = temp__5753__auto___55987;\nif((cargs == null)){\nthrow orchestra_cljs.spec.test.no_args_spec(v,fn_spec);\n} else {\nconform_BANG_(v,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),spec_55988,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),(function (){var or__4131__auto__ = cret;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn ret;\n}\n})(),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cargs], null),new cljs.core.Keyword(\"cljs.spec.alpha\",\"fn\",\"cljs.spec.alpha/fn\",408600443));\n}\n} else {\n}\n\nreturn ret;\n}finally {orchestra_cljs.spec.test._STAR_instrument_enabled_STAR_ = orig__55347__auto__;\n}} else {\nreturn apply_SINGLEQUOTE_(f,args);\n}\n};\nvar G__55964 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__55993__i = 0, G__55993__a = new Array(arguments.length -  0);\nwhile (G__55993__i < G__55993__a.length) {G__55993__a[G__55993__i] = arguments[G__55993__i + 0]; ++G__55993__i;}\n  args = new cljs.core.IndexedSeq(G__55993__a,0,null);\n} \nreturn G__55964__delegate.call(this,args);};\nG__55964.cljs$lang$maxFixedArity = 0;\nG__55964.cljs$lang$applyTo = (function (arglist__55994){\nvar args = cljs.core.seq(arglist__55994);\nreturn G__55964__delegate(args);\n});\nG__55964.cljs$core$IFn$_invoke$arity$variadic = G__55964__delegate;\nreturn G__55964;\n})()\n;})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_))\n;\nif(cljs.core.truth_(pure_variadic_QMARK_)){\n} else {\nif((!((f.cljs$core$IFn$_invoke$arity$0 == null)))){\nret.cljs$core$IFn$_invoke$arity$0 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.PersistentVector.EMPTY);\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$1 == null)))){\nret.cljs$core$IFn$_invoke$arity$1 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$2 == null)))){\nret.cljs$core$IFn$_invoke$arity$2 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$3 == null)))){\nret.cljs$core$IFn$_invoke$arity$3 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$4 == null)))){\nret.cljs$core$IFn$_invoke$arity$4 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$5 == null)))){\nret.cljs$core$IFn$_invoke$arity$5 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$6 == null)))){\nret.cljs$core$IFn$_invoke$arity$6 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$7 == null)))){\nret.cljs$core$IFn$_invoke$arity$7 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$8 == null)))){\nret.cljs$core$IFn$_invoke$arity$8 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$9 == null)))){\nret.cljs$core$IFn$_invoke$arity$9 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$10 == null)))){\nret.cljs$core$IFn$_invoke$arity$10 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$11 == null)))){\nret.cljs$core$IFn$_invoke$arity$11 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$12 == null)))){\nret.cljs$core$IFn$_invoke$arity$12 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$13 == null)))){\nret.cljs$core$IFn$_invoke$arity$13 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$14 == null)))){\nret.cljs$core$IFn$_invoke$arity$14 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$15 == null)))){\nret.cljs$core$IFn$_invoke$arity$15 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$16 == null)))){\nret.cljs$core$IFn$_invoke$arity$16 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$17 == null)))){\nret.cljs$core$IFn$_invoke$arity$17 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$18 == null)))){\nret.cljs$core$IFn$_invoke$arity$18 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$19 == null)))){\nret.cljs$core$IFn$_invoke$arity$19 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nif((!((f.cljs$core$IFn$_invoke$arity$20 == null)))){\nret.cljs$core$IFn$_invoke$arity$20 = ((function (fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function (arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19], null));\n});})(fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n} else {\n}\n\nvar temp__5757__auto___56091 = f.cljs$core$IFn$_invoke$arity$variadic;\nif((temp__5757__auto___56091 == null)){\n} else {\nvar variadic_56093 = temp__5757__auto___56091;\nret.cljs$core$IFn$_invoke$arity$variadic = ((function (variadic_56093,temp__5757__auto___56091,fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret){\nreturn (function() { \nvar G__56096__delegate = function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(variadic_56093,args);\n};\nvar G__56096 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__56097__i = 0, G__56097__a = new Array(arguments.length -  0);\nwhile (G__56097__i < G__56097__a.length) {G__56097__a[G__56097__i] = arguments[G__56097__i + 0]; ++G__56097__i;}\n  args = new cljs.core.IndexedSeq(G__56097__a,0,null);\n} \nreturn G__56096__delegate.call(this,args);};\nG__56096.cljs$lang$maxFixedArity = 0;\nG__56096.cljs$lang$applyTo = (function (arglist__56098){\nvar args = cljs.core.seq(arglist__56098);\nreturn G__56096__delegate(args);\n});\nG__56096.cljs$core$IFn$_invoke$arity$variadic = G__56096__delegate;\nreturn G__56096;\n})()\n;})(variadic_56093,temp__5757__auto___56091,fn_spec,conform_BANG_,pure_variadic_QMARK_,apply_SINGLEQUOTE_,ret))\n;\n}\n}\n\nreturn ret;\n});\nif((typeof orchestra_cljs !== 'undefined') && (typeof orchestra_cljs.spec !== 'undefined') && (typeof orchestra_cljs.spec.test !== 'undefined') && (typeof orchestra_cljs.spec.test.instrumented_vars !== 'undefined')){\n} else {\norchestra_cljs.spec.test.instrumented_vars = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\n/**\n * Helper for instrument.\n */\norchestra_cljs.spec.test.instrument_choose_fn = (function orchestra_cljs$spec$test$instrument_choose_fn(f,spec,sym,p__55825){\nvar map__55826 = p__55825;\nvar map__55826__$1 = (((((!((map__55826 == null))))?(((((map__55826.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55826.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55826):map__55826);\nvar over = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55826__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",142575302));\nvar stub = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55826__$1,new cljs.core.Keyword(null,\"stub\",\"stub\",1339145807));\nvar replace = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55826__$1,new cljs.core.Keyword(null,\"replace\",\"replace\",-786587770));\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([sym]),stub))){\nreturn cljs.spec.gen.alpha.generate(cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2(spec,over));\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(replace,sym,f);\n}\n});\n/**\n * Helper for instrument\n */\norchestra_cljs.spec.test.instrument_choose_spec = (function orchestra_cljs$spec$test$instrument_choose_spec(spec,sym,p__55837){\nvar map__55844 = p__55837;\nvar map__55844__$1 = (((((!((map__55844 == null))))?(((((map__55844.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55844.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55844):map__55844);\nvar overrides = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55844__$1,new cljs.core.Keyword(null,\"spec\",\"spec\",347520401));\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(overrides,sym,spec);\n});\norchestra_cljs.spec.test.instrument_1_STAR_ = (function orchestra_cljs$spec$test$instrument_1_STAR_(s,v,opts){\nvar spec = cljs.spec.alpha.get_spec(v);\nvar map__55859 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(orchestra_cljs.spec.test.instrumented_vars),v);\nvar map__55859__$1 = (((((!((map__55859 == null))))?(((((map__55859.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55859.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55859):map__55859);\nvar raw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55859__$1,new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272));\nvar wrapped = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55859__$1,new cljs.core.Keyword(null,\"wrapped\",\"wrapped\",1775172701));\nvar current = cljs.core.deref(v);\nvar to_wrap = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(wrapped,current))?raw:current);\nvar ospec = (function (){var or__4131__auto__ = orchestra_cljs.spec.test.instrument_choose_spec(spec,s,opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nthrow orchestra_cljs.spec.test.no_fspec(v,spec);\n}\n})();\nvar ofn = orchestra_cljs.spec.test.instrument_choose_fn(to_wrap,ospec,s,opts);\nvar checked = orchestra_cljs.spec.test.spec_checking_fn(v,ofn,ospec);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(orchestra_cljs.spec.test.instrumented_vars,cljs.core.assoc,v,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272),to_wrap,new cljs.core.Keyword(null,\"wrapped\",\"wrapped\",1775172701),checked], null));\n\nreturn checked;\n});\norchestra_cljs.spec.test.unstrument_1_STAR_ = (function orchestra_cljs$spec$test$unstrument_1_STAR_(s,v){\nif(cljs.core.truth_(v)){\nvar temp__5753__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(orchestra_cljs.spec.test.instrumented_vars),v);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar map__55872 = temp__5753__auto__;\nvar map__55872__$1 = (((((!((map__55872 == null))))?(((((map__55872.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55872.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55872):map__55872);\nvar raw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55872__$1,new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272));\nvar wrapped = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55872__$1,new cljs.core.Keyword(null,\"wrapped\",\"wrapped\",1775172701));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(orchestra_cljs.spec.test.instrumented_vars,cljs.core.dissoc,v);\n\nvar current = cljs.core.deref(v);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(wrapped,current)){\nreturn raw;\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\norchestra_cljs.spec.test.fn_spec_name_QMARK_ = (function orchestra_cljs$spec$test$fn_spec_name_QMARK_(s){\nreturn (s instanceof cljs.core.Symbol);\n});\n/**\n * Given an opts map as per instrument, returns the set of syms\n * that can be instrumented.\n */\norchestra_cljs.spec.test.instrumentable_syms = (function orchestra_cljs$spec$test$instrumentable_syms(var_args){\nvar G__55890 = arguments.length;\nswitch (G__55890) {\ncase 0:\nreturn orchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn orchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\norchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn orchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$1(null);\n});\n\norchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$1 = (function (opts){\nif(cljs.core.every_QMARK_(cljs.core.ident_QMARK_,cljs.core.keys(new cljs.core.Keyword(null,\"gen\",\"gen\",142575302).cljs$core$IFn$_invoke$arity$1(opts)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"instrument :gen expects ident keys\",\"\\n\",\"(every? ident? (keys (:gen opts)))\"].join('')));\n}\n\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.into,cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.filter.cljs$core$IFn$_invoke$arity$2(orchestra_cljs.spec.test.fn_spec_name_QMARK_,cljs.core.keys(cljs.spec.alpha.registry())),cljs.core.keys(new cljs.core.Keyword(null,\"spec\",\"spec\",347520401).cljs$core$IFn$_invoke$arity$1(opts)),new cljs.core.Keyword(null,\"stub\",\"stub\",1339145807).cljs$core$IFn$_invoke$arity$1(opts),cljs.core.keys(new cljs.core.Keyword(null,\"replace\",\"replace\",-786587770).cljs$core$IFn$_invoke$arity$1(opts))], null));\n});\n\norchestra_cljs.spec.test.instrumentable_syms.cljs$lang$maxFixedArity = 1;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","orchestra_cljs/spec/test.cljs","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",29],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core","~$clojure.test","~$cljs.test","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$instrument","~$orchestra-cljs.spec.test","~$unstrument","^N","~$with-instrument-disabled","^N","~$setup-static-dispatches","^N"],"~:excludes",["~#set",[]],"~:macros",["^ ","^M",["^ ","~:arglists",["~#list",[[],["~$xs"],["~$sym-or-syms","~$opts"]]],"~:doc","Instruments the vars named by sym-or-syms, a symbol or collection\n   of symbols, or all instrumentable vars if sym-or-syms is not\n   specified. If a symbol identifies a namespace then all symbols in that\n   namespace will be enumerated.\n\n   If a var has an :args fn-spec, sets the var's root binding to a\n   fn that checks arg conformance (throwing an exception on failure)\n   before delegating to the original fn.\n\n   The opts map can be used to override registered specs, and/or to\n   replace fn implementations entirely. Opts for symbols not included\n   in sym-or-syms are ignored. This facilitates sharing a common\n   options map across many different calls to instrument.\n\n   The opts map may have the following keys:\n\n   :spec     a map from var-name symbols to override specs\n   :stub     a set of var-name symbols to be replaced by stubs\n   :gen      a map from spec names to generator overrides\n   :replace  a map from var-name symbols to replacement fns\n\n   :spec overrides registered fn-specs with specs your provide. Use\n   :spec overrides to provide specs for libraries that do not have\n   them, or to constrain your own use of a fn to a subset of its\n   spec'ed contract.\n\n   :stub replaces a fn with a stub that checks :args, then uses the\n   :ret spec to generate a return value.\n\n   :gen overrides are used only for :stub generation.\n\n   :replace replaces a fn with a fn that checks args conformance, then\n   invokes the fn you provide, enabling arbitrary stubbing and mocking.\n\n   :spec can be used in combination with :stub or :replace.\n\n   Returns a collection of syms naming the vars instrumented.","^7",88,"^8",1,"^6","orchestra_cljs/spec/test.cljc","~:name","~$orchestra-cljs.spec.test/instrument","~:ns","^N","~:macro",true],"~$unstrument-1",["^ ","^U",["^V",[[["~$quote","~$s"]]]],"^7",64,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","~$orchestra-cljs.spec.test/unstrument-1","^11","^N","^12",true],"^O",["^ ","^U",["^V",[[],["^X"]]],"^Z","Undoes instrument on the vars named by sym-or-syms, specified\n   as in instrument. With no args, unstruments all instrumented vars.\n   Returns a collection of syms naming the vars unstrumented.","^7",148,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","~$orchestra-cljs.spec.test/unstrument","^11","^N","^12",true],"^P",["^ ","^U",["^V",[["~$&","~$body"]]],"^Z","Disables instrument's checking of calls, within a scope.","^7",40,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","~$orchestra-cljs.spec.test/with-instrument-disabled","^11","^N","^12",true],"~$instrument-1",["^ ","^U",["^V",[[["^14","~$s"],"^Y"]]],"^7",50,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","~$orchestra-cljs.spec.test/instrument-1","^11","^N","^12",true]],"^[","^N","~:op","^11","~:imports",null,"~:requires",["^ ","~$goog.userAgent.product","^1>","~$cljs.stacktrace","^1?","^A","^A","~$gobj","~$goog.object","~$goog","^1B","^1A","^1A","~$gen","^G","~$pp","^I","^I","^I","~$s","^?","~$string","~$clojure.string","~$product","^1>","^1F","^1F","~$st","^1?","^?","^?","^G","^G"],"~:seen",["^S",["~:require","~:require-macros"]],"~:uses",null,"^1K",["^ ","^N","^N","^A","^A","^1C","^G","^1D","^I","~$m","^N","^I","^I","~$s","^?","^?","^?","^G","^G"],"~:form",["^V",["~$ns","^N",["^V",["^1K",["^N","~:as","~$m","~:refer",["^M","^O","^P","^Q"]]]],["^V",["^1J",["^1A","^1O","^1@"],["^1>","^1O","^1G"],["^1F","^1O","^1E"],["^1?","^1O","^1H"],["^I","^1O","^1D"],["^?","^1O","~$s"],["^G","^1O","^1C"]]]]],"~:flags",["^ ","^1K",["^S",[]],"^1J",["^S",[]]],"~:js-deps",["^ "],"~:deps",["^1B","^A","^1A","^1>","^1F","^1?","^I","^?","^G"]],"^11","^N","~:resource-id",["~:shadow.build.classpath/resource","orchestra_cljs/spec/test.cljs"],"~:compiled-at",1630228423063,"~:resource-name","orchestra_cljs/spec/test.cljs","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns orchestra-cljs.spec.test\n  (:require-macros [orchestra-cljs.spec.test :as m\n                    :refer [instrument unstrument with-instrument-disabled setup-static-dispatches]])\n  (:require\n    [goog.object :as gobj]\n    [goog.userAgent.product :as product]\n    [clojure.string :as string]\n    [cljs.stacktrace :as st]\n    [cljs.pprint :as pp]\n    [cljs.spec.alpha :as s]\n    [cljs.spec.gen.alpha :as gen]))\n\n(defn distinct-by\n  ([f coll]\n   (let [step (fn step [xs seen]\n                (lazy-seq\n                  ((fn [[x :as xs] seen]\n                     (when-let [s (seq xs)]\n                       (let [v (f x)]\n                         (if (contains? seen v)\n                           (recur (rest s) seen)\n                           (cons x (step (rest s) (conj seen v)))))))\n                    xs seen)))]\n     (step coll #{}))))\n\n(defn- no-fspec\n  [v spec]\n  (ex-info (str \"Fn at \" v \" is not spec'ed.\")\n           {:var v :spec spec ::s/failure :no-fspec}))\n\n(defn- no-args-spec\n  [v spec]\n  (ex-info (str \"Args for \" v \" are not spec'ed.\")\n           {:var v :spec spec ::s/failure :no-args-spec}))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; instrument ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(def ^:private ^:dynamic *instrument-enabled*\n  \"if false, instrumented fns call straight through\"\n  true)\n\n(defn get-host-port []\n  (if (not= \"browser\" *target*)\n    {}\n    {:host (.. js/window -location -host)\n     :port (.. js/window -location -port)}))\n\n(defn get-ua-product []\n  (if (not= \"browser\" *target*)\n    (keyword *target*)\n    (cond\n      product/SAFARI :safari\n      product/CHROME :chrome\n      product/FIREFOX :firefox\n      product/IE :ie)))\n\n(defn get-env []\n  {:ua-product (get-ua-product)})\n\n(defn- find-caller [st]\n  (letfn [(search-spec-fn [frame]\n            (when frame\n              (let [s (:function frame)]\n                (and (string? s) (not (string/blank? s))\n                     (re-find #\"cljs\\.spec\\.test\\.spec_checking_fn\" s)))))]\n    (->> st\n      (drop-while #(not (search-spec-fn %)))\n      (drop-while search-spec-fn)\n      first)))\n\n;; TODO: check ::caller result in other browsers - David\n\n(defn- spec-checking-fn\n  [v f raw-fn-spec]\n  (let [fn-spec (@#'s/maybe-spec raw-fn-spec)\n        conform! (fn [v role spec data data-key]\n                   (let [conformed (s/conform spec data)]\n                     (if (= ::s/invalid conformed)\n                       (let [caller (find-caller\n                                      (st/parse-stacktrace\n                                        (get-host-port)\n                                        (.-stack (js/Error.))\n                                        (get-env) nil))\n                             via (if-some [n (#'s/spec-name spec)]\n                                   [n]\n                                   [])\n                             ed (merge (assoc (s/explain-data* spec [role]\n                                                               via\n                                                               []\n                                                               data)\n                                              ;::s/fn (#'s/->sym v)\n                                              data-key data\n                                              ::s/failure :instrument)\n                                       (when caller\n                                         {::caller caller}))]\n                         (throw (ex-info\n                                  (str \"Call to \"\n                                       (#'s/->sym v)\n                                       \" did not conform to spec:\\n\"\n                                       (with-out-str (s/explain-out ed)))\n                                  (assoc ed :orchestra.spec/var v))))\n                       conformed)))\n        pure-variadic? (and (-> (meta v) :top-fn :variadic?)\n                            (zero? (-> (meta v) :top-fn :max-fixed-arity)))\n        apply' (fn [f args]\n                 (if (and (nil? args)\n                          pure-variadic?)\n                   (.cljs$core$IFn$_invoke$arity$variadic f)\n                   (apply f args)))\n        ret (fn [& args]\n              (if *instrument-enabled*\n                (with-instrument-disabled\n                  (let [cargs (when (:args fn-spec)\n                                (conform! v :args (:args fn-spec) args ::s/args))\n                        ret (binding [*instrument-enabled* true]\n                              (apply' f args))\n                        cret (when (:ret fn-spec)\n                               (conform! v :ret (:ret fn-spec) ret ::s/ret))]\n                    (when-let [spec (:fn fn-spec)]\n                      (if (nil? cargs)\n                        (throw (no-args-spec v fn-spec))\n                        (conform! v :fn spec {:ret (or cret ret) :args cargs} ::s/fn)))\n                    ret))\n                (apply' f args)))]\n    (when-not pure-variadic?\n      (setup-static-dispatches f ret 20)\n      (when-some [variadic (.-cljs$core$IFn$_invoke$arity$variadic f)]\n        (set! (.-cljs$core$IFn$_invoke$arity$variadic ret)\n              (fn [& args]\n                (apply variadic args)))))\n    ret))\n\n(defonce ^:private instrumented-vars (atom {}))\n\n(defn- instrument-choose-fn\n  \"Helper for instrument.\"\n  [f spec sym {over :gen :keys [stub replace]}]\n  (if (some #{sym} stub)\n    (-> spec (s/gen over) gen/generate)\n    (get replace sym f)))\n\n(defn- instrument-choose-spec\n  \"Helper for instrument\"\n  [spec sym {overrides :spec}]\n  (get overrides sym spec))\n\n(defn instrument-1*\n  [s v opts]\n  (let [spec (s/get-spec v)\n        {:keys [raw wrapped]} (get @instrumented-vars v)\n        current @v\n        to-wrap (if (= wrapped current) raw current)\n        ospec (or (instrument-choose-spec spec s opts)\n                  (throw (no-fspec v spec)))\n        ofn (instrument-choose-fn to-wrap ospec s opts)\n        checked (spec-checking-fn v ofn ospec)]\n    (swap! instrumented-vars assoc v {:raw to-wrap :wrapped checked})\n    checked))\n\n(defn unstrument-1*\n  [s v]\n  (when v\n    (when-let [{:keys [raw wrapped]} (get @instrumented-vars v)]\n      (swap! instrumented-vars dissoc v)\n      (let [current @v]\n        (when (= wrapped current)\n          raw)))))\n\n(defn- fn-spec-name?\n  [s]\n  (symbol? s))\n\n(defn instrumentable-syms\n  \"Given an opts map as per instrument, returns the set of syms\n   that can be instrumented.\"\n  ([] (instrumentable-syms nil))\n  ([opts]\n   (assert (every? ident? (keys (:gen opts))) \"instrument :gen expects ident keys\")\n   (reduce into #{} [(filter fn-spec-name? (keys (s/registry)))\n                     (keys (:spec opts))\n                     (:stub opts)\n                     (keys (:replace opts))])))\n","~:reader-features",["^S",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["orchestra-cljs.spec.test/distinct-by","f","coll","step","xs","seen","cljs.core/LazySeq","fexpr__55511","p__55513","vec__55514","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","x","temp__5753__auto__","s","cljs.core/seq","v","cljs.core/contains?","cljs.core/rest","cljs.core/cons","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","orchestra-cljs.spec.test/no-fspec","spec","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","orchestra-cljs.spec.test/no-args-spec","orchestra-cljs.spec.test/*instrument-enabled*","orchestra-cljs.spec.test/get-host-port","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/*target*","js/window","orchestra-cljs.spec.test/get-ua-product","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","goog.userAgent.product/SAFARI","goog.userAgent.product/CHROME","goog.userAgent.product/FIREFOX","goog.userAgent.product/IE","orchestra-cljs.spec.test/get-env","orchestra-cljs.spec.test/find-caller","st","frame","and__4120__auto__","clojure.string/blank?","cljs.core/re-find","p1__55554#","cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2","cljs.core/not","search-spec-fn","cljs.core/first","orchestra-cljs.spec.test/spec-checking-fn","raw-fn-spec","fn-spec","fexpr__55632","cljs.core/deref","cljs.spec.alpha/maybe-spec","conform!","role","data","data-key","conformed","cljs.spec.alpha/conform","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","caller","G__55661","G__55662","G__55663","G__55664","cljs.stacktrace/parse-stacktrace","js/Error","via","temp__5755__auto__","n","fexpr__55674","cljs.spec.alpha/spec-name","ed","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","cljs.spec.alpha/explain-data*","fexpr__55710","cljs.spec.alpha/->sym","sb__4661__auto__","goog.string/StringBuffer","*print-newline*-orig-val__55716","cljs.core/*print-newline*","*print-fn*-orig-val__55717","cljs.core/*print-fn*","*print-newline*-temp-val__55718","*print-fn*-temp-val__55719","x__4662__auto__","cljs.spec.alpha/explain-out","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","pure-variadic?","cljs.core/meta","apply'","args","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","ret","orig__55347__auto__","cargs","*instrument-enabled*-orig-val__55742","*instrument-enabled*-temp-val__55743","cret","or__4131__auto__","arg0","arg1","arg2","arg3","arg4","arg5","arg6","arg7","arg8","arg9","arg10","arg11","arg12","arg13","arg14","arg15","arg16","arg17","arg18","arg19","temp__5757__auto__","variadic","js/orchestra-cljs","js/orchestra-cljs.spec","js/orchestra-cljs.spec.test","js/orchestra-cljs.spec.test.instrumented-vars","orchestra-cljs.spec.test/instrumented-vars","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","p__55825","map__55826","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","orchestra-cljs.spec.test/instrument-choose-fn","sym","over","stub","replace","cljs.core/some","cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2","cljs.spec.gen.alpha/generate","cljs.core.get.cljs$core$IFn$_invoke$arity$3","p__55837","map__55844","orchestra-cljs.spec.test/instrument-choose-spec","overrides","orchestra-cljs.spec.test/instrument-1*","opts","map__55859","cljs.spec.alpha/get-spec","raw","wrapped","current","to-wrap","ospec","ofn","checked","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","orchestra-cljs.spec.test/unstrument-1*","map__55872","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc","orchestra-cljs.spec.test/fn-spec-name?","cljs.core/Symbol","var_args","G__55890","orchestra-cljs.spec.test/instrumentable-syms","orchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$1","cljs.core/every?","cljs.core/ident?","cljs.core/keys","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/into","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.spec.alpha/registry"]]],"~:cache-keys",["~#cmap",[["^1U","goog/labs/useragent/platform.js"],[1630228359392,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^S",[]],"~:deps-syms",["^1B","~$goog.labs.userAgent.util","~$goog.string"]]],["^1U","orchestra_cljs/spec/test.cljs"],[1630228119080,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^A","^1A","^1>","^1F","^1?","^I","^?","^G"]]],["^1U","cljs/spec/gen/alpha.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^A","~$goog.Uri"]]],["^1U","goog/math/math.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","~$goog.array","~$goog.asserts"]]],["^1U","goog/labs/useragent/browser.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2=","^2:","^1A","~$goog.string.internal"]]],["^1U","goog/array/array.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2>"]]],["^1U","goog/useragent/useragent.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2:","~$goog.reflect","^2;"]]],["^1U","goog/debug/error.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],["^1U","goog/dom/nodetype.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],["^1U","cljs/pprint.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^A","^1F","^2;","~$goog.string.StringBuffer"]]],["^1U","goog/object/object.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],"~:SHADOW-TIMESTAMP",[1630228360000,1630228118000],["^1U","cljs/stacktrace.cljc"],[1630228118934,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^A","^2;","^1F"]]],["^1U","goog/math/long.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2>","^2C"]]],["^1U","goog/string/internal.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],["^1U","goog/functions/functions.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],["^1U","clojure/walk.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^A"]]],["^1U","goog/useragent/product.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2@","^2B","~$goog.userAgent"]]],["^1U","goog/structs/map.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1U","goog/labs/useragent/engine.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2=","^2:","^2;"]]],["^1U","goog/asserts/asserts.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1U","goog/uri/uri.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2=","^2>","^2;","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1U","cljs/spec/alpha.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^A","^1A","~$clojure.walk","^G","^1F"]]],["^1U","goog/base.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",[]]],["^1U","goog/structs/structs.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2=","^1A"]]],["^1U","clojure/string.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^A","^2;","^2D"]]],["^1U","goog/string/string.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2?"]]],["^1U","goog/reflect/reflect.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],["^1U","goog/labs/useragent/util.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2?"]]],["^1U","goog/string/stringbuffer.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],["^1U","goog/iter/iter.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2=","^2>","~$goog.functions","~$goog.math"]]],["^1U","cljs/core.cljs"],[1630228118934,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["~$goog.math.Long","~$goog.math.Integer","^2;","^1A","^2=","^2<","^2D"]]],["^1U","goog/math/integer.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B"]]],["^1U","goog/uri/utils.js"],[1630228359392,"^26",["^ ","^27",null,"^28",["^S",[]],"^29",["^1B","^2=","^2>","^2;"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer/api.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/orchestra/orchestra/2019.02.06-1/orchestra-2019.02.06-1.jar!/orchestra_cljs/spec/test.cljc",1630228119000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1630228358000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",9,"^8",5,"^9",9,"^:",29],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",["^ ","^M","^N","^O","^N","^P","^N","^Q","^N"],"^R",["^S",[]],"^T",["^ ","^M",["^ ","^U",["^V",[[],["^W"],["^X","^Y"]]],"^Z","Instruments the vars named by sym-or-syms, a symbol or collection\n   of symbols, or all instrumentable vars if sym-or-syms is not\n   specified. If a symbol identifies a namespace then all symbols in that\n   namespace will be enumerated.\n\n   If a var has an :args fn-spec, sets the var's root binding to a\n   fn that checks arg conformance (throwing an exception on failure)\n   before delegating to the original fn.\n\n   The opts map can be used to override registered specs, and/or to\n   replace fn implementations entirely. Opts for symbols not included\n   in sym-or-syms are ignored. This facilitates sharing a common\n   options map across many different calls to instrument.\n\n   The opts map may have the following keys:\n\n   :spec     a map from var-name symbols to override specs\n   :stub     a set of var-name symbols to be replaced by stubs\n   :gen      a map from spec names to generator overrides\n   :replace  a map from var-name symbols to replacement fns\n\n   :spec overrides registered fn-specs with specs your provide. Use\n   :spec overrides to provide specs for libraries that do not have\n   them, or to constrain your own use of a fn to a subset of its\n   spec'ed contract.\n\n   :stub replaces a fn with a stub that checks :args, then uses the\n   :ret spec to generate a return value.\n\n   :gen overrides are used only for :stub generation.\n\n   :replace replaces a fn with a fn that checks args conformance, then\n   invokes the fn you provide, enabling arbitrary stubbing and mocking.\n\n   :spec can be used in combination with :stub or :replace.\n\n   Returns a collection of syms naming the vars instrumented.","^7",88,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","^10","^11","^N","^12",true],"^13",["^ ","^U",["^V",[[["^14","~$s"]]]],"^7",64,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","^15","^11","^N","^12",true],"^O",["^ ","^U",["^V",[[],["^X"]]],"^Z","Undoes instrument on the vars named by sym-or-syms, specified\n   as in instrument. With no args, unstruments all instrumented vars.\n   Returns a collection of syms naming the vars unstrumented.","^7",148,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","^16","^11","^N","^12",true],"^P",["^ ","^U",["^V",[["~$&","^17"]]],"^Z","Disables instrument's checking of calls, within a scope.","^7",40,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","^18","^11","^N","^12",true],"^19",["^ ","^U",["^V",[[["^14","~$s"],"^Y"]]],"^7",50,"^8",1,"^6","orchestra_cljs/spec/test.cljc","^[","^1:","^11","^N","^12",true]],"^[","^N","^1<",null,"^1=",["^ ","^1>","^1>","^1?","^1?","^A","^A","^1@","^1A","^1B","^1B","^1A","^1A","^1C","^G","^1D","^I","^I","^I","~$s","^?","^1E","^1F","^1G","^1>","^1F","^1F","^1H","^1?","^?","^?","^G","^G"],"^1I",["^S",["^1J","^1K"]],"~:shadow/js-access-global",["^S",["window","Error"]],"^1L",null,"~:defs",["^ ","~$get-env",["^ ","~:protocol-inline",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",65,"^8",7,"^9",65,"^:",14,"^U",["^V",["^14",["^V",[[]]]]]],"^[","~$orchestra-cljs.spec.test/get-env","^6","orchestra_cljs/spec/test.cljs","^:",14,"~:method-params",["^V",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^7",65,"~:ret-tag","~$cljs.core/IMap","^9",65,"~:max-fixed-arity",0,"~:fn-var",true,"^U",["^V",["^14",["^V",[[]]]]]],"~$instrument-choose-fn",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",143,"^8",8,"^9",143,"^:",28,"~:private",true,"^U",["^V",["^14",["^V",[["~$f","~$spec","~$sym",["^ ","~$over","~:gen","~:keys",["~$stub","~$replace"]]]]]]],"^Z","Helper for instrument."],"^3X",true,"^[","~$orchestra-cljs.spec.test/instrument-choose-fn","^6","orchestra_cljs/spec/test.cljs","^:",28,"^3O",["^V",[["~$f","^3Y","^3Z","~$p__55825"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",143,"^3S",["^S",[null,"~$any"]],"^9",143,"^3U",4,"^3V",true,"^U",["^V",["^14",["^V",[["~$f","^3Y","^3Z",["^ ","^3[","^40","^41",["^42","^43"]]]]]]],"^Z","Helper for instrument."],"~$distinct-by",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",21,"^8",7,"^9",21,"^:",18,"^U",["^V",["^14",["^V",[["~$f","~$coll"]]]]]],"^[","~$orchestra-cljs.spec.test/distinct-by","^6","orchestra_cljs/spec/test.cljs","^:",18,"^3O",["^V",[["~$f","^48"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",21,"^3S","~$cljs.core/LazySeq","^9",21,"^3U",2,"^3V",true,"^U",["^V",["^14",["^V",[["~$f","^48"]]]]]],"~$*instrument-enabled*",["^ ","^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",46,"^8",26,"^9",46,"^:",46,"~:dynamic",true,"^3X",true],"^3X",true,"^[","~$orchestra-cljs.spec.test/*instrument-enabled*","^6","orchestra_cljs/spec/test.cljs","^:",46,"^8",1,"^4<",true,"^7",46,"^9",46,"~:tag","~$boolean","^Z","if false, instrumented fns call straight through"],"~$instrumented-vars",["^ ","^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",141,"^8",20,"^9",141,"^:",37,"^3X",true],"^3X",true,"^[","~$orchestra-cljs.spec.test/instrumented-vars","^6","orchestra_cljs/spec/test.cljs","^:",37,"^8",1,"^7",141,"^9",141,"^4>","~$cljs.core/Atom"],"~$instrumentable-syms",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",181,"^8",7,"^9",181,"^:",26,"^U",["^V",["^14",["^V",[[],["^Y"]]]]],"^Z","Given an opts map as per instrument, returns the set of syms\n   that can be instrumented.","~:top-fn",["^ ","^3R",false,"~:fixed-arity",1,"^3U",1,"^3O",["^V",[[],["^Y"]]],"^U",["^V",[[],["^Y"]]],"^3Q",["^V",[null,null]]]],"^[","~$orchestra-cljs.spec.test/instrumentable-syms","^6","orchestra_cljs/spec/test.cljs","^:",26,"^4D",["^ ","^3R",false,"^4E",1,"^3U",1,"^3O",["^V",[[],["^Y"]]],"^U",["^V",[[],["^Y"]]],"^3Q",["^V",[null,null]]],"^3O",["^V",[[],["^Y"]]],"^3P",null,"^4E",1,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"~:methods",[["^ ","^4E",0,"^3R",false,"^4>","^46"],["^ ","^4E",1,"^3R",false,"^4>",["^S",[null,"^46"]]]],"^7",181,"^9",181,"^3U",1,"^3V",true,"^U",["^V",[[],["^Y"]]],"^Z","Given an opts map as per instrument, returns the set of syms\n   that can be instrumented."],"~$get-host-port",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",50,"^8",7,"^9",50,"^:",20,"^U",["^V",["^14",["^V",[[]]]]]],"^[","~$orchestra-cljs.spec.test/get-host-port","^6","orchestra_cljs/spec/test.cljs","^:",20,"^3O",["^V",[[]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",50,"^3S","^3T","^9",50,"^3U",0,"^3V",true,"^U",["^V",["^14",["^V",[[]]]]]],"~$spec-checking-fn",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",81,"^8",8,"^9",81,"^:",24,"^3X",true,"^U",["^V",["^14",["^V",[["~$v","~$f","~$raw-fn-spec"]]]]]],"^3X",true,"^[","~$orchestra-cljs.spec.test/spec-checking-fn","^6","orchestra_cljs/spec/test.cljs","^:",24,"^3O",["^V",[["~$v","~$f","^4K"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",81,"^3S","~$function","^9",81,"^3U",3,"^3V",true,"^U",["^V",["^14",["^V",[["~$v","~$f","^4K"]]]]]],"~$get-ua-product",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",56,"^8",7,"^9",56,"^:",21,"^U",["^V",["^14",["^V",[[]]]]]],"^[","~$orchestra-cljs.spec.test/get-ua-product","^6","orchestra_cljs/spec/test.cljs","^:",21,"^3O",["^V",[[]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",56,"^3S",["^S",["~$cljs.core/Keyword","~$clj-nil"]],"^9",56,"^3U",0,"^3V",true,"^U",["^V",["^14",["^V",[[]]]]]],"~$fn-spec-name?",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",177,"^8",8,"^9",177,"^:",21,"^3X",true,"^U",["^V",["^14",["^V",[["~$s"]]]]]],"^3X",true,"^[","~$orchestra-cljs.spec.test/fn-spec-name?","^6","orchestra_cljs/spec/test.cljs","^:",21,"^3O",["^V",[["~$s"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",177,"^3S","^4?","^9",177,"^3U",1,"^3V",true,"^U",["^V",["^14",["^V",[["~$s"]]]]]],"~$instrument-1*",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",155,"^8",7,"^9",155,"^:",20,"^U",["^V",["^14",["^V",[["~$s","~$v","^Y"]]]]]],"^[","~$orchestra-cljs.spec.test/instrument-1*","^6","orchestra_cljs/spec/test.cljs","^:",20,"^3O",["^V",[["~$s","~$v","^Y"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",155,"^3S","^4M","^9",155,"^3U",3,"^3V",true,"^U",["^V",["^14",["^V",[["~$s","~$v","^Y"]]]]]],"~$instrument-choose-spec",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",150,"^8",8,"^9",150,"^:",30,"^3X",true,"^U",["^V",["^14",["^V",[["^3Y","^3Z",["^ ","~$overrides","~:spec"]]]]]],"^Z","Helper for instrument"],"^3X",true,"^[","~$orchestra-cljs.spec.test/instrument-choose-spec","^6","orchestra_cljs/spec/test.cljs","^:",30,"^3O",["^V",[["^3Y","^3Z","~$p__55837"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",150,"^3S",["^S",[null,"^46"]],"^9",150,"^3U",3,"^3V",true,"^U",["^V",["^14",["^V",[["^3Y","^3Z",["^ ","^4W","^4X"]]]]]],"^Z","Helper for instrument"],"~$find-caller",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",68,"^8",8,"^9",68,"^:",19,"^3X",true,"^U",["^V",["^14",["^V",[["^1H"]]]]]],"^3X",true,"^[","~$orchestra-cljs.spec.test/find-caller","^6","orchestra_cljs/spec/test.cljs","^:",19,"^3O",["^V",[["^1H"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",68,"^9",68,"^3U",1,"^3V",true,"^U",["^V",["^14",["^V",[["^1H"]]]]]],"~$no-args-spec",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",39,"^8",8,"^9",39,"^:",20,"^3X",true,"^U",["^V",["^14",["^V",[["~$v","^3Y"]]]]]],"^3X",true,"^[","~$orchestra-cljs.spec.test/no-args-spec","^6","orchestra_cljs/spec/test.cljs","^:",20,"^3O",["^V",[["~$v","^3Y"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",39,"^3S","^46","^9",39,"^3U",2,"^3V",true,"^U",["^V",["^14",["^V",[["~$v","^3Y"]]]]]],"~$no-fspec",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",34,"^8",8,"^9",34,"^:",16,"^3X",true,"^U",["^V",["^14",["^V",[["~$v","^3Y"]]]]]],"^3X",true,"^[","~$orchestra-cljs.spec.test/no-fspec","^6","orchestra_cljs/spec/test.cljs","^:",16,"^3O",["^V",[["~$v","^3Y"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",34,"^3S","^46","^9",34,"^3U",2,"^3V",true,"^U",["^V",["^14",["^V",[["~$v","^3Y"]]]]]],"~$unstrument-1*",["^ ","^3M",null,"^5",["^ ","^6","orchestra_cljs/spec/test.cljs","^7",168,"^8",7,"^9",168,"^:",20,"^U",["^V",["^14",["^V",[["~$s","~$v"]]]]]],"^[","~$orchestra-cljs.spec.test/unstrument-1*","^6","orchestra_cljs/spec/test.cljs","^:",20,"^3O",["^V",[["~$s","~$v"]]],"^3P",null,"^3Q",["^V",[null,null]],"^8",1,"^3R",false,"^7",168,"^3S",["^S",["^46","^4Q"]],"^9",168,"^3U",2,"^3V",true,"^U",["^V",["^14",["^V",[["~$s","~$v"]]]]]]],"^1K",["^ ","^N","^N","^A","^A","^1C","^G","^1D","^I","~$m","^N","^I","^I","~$s","^?","^?","^?","^G","^G"],"~:cljs.analyzer/constants",["^ ","^1I",["^S",["~$cljs.spec.alpha/spec-name","~:args","~:cljs.spec.alpha/failure","~$x","~$cljs.spec.alpha/maybe-spec","~:ret","~:ua-product","~:fn","~:instrument","~:safari","^3X","^40","~:replace","^4;","^N","~:raw","^11","^[","~$spec-name","^6","^:","^4D","~:port","~$->sym","~:no-args-spec","~:function","~:stub","^8","^4=","~$spec-or-k","~:firefox","^4X","~:cljs.spec.alpha/invalid","~:host","^3R","~:no-fspec","^4<","^7","~:chrome","~:var","~:ie","^9","~:cljs.spec.alpha/args","~$cljs.spec.alpha/->sym","~:orchestra.spec/var","~$maybe-spec","^3Y","^3U","~:orchestra-cljs.spec.test/caller","^U","~:cljs.spec.alpha/fn","^Z","^?","~:wrapped","~:test","~:cljs.spec.alpha/ret"]],"~:order",["^5O","^4X","^5:","^5M","^5F","^5L","^5D","^5@","^5N","^5J","^5P","^5=","^5G","^5;","^3X","^11","^[","^6","^:","^8","^7","^9","^U","^Z","^5X","^?","^5T","^5I","^5K","^58","^5C","^3Y","^5?","^5U","^5R","^5E","~$x","^5S","^3R","^4D","^3U","^4=","^4<","^N","^4;","^59","^5Q","^5<","^5Y","^5>","^5V","^40","^5H","^5A","^5B","^5W"]],"^1Q",["^ ","^1K",["^S",[]],"^1J",["^S",[]]],"^1R",["^ "],"^1S",["^1B","^A","^1A","^1>","^1F","^1?","^I","^?","^G"]],"^11","^N","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^25",[["^61","~:static-fns"],true,["^61","~:elide-asserts"],false,["^61","~:optimize-constants"],null,["^61","^1X"],null,["^61","~:external-config"],null,["^61","~:tooling-config"],null,["^61","~:emit-constants"],null,["^61","~:load-tests"],null,["^61","~:form-size-threshold"],null,["^61","~:infer-externs"],true,["^61","^1Z"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^61","~:fn-invoke-direct"],null,["^61","~:source-map"],"/dev/null"]]]