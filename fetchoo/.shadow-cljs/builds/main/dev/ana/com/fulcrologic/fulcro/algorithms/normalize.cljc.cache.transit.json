["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.algorithms.normalize');\ncom.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_ = (function com$fulcrologic$fulcro$algorithms$normalize$normalize_STAR_(query,data,refs,union_seen,transform){\nvar data__$1 = (cljs.core.truth_((function (){var and__4120__auto__ = transform;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn (!(cljs.core.vector_QMARK_(data)));\n} else {\nreturn and__4120__auto__;\n}\n})())?(transform.cljs$core$IFn$_invoke$arity$2 ? transform.cljs$core$IFn$_invoke$arity$2(query,data) : transform.call(null,query,data)):data);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),query)){\nreturn data__$1;\n} else {\nif(cljs.core.map_QMARK_(query)){\nvar class$ = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(query));\nvar ident = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$2(class$,data__$1) : com.fulcrologic.fulcro.components.get_ident.call(null,class$,data__$1));\nif((!((ident == null)))){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4((function (){var G__56771 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(query,cljs.core.first(ident));\nvar G__56772 = data__$1;\nvar G__56773 = refs;\nvar G__56774 = union_seen;\nvar G__56775 = transform;\nreturn (com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.cljs$core$IFn$_invoke$arity$5 ? com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.cljs$core$IFn$_invoke$arity$5(G__56771,G__56772,G__56773,G__56774,G__56775) : com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.call(null,G__56771,G__56772,G__56773,G__56774,G__56775));\n})(),cljs.core.assoc,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.normalize\",\"tag\",\"com.fulcrologic.fulcro.algorithms.normalize/tag\",313912943),cljs.core.first(ident));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Union components must have an ident\",cljs.core.PersistentArrayMap.EMPTY);\n}\n} else {\nif(cljs.core.vector_QMARK_(data__$1)){\nreturn data__$1;\n} else {\nvar q = cljs.core.seq(query);\nvar ret = data__$1;\nwhile(true){\nif((!((q == null)))){\nvar expr = cljs.core.first(q);\nif(com.fulcrologic.fulcro.algorithms.do_not_use.join_QMARK_(expr)){\nvar vec__56817 = com.fulcrologic.fulcro.algorithms.do_not_use.join_entry(expr);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56817,(0),null);\nvar sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56817,(1),null);\nvar recursive_QMARK_ = com.fulcrologic.fulcro.algorithms.do_not_use.recursion_QMARK_(sel);\nvar union_entry = ((com.fulcrologic.fulcro.algorithms.do_not_use.union_QMARK_(expr))?sel:union_seen);\nvar sel__$1 = ((recursive_QMARK_)?(((!((union_seen == null))))?union_seen:query):sel);\nvar class$ = new cljs.core.Keyword(null,\"component\",\"component\",1555936782).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sel__$1));\nvar v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data__$1,k);\nif(((recursive_QMARK_) && (edn_query_language.core.ident_QMARK_(v)))){\nvar G__56848 = cljs.core.next(q);\nvar G__56849 = ret;\nq = G__56848;\nret = G__56849;\ncontinue;\n} else {\nif(cljs.core.map_QMARK_(v)){\nvar x = (com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.cljs$core$IFn$_invoke$arity$5 ? com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.cljs$core$IFn$_invoke$arity$5(sel__$1,v,refs,union_entry,transform) : com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.call(null,sel__$1,v,refs,union_entry,transform));\nif((!((((class$ == null)) || ((!(com.fulcrologic.fulcro.components.has_ident_QMARK_(class$)))))))){\nvar i = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$2(class$,x) : com.fulcrologic.fulcro.components.get_ident.call(null,class$,x));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(refs,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(i),cljs.core.second(i)], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\n\nvar G__56851 = cljs.core.next(q);\nvar G__56852 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,i);\nq = G__56851;\nret = G__56852;\ncontinue;\n} else {\nvar G__56853 = cljs.core.next(q);\nvar G__56854 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,x);\nq = G__56853;\nret = G__56854;\ncontinue;\n}\n} else {\nif(((cljs.core.vector_QMARK_(v)) && ((!(edn_query_language.core.ident_QMARK_(v)))) && ((!(edn_query_language.core.ident_QMARK_(cljs.core.first(v))))))){\nvar xs = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (q,ret,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1){\nreturn (function (p1__56757_SHARP_){\nreturn (com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.cljs$core$IFn$_invoke$arity$5 ? com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.cljs$core$IFn$_invoke$arity$5(sel__$1,p1__56757_SHARP_,refs,union_entry,transform) : com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_.call(null,sel__$1,p1__56757_SHARP_,refs,union_entry,transform));\n});})(q,ret,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1))\n),v);\nif((!((((class$ == null)) || ((!(com.fulcrologic.fulcro.components.has_ident_QMARK_(class$)))))))){\nvar is = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (q,ret,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1){\nreturn (function (p1__56758_SHARP_){\nreturn (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$2(class$,p1__56758_SHARP_) : com.fulcrologic.fulcro.components.get_ident.call(null,class$,p1__56758_SHARP_));\n});})(q,ret,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1))\n),xs);\nif(cljs.core.vector_QMARK_(sel__$1)){\nif(cljs.core.empty_QMARK_(is)){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(refs,((function (q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1){\nreturn (function (refs__$1){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1){\nreturn (function (m,p__56825){\nvar vec__56826 = p__56825;\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56826,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56826,(1),null);\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(m,i,cljs.core.merge,x);\n});})(q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1))\n,refs__$1,cljs.core.zipmap(is,xs));\n});})(q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1))\n);\n}\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(refs,((function (q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1){\nreturn (function (refs_SINGLEQUOTE_){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1){\nreturn (function (ret__$1,p__56830){\nvar vec__56831 = p__56830;\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56831,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56831,(1),null);\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret__$1,i,cljs.core.merge,x);\n});})(q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1))\n,refs_SINGLEQUOTE_,cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,is,xs));\n});})(q,ret,is,xs,vec__56817,k,sel,recursive_QMARK_,union_entry,sel__$1,class$,v,expr,data__$1))\n);\n}\n\nvar G__56861 = cljs.core.next(q);\nvar G__56862 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,is);\nq = G__56861;\nret = G__56862;\ncontinue;\n} else {\nvar G__56863 = cljs.core.next(q);\nvar G__56864 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,xs);\nq = G__56863;\nret = G__56864;\ncontinue;\n}\n} else {\nif((v == null)){\nvar G__56865 = cljs.core.next(q);\nvar G__56866 = ret;\nq = G__56865;\nret = G__56866;\ncontinue;\n} else {\nvar G__56871 = cljs.core.next(q);\nvar G__56872 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,v);\nq = G__56871;\nret = G__56872;\ncontinue;\n\n}\n}\n}\n}\n} else {\nvar k = ((cljs.core.seq_QMARK_(expr))?cljs.core.first(expr):expr);\nvar v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data__$1,k);\nif((v == null)){\nvar G__56873 = cljs.core.next(q);\nvar G__56874 = ret;\nq = G__56873;\nret = G__56874;\ncontinue;\n} else {\nvar G__56875 = cljs.core.next(q);\nvar G__56876 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,v);\nq = G__56875;\nret = G__56876;\ncontinue;\n}\n}\n} else {\nreturn ret;\n}\nbreak;\n}\n\n}\n}\n}\n});\n/**\n * Given a component class or instance and a tree of data, use the component's\n * query to transform the tree into the default database format. All nodes that\n * can be mapped via Ident implementations wil be replaced with ident links. The\n * original node data will be moved into tables indexed by ident. If merge-idents\n * option is true, will return these tables in the result instead of as metadata.\n */\ncom.fulcrologic.fulcro.algorithms.normalize.tree__GT_db = (function com$fulcrologic$fulcro$algorithms$normalize$tree__GT_db(var_args){\nvar G__56841 = arguments.length;\nswitch (G__56841) {\ncase 2:\nreturn com.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn com.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn com.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncom.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$2 = (function (x,data){\nreturn com.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$3(x,data,false);\n});\n\ncom.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$3 = (function (x,data,merge_idents){\nreturn com.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$4(x,data,merge_idents,null);\n});\n\ncom.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$core$IFn$_invoke$arity$4 = (function (x,data,merge_idents,transform){\nvar refs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar x__$1 = ((cljs.core.vector_QMARK_(x))?x:com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(x,data));\nvar ret = com.fulcrologic.fulcro.algorithms.normalize.normalize_STAR_(x__$1,data,refs,null,transform);\nif(merge_idents){\nvar refs_SINGLEQUOTE_ = cljs.core.deref(refs);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ret,refs_SINGLEQUOTE_], 0));\n} else {\nreturn cljs.core.with_meta(ret,cljs.core.deref(refs));\n}\n});\n\ncom.fulcrologic.fulcro.algorithms.normalize.tree__GT_db.cljs$lang$maxFixedArity = 4;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions for dealing with normalizing Fulcro databases. In particular `tree->db`.","~:file","com/fulcrologic/fulcro/algorithms/normalize.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",48],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.algorithms.normalize","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$edn-query-language.core","^P","~$log","~$taoensso.timbre","~$eql","^P","~$cljs.core","^T","~$goog","^U","~$util","~$com.fulcrologic.fulcro.algorithms.do-not-use","~$com.fulcrologic.fulcro.components","^X","^R","^R","^W","^W"],"~:seen",["^I",["~:require"]],"~:uses",["^ ","~$has-ident?","^X","~$ident","^X","~$get-ident","^X","~$get-query","^X"],"~:require-macros",["^ ","^T","^T","^Q","^R","^X","^X","^R","^R"],"~:form",["~#list",["~$ns","^K","Functions for dealing with normalizing Fulcro databases. In particular `tree->db`.",["^16",["^Z",["^W","~:as","^V"],["^P","^18","^S"],["^R","^18","^Q"],["^X","~:refer",["^10","^11","^12","^13"]]]]]],"~:flags",["^ ","^Z",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^W","^P","^R","^X"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/algorithms/normalize.cljc"],"~:compiled-at",1630698454187,"~:resource-name","com/fulcrologic/fulcro/algorithms/normalize.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.algorithms.normalize\n  \"Functions for dealing with normalizing Fulcro databases. In particular `tree->db`.\"\n  (:require\n    [com.fulcrologic.fulcro.algorithms.do-not-use :as util]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]\n    [com.fulcrologic.fulcro.components :refer [has-ident? ident get-ident get-query]]))\n\n(defn- normalize* [query data refs union-seen transform]\n  (let [data (if (and transform (not (vector? data)))\n               (transform query data)\n               data)]\n    (cond\n      (= '[*] query) data\n\n      ;; union case\n      (map? query)\n      (let [class (-> query meta :component)\n            ident (get-ident class data)]\n        (if-not (nil? ident)\n          (vary-meta (normalize* (get query (first ident)) data refs union-seen transform)\n            assoc ::tag (first ident))                      ; FIXME: What is tag for?\n          (throw (ex-info \"Union components must have an ident\" {}))))\n\n      (vector? data) data                                   ;; already normalized\n\n      :else\n      (loop [q (seq query) ret data]\n        (if-not (nil? q)\n          (let [expr (first q)]\n            (if (util/join? expr)\n              (let [[k sel] (util/join-entry expr)\n                    recursive?  (util/recursion? sel)\n                    union-entry (if (util/union? expr) sel union-seen)\n                    sel         (if recursive?\n                                  (if-not (nil? union-seen)\n                                    union-seen\n                                    query)\n                                  sel)\n                    class       (-> sel meta :component)\n                    v           (get data k)]\n                (cond\n                  ;; graph loop: db->tree leaves ident in place\n                  (and recursive? (eql/ident? v)) (recur (next q) ret)\n                  ;; normalize one\n                  (map? v)\n                  (let [x (normalize* sel v refs union-entry transform)]\n                    (if-not (or (nil? class) (not (has-ident? class)))\n                      (let [i (get-ident class x)]\n                        (swap! refs update-in [(first i) (second i)] merge x)\n                        (recur (next q) (assoc ret k i)))\n                      (recur (next q) (assoc ret k x))))\n\n                  ;; normalize many\n                  (and (vector? v) (not (eql/ident? v)) (not (eql/ident? (first v))))\n                  (let [xs (into [] (map #(normalize* sel % refs union-entry transform)) v)]\n                    (if-not (or (nil? class) (not (has-ident? class)))\n                      (let [is (into [] (map #(get-ident class %)) xs)]\n                        (if (vector? sel)\n                          (when-not (empty? is)\n                            (swap! refs\n                              (fn [refs]\n                                (reduce (fn [m [i x]]\n                                          (update-in m i merge x))\n                                  refs (zipmap is xs)))))\n                          ;; union case\n                          (swap! refs\n                            (fn [refs']\n                              (reduce\n                                (fn [ret [i x]]\n                                  (update-in ret i merge x))\n                                refs' (map vector is xs)))))\n                        (recur (next q) (assoc ret k is)))\n                      (recur (next q) (assoc ret k xs))))\n\n                  ;; missing key\n                  (nil? v)\n                  (recur (next q) ret)\n\n                  ;; can't handle\n                  :else (recur (next q) (assoc ret k v))))\n              (let [k (if (seq? expr) (first expr) expr)\n                    v (get data k)]\n                (if (nil? v)\n                  (recur (next q) ret)\n                  (recur (next q) (assoc ret k v))))))\n          ret)))))\n\n(defn tree->db\n  \"Given a component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata.\"\n  ([x data]\n   (tree->db x data false))\n  ([x data #?(:clj merge-idents :cljs ^boolean merge-idents)]\n   (tree->db x data merge-idents nil))\n  ([x data #?(:clj merge-idents :cljs ^boolean merge-idents) transform]\n   (let [refs (atom {})\n         x    (if (vector? x) x (get-query x data))\n         ret  (normalize* x data refs nil transform)]\n     (if merge-idents\n       (let [refs' @refs] (merge ret refs'))\n       (with-meta ret @refs)))))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAQA,AAAA,AAAOA,AAAYC,AAAMC,AAAKC,AAAKC,AAAWC;AAA9C,AACE,AAAMH,AAAK,AAAI,AAAAI,AAAKD;AAAL,AAAA,AAAAC;AAAe,AAAK,AAACC,AAAQL;;AAA7BI;;AACF,AAACD,AAAAA,AAAAA,AAAUJ,AAAAA,AAAMC,AAAAA,AACjBA;AAFb,AAGE,AACE,AAAA,AAAA,AAACM,AAAOP;AAAOC;;AADjB,AAIE,AAACO,AAAKR;AACN,AAAMS,AAAM,AAAA,AAAA,AAAIT,AAAMU;AAChBC,AAAM,AAACC,AAAAA,AAAAA,AAAUH,AAAAA,AAAMR,AAAAA;AAD7B,AAEE,AAAA,AAAQ,AAAA,AAAMU;AACZ,AAACE,AAAU,AAAAC,AAAY,AAACK,AAAInB,AAAM,AAACoB,AAAMT;AAA9BI,AAAsCd;AAAtCe,AAA2Cd;AAA3Ce,AAAgDd;AAAhDe,AAA2Dd;AAA3D,AAAA,AAAAU,AAAAC,AAAAC,AAAAC,AAAAC,AAAAJ,AAAAC,AAAAC,AAAAC,AAAAC,AAACnB,AAAAA,AAAAA;AAAZ,AACEsB,AAAY,AAACD,AAAMT;;AACrB,AAAO,AAAA,AAAA,AAACW;;;AAVd,AAYE,AAAChB,AAAQL;AAAMA;;AAZjB,AAeE,AAAOsB,AAAE,AAACC,AAAIxB;AAAOyB,AAAIxB;;AAAzB,AACE,AAAA,AAAQ,AAAA,AAAMsB;AACZ,AAAMG,AAAK,AAACN,AAAMG;AAAlB,AACE,AAAI,AAACI,AAAWD;AACd,AAAAE,AAAc,AAACI,AAAgBN;AAA/B,AAAAG,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAASG;AACHE,AAAY,AAACC,AAAgBH;AAC7BI,AAAY,AAAI,AAACC,AAAYV,AAAMK,AAAI5B;AACvC4B,AAAY,AAAIE,AACF,AAAA,AAAQ,AAAA,AAAM9B,AACZA,AACAH,AACF+B;AACdtB,AAAY,AAAA,AAAA,AAAIsB,AAAIrB;AACpB2B,AAAY,AAAClB,AAAIlB,AAAK6B;AAT5B,AAUE,AAEE,AAAKG,AAAW,AAACK,AAAWD;AAAI,AAAO,AAACE,AAAKhB;AAAGE;;;;;AAFlD,AAIE,AAACjB,AAAK6B;AACN,AAAMG,AAAE,AAACzC,AAAAA,AAAAA,AAAWgC,AAAAA,AAAIM,AAAAA,AAAEnC,AAAAA,AAAKiC,AAAAA,AAAY/B,AAAAA;AAA3C,AACE,AAAA,AAAQ,AAAI,AAAA,AAAMK,AAAO,AAAK,AAACgC,AAAWhC;AACxC,AAAMiC,AAAE,AAAC9B,AAAAA,AAAAA,AAAUH,AAAAA,AAAM+B,AAAAA;AAAzB,AACE,AAAA,AAACG,AAAMzC,AAAK0C,AAAW,AAACxB,AAAMsB,AAAG,AAACG,AAAOH,AAAII,AAAMN;;AACnD,AAAO,AAACD,AAAKhB;AAAG,AAACwB,AAAMtB,AAAIK,AAAEY;;;;;AAC/B,AAAO,AAACH,AAAKhB;AAAG,AAACwB,AAAMtB,AAAIK,AAAEU;;;;;;AAVnC,AAaE,AAAK,AAAClC,AAAQ+B,AAAG,AAAK,AAACC,AAAWD,AAAI,AAAK,AAACC,AAAW,AAAClB,AAAMiB;AAC9D,AAAMW,AAAG,AAAA,AAACC,AAAQ,AAAA,AAACE;AAADD;AAAA,AAAM,AAAAA,AAAAA,AAACnD,AAAAA,AAAAA,AAAWgC,AAAAA,AAAM7B,AAAAA,AAAKiC,AAAAA,AAAY/B,AAAAA;;AAAYiC;AAAvE,AACE,AAAA,AAAQ,AAAI,AAAA,AAAM5B,AAAO,AAAK,AAACgC,AAAWhC;AACxC,AAAM2C,AAAG,AAAA,AAACH,AAAQ,AAAA,AAACE;AAADE;AAAA,AAAM,AAAAA,AAAAA,AAACzC,AAAAA,AAAAA,AAAUH,AAAAA;;AAAUuC;AAA7C,AACE,AAAI,AAAC1C,AAAQyB;AACX,AAAU,AAACuB,AAAOF;AAAlB;AAAA,AACE,AAACT,AAAMzC,AACL;AAAKA;AAAL,AACE,AAACqD,AAAO;AAAAC,AAAKE;AAAL,AAAA,AAAAD,AAAAD;AAAA,AAAA3B,AAAA4B,AAAA,AAAA,AAAQf;AAAR,AAAAb,AAAA4B,AAAA,AAAA,AAAUjB;AAAV,AACE,AAACmB,AAAUD,AAAEhB,AAAEI,AAAMN;;AAC7BtC,AAAK,AAAC0D,AAAOR,AAAGJ;;;;;AAExB,AAACL,AAAMzC,AACL;AAAK2D;AAAL,AACE,AAACN,AACC;AAAAO,AAAKrC;AAAL,AAAA,AAAAsC,AAAAD;AAAA,AAAAjC,AAAAkC,AAAA,AAAA,AAAUrB;AAAV,AAAAb,AAAAkC,AAAA,AAAA,AAAYvB;AAAZ,AACE,AAACmB,AAAUlC,AAAIiB,AAAEI,AAAMN;;AACzBqB,AAAM,AAACV,AAAIa,AAAOZ,AAAGJ;;;;;AAC7B,AAAO,AAACT,AAAKhB;AAAG,AAACwB,AAAMtB,AAAIK,AAAEsB;;;;;AAC/B,AAAO,AAACb,AAAKhB;AAAG,AAACwB,AAAMtB,AAAIK,AAAEkB;;;;;;AAhCnC,AAmCE,AAAA,AAAMX;AACN,AAAO,AAACE,AAAKhB;AAAGE;;;;;AApClB,AAuCQ,AAAO,AAACc,AAAKhB;AAAG,AAACwB,AAAMtB,AAAIK,AAAEO;;;;;;;;;;AACvC,AAAMP,AAAE,AAAI,AAACmC,AAAKvC,AAAM,AAACN,AAAMM,AAAMA;AAC/BW,AAAE,AAAClB,AAAIlB,AAAK6B;AADlB,AAEE,AAAI,AAAA,AAAMO;AACR,AAAO,AAACE,AAAKhB;AAAGE;;;;;AAChB,AAAO,AAACc,AAAKhB;AAAG,AAACwB,AAAMtB,AAAIK,AAAEO;;;;;;;AACrCZ;;;;;;;;;AAEV,AAAA;;;;;;;AAAA,AAAAyC,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAMF5B,AAAEvC;AANN,AAOG,AAAA,AAACqE,AAAS9B,AAAEvC;;;AAPf,AAAA,AAAA,AAAMmE,AAQF5B,AAAEvC,AAAyCsE;AAR/C,AASG,AAAA,AAACD,AAAS9B,AAAEvC,AAAKsE;;;AATpB,AAAA,AAAA,AAAMH,AAUF5B,AAAEvC,AAAyCsE,AAAcnE;AAV7D,AAWG,AAAMF,AAAK,AAAA,AAACsE;AACNhC,AAAK,AAAI,AAAClC,AAAQkC,AAAGA,AAAE,AAACiC,AAAUjC,AAAEvC;AACpCwB,AAAK,AAAA,AAAC1B,AAAWyC,AAAEvC,AAAKC,AAASE;AAFvC,AAGE,AAAImE;AACF,AAAA,AAAAG,AAAMb,AAAO3D;AAAb,AAAmB,AAACyE,AAAMlD,AAAIoC;;AAC9B,AAAA,AAAAa,AAACE,AAAUnD,AAAKvB;;;;AAhBvB,AAAA,AAAA,AAAMkE;;AAAN","names",["com.fulcrologic.fulcro.algorithms.normalize/normalize*","query","data","refs","union-seen","transform","and__4120__auto__","cljs.core/vector?","cljs.core._EQ_","cljs.core/map?","class","cljs.core/meta","ident","com.fulcrologic.fulcro.components/get-ident","cljs.core.vary_meta","G__56771","G__56772","G__56773","G__56774","G__56775","cljs.core.get","cljs.core/first","cljs.core/assoc","cljs.core.ex_info","q","cljs.core/seq","ret","expr","com.fulcrologic.fulcro.algorithms.do-not-use/join?","vec__56817","cljs.core.nth","k","sel","com.fulcrologic.fulcro.algorithms.do-not-use/join-entry","recursive?","com.fulcrologic.fulcro.algorithms.do-not-use/recursion?","union-entry","com.fulcrologic.fulcro.algorithms.do-not-use/union?","v","edn-query-language.core/ident?","cljs.core/next","x","com.fulcrologic.fulcro.components/has-ident?","i","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/second","cljs.core/merge","cljs.core.assoc","xs","cljs.core.into","p1__56757#","cljs.core.map","is","p1__56758#","cljs.core/empty?","cljs.core.reduce","p__56825","vec__56826","m","cljs.core.update_in","cljs.core/zipmap","refs'","p__56830","vec__56831","cljs.core/vector","cljs.core/seq?","var_args","G__56841","com.fulcrologic.fulcro.algorithms.normalize/tree->db","js/Error","com.fulcrologic.fulcro.algorithms.normalize.tree__GT_db","merge-idents","cljs.core.atom","com.fulcrologic.fulcro.components.get_query","cljs.core/deref","cljs.core.merge","cljs.core/with-meta"]],"~:used-vars",["^I",["~$com.fulcrologic.fulcro.algorithms.do-not-use/join?","~$cljs.core/vector?","~$cljs.core/=","~$edn-query-language.core/ident?","~$cljs.core/deref","~$com.fulcrologic.fulcro.components/has-ident?","~$cljs.core/reduce","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/vary-meta","~$cljs.core/zipmap","~$cljs.core/with-meta","~$cljs.core/map","~$cljs.core/swap!","~$com.fulcrologic.fulcro.algorithms.normalize/tree->db","~$cljs.core/ex-info","~$cljs.core/second","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$com.fulcrologic.fulcro.algorithms.normalize/normalize*","~$cljs.core/first","~$cljs.core/merge","~$cljs.core/update-in","~$js/Error","~$cljs.core/vector"]]],"~:cache-keys",["~#cmap",[["^1>","com/fulcrologic/fulcro/algorithms/normalize.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^U","^T","^W","^P","^R","^X"]]],["^1>","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.dom.HtmlElement"]]],["^1>","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$cljs.core.async.impl.protocols"]]],["^1>","goog/i18n/datetimesymbols.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.labs.userAgent.util","~$goog.string"]]],["^1>","expound/util.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T"]]],["^1>","goog/crypt/crypt.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.array","~$goog.asserts"]]],["^1>","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2?","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","^2B"]]],["^1>","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.Promise","~$goog.events.EventTarget"]]],["^1>","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^R"]]],["^1>","cljs/spec/gen/alpha.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$goog.Uri"]]],["^1>","cljs/tools/reader/impl/utils.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$clojure.string","^2A"]]],["^1>","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C"]]],["^1>","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2A"]]],["^1>","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1>","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2@","~$goog.object","~$goog.string.internal"]]],["^1>","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2P"]]],["^1>","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C"]]],["^1>","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^R","^2L","^P","^2O","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1>","expound/problems.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$expound.paths","^@"]]],["^1>","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2@","~$goog.reflect","^2A"]]],["^1>","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1>","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1>","com/cognitect/transit/impl/reader.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1>","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.async.FreeList"]]],["^1>","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2M","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1>","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2N"]]],["^1>","cljs/tools/reader/edn.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2A","~$goog.string.StringBuffer"]]],["^1>","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.structs.Heap"]]],["^1>","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.Timer","^2B","^2C","^3:","^2J","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2O","^2A","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^2N"]]],["^1>","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","com/fulcrologic/fulcro/algorithms/transit.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$cognitect.transit","~$com.fulcrologic.guardrails.core","^@","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1>","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","com/fulcrologic/guardrails/utils.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$clojure.walk"]]],["^1>","cljs/tools/reader/impl/inspect.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T"]]],["^1>","com/cognitect/transit/util.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2O"]]],["^1>","cljs/pprint.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2L","^2A","^3C"]]],["^1>","cljs/tools/reader.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^3?","^3@","^3A","^3>","^2B","^2A","^3C"]]],["^1>","expound/alpha.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$expound.problems","^@","^2L","~$clojure.set","^3R","~$expound.printer","~$expound.util","~$expound.ansi","^F"]]],["^1>","taoensso/timbre.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2L","~$goog.i18n.DateTimeFormat","~$taoensso.encore","~$taoensso.timbre.appenders.core"]]],["^1>","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1>","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.Disposable","^2C","~$goog.events","~$goog.events.Event","^3<","^3=","^2O"]]],["^1>","com/fulcrologic/guardrails/core.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^B","^@","^2L","~$expound.alpha"]]],["^1>","goog/date/datelike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.disposable.IDisposable"]]],["^1>","expound/ansi.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2L"]]],["^1>","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1>","shadow/js.js"],["a28c87ae0213bed612cfecb8f26fb03110b51629","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C"]]],["^1>","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2L","^3T","~$cljs.reader","~$cljs.tools.reader.edn","^2O","^2B","^2A","~$goog.string.format","^3C","^42","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^3I","^3H","~$taoensso.truss"]]],["^1>","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^3L","~$goog.structs.Collection","^3M"]]],"~:SHADOW-TIMESTAMP",[1630697950000,1630697950000,1630228118000],["^48","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","754b7a48941975257c8955f6d5e511cb3a878737","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^49","~$module$node_modules$object_assign$index"]]],["^1>","taoensso/timbre/appenders/core.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2L","^3Y"]]],["^1>","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","^31"]]],["^1>","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.events.ListenableKey"]]],["^1>","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.html.trustedtypes","^2S","^2T","^2U","^2V"]]],["^1>","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2?","^2G","^2E"]]],["^1>","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","~$goog.events.Listener","^2O"]]],["^1>","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$taoensso.truss.impl"]]],["^1>","com/fulcrologic/guardrails/registry.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T"]]],["^1>","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^@"]]],["^1>","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2E","^35"]]],["^1>","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","~$goog.html.SafeUrl","^2U","^2V","^2P"]]],["^1>","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4J","^2R","~$goog.html.uncheckedconversions","^2U","^2P"]]],["^1>","expound/paths.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^@","^3V"]]],["^1>","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^3T"]]],["^1>","clojure/walk.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T"]]],["^1>","goog/useragent/product.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2Z","^30","^2N"]]],["^1>","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T"]]],["^1>","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1>","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^4?","~$goog.structs.PriorityPool"]]],["^1>","com/cognitect/transit/delimiters.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/date/date.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.date.DateLike","~$goog.i18n.DateTimeSymbols","^2A"]]],["^1>","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","~$goog.dom.TagName","~$goog.dom.tags","^4N","^4O","~$goog.html.SafeStyleSheet","^4J","^2R","^4G","^2S","^2T","^2Z","^2O","^2U","^2V","^2P"]]],["^1>","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2O"]]],["^1>","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","com/fulcrologic/fulcro/raw/components.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2O","^3T","^2L","^3R","~$com.fulcrologic.fulcro.algorithms.denormalize","^W","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.fulcro.algorithms.transit","^P","^3Y","^R"]]],["^1>","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B"]]],["^1>","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2@","^2A"]]],["^1>","com/cognitect/transit/impl/decoder.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^38","~$com.cognitect.transit.types"]]],["^1>","cljs/reader.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2O","^3B","^4=","^3C"]]],["^1>","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4V","~$goog.dom.safe","^4M","^4P","~$goog.math.Coordinate","~$goog.math.Size","^2O","^2A","~$goog.string.Unicode","^2N"]]],["^1>","com/fulcrologic/guardrails/impl/externs.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$com.fulcrologic.guardrails.registry","^45"]]],["^1>","com/fulcrologic/fulcro/components.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2O","~$cljsjs.react","^P","^@","^R","^3R","^2L","^W","^4Y","^4Z","~$com.fulcrologic.fulcro.raw.components","^3P","^3T"]]],["^1>","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.debug.Error","^54"]]],["^1>","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2?"]]],["^1>","goog/i18n/timezone.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^4T","^2O","^2A"]]],["^1>","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.debug.LogRecord"]]],["^1>","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","^2A","^3L","^3M","^3N","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1>","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^48","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","519ffd5a4c91b67302cc9947b794966d629860cd","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^49"]]],["^1>","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.Thenable","^2C","^39","~$goog.async.run","^36","^5<","~$goog.promise.Resolver"]]],["^1>","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2?","^2D","^2G"]]],["^1>","cljs/spec/alpha.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2O","^3R","^F","^2L"]]],["^1>","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",[]]],["^1>","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.json"]]],["^1>","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2O"]]],["^1>","cljs/tools/reader/impl/errors.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^3?","^2L","~$cljs.tools.reader.impl.inspect"]]],["^1>","cljsjs/react.cljs"],["9ba9f8ed128a3c607c8b81217a06b6098d2484d1","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$module$node_modules$react$index"]]],["^1>","clojure/string.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2A","^3C"]]],["^1>","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^R","^3R"]]],["^1>","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^41","~$goog.structs.Queue","~$goog.structs.Set"]]],["^48","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","0a81b45abe33f0ad39b726512604018f94261db9","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^49","^4E"]]],["^1>","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/i18n/datetimeformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.date","^4U","~$goog.i18n.TimeZone","^2A"]]],["^1>","com/cognitect/transit/handlers.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^50","^52","~$goog.math.Long"]]],["^1>","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2O","~$goog.structs.Node"]]],["^1>","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C"]]],["^1>","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^55","^4P","^2U","^2P"]]],["^1>","com/cognitect/transit/types.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^50","~$com.cognitect.transit.eq","^5J"]]],["^1>","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2P"]]],["^1>","expound/printer.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^2L","^@","^D","^3T","^3V","^3W","^2Y","^3R","^4>","^2A"]]],["^1>","com/cognitect/transit/eq.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^50"]]],["^1>","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","~$goog.debug.errorcontext","^2N"]]],["^1>","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","~$goog.math"]]],["^1>","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","cljs/tools/reader/reader_types.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^3@","^2A","^3C"]]],["^1>","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","^4L","^5N"]]],["^1>","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^3:","~$goog.dom","^4V","^55","^4L","^4M","^2R","^2Z","^2[","^2U"]]],["^1>","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","^4M","^4N","^4O","^4X","^4J","^2R","^2U","^2P"]]],["^1>","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","~$goog.debug","~$goog.debug.LogBuffer","^5="]]],["^1>","com/cognitect/transit/caching.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^51"]]],["^1>","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^41","~$goog.events.EventId"]]],["^1>","cljs/tools/reader/impl/commons.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^3>","^3?","^3@"]]],["^1>","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","cljs/core.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^5J","~$goog.math.Integer","^2A","^2O","^2B","^2K","^3C"]]],["^1>","com/cognitect/transit.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^50","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^52","^5L","^37","^38"]]],["^1>","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","^4G","^2U","^2V"]]],["^1>","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^5P","~$goog.debug.LogManager","^5=","~$goog.debug.Logger"]]],["^1>","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","^4O","^2O","^2U","^2V","^2P"]]],["^1>","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^5P","^2M","^43","~$goog.events.EventType","^31","^2N"]]],["^1>","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^31"]]],["^1>","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2N"]]],["^1>","clojure/set.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T"]]],["^1>","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2B","^2C","^2A"]]],["^1>","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","^2V"]]],["^1>","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^5R"]]],["^1>","com/cognitect/transit/impl/writer.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^50","^38","~$com.cognitect.transit.handlers","^52","^51","^5J"]]],["^1>","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^3["]]],["^1>","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","^3T","^P","^R"]]],["^1>","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","~$goog.net.WrapperXmlHttpFactory","^40"]]],["^1>","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U"]]],["^1>","cognitect/transit.cljs"],["ad84ab433eb8b60faeacb580428cb748997b0ff3","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^T","~$com.cognitect.transit","^52","^5L","^5J"]]],["^1>","goog/crypt/base64.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2:",["^ ","^2;",null,"^2<",["^I",[]],"^2=",["^U","^2C","^2W","^2A","^2N","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/raw/components.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/ast.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/alpha.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/config.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/impl/errors.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/utils.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/utils.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/impl/inspect.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/util.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/buffers.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/printer.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/ansi.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/ioc_macros.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/timers.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/mutex.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/components.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/edn.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre/appenders/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/default_data_readers.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/paths.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/problems.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/transit.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/reader_types.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/env.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/channels.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/registry.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/edn-query-language/eql/1.0.1/eql-1.0.1.jar!/edn_query_language/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/com/cognitect/transit-clj/1.0.324/transit-clj-1.0.324.jar!/cognitect/transit.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/parser.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/cljs/tools/reader/reader_types.clj",1630697950000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions for dealing with normalizing Fulcro databases. In particular `tree->db`.","^7","com/fulcrologic/fulcro/algorithms/normalize.cljc","^8",1,"^9",5,"^:",1,"^;",48],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^N",null,"^O",["^ ","^P","^P","^Q","^R","^S","^P","^T","^T","^U","^U","^V","^W","^X","^X","^R","^R","^W","^W"],"^Y",["^I",["^Z"]],"~:shadow/js-access-global",["^I",["Error"]],"^[",["^ ","^10","^X","^11","^X","^12","^X","^13","^X"],"~:defs",["^ ","~$normalize*",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/normalize.cljc","^8",9,"^9",8,"^:",9,"^;",18,"~:private",true,"~:arglists",["^16",["~$quote",["^16",[["~$query","~$data","~$refs","~$union-seen","~$transform"]]]]]],"^84",true,"^J","^22","^7","com/fulcrologic/fulcro/algorithms/normalize.cljc","^;",18,"~:method-params",["^16",[["^87","^88","^89","^8:","^8;"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^9",1,"~:variadic?",false,"^8",9,"~:ret-tag",["^I",[null,"~$clj","~$any","~$cljs.core/MetaFn","~$clj-nil"]],"^:",9,"~:max-fixed-arity",5,"~:fn-var",true,"^85",["^16",["^86",["^16",[["^87","^88","^89","^8:","^8;"]]]]]],"~$tree->db",["^ ","^83",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/normalize.cljc","^8",89,"^9",7,"^:",89,"^;",15,"^85",["^16",["^86",["^16",[["~$x","^88"],["~$x","^88","~$merge-idents"],["~$x","^88","^8H","^8;"]]]]],"^6","Given a component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata.","~:top-fn",["^ ","^8?",false,"~:fixed-arity",4,"^8E",4,"^8<",["^16",[["~$x","^88"],["~$x","^88","^8H"],["~$x","^88","^8H","^8;"]]],"^85",["^16",[["~$x","^88"],["~$x","^88","^8H"],["~$x","^88","^8H","^8;"]]],"^8>",["^16",[null,null,null]]]],"^J","^1X","^7","com/fulcrologic/fulcro/algorithms/normalize.cljc","^;",15,"^8I",["^ ","^8?",false,"^8J",4,"^8E",4,"^8<",["^16",[["~$x","^88"],["~$x","^88","^8H"],["~$x","^88","^8H","^8;"]]],"^85",["^16",[["~$x","^88"],["~$x","^88","^8H"],["~$x","^88","^8H","^8;"]]],"^8>",["^16",[null,null,null]]],"^8<",["^16",[["~$x","^88"],["~$x","^88","^8H"],["~$x","^88","^8H","^8;"]]],"^8=",null,"^8J",4,"^8>",["^16",[null,null,null]],"^9",1,"^8?",false,"~:methods",[["^ ","^8J",2,"^8?",false,"~:tag","^8B"],["^ ","^8J",3,"^8?",false,"^8L","^8B"],["^ ","^8J",4,"^8?",false,"^8L",["^I",["^8A","^8B","^8C","^8D"]]]],"^8",89,"^:",89,"^8E",4,"^8F",true,"^85",["^16",[["~$x","^88"],["~$x","^88","^8H"],["~$x","^88","^8H","^8;"]]],"^6","Given a component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata."]],"^14",["^ ","^T","^T","^Q","^R","^X","^X","^R","^R"],"~:cljs.analyzer/constants",["^ ","^Y",["^I",["~:else","~$*","~:component","~:com.fulcrologic.fulcro.algorithms.normalize/tag"]],"~:order",["~$*","^8O","^8P","^8N"]],"^1:",["^ ","^Z",["^I",[]]],"^1;",["^ "],"^1<",["^U","^T","^W","^P","^R","^X"]],"^M","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^29",[["^8T","~:static-fns"],true,["^8T","~:shadow-tweaks"],null,["^8T","~:source-map-inline"],null,["^8T","~:elide-asserts"],false,["^8T","~:optimize-constants"],null,["^8T","^1A"],null,["^8T","~:external-config"],null,["^8T","~:tooling-config"],null,["^8T","~:emit-constants"],null,["^8T","~:load-tests"],null,["^8T","~:form-size-threshold"],null,["^8T","~:data-readers"],null,["^8T","~:infer-externs"],"~:auto",["^8T","^1C"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8T","~:fn-invoke-direct"],null,["^8T","~:source-map"],"/dev/null"]]]