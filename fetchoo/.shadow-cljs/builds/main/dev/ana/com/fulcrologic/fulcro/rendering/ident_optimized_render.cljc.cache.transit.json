["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.rendering.ident_optimized_render');\n/**\n * Checks the given `idents` and returns a subset of them where the data they refer to has changed\n * between `old-state` and `new-state`.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$dirty_table_entries(old_state,new_state,idents){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,ident){\nif((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_state,ident) === cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_state,ident))){\nreturn result;\n} else {\nreturn cljs.core.cons(ident,result);\n}\n}),cljs.core.List.EMPTY,idents);\n});\n/**\n * Uses the component's query and the current application state to query for the current value of that component's\n *   props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n *   component-local state).\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_component_BANG_(app__$1,ident,c){\nif(cljs.core.truth_((function (){var and__4120__auto__ = c;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn ident;\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar map__56856 = app__$1;\nvar map__56856__$1 = (((((!((map__56856 == null))))?(((((map__56856.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56856.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56856):map__56856);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56856__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar state_map = cljs.core.deref(state_atom);\nvar query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(c,state_map);\nvar q = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,query])], null);\nvar prior_computed = (function (){var or__4131__auto__ = (com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_computed.call(null,c));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nvar data_tree = (cljs.core.truth_(query)?com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(q,state_map,state_map):null);\nvar new_props = (function (){var G__56858 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_tree,ident);\nvar G__56859 = prior_computed;\nreturn (com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2(G__56858,G__56859) : com.fulcrologic.fulcro.components.computed.call(null,G__56858,G__56859));\n})();\nif(cljs.core.truth_(query)){\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,42,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__56856,map__56856__$1,state_atom,state_map,query,q,prior_computed,data_tree,new_props){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Query was empty. Refresh failed for \",cljs.core.type(c),\"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"], null);\n});})(map__56856,map__56856__$1,state_atom,state_map,query,q,prior_computed,data_tree,new_props))\n,null)),null,-1144839461,null);\n}\n\nreturn com.fulcrologic.fulcro.components.tunnel_props_BANG_(c,new_props);\n} else {\nvar root = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"app-root\",\"com.fulcrologic.fulcro.application/app-root\",835379005).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$1)));\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c,root)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,46,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (root){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to do optimized update. Component\",(function (){var G__56860 = com.fulcrologic.fulcro.components.react_type(c);\nreturn (com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1(G__56860) : com.fulcrologic.fulcro.components.class__GT_registry_key.call(null,G__56860));\n})(),\"queries for data that changed, but does not have an ident.\"], null);\n});})(root))\n,null)),null,-668672704,null);\n} else {\n}\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Targeted update failed\",cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Renders *only* components that *have* the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_components_with_ident_BANG_(app__$1,ident){\nvar seq__56867 = cljs.core.seq(com.fulcrologic.fulcro.components.ident__GT_components(app__$1,ident));\nvar chunk__56868 = null;\nvar count__56869 = (0);\nvar i__56870 = (0);\nwhile(true){\nif((i__56870 < count__56869)){\nvar c = chunk__56868.cljs$core$IIndexed$_nth$arity$2(null,i__56870);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__57114 = seq__56867;\nvar G__57115 = chunk__56868;\nvar G__57116 = count__56869;\nvar G__57117 = (i__56870 + (1));\nseq__56867 = G__57114;\nchunk__56868 = G__57115;\ncount__56869 = G__57116;\ni__56870 = G__57117;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__56867);\nif(temp__5753__auto__){\nvar seq__56867__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__56867__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__56867__$1);\nvar G__57128 = cljs.core.chunk_rest(seq__56867__$1);\nvar G__57129 = c__4550__auto__;\nvar G__57130 = cljs.core.count(c__4550__auto__);\nvar G__57131 = (0);\nseq__56867 = G__57128;\nchunk__56868 = G__57129;\ncount__56869 = G__57130;\ni__56870 = G__57131;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__56867__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__57133 = cljs.core.next(seq__56867__$1);\nvar G__57134 = null;\nvar G__57135 = (0);\nvar G__57136 = (0);\nseq__56867 = G__57133;\nchunk__56868 = G__57134;\ncount__56869 = G__57135;\ni__56870 = G__57136;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Renders components that have, or query for, the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_dependents_of_ident_BANG_(app__$1,ident){\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,ident);\n\nvar map__56878 = app__$1;\nvar map__56878__$1 = (((((!((map__56878 == null))))?(((((map__56878.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56878.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56878):map__56878);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56878__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__56879 = cljs.core.deref(runtime_atom);\nvar map__56879__$1 = (((((!((map__56879 == null))))?(((((map__56879.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56879.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56879):map__56879);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56879__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__56880 = indexes;\nvar map__56880__$1 = (((((!((map__56880 == null))))?(((((map__56880.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56880.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56880):map__56880);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56880__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56880__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56880__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nvar idents_in_joins__$1 = (function (){var or__4131__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nif(cljs.core.contains_QMARK_(idents_in_joins__$1,ident)){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(ident) : prop__GT_classes.call(null,ident));\nif(cljs.core.seq(classes)){\nvar seq__56886 = cljs.core.seq(classes);\nvar chunk__56887 = null;\nvar count__56888 = (0);\nvar i__56889 = (0);\nwhile(true){\nif((i__56889 < count__56888)){\nvar class$ = chunk__56887.cljs$core$IIndexed$_nth$arity$2(null,i__56889);\nvar seq__56910_57149 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__56912_57150 = null;\nvar count__56913_57151 = (0);\nvar i__56914_57152 = (0);\nwhile(true){\nif((i__56914_57152 < count__56913_57151)){\nvar component_57153 = chunk__56912_57150.cljs$core$IIndexed$_nth$arity$2(null,i__56914_57152);\nvar component_ident_57154 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_57153) : com.fulcrologic.fulcro.components.get_ident.call(null,component_57153));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_57154,component_57153);\n\n\nvar G__57158 = seq__56910_57149;\nvar G__57159 = chunk__56912_57150;\nvar G__57160 = count__56913_57151;\nvar G__57161 = (i__56914_57152 + (1));\nseq__56910_57149 = G__57158;\nchunk__56912_57150 = G__57159;\ncount__56913_57151 = G__57160;\ni__56914_57152 = G__57161;\ncontinue;\n} else {\nvar temp__5753__auto___57165 = cljs.core.seq(seq__56910_57149);\nif(temp__5753__auto___57165){\nvar seq__56910_57166__$1 = temp__5753__auto___57165;\nif(cljs.core.chunked_seq_QMARK_(seq__56910_57166__$1)){\nvar c__4550__auto___57167 = cljs.core.chunk_first(seq__56910_57166__$1);\nvar G__57170 = cljs.core.chunk_rest(seq__56910_57166__$1);\nvar G__57171 = c__4550__auto___57167;\nvar G__57172 = cljs.core.count(c__4550__auto___57167);\nvar G__57173 = (0);\nseq__56910_57149 = G__57170;\nchunk__56912_57150 = G__57171;\ncount__56913_57151 = G__57172;\ni__56914_57152 = G__57173;\ncontinue;\n} else {\nvar component_57174 = cljs.core.first(seq__56910_57166__$1);\nvar component_ident_57175 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_57174) : com.fulcrologic.fulcro.components.get_ident.call(null,component_57174));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_57175,component_57174);\n\n\nvar G__57177 = cljs.core.next(seq__56910_57166__$1);\nvar G__57178 = null;\nvar G__57179 = (0);\nvar G__57180 = (0);\nseq__56910_57149 = G__57177;\nchunk__56912_57150 = G__57178;\ncount__56913_57151 = G__57179;\ni__56914_57152 = G__57180;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__57181 = seq__56886;\nvar G__57182 = chunk__56887;\nvar G__57183 = count__56888;\nvar G__57184 = (i__56889 + (1));\nseq__56886 = G__57181;\nchunk__56887 = G__57182;\ncount__56888 = G__57183;\ni__56889 = G__57184;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__56886);\nif(temp__5753__auto__){\nvar seq__56886__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__56886__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__56886__$1);\nvar G__57187 = cljs.core.chunk_rest(seq__56886__$1);\nvar G__57188 = c__4550__auto__;\nvar G__57189 = cljs.core.count(c__4550__auto__);\nvar G__57190 = (0);\nseq__56886 = G__57187;\nchunk__56887 = G__57188;\ncount__56888 = G__57189;\ni__56889 = G__57190;\ncontinue;\n} else {\nvar class$ = cljs.core.first(seq__56886__$1);\nvar seq__56927_57191 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__56929_57192 = null;\nvar count__56930_57193 = (0);\nvar i__56931_57194 = (0);\nwhile(true){\nif((i__56931_57194 < count__56930_57193)){\nvar component_57196 = chunk__56929_57192.cljs$core$IIndexed$_nth$arity$2(null,i__56931_57194);\nvar component_ident_57197 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_57196) : com.fulcrologic.fulcro.components.get_ident.call(null,component_57196));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_57197,component_57196);\n\n\nvar G__57200 = seq__56927_57191;\nvar G__57201 = chunk__56929_57192;\nvar G__57202 = count__56930_57193;\nvar G__57203 = (i__56931_57194 + (1));\nseq__56927_57191 = G__57200;\nchunk__56929_57192 = G__57201;\ncount__56930_57193 = G__57202;\ni__56931_57194 = G__57203;\ncontinue;\n} else {\nvar temp__5753__auto___57204__$1 = cljs.core.seq(seq__56927_57191);\nif(temp__5753__auto___57204__$1){\nvar seq__56927_57210__$1 = temp__5753__auto___57204__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__56927_57210__$1)){\nvar c__4550__auto___57211 = cljs.core.chunk_first(seq__56927_57210__$1);\nvar G__57212 = cljs.core.chunk_rest(seq__56927_57210__$1);\nvar G__57213 = c__4550__auto___57211;\nvar G__57214 = cljs.core.count(c__4550__auto___57211);\nvar G__57215 = (0);\nseq__56927_57191 = G__57212;\nchunk__56929_57192 = G__57213;\ncount__56930_57193 = G__57214;\ni__56931_57194 = G__57215;\ncontinue;\n} else {\nvar component_57221 = cljs.core.first(seq__56927_57210__$1);\nvar component_ident_57222 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_57221) : com.fulcrologic.fulcro.components.get_ident.call(null,component_57221));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_57222,component_57221);\n\n\nvar G__57223 = cljs.core.next(seq__56927_57210__$1);\nvar G__57224 = null;\nvar G__57225 = (0);\nvar G__57226 = (0);\nseq__56927_57191 = G__57223;\nchunk__56929_57192 = G__57224;\ncount__56930_57193 = G__57225;\ni__56931_57194 = G__57226;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__57227 = cljs.core.next(seq__56886__$1);\nvar G__57228 = null;\nvar G__57229 = (0);\nvar G__57230 = (0);\nseq__56886 = G__57227;\nchunk__56887 = G__57228;\ncount__56888 = G__57229;\ni__56889 = G__57230;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given an app and a `property-set`: returns the components that query for the items in property-set.\n * \n *   The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n *   in a component query as a property or join key.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$props__GT_components(app__$1,property_set){\nif(cljs.core.seq(property_set)){\nvar map__56947 = app__$1;\nvar map__56947__$1 = (((((!((map__56947 == null))))?(((((map__56947.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56947.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56947):map__56947);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56947__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__56948 = cljs.core.deref(runtime_atom);\nvar map__56948__$1 = (((((!((map__56948 == null))))?(((((map__56948.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56948.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56948):map__56948);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56948__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__56949 = indexes;\nvar map__56949__$1 = (((((!((map__56949 == null))))?(((((map__56949.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56949.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56949):map__56949);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56949__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56949__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (map__56947,map__56947__$1,runtime_atom,map__56948,map__56948__$1,indexes,map__56949,map__56949__$1,prop__GT_classes,class__GT_components){\nreturn (function (result,prop){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(prop) : prop__GT_classes.call(null,prop));\nvar components = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (classes,map__56947,map__56947__$1,runtime_atom,map__56948,map__56948__$1,indexes,map__56949,map__56949__$1,prop__GT_classes,class__GT_components){\nreturn (function (p1__56944_SHARP_,p2__56945_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__56944_SHARP_,(class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(p2__56945_SHARP_) : class__GT_components.call(null,p2__56945_SHARP_)));\n});})(classes,map__56947,map__56947__$1,runtime_atom,map__56948,map__56948__$1,indexes,map__56949,map__56949__$1,prop__GT_classes,class__GT_components))\n,cljs.core.PersistentHashSet.EMPTY,classes);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(result,components);\n});})(map__56947,map__56947__$1,runtime_atom,map__56948,map__56948__$1,indexes,map__56949,map__56949__$1,prop__GT_classes,class__GT_components))\n,cljs.core.PersistentHashSet.EMPTY,property_set);\n} else {\nreturn null;\n}\n});\n/**\n * This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n * uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n * When it finds data that has changed it renders all of the components that depend on that data.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_stale_components_BANG_(app__$1){\nvar map__56965 = app__$1;\nvar map__56965__$1 = (((((!((map__56965 == null))))?(((((map__56965.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56965.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56965):map__56965);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56965__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56965__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar map__56966 = cljs.core.deref(runtime_atom);\nvar map__56966__$1 = (((((!((map__56966 == null))))?(((((map__56966.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56966.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56966):map__56966);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56966__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar last_rendered_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56966__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"last-rendered-state\",\"com.fulcrologic.fulcro.application/last-rendered-state\",1438978441));\nvar to_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56966__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829));\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56966__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206));\nvar map__56967 = indexes;\nvar map__56967__$1 = (((((!((map__56967 == null))))?(((((map__56967.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56967.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56967):map__56967);\nvar linked_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56967__$1,new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714));\nvar ident__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56967__$1,new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224));\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56967__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56967__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar limited_refresh_QMARK_ = cljs.core.seq(only_refresh);\nif(limited_refresh_QMARK_){\nvar map__56979 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,only_refresh);\nvar map__56979__$1 = (((((!((map__56979 == null))))?(((((map__56979.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__56979.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__56979):map__56979);\nvar limited_idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56979__$1,true);\nvar limited_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__56979__$1,false);\nvar limited_to_render = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,limited_props);\nvar seq__56986_57250 = cljs.core.seq(limited_to_render);\nvar chunk__56988_57251 = null;\nvar count__56989_57252 = (0);\nvar i__56990_57253 = (0);\nwhile(true){\nif((i__56990_57253 < count__56989_57252)){\nvar c_57255 = chunk__56988_57251.cljs$core$IIndexed$_nth$arity$2(null,i__56990_57253);\nvar ident_57257 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_57255) : com.fulcrologic.fulcro.components.get_ident.call(null,c_57255));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_57257,c_57255);\n\n\nvar G__57260 = seq__56986_57250;\nvar G__57261 = chunk__56988_57251;\nvar G__57262 = count__56989_57252;\nvar G__57263 = (i__56990_57253 + (1));\nseq__56986_57250 = G__57260;\nchunk__56988_57251 = G__57261;\ncount__56989_57252 = G__57262;\ni__56990_57253 = G__57263;\ncontinue;\n} else {\nvar temp__5753__auto___57264 = cljs.core.seq(seq__56986_57250);\nif(temp__5753__auto___57264){\nvar seq__56986_57267__$1 = temp__5753__auto___57264;\nif(cljs.core.chunked_seq_QMARK_(seq__56986_57267__$1)){\nvar c__4550__auto___57268 = cljs.core.chunk_first(seq__56986_57267__$1);\nvar G__57269 = cljs.core.chunk_rest(seq__56986_57267__$1);\nvar G__57270 = c__4550__auto___57268;\nvar G__57271 = cljs.core.count(c__4550__auto___57268);\nvar G__57272 = (0);\nseq__56986_57250 = G__57269;\nchunk__56988_57251 = G__57270;\ncount__56989_57252 = G__57271;\ni__56990_57253 = G__57272;\ncontinue;\n} else {\nvar c_57273 = cljs.core.first(seq__56986_57267__$1);\nvar ident_57274 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_57273) : com.fulcrologic.fulcro.components.get_ident.call(null,c_57273));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_57274,c_57273);\n\n\nvar G__57275 = cljs.core.next(seq__56986_57267__$1);\nvar G__57276 = null;\nvar G__57277 = (0);\nvar G__57278 = (0);\nseq__56986_57250 = G__57275;\nchunk__56988_57251 = G__57276;\ncount__56989_57252 = G__57277;\ni__56990_57253 = G__57278;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__57004 = cljs.core.seq(limited_idents);\nvar chunk__57005 = null;\nvar count__57006 = (0);\nvar i__57007 = (0);\nwhile(true){\nif((i__57007 < count__57006)){\nvar i = chunk__57005.cljs$core$IIndexed$_nth$arity$2(null,i__57007);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__57281 = seq__57004;\nvar G__57282 = chunk__57005;\nvar G__57283 = count__57006;\nvar G__57284 = (i__57007 + (1));\nseq__57004 = G__57281;\nchunk__57005 = G__57282;\ncount__57006 = G__57283;\ni__57007 = G__57284;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__57004);\nif(temp__5753__auto__){\nvar seq__57004__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57004__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__57004__$1);\nvar G__57287 = cljs.core.chunk_rest(seq__57004__$1);\nvar G__57288 = c__4550__auto__;\nvar G__57289 = cljs.core.count(c__4550__auto__);\nvar G__57290 = (0);\nseq__57004 = G__57287;\nchunk__57005 = G__57288;\ncount__57006 = G__57289;\ni__57007 = G__57290;\ncontinue;\n} else {\nvar i = cljs.core.first(seq__57004__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__57293 = cljs.core.next(seq__57004__$1);\nvar G__57294 = null;\nvar G__57295 = (0);\nvar G__57296 = (0);\nseq__57004 = G__57293;\nchunk__57005 = G__57294;\ncount__57006 = G__57295;\ni__57007 = G__57296;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nvar state_map = cljs.core.deref(state_atom);\nvar idents_in_joins__$1 = (function (){var or__4131__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nvar dirty_linked_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (state_map,idents_in_joins__$1,map__56965,map__56965__$1,runtime_atom,state_atom,map__56966,map__56966__$1,indexes,last_rendered_state,to_refresh,only_refresh,map__56967,map__56967__$1,linked_props,ident__GT_components,prop__GT_classes,idents_in_joins,limited_refresh_QMARK_){\nreturn (function (acc,p){\nif((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(state_map,p) === cljs.core.get.cljs$core$IFn$_invoke$arity$2(last_rendered_state,p))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,p);\n} else {\nreturn acc;\n}\n});})(state_map,idents_in_joins__$1,map__56965,map__56965__$1,runtime_atom,state_atom,map__56966,map__56966__$1,indexes,last_rendered_state,to_refresh,only_refresh,map__56967,map__56967__$1,linked_props,ident__GT_components,prop__GT_classes,idents_in_joins,limited_refresh_QMARK_))\n,cljs.core.PersistentHashSet.EMPTY,linked_props);\nvar map__57020 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,to_refresh);\nvar map__57020__$1 = (((((!((map__57020 == null))))?(((((map__57020.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__57020.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__57020):map__57020);\nvar idents_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57020__$1,true);\nvar props_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57020__$1,false);\nvar props_to_force__$1 = clojure.set.union.cljs$core$IFn$_invoke$arity$2(props_to_force,dirty_linked_props);\nvar mounted_idents = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(ident__GT_components),idents_in_joins__$1);\nvar stale_idents = com.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries(last_rendered_state,state_map,mounted_idents);\nvar extra_to_force = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,props_to_force__$1);\nvar all_idents = clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.core.set(idents_to_force),cljs.core.set(stale_idents));\nvar seq__57031_57311 = cljs.core.seq(all_idents);\nvar chunk__57032_57312 = null;\nvar count__57033_57313 = (0);\nvar i__57034_57314 = (0);\nwhile(true){\nif((i__57034_57314 < count__57033_57313)){\nvar i_57317 = chunk__57032_57312.cljs$core$IIndexed$_nth$arity$2(null,i__57034_57314);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_57317);\n\n\nvar G__57318 = seq__57031_57311;\nvar G__57319 = chunk__57032_57312;\nvar G__57320 = count__57033_57313;\nvar G__57321 = (i__57034_57314 + (1));\nseq__57031_57311 = G__57318;\nchunk__57032_57312 = G__57319;\ncount__57033_57313 = G__57320;\ni__57034_57314 = G__57321;\ncontinue;\n} else {\nvar temp__5753__auto___57324 = cljs.core.seq(seq__57031_57311);\nif(temp__5753__auto___57324){\nvar seq__57031_57325__$1 = temp__5753__auto___57324;\nif(cljs.core.chunked_seq_QMARK_(seq__57031_57325__$1)){\nvar c__4550__auto___57329 = cljs.core.chunk_first(seq__57031_57325__$1);\nvar G__57330 = cljs.core.chunk_rest(seq__57031_57325__$1);\nvar G__57331 = c__4550__auto___57329;\nvar G__57332 = cljs.core.count(c__4550__auto___57329);\nvar G__57333 = (0);\nseq__57031_57311 = G__57330;\nchunk__57032_57312 = G__57331;\ncount__57033_57313 = G__57332;\ni__57034_57314 = G__57333;\ncontinue;\n} else {\nvar i_57335 = cljs.core.first(seq__57031_57325__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_57335);\n\n\nvar G__57337 = cljs.core.next(seq__57031_57325__$1);\nvar G__57338 = null;\nvar G__57339 = (0);\nvar G__57340 = (0);\nseq__57031_57311 = G__57337;\nchunk__57032_57312 = G__57338;\ncount__57033_57313 = G__57339;\ni__57034_57314 = G__57340;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__57060 = cljs.core.seq(extra_to_force);\nvar chunk__57061 = null;\nvar count__57062 = (0);\nvar i__57063 = (0);\nwhile(true){\nif((i__57063 < count__57062)){\nvar c = chunk__57061.cljs$core$IIndexed$_nth$arity$2(null,i__57063);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__57343 = seq__57060;\nvar G__57344 = chunk__57061;\nvar G__57345 = count__57062;\nvar G__57346 = (i__57063 + (1));\nseq__57060 = G__57343;\nchunk__57061 = G__57344;\ncount__57062 = G__57345;\ni__57063 = G__57346;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__57060);\nif(temp__5753__auto__){\nvar seq__57060__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57060__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__57060__$1);\nvar G__57349 = cljs.core.chunk_rest(seq__57060__$1);\nvar G__57350 = c__4550__auto__;\nvar G__57351 = cljs.core.count(c__4550__auto__);\nvar G__57352 = (0);\nseq__57060 = G__57349;\nchunk__57061 = G__57350;\ncount__57062 = G__57351;\ni__57063 = G__57352;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__57060__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__57359 = cljs.core.next(seq__57060__$1);\nvar G__57360 = null;\nvar G__57361 = (0);\nvar G__57362 = (0);\nseq__57060 = G__57359;\nchunk__57061 = G__57360;\ncount__57062 = G__57361;\ni__57063 = G__57362;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n});\n/**\n * The top-level call for using this optimized render in your application.\n * \n *   If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n *   it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n *   data that has changed.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_BANG_(var_args){\nvar G__57081 = arguments.length;\nswitch (G__57081) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (app__$1){\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2(app__$1,cljs.core.PersistentArrayMap.EMPTY);\n});\n\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,p__57083){\nvar map__57084 = p__57083;\nvar map__57084__$1 = (((((!((map__57084 == null))))?(((((map__57084.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__57084.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__57084):map__57084);\nvar options = map__57084__$1;\nvar force_root_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57084__$1,new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683));\nvar root_props_changed_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57084__$1,new cljs.core.Keyword(null,\"root-props-changed?\",\"root-props-changed?\",1999614835));\nif(cljs.core.truth_((function (){var or__4131__auto__ = force_root_QMARK_;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn root_props_changed_QMARK_;\n}\n})())){\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n} else {\ntry{return com.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_(app__$1);\n}catch (e57090){var e = e57090;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,146,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e,map__57084,map__57084__$1,options,force_root_QMARK_,root_props_changed_QMARK_){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Optimized render failed. Falling back to root render.\"], null);\n});})(e,map__57084,map__57084__$1,options,force_root_QMARK_,root_props_changed_QMARK_))\n,null)),null,49978472,null);\n\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n}}\n});\n\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","~:file","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",60],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.rendering.ident-optimized-render","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^R","~$log","~$taoensso.timbre","~$kr","~$com.fulcrologic.fulcro.rendering.keyframe-render","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^R","~$com.fulcrologic.fulcro.algorithms.denormalize","^Z","~$cljs.core","^[","~$goog","^10","^Q","^Q","^V","^V","^X","^X","^T","^T","~$fdn","^Z"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^[","^[","^S","^T","^W","^X","^X","^X","^T","^T"],"~:form",["~#list",["~$ns","^K","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).",["^17",["^13",["^V","~:as","^U"],["^Z","^19","^11"],["^X","^19","^W"],["^Q","^19","^P"],["^R","^19","^Y"],["^T","^19","^S"]]]]],"~:flags",["^ ","^13",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^V","^Z","^X","^Q","^R","^T"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],"~:compiled-at",1630698454265,"~:resource-name","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.rendering.ident-optimized-render\n  \"A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).\"\n  (:require\n    [com.fulcrologic.fulcro.rendering.keyframe-render :as kr]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.components :as comp]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]))\n\n(defn dirty-table-entries\n  \"Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`.\"\n  [old-state new-state idents]\n  (reduce\n    (fn [result ident]\n      (if (identical? (get-in old-state ident) (get-in new-state ident))\n        result\n        (cons ident result)))\n    (list)\n    idents))\n\n(defn render-component!\n  \"Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \\\"props tunnelling\\\" (setting them on a well-known key in\n  component-local state).\"\n  [app ident c]\n  #?(:cljs\n     (if (and c ident)\n       (let [{:com.fulcrologic.fulcro.application/keys [state-atom]} app\n             state-map      @state-atom\n             query          (comp/get-query c state-map)\n             q              [{ident query}]\n             prior-computed (or (comp/get-computed c) {})\n             data-tree      (when query (fdn/db->tree q state-map state-map)) ; denormalize time is set by app render\n             new-props      (comp/computed (get data-tree ident) prior-computed)]\n         (when-not query (log/error \"Query was empty. Refresh failed for \" (type c) \"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"))\n         (comp/tunnel-props! c new-props))\n       (let [root (-> app :com.fulcrologic.fulcro.application/runtime-atom deref :com.fulcrologic.fulcro.application/app-root)]\n         (when (not= c root)\n           (log/info \"Failed to do optimized update. Component\" (-> c comp/react-type (comp/class->registry-key))\n             \"queries for data that changed, but does not have an ident.\"))\n         (throw (ex-info \"Targeted update failed\" {}))))))\n\n(defn render-components-with-ident!\n  \"Renders *only* components that *have* the given ident.\"\n  [app ident]\n  (doseq [c (comp/ident->components app ident)]\n    (render-component! app ident c)))\n\n(defn render-dependents-of-ident!\n  \"Renders components that have, or query for, the given ident.\"\n  [app ident]\n  (render-components-with-ident! app ident)\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n        {:keys [prop->classes idents-in-joins class->components]} indexes\n        idents-in-joins (or idents-in-joins #{})]\n    (when (contains? idents-in-joins ident)\n      (let [classes (prop->classes ident)]\n        (when (seq classes)\n          (doseq [class classes]\n            (doseq [component (class->components class)\n                    :let [component-ident (comp/get-ident component)]]\n              (render-component! app component-ident component))))))))\n\n(defn props->components\n  \"Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key.\"\n  [app property-set]\n  (when (seq property-set)\n    (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n          {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n          {:keys [prop->classes class->components]} indexes]\n      (reduce\n        (fn [result prop]\n          (let [classes    (prop->classes prop)\n                components (reduce #(into %1 (class->components %2)) #{} classes)]\n            (into result components)))\n        #{}\n        property-set))))\n\n(defn render-stale-components!\n  \"This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data.\"\n  [app]\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom state-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes last-rendered-state\n                                                   to-refresh only-refresh]} @runtime-atom\n        {:keys [linked-props ident->components prop->classes idents-in-joins]} indexes\n        limited-refresh? (seq only-refresh)]\n    (if limited-refresh?\n      (let [{limited-idents true\n             limited-props  false} (group-by eql/ident? only-refresh)\n            limited-to-render (props->components app limited-props)]\n        (doseq [c limited-to-render\n                :let [ident (comp/get-ident c)]]\n          (render-component! app ident c))\n        (doseq [i limited-idents]\n          (render-dependents-of-ident! app i)))\n      (let [state-map          @state-atom\n            idents-in-joins    (or idents-in-joins #{})\n            dirty-linked-props (reduce\n                                 (fn [acc p]\n                                   (if (not (identical?\n                                              (get state-map p)\n                                              (get last-rendered-state p)))\n                                     (conj acc p)\n                                     acc))\n                                 #{}\n                                 linked-props)\n            {idents-to-force true\n             props-to-force  false} (group-by eql/ident? to-refresh)\n            props-to-force     (set/union props-to-force dirty-linked-props)\n            mounted-idents     (concat (keys ident->components) idents-in-joins)\n            stale-idents       (dirty-table-entries last-rendered-state state-map mounted-idents)\n            extra-to-force     (props->components app props-to-force)\n            all-idents         (set/union (set idents-to-force) (set stale-idents))]\n        (doseq [i all-idents]\n          (render-dependents-of-ident! app i))\n        (doseq [c extra-to-force]\n          (render-component! app (comp/get-ident c) c))))))\n\n(defn render!\n  \"The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.\"\n  ([app]\n   (render! app {}))\n  ([app {:keys [force-root? root-props-changed?] :as options}]\n   (if (or force-root? root-props-changed?)\n     (kr/render! app options)\n     (try\n       (render-stale-components! app)\n       (catch #?(:clj Exception :cljs :default) e\n         (log/info \"Optimized render failed. Falling back to root render.\")\n         (kr/render! app options))))))\n\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","old-state","new-state","idents","cljs.core.reduce","result","ident","cljs.core.get_in","cljs.core/cons","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","app","c","and__4120__auto__","map__56856","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","cljs.core/deref","state-atom","state-map","query","com.fulcrologic.fulcro.components.get_query","q","prior-computed","or__4131__auto__","com.fulcrologic.fulcro.components/get-computed","data-tree","com.fulcrologic.fulcro.algorithms.denormalize/db->tree","new-props","G__56858","G__56859","com.fulcrologic.fulcro.components/computed","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/type","com.fulcrologic.fulcro.components/tunnel-props!","root","cljs.core.not_EQ_","com.fulcrologic.fulcro.components/react-type","G__56860","com.fulcrologic.fulcro.components/class->registry-key","cljs.core.ex_info","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","seq__56867","cljs.core/seq","chunk__56868","count__56869","i__56870","temp__5753__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","com.fulcrologic.fulcro.components/ident->components","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!","map__56878","map__56879","map__56880","runtime-atom","indexes","prop->classes","idents-in-joins","class->components","cljs.core/contains?","classes","seq__56886","chunk__56887","count__56888","i__56889","class","seq__56910","chunk__56912","count__56913","i__56914","seq__56927","chunk__56929","count__56930","i__56931","component","component-ident","com.fulcrologic.fulcro.components/get-ident","com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","property-set","map__56947","map__56948","map__56949","prop","components","p1__56944#","p2__56945#","cljs.core.into","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","map__56965","map__56966","map__56967","last-rendered-state","to-refresh","only-refresh","linked-props","ident->components","limited-refresh?","map__56979","limited-idents","limited-props","cljs.core/group-by","edn-query-language.core/ident?","limited-to-render","seq__56986","chunk__56988","count__56989","i__56990","seq__57004","chunk__57005","count__57006","i__57007","i","map__57020","dirty-linked-props","acc","p","cljs.core.conj","idents-to-force","props-to-force","clojure.set.union","mounted-idents","cljs.core.concat","cljs.core/keys","stale-idents","extra-to-force","all-idents","cljs.core/set","seq__57031","chunk__57032","count__57033","i__57034","seq__57060","chunk__57061","count__57062","i__57063","var_args","G__57081","com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","js/Error","p__57083","map__57084","com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_","force-root?","root-props-changed?","options","com.fulcrologic.fulcro.rendering.keyframe-render/render!","e57090","e","cljs.core/List"]],"~:used-vars",["^I",["~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","~$taoensso.timbre/-log!","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/not=","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","~$cljs.core/contains?","~$cljs.core/into","~$com.fulcrologic.fulcro.components/get-ident","~$taoensso.timbre/*config*","~$cljs.core/get-in","~$cljs.core/List","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","~$cljs.core/ex-info","~$com.fulcrologic.fulcro.components/tunnel-props!","~$cljs.core/next","~$com.fulcrologic.fulcro.rendering.keyframe-render/render!","~$cljs.core/cons","~$com.fulcrologic.fulcro.components/class->registry-key","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!"]]],"~:cache-keys",["~#cmap",[["^1>","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^10","~$goog.dom.HtmlElement"]]],["^1>","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$cljs.core.async.impl.protocols"]]],["^1>","goog/i18n/datetimesymbols.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.labs.userAgent.util","~$goog.string"]]],["^1>","expound/util.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^["]]],["^1>","goog/crypt/crypt.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.array","~$goog.asserts"]]],["^1>","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2B","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","^2E"]]],["^1>","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.Promise","~$goog.events.EventTarget"]]],["^1>","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^T"]]],["^1>","cljs/spec/gen/alpha.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$goog.Uri"]]],["^1>","cljs/tools/reader/impl/utils.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$clojure.string","^2D"]]],["^1>","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F"]]],["^1>","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2D"]]],["^1>","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1>","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2C","~$goog.object","~$goog.string.internal"]]],["^1>","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2S"]]],["^1>","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F"]]],["^1>","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^T","^2O","^R","^2R","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1>","expound/problems.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$expound.paths","^@"]]],["^1>","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2C","~$goog.reflect","^2D"]]],["^1>","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1>","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1>","com/cognitect/transit/impl/reader.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1>","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.async.FreeList"]]],["^1>","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2P","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1>","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2Q"]]],["^1>","cljs/tools/reader/edn.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2D","~$goog.string.StringBuffer"]]],["^1>","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.structs.Heap"]]],["^1>","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.Timer","^2E","^2F","^3=","^2M","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2R","^2D","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^2Q"]]],["^1>","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","com/fulcrologic/fulcro/algorithms/transit.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$cognitect.transit","~$com.fulcrologic.guardrails.core","^@","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1>","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","com/fulcrologic/guardrails/utils.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$clojure.walk"]]],["^1>","cljs/tools/reader/impl/inspect.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^["]]],["^1>","com/cognitect/transit/util.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2R"]]],["^1>","cljs/pprint.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2O","^2D","^3F"]]],["^1>","cljs/tools/reader.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^3B","^3C","^3D","^3A","^2E","^2D","^3F"]]],["^1>","expound/alpha.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$expound.problems","^@","^2O","^Q","^3U","~$expound.printer","~$expound.util","~$expound.ansi","^F"]]],["^1>","taoensso/timbre.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2O","~$goog.i18n.DateTimeFormat","~$taoensso.encore","~$taoensso.timbre.appenders.core"]]],["^1>","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1>","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.Disposable","^2F","~$goog.events","~$goog.events.Event","^3?","^3@","^2R"]]],["^1>","com/fulcrologic/guardrails/core.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^B","^@","^2O","~$expound.alpha"]]],["^1>","goog/date/datelike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.disposable.IDisposable"]]],["^1>","expound/ansi.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2O"]]],["^1>","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1>","shadow/js.js"],["a28c87ae0213bed612cfecb8f26fb03110b51629","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F"]]],["^1>","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2O","^Q","~$cljs.reader","~$cljs.tools.reader.edn","^2R","^2E","^2D","~$goog.string.format","^3F","^44","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^3L","^3K","~$taoensso.truss"]]],["^1>","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^3O","~$goog.structs.Collection","^3P"]]],"~:SHADOW-TIMESTAMP",[1630697950000,1630697950000,1630228118000],["^4:","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","754b7a48941975257c8955f6d5e511cb3a878737","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^4;","~$module$node_modules$object_assign$index"]]],["^1>","taoensso/timbre/appenders/core.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2O","^3["]]],["^1>","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","^34"]]],["^1>","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.events.ListenableKey"]]],["^1>","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.html.trustedtypes","^2V","^2W","^2X","^2Y"]]],["^1>","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2B","^2J","^2H"]]],["^1>","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","~$goog.events.Listener","^2R"]]],["^1>","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$taoensso.truss.impl"]]],["^1>","com/fulcrologic/guardrails/registry.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^["]]],["^1>","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^@"]]],["^1>","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2H","^38"]]],["^1>","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","~$goog.html.SafeUrl","^2X","^2Y","^2S"]]],["^1>","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4L","^2U","~$goog.html.uncheckedconversions","^2X","^2S"]]],["^1>","expound/paths.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^@","^3X"]]],["^1>","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^Q"]]],["^1>","clojure/walk.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^["]]],["^1>","goog/useragent/product.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^31","^33","^2Q"]]],["^1>","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^["]]],["^1>","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1>","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^4A","~$goog.structs.PriorityPool"]]],["^1>","com/cognitect/transit/delimiters.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/date/date.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.date.DateLike","~$goog.i18n.DateTimeSymbols","^2D"]]],["^1>","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","~$goog.dom.TagName","~$goog.dom.tags","^4P","^4Q","~$goog.html.SafeStyleSheet","^4L","^2U","^4I","^2V","^2W","^31","^2R","^2X","^2Y","^2S"]]],["^1>","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2R"]]],["^1>","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","com/fulcrologic/fulcro/raw/components.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2R","^Q","^2O","^3U","^Z","~$com.fulcrologic.fulcro.algorithms.do-not-use","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.fulcro.algorithms.transit","^R","^3[","^T"]]],["^1>","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E"]]],["^1>","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2C","^2D"]]],["^1>","com/cognitect/transit/impl/decoder.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^3;","~$com.cognitect.transit.types"]]],["^1>","cljs/reader.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2R","^3E","^4?","^3F"]]],["^1>","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4X","~$goog.dom.safe","^4O","^4R","~$goog.math.Coordinate","~$goog.math.Size","^2R","^2D","~$goog.string.Unicode","^2Q"]]],["^1>","com/fulcrologic/guardrails/impl/externs.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$com.fulcrologic.guardrails.registry","^47"]]],["^1>","com/fulcrologic/fulcro/components.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2R","~$cljsjs.react","^R","^@","^T","^3U","^2O","^4[","^Z","^50","~$com.fulcrologic.fulcro.raw.components","^3S","^Q"]]],["^1>","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.debug.Error","^56"]]],["^1>","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2B"]]],["^1>","goog/i18n/timezone.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^4V","^2R","^2D"]]],["^1>","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.debug.LogRecord"]]],["^1>","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","^2D","^3O","^3P","^3Q","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1>","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^4:","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","519ffd5a4c91b67302cc9947b794966d629860cd","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^4;"]]],["^1>","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.Thenable","^2F","^3<","~$goog.async.run","^39","^5>","~$goog.promise.Resolver"]]],["^1>","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2B","^2G","^2J"]]],["^1>","cljs/spec/alpha.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2R","^3U","^F","^2O"]]],["^1>","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",[]]],["^1>","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.json"]]],["^1>","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2R"]]],["^1>","cljs/tools/reader/impl/errors.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^3B","^2O","~$cljs.tools.reader.impl.inspect"]]],["^1>","cljsjs/react.cljs"],["9ba9f8ed128a3c607c8b81217a06b6098d2484d1","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$module$node_modules$react$index"]]],["^1>","clojure/string.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2D","^3F"]]],["^1>","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^T","^3U"]]],["^1>","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^43","~$goog.structs.Queue","~$goog.structs.Set"]]],["^4:","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","0a81b45abe33f0ad39b726512604018f94261db9","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^4;","^4G"]]],["^1>","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/i18n/datetimeformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.date","^4W","~$goog.i18n.TimeZone","^2D"]]],["^1>","com/cognitect/transit/handlers.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^52","^54","~$goog.math.Long"]]],["^1>","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2R","~$goog.structs.Node"]]],["^1>","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F"]]],["^1>","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^57","^4R","^2X","^2S"]]],["^1>","com/cognitect/transit/types.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^52","~$com.cognitect.transit.eq","^5L"]]],["^1>","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","com/fulcrologic/fulcro/rendering/keyframe_render.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^Z","^50","^X","^T"]]],["^1>","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2S"]]],["^1>","expound/printer.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^2O","^@","^D","^Q","^3X","^3Y","^30","^3U","^4@","^2D"]]],["^1>","com/cognitect/transit/eq.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^52"]]],["^1>","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","~$goog.debug.errorcontext","^2Q"]]],["^1>","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","~$goog.math"]]],["^1>","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","cljs/tools/reader/reader_types.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^3C","^2D","^3F"]]],["^1>","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","^4N","^5P"]]],["^1>","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^3=","~$goog.dom","^4X","^57","^4N","^4O","^2U","^31","^32","^2X"]]],["^1>","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","^4O","^4P","^4Q","^4Z","^4L","^2U","^2X","^2S"]]],["^1>","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","~$goog.debug","~$goog.debug.LogBuffer","^5?"]]],["^1>","com/cognitect/transit/caching.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^53"]]],["^1>","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^43","~$goog.events.EventId"]]],["^1>","cljs/tools/reader/impl/commons.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^3A","^3B","^3C"]]],["^1>","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","cljs/core.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^5L","~$goog.math.Integer","^2D","^2R","^2E","^2N","^3F"]]],["^1>","com/cognitect/transit.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^52","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^54","^5N","^3:","^3;"]]],["^1>","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","^4I","^2X","^2Y"]]],["^1>","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^5R","~$goog.debug.LogManager","^5?","~$goog.debug.Logger"]]],["^1>","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","^4Q","^2R","^2X","^2Y","^2S"]]],["^1>","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^5R","^2P","^45","~$goog.events.EventType","^34","^2Q"]]],["^1>","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^34"]]],["^1>","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2Q"]]],["^1>","clojure/set.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^["]]],["^1>","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2E","^2F","^2D"]]],["^1>","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","^2Y"]]],["^1>","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^V","^Z","^X","^Q","^R","^T"]]],["^1>","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^5T"]]],["^1>","com/cognitect/transit/impl/writer.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^52","^3;","~$com.cognitect.transit.handlers","^54","^53","^5L"]]],["^1>","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^41"]]],["^1>","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","^Q","^R","^T"]]],["^1>","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","~$goog.net.WrapperXmlHttpFactory","^42"]]],["^1>","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10"]]],["^1>","cognitect/transit.cljs"],["ad84ab433eb8b60faeacb580428cb748997b0ff3","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^[","~$com.cognitect.transit","^54","^5N","^5L"]]],["^1>","goog/crypt/base64.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2=",["^ ","^2>",null,"^2?",["^I",[]],"^2@",["^10","^2F","^2Z","^2D","^2Q","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/raw/components.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/ast.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/alpha.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/config.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/impl/errors.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/utils.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/utils.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/impl/inspect.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/util.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/buffers.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/printer.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/ansi.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/ioc_macros.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/timers.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/mutex.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/components.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/edn.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre/appenders/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/default_data_readers.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/paths.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/problems.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/transit.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/reader_types.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/env.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/channels.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/registry.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/edn-query-language/eql/1.0.1/eql-1.0.1.jar!/edn_query_language/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/com/cognitect/transit-clj/1.0.324/transit-clj-1.0.324.jar!/cognitect/transit.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/parser.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/cljs/tools/reader/reader_types.clj",1630697950000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",1,"^9",5,"^:",1,"^;",60],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^N",null,"^O",["^ ","^P","^Q","^R","^R","^S","^T","^U","^V","^W","^X","^Y","^R","^Z","^Z","^[","^[","^10","^10","^Q","^Q","^V","^V","^X","^X","^T","^T","^11","^Z"],"^12",["^I",["^13"]],"~:shadow/js-access-global",["^I",["Error"]],"^14",null,"~:defs",["^ ","~$dirty-table-entries",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",16,"^9",7,"^:",16,"^;",26,"~:arglists",["^17",["~$quote",["^17",[["~$old-state","~$new-state","~$idents"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"^J","^1T","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",26,"~:method-params",["^17",[["^88","^89","^8:"]]],"~:protocol-impl",null,"~:arglists-meta",["^17",[null,null]],"^9",1,"~:variadic?",false,"^8",16,"~:ret-tag",["^I",[null,"~$any"]],"^:",16,"~:max-fixed-arity",3,"~:fn-var",true,"^86",["^17",["^87",["^17",[["^88","^89","^8:"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"~$render-component!",["^ ","^85",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",28,"^9",7,"^:",28,"^;",24,"^86",["^17",["^87",["^17",[["~$app","~$ident","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"^J","^1J","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^8;",["^17",[["^8D","^8E","~$c"]]],"^8<",null,"^8=",["^17",[null,null]],"^9",1,"^8>",false,"^8",28,"^8?",["^I",["~$js","~$clj-nil"]],"^:",28,"^8A",3,"^8B",true,"^86",["^17",["^87",["^17",[["^8D","^8E","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"~$render-components-with-ident!",["^ ","^85",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",50,"^9",7,"^:",50,"^;",36,"^86",["^17",["^87",["^17",[["^8D","^8E"]]]]],"^6","Renders *only* components that *have* the given ident."],"^J","^1L","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",36,"^8;",["^17",[["^8D","^8E"]]],"^8<",null,"^8=",["^17",[null,null]],"^9",1,"^8>",false,"^8",50,"^8?","^8G","^:",50,"^8A",2,"^8B",true,"^86",["^17",["^87",["^17",[["^8D","^8E"]]]]],"^6","Renders *only* components that *have* the given ident."],"~$render-dependents-of-ident!",["^ ","^85",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",56,"^9",7,"^:",56,"^;",34,"^86",["^17",["^87",["^17",[["^8D","^8E"]]]]],"^6","Renders components that have, or query for, the given ident."],"^J","^2:","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",34,"^8;",["^17",[["^8D","^8E"]]],"^8<",null,"^8=",["^17",[null,null]],"^9",1,"^8>",false,"^8",56,"^8?","^8G","^:",56,"^8A",2,"^8B",true,"^86",["^17",["^87",["^17",[["^8D","^8E"]]]]],"^6","Renders components that have, or query for, the given ident."],"~$props->components",["^ ","^85",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",72,"^9",7,"^:",72,"^;",24,"^86",["^17",["^87",["^17",[["^8D","~$property-set"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"^J","^1K","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^8;",["^17",[["^8D","^8K"]]],"^8<",null,"^8=",["^17",[null,null]],"^9",1,"^8>",false,"^8",72,"^8?",["^I",[null,"^8@","^8G"]],"^:",72,"^8A",2,"^8B",true,"^86",["^17",["^87",["^17",[["^8D","^8K"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"~$render-stale-components!",["^ ","^85",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",90,"^9",7,"^:",90,"^;",31,"^86",["^17",["^87",["^17",[["^8D"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"^J","^1U","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",31,"^8;",["^17",[["^8D"]]],"^8<",null,"^8=",["^17",[null,null]],"^9",1,"^8>",false,"^8",90,"^8?","^8G","^:",90,"^8A",1,"^8B",true,"^86",["^17",["^87",["^17",[["^8D"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"~$render!",["^ ","^85",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",132,"^9",7,"^:",132,"^;",14,"^86",["^17",["^87",["^17",[["^8D"],["^8D",["^ ","~:keys",["~$force-root?","~$root-props-changed?"],"^19","~$options"]]]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.","~:top-fn",["^ ","^8>",false,"~:fixed-arity",2,"^8A",2,"^8;",["^17",[["^8D"],["^8D",["^ ","^8N",["^8O","^8P"],"^19","^8Q"]]]],"^86",["^17",[["^8D"],["^8D",["^ ","^8N",["^8O","^8P"],"^19","^8Q"]]]],"^8=",["^17",[null,null]]]],"^J","^20","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",14,"^8R",["^ ","^8>",false,"^8S",2,"^8A",2,"^8;",["^17",[["^8D"],["^8D",["^ ","^8N",["^8O","^8P"],"^19","^8Q"]]]],"^86",["^17",[["^8D"],["^8D",["^ ","^8N",["^8O","^8P"],"^19","^8Q"]]]],"^8=",["^17",[null,null]]],"^8;",["^17",[["^8D"],["^8D",["^ ","^8N",["^8O","^8P"],"^19","^8Q"]]]],"^8<",null,"^8S",2,"^8=",["^17",[null,null]],"^9",1,"^8>",false,"~:methods",[["^ ","^8S",1,"^8>",false,"~:tag","^8@"],["^ ","^8S",2,"^8>",false,"^8U",["^I",[null,"^8@"]]]],"^8",132,"^:",132,"^8A",2,"^8B",true,"^86",["^17",[["^8D"],["^8D",["^ ","^8N",["^8O","^8P"],"^19","^8Q"]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed."]],"^15",["^ ","^[","^[","^S","^T","^W","^X","^X","^X","^T","^T"],"~:cljs.analyzer/constants",["^ ","^12",["^I",["~:com.fulcrologic.fulcro.application/indexes","~:com.fulcrologic.fulcro.application/last-rendered-state","~:idents-in-joins","~:prop->classes","~:force-root?","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:class->components","~:com.fulcrologic.fulcro.application/to-refresh","~:root-props-changed?","~:com.fulcrologic.fulcro.application/runtime-atom","~:info","~:error","~:ident->components","~:linked-props","~:auto","~:p","~:com.fulcrologic.fulcro.application/app-root"]],"~:order",["^90","^97","~:p","^9:","^9;","^95","^96","^8W","^8Z","^8Y","^92","^8X","^93","^91","^99","^98","^8[","^94"]],"^1:",["^ ","^13",["^I",[]]],"^1;",["^ "],"^1<",["^10","^[","^V","^Z","^X","^Q","^R","^T"]],"^M","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^2<",[["^9?","~:static-fns"],true,["^9?","~:shadow-tweaks"],null,["^9?","~:source-map-inline"],null,["^9?","~:elide-asserts"],false,["^9?","~:optimize-constants"],null,["^9?","^1A"],null,["^9?","~:external-config"],null,["^9?","~:tooling-config"],null,["^9?","~:emit-constants"],null,["^9?","~:load-tests"],null,["^9?","~:form-size-threshold"],null,["^9?","~:data-readers"],null,["^9?","~:infer-externs"],"^9:",["^9?","^1C"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9?","~:fn-invoke-direct"],null,["^9?","~:source-map"],"/dev/null"]]]