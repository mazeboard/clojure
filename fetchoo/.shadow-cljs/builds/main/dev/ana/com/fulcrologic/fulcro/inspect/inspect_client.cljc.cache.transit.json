["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.inspect.inspect_client');\n/**\n * @define {boolean}\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.INSPECT = goog.define(\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\",false);\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.run_picker !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.run_picker = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_ !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.tools_app_STAR_ !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.tools_app_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_ !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\ncom.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key = new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491);\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.send_ch !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.send_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.dropping_buffer((50000)));\n}\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message = (function com$fulcrologic$fulcro$inspect$inspect_client$post_message(type,data){\ntry{return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.inspect.inspect_client.send_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type,data], null));\n}catch (e55330){var e = e55330;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,31,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cannot send to inspect. Channel closed. See https://book.fulcrologic.com/#err-inspect-ch-closed\"], null);\n});})(e))\n,null)),null,-773458707,null);\n}});\n/**\n * Returns true when env is a cljs macro &env\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.cljs_QMARK_ = (function com$fulcrologic$fulcro$inspect$inspect_client$cljs_QMARK_(env){\nreturn cljs.core.boolean$(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\n});\n/**\n * Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n *   `gobj/get`.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget = (function com$fulcrologic$fulcro$inspect$inspect_client$isoget(var_args){\nvar G__55336 = arguments.length;\nswitch (G__55336) {\ncase 2:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$2 = (function (obj,k){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$3(obj,k,null);\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$3 = (function (obj,k,default$){\nvar or__4131__auto__ = goog.object.get(obj,(function (){var G__55340 = k;\nif((G__55340 == null)){\nreturn null;\n} else {\nreturn cljs.core.name(G__55340);\n}\n})());\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn default$;\n}\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$lang$maxFixedArity = 3;\n\ncom.fulcrologic.fulcro.inspect.inspect_client.app_state = (function com$fulcrologic$fulcro$inspect$inspect_client$app_state(app__$1){\nvar G__55341 = app__$1;\nvar G__55341__$1 = (((G__55341 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__55341));\nif((G__55341__$1 == null)){\nreturn null;\n} else {\nreturn cljs.core.deref(G__55341__$1);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.runtime_atom = (function com$fulcrologic$fulcro$inspect$inspect_client$runtime_atom(app__$1){\nvar G__55342 = app__$1;\nif((G__55342 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(G__55342);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.state_atom = (function com$fulcrologic$fulcro$inspect$inspect_client$state_atom(app__$1){\nvar G__55346 = app__$1;\nif((G__55346 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__55346);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.app_uuid = (function com$fulcrologic$fulcro$inspect$inspect_client$app_uuid(app__$1){\nvar G__55348 = app__$1;\nvar G__55348__$1 = (((G__55348 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__55348));\nvar G__55348__$2 = (((G__55348__$1 == null))?null:cljs.core.deref(G__55348__$1));\nif((G__55348__$2 == null)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__55348__$2,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.remotes = (function com$fulcrologic$fulcro$inspect$inspect_client$remotes(app__$1){\nvar G__55350 = com.fulcrologic.fulcro.inspect.inspect_client.runtime_atom(app__$1);\nvar G__55350__$1 = (((G__55350 == null))?null:cljs.core.deref(G__55350));\nif((G__55350__$1 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"remotes\",\"com.fulcrologic.fulcro.application/remotes\",1823703517).cljs$core$IFn$_invoke$arity$1(G__55350__$1);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.app_id = (function com$fulcrologic$fulcro$inspect$inspect_client$app_id(app__$1){\nvar G__55351 = com.fulcrologic.fulcro.inspect.inspect_client.app_state(app__$1);\nif((G__55351 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233).cljs$core$IFn$_invoke$arity$1(G__55351);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.fulcro_app_id = (function com$fulcrologic$fulcro$inspect$inspect_client$fulcro_app_id(app__$1){\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"id\",\"com.fulcrologic.fulcro.application/id\",-2008968625).cljs$core$IFn$_invoke$arity$1(app__$1);\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.get_component_name = (function com$fulcrologic$fulcro$inspect$inspect_client$get_component_name(component){\nif(cljs.core.truth_(component)){\nvar G__55354 = com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$2(component,new cljs.core.Keyword(null,\"fulcro$options\",\"fulcro$options\",-1332196811));\nif((G__55354 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(G__55354);\n}\n} else {\nreturn null;\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.comp_transact_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$comp_transact_BANG_(app__$1,tx,options){\nvar tx_BANG_ = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"tx!\",\"tx!\",-1308106263));\nreturn (tx_BANG_.cljs$core$IFn$_invoke$arity$3 ? tx_BANG_.cljs$core$IFn$_invoke$arity$3(app__$1,tx,options) : tx_BANG_.call(null,app__$1,tx,options));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.MAX_HISTORY_SIZE = (100);\n/**\n * Current time in the recorded history of states\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.current_history_id = (function com$fulcrologic$fulcro$inspect$inspect_client$current_history_id(app__$1){\nvar or__4131__auto__ = new cljs.core.Keyword(\"com.fulcrologic.fulcro.inspect.inspect-client\",\"time\",\"com.fulcrologic.fulcro.inspect.inspect-client/time\",-124222029).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.runtime_atom(app__$1)));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn (1);\n}\n});\n/**\n * Record a state change in this history. Returns the ID of the newly recorded entry.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.record_history_entry_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$record_history_entry_BANG_(app__$1,state){\nvar now = com.fulcrologic.fulcro.inspect.inspect_client.current_history_id(app__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.inspect.inspect_client.runtime_atom(app__$1),((function (now){\nreturn (function (runtime){\nvar history = new cljs.core.Keyword(\"com.fulcrologic.fulcro.inspect.inspect-client\",\"history\",\"com.fulcrologic.fulcro.inspect.inspect-client/history\",1397701395).cljs$core$IFn$_invoke$arity$1(runtime);\nvar pruned_history = (((history == null))?cljs.core.PersistentVector.EMPTY:(((cljs.core.count(history) > com.fulcrologic.fulcro.inspect.inspect_client.MAX_HISTORY_SIZE))?cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(history,(1)):history\n));\nvar new_history = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(pruned_history,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),now,new cljs.core.Keyword(null,\"value\",\"value\",305978217),state], null));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(runtime,new cljs.core.Keyword(\"com.fulcrologic.fulcro.inspect.inspect-client\",\"time\",\"com.fulcrologic.fulcro.inspect.inspect-client/time\",-124222029),(now + (1)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"com.fulcrologic.fulcro.inspect.inspect-client\",\"history\",\"com.fulcrologic.fulcro.inspect.inspect-client/history\",1397701395),new_history], 0));\n});})(now))\n);\n\nreturn now;\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.get_history_entry = (function com$fulcrologic$fulcro$inspect$inspect_client$get_history_entry(app__$1,id){\nvar history = new cljs.core.Keyword(\"com.fulcrologic.fulcro.inspect.inspect-client\",\"history\",\"com.fulcrologic.fulcro.inspect.inspect-client/history\",1397701395).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.runtime_atom(app__$1)));\nvar entry = cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (history){\nreturn (function (p__55363){\nvar map__55364 = p__55363;\nvar map__55364__$1 = (((((!((map__55364 == null))))?(((((map__55364.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55364.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55364):map__55364);\nvar entry_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55364__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(id,entry_id);\n});})(history))\n,cljs.core.seq(history)));\nreturn entry;\n});\n/**\n * Notify Inspect that the database changed\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.db_changed_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$db_changed_BANG_(app__$1,old_state,new_state){\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nvar state_id = com.fulcrologic.fulcro.inspect.inspect_client.record_history_entry_BANG_(app__$1,new_state);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"db-changed!\",\"fulcro.inspect.client/db-changed!\",1922305221),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid,new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-id\",\"fulcro.inspect.client/state-id\",-828161304),state_id]));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.event_data = (function com$fulcrologic$fulcro$inspect$inspect_client$event_data(event){\nvar G__55368 = event;\nvar G__55368__$1 = (((G__55368 == null))?null:goog.object.getValueByKeys(G__55368,\"data\",\"fulcro-inspect-devtool-message\"));\nif((G__55368__$1 == null)){\nreturn null;\n} else {\nreturn com.fulcrologic.fulcro.inspect.transit.read(G__55368__$1);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.start_send_message_loop = (function com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop(){\nvar c__49232__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__49232__auto__){\nreturn (function (){\nvar f__49233__auto__ = (function (){var switch__49057__auto__ = ((function (c__49232__auto__){\nreturn (function (state_55398){\nvar state_val_55399 = (state_55398[(1)]);\nif((state_val_55399 === (1))){\nvar state_55398__$1 = state_55398;\nvar statearr_55400_55528 = state_55398__$1;\n(statearr_55400_55528[(2)] = null);\n\n(statearr_55400_55528[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_55399 === (2))){\nvar state_55398__$1 = state_55398;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_55398__$1,(4),com.fulcrologic.fulcro.inspect.inspect_client.send_ch);\n} else {\nif((state_val_55399 === (3))){\nvar inst_55396 = (state_55398[(2)]);\nvar state_55398__$1 = state_55398;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_55398__$1,inst_55396);\n} else {\nif((state_val_55399 === (4))){\nvar inst_55374 = (state_55398[(7)]);\nvar inst_55374__$1 = (state_55398[(2)]);\nvar state_55398__$1 = (function (){var statearr_55403 = state_55398;\n(statearr_55403[(7)] = inst_55374__$1);\n\nreturn statearr_55403;\n})();\nif(cljs.core.truth_(inst_55374__$1)){\nvar statearr_55404_55529 = state_55398__$1;\n(statearr_55404_55529[(1)] = (5));\n\n} else {\nvar statearr_55411_55531 = state_55398__$1;\n(statearr_55411_55531[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_55399 === (5))){\nvar inst_55374 = (state_55398[(7)]);\nvar inst_55379 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_55374,(0),null);\nvar inst_55380 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_55374,(1),null);\nvar inst_55381 = [new cljs.core.Keyword(null,\"fulcro-inspect-remote-message\",\"fulcro-inspect-remote-message\",1518065210)];\nvar inst_55382 = [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Keyword(null,\"timestamp\",\"timestamp\",579478971)];\nvar inst_55383 = (new Date());\nvar inst_55384 = [inst_55379,inst_55380,inst_55383];\nvar inst_55385 = cljs.core.PersistentHashMap.fromArrays(inst_55382,inst_55384);\nvar inst_55386 = com.fulcrologic.fulcro.inspect.transit.write(inst_55385);\nvar inst_55387 = [inst_55386];\nvar inst_55388 = cljs.core.PersistentHashMap.fromArrays(inst_55381,inst_55387);\nvar inst_55389 = cljs.core.clj__GT_js(inst_55388);\nvar inst_55390 = window.postMessage(inst_55389,\"*\");\nvar state_55398__$1 = (function (){var statearr_55412 = state_55398;\n(statearr_55412[(8)] = inst_55390);\n\nreturn statearr_55412;\n})();\nvar statearr_55413_55532 = state_55398__$1;\n(statearr_55413_55532[(2)] = null);\n\n(statearr_55413_55532[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_55399 === (6))){\nvar state_55398__$1 = state_55398;\nvar statearr_55414_55533 = state_55398__$1;\n(statearr_55414_55533[(2)] = null);\n\n(statearr_55414_55533[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_55399 === (7))){\nvar inst_55394 = (state_55398[(2)]);\nvar state_55398__$1 = state_55398;\nvar statearr_55415_55536 = state_55398__$1;\n(statearr_55415_55536[(2)] = inst_55394);\n\n(statearr_55415_55536[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n});})(c__49232__auto__))\n;\nreturn ((function (switch__49057__auto__,c__49232__auto__){\nreturn (function() {\nvar com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto__ = null;\nvar com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto____0 = (function (){\nvar statearr_55416 = [null,null,null,null,null,null,null,null,null];\n(statearr_55416[(0)] = com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto__);\n\n(statearr_55416[(1)] = (1));\n\nreturn statearr_55416;\n});\nvar com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto____1 = (function (state_55398){\nwhile(true){\nvar ret_value__49059__auto__ = (function (){try{while(true){\nvar result__49060__auto__ = switch__49057__auto__(state_55398);\nif(cljs.core.keyword_identical_QMARK_(result__49060__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__49060__auto__;\n}\nbreak;\n}\n}catch (e55417){var ex__49061__auto__ = e55417;\nvar statearr_55418_55538 = state_55398;\n(statearr_55418_55538[(2)] = ex__49061__auto__);\n\n\nif(cljs.core.seq((state_55398[(4)]))){\nvar statearr_55419_55539 = state_55398;\n(statearr_55419_55539[(1)] = cljs.core.first((state_55398[(4)])));\n\n} else {\nthrow ex__49061__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__49059__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__55540 = state_55398;\nstate_55398 = G__55540;\ncontinue;\n} else {\nreturn ret_value__49059__auto__;\n}\nbreak;\n}\n});\ncom$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto__ = function(state_55398){\nswitch(arguments.length){\ncase 0:\nreturn com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto____0.call(this);\ncase 1:\nreturn com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto____1.call(this,state_55398);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ncom$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto__.cljs$core$IFn$_invoke$arity$0 = com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto____0;\ncom$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto__.cljs$core$IFn$_invoke$arity$1 = com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto____1;\nreturn com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__49058__auto__;\n})()\n;})(switch__49057__auto__,c__49232__auto__))\n})();\nvar state__49234__auto__ = (function (){var statearr_55420 = f__49233__auto__();\n(statearr_55420[(6)] = c__49232__auto__);\n\nreturn statearr_55420;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__49234__auto__);\n});})(c__49232__auto__))\n);\n\nreturn c__49232__auto__;\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.listen_local_messages = (function com$fulcrologic$fulcro$inspect$inspect_client$listen_local_messages(){\nreturn window.addEventListener(\"message\",(function (event){\nif(cljs.core.truth_((function (){var and__4120__auto__ = (event.source === window);\nif(and__4120__auto__){\nreturn goog.object.getValueByKeys(event,\"data\",\"fulcro-inspect-devtool-message\");\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar G__55424 = com.fulcrologic.fulcro.inspect.inspect_client.event_data(event);\nreturn (com.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message.cljs$core$IFn$_invoke$arity$1(G__55424) : com.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message.call(null,G__55424));\n} else {\nif(cljs.core.truth_((function (){var and__4120__auto__ = (event.source === window);\nif(and__4120__auto__){\nreturn goog.object.getValueByKeys(event,\"data\",\"fulcro-inspect-start-consume\");\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.start_send_message_loop();\n} else {\nreturn null;\n}\n}\n}),false);\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$transact_inspector_BANG_(var_args){\nvar G__55427 = arguments.length;\nswitch (G__55427) {\ncase 1:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (tx){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"transact-inspector\",\"fulcro.inspect.client/transact-inspector\",-905938352),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx\",\"fulcro.inspect.client/tx\",-815771134),tx], null));\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (ref,tx){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"transact-inspector\",\"fulcro.inspect.client/transact-inspector\",-905938352),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx-ref\",\"fulcro.inspect.client/tx-ref\",-1370560773),ref,new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx\",\"fulcro.inspect.client/tx\",-815771134),tx], null));\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$lang$maxFixedArity = 2;\n\ncom.fulcrologic.fulcro.inspect.inspect_client.dispose_app = (function com$fulcrologic$fulcro$inspect$inspect_client$dispose_app(app_uuid){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_,cljs.core.dissoc,app_uuid);\n\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"dispose-app\",\"fulcro.inspect.client/dispose-app\",-574872452),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid]));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.set_active_app = (function com$fulcrologic$fulcro$inspect$inspect_client$set_active_app(app_uuid){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"set-active-app\",\"fulcro.inspect.client/set-active-app\",-2049837528),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid]));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.send_started_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$send_started_BANG_(app__$1,remote,tx_id,txn){\nvar start = (new Date());\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"history-id\",\"fulcro.inspect.ui.network/history-id\",702365090),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.inspect.ui.network\",\"request-start\",\"fulcro.inspect.ui.network/request-start\",-1415257884,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"remote\",\"fulcro.inspect.ui.network/remote\",-307593223),remote,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-id\",\"fulcro.inspect.ui.network/request-id\",-2031413204),tx_id,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-started-at\",\"fulcro.inspect.ui.network/request-started-at\",1582455117),start,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-edn\",\"fulcro.inspect.ui.network/request-edn\",-1638784885),txn], null),null,(1),null)))))], null));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.send_finished_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$send_finished_BANG_(app__$1,remote,tx_id,response){\nvar finished = (new Date());\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"history-id\",\"fulcro.inspect.ui.network/history-id\",702365090),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.inspect.ui.network\",\"request-finish\",\"fulcro.inspect.ui.network/request-finish\",817834789,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-id\",\"fulcro.inspect.ui.network/request-id\",-2031413204),tx_id,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-finished-at\",\"fulcro.inspect.ui.network/request-finished-at\",-1848991883),finished,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"response-edn\",\"fulcro.inspect.ui.network/response-edn\",221134354),response], null),null,(1),null)))))], null));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.send_failed_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$send_failed_BANG_(app__$1,tx_id,error){\nvar finished = (new Date());\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"history-id\",\"fulcro.inspect.ui.network/history-id\",702365090),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.inspect.ui.network\",\"request-finish\",\"fulcro.inspect.ui.network/request-finish\",817834789,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-id\",\"fulcro.inspect.ui.network/request-id\",-2031413204),tx_id,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-finished-at\",\"fulcro.inspect.ui.network/request-finished-at\",-1848991883),finished,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"error\",\"fulcro.inspect.ui.network/error\",36212909),error], null),null,(1),null)))))], null));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message = (function com$fulcrologic$fulcro$inspect$inspect_client$handle_devtool_message(p__55451){\nvar map__55452 = p__55451;\nvar map__55452__$1 = (((((!((map__55452 == null))))?(((((map__55452.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55452.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55452):map__55452);\nvar message = map__55452__$1;\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55452__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55452__$1,new cljs.core.Keyword(null,\"data\",\"data\",-232669377));\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,191,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__55452,map__55452__$1,message,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Devtools Message received\",message], null);\n});})(map__55452,map__55452__$1,message,type,data))\n,null)),null,1662142585,null);\n\nvar G__55454 = type;\nvar G__55454__$1 = (((G__55454 instanceof cljs.core.Keyword))?G__55454.fqn:null);\nswitch (G__55454__$1) {\ncase \"fulcro.inspect.client/request-page-apps\":\nvar seq__55455 = cljs.core.seq(cljs.core.vals(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_)));\nvar chunk__55456 = null;\nvar count__55457 = (0);\nvar i__55458 = (0);\nwhile(true){\nif((i__55458 < count__55457)){\nvar app__$1 = chunk__55456.cljs$core$IIndexed$_nth$arity$2(null,i__55458);\nvar state_55557 = com.fulcrologic.fulcro.inspect.inspect_client.app_state(app__$1);\nvar state_id_55558 = com.fulcrologic.fulcro.inspect.inspect_client.record_history_entry_BANG_(app__$1,state_55557);\nvar remote_names_55559 = com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1);\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"init-app\",\"fulcro.inspect.client/init-app\",-1984595648),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1),new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233),com.fulcrologic.fulcro.inspect.inspect_client.app_id(app__$1),new cljs.core.Keyword(\"fulcro.inspect.client\",\"remotes\",\"fulcro.inspect.client/remotes\",-2062632712),cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(((function (seq__55455,chunk__55456,count__55457,i__55458,state_55557,state_id_55558,remote_names_55559,app__$1,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data){\nreturn (function (p1__55440_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),p1__55440_SHARP_);\n});})(seq__55455,chunk__55456,count__55457,i__55458,state_55557,state_id_55558,remote_names_55559,app__$1,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data))\n,cljs.core.str),cljs.core.keys(remote_names_55559)),new cljs.core.Keyword(\"fulcro.inspect.client\",\"initial-history-step\",\"fulcro.inspect.client/initial-history-step\",1169628321),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),state_id_55558,new cljs.core.Keyword(null,\"value\",\"value\",305978217),state_55557], null)]));\n\n\nvar G__55563 = seq__55455;\nvar G__55564 = chunk__55456;\nvar G__55565 = count__55457;\nvar G__55566 = (i__55458 + (1));\nseq__55455 = G__55563;\nchunk__55456 = G__55564;\ncount__55457 = G__55565;\ni__55458 = G__55566;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__55455);\nif(temp__5753__auto__){\nvar seq__55455__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__55455__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__55455__$1);\nvar G__55567 = cljs.core.chunk_rest(seq__55455__$1);\nvar G__55568 = c__4550__auto__;\nvar G__55569 = cljs.core.count(c__4550__auto__);\nvar G__55570 = (0);\nseq__55455 = G__55567;\nchunk__55456 = G__55568;\ncount__55457 = G__55569;\ni__55458 = G__55570;\ncontinue;\n} else {\nvar app__$1 = cljs.core.first(seq__55455__$1);\nvar state_55571 = com.fulcrologic.fulcro.inspect.inspect_client.app_state(app__$1);\nvar state_id_55572 = com.fulcrologic.fulcro.inspect.inspect_client.record_history_entry_BANG_(app__$1,state_55571);\nvar remote_names_55573 = com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1);\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"init-app\",\"fulcro.inspect.client/init-app\",-1984595648),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1),new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233),com.fulcrologic.fulcro.inspect.inspect_client.app_id(app__$1),new cljs.core.Keyword(\"fulcro.inspect.client\",\"remotes\",\"fulcro.inspect.client/remotes\",-2062632712),cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(((function (seq__55455,chunk__55456,count__55457,i__55458,state_55571,state_id_55572,remote_names_55573,app__$1,seq__55455__$1,temp__5753__auto__,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data){\nreturn (function (p1__55440_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),p1__55440_SHARP_);\n});})(seq__55455,chunk__55456,count__55457,i__55458,state_55571,state_id_55572,remote_names_55573,app__$1,seq__55455__$1,temp__5753__auto__,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data))\n,cljs.core.str),cljs.core.keys(remote_names_55573)),new cljs.core.Keyword(\"fulcro.inspect.client\",\"initial-history-step\",\"fulcro.inspect.client/initial-history-step\",1169628321),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),state_id_55572,new cljs.core.Keyword(null,\"value\",\"value\",305978217),state_55571], null)]));\n\n\nvar G__55576 = cljs.core.next(seq__55455__$1);\nvar G__55577 = null;\nvar G__55578 = (0);\nvar G__55579 = (0);\nseq__55455 = G__55576;\nchunk__55456 = G__55577;\ncount__55457 = G__55578;\ni__55458 = G__55579;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n\nbreak;\ncase \"fulcro.inspect.client/reset-app-state\":\nvar map__55459 = data;\nvar map__55459__$1 = (((((!((map__55459 == null))))?(((((map__55459.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55459.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55459):map__55459);\nvar target_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55459__$1,new cljs.core.Keyword(null,\"target-state\",\"target-state\",-682429993));\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55459__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar temp__5751__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar app__$1 = temp__5751__auto__;\nvar render_BANG_ = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"schedule-render!\",\"schedule-render!\",2095050350));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(target_state))){\nvar map__55461_55581 = target_state;\nvar map__55461_55582__$1 = (((((!((map__55461_55581 == null))))?(((((map__55461_55581.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55461_55581.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55461_55581):map__55461_55581);\nvar id_55583 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55461_55582__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar b2__44459__auto___55584 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(b2__44459__auto___55584)){\nvar app_55585__$2 = b2__44459__auto___55584;\nvar b2__44459__auto___55586__$1 = com.fulcrologic.fulcro.inspect.inspect_client.get_history_entry(app_55585__$2,id_55583);\nif(cljs.core.truth_(b2__44459__auto___55586__$1)){\nvar map__55463_55587 = b2__44459__auto___55586__$1;\nvar map__55463_55588__$1 = (((((!((map__55463_55587 == null))))?(((((map__55463_55587.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55463_55587.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55463_55587):map__55463_55587);\nvar value_55589 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55463_55588__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\ncljs.core.reset_BANG_(com.fulcrologic.fulcro.inspect.inspect_client.state_atom(app_55585__$2),value_55589);\n} else {\n}\n} else {\n}\n} else {\n}\n\nvar G__55465 = app__$1;\nvar G__55466 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683),true], null);\nreturn (render_BANG_.cljs$core$IFn$_invoke$arity$2 ? render_BANG_.cljs$core$IFn$_invoke$arity$2(G__55465,G__55466) : render_BANG_.call(null,G__55465,G__55466));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,219,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5751__auto__,map__55459,map__55459__$1,target_state,app_uuid,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Reset app on invalid uuid\",app_uuid], null);\n});})(temp__5751__auto__,map__55459,map__55459__$1,target_state,app_uuid,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data))\n,null)),null,-1401006880,null);\n}\n\nbreak;\ncase \"fulcro.inspect.client/fetch-history-step\":\nvar map__55467 = data;\nvar map__55467__$1 = (((((!((map__55467 == null))))?(((((map__55467.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55467.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55467):map__55467);\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55467__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar based_on = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55467__$1,new cljs.core.Keyword(null,\"based-on\",\"based-on\",1217703581));\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55467__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar b2__44459__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(b2__44459__auto__)){\nvar app__$1 = b2__44459__auto__;\nvar b2__44459__auto____$1 = com.fulcrologic.fulcro.inspect.inspect_client.get_history_entry(app__$1,id);\nif(cljs.core.truth_(b2__44459__auto____$1)){\nvar map__55473 = b2__44459__auto____$1;\nvar map__55473__$1 = (((((!((map__55473 == null))))?(((((map__55473.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55473.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55473):map__55473);\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55473__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\nvar prior_state = com.fulcrologic.fulcro.inspect.inspect_client.get_history_entry(app__$1,based_on);\nvar diff = (cljs.core.truth_(prior_state)?com.fulcrologic.fulcro.inspect.diff.diff(prior_state,value):null);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"history-entry\",\"fulcro.inspect.client/history-entry\",1162276680),(function (){var G__55481 = cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid,new cljs.core.Keyword(\"fulcro.inspect.core\",\"state-id\",\"fulcro.inspect.core/state-id\",-89620020),id]);\nvar G__55481__$1 = (cljs.core.truth_(diff)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__55481,new cljs.core.Keyword(\"fulcro.inspect.client\",\"diff\",\"fulcro.inspect.client/diff\",1522519471),diff,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"based-on\",\"based-on\",1217703581),based_on], 0)):G__55481);\nif(cljs.core.not(diff)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__55481__$1,new cljs.core.Keyword(\"fulcro.inspect.client\",\"state\",\"fulcro.inspect.client/state\",-1243075171),value);\n} else {\nreturn G__55481__$1;\n}\n})());\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n\nbreak;\ncase \"fulcro.inspect.client/transact\":\nvar map__55482 = data;\nvar map__55482__$1 = (((((!((map__55482 == null))))?(((((map__55482.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55482.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55482):map__55482);\nvar tx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55482__$1,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418));\nvar tx_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55482__$1,new cljs.core.Keyword(null,\"tx-ref\",\"tx-ref\",-216104949));\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55482__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar temp__5751__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar app__$1 = temp__5751__auto__;\nif(cljs.core.truth_(tx_ref)){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.comp_transact_BANG_(app__$1,tx,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),tx_ref], null));\n} else {\nreturn com.fulcrologic.fulcro.inspect.inspect_client.comp_transact_BANG_(app__$1,tx,cljs.core.PersistentArrayMap.EMPTY);\n}\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,244,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5751__auto__,map__55482,map__55482__$1,tx,tx_ref,app_uuid,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Transact on invalid uuid\",app_uuid,\"See https://book.fulcrologic.com/#err-inspect-invalid-app-uuid\"], null);\n});})(temp__5751__auto__,map__55482,map__55482__$1,tx,tx_ref,app_uuid,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data))\n,null)),null,1165926005,null);\n}\n\nbreak;\ncase \"fulcro.inspect.client/pick-element\":\nif(cljs.core.truth_(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.run_picker))){\nvar fexpr__55484 = cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.run_picker);\nreturn (fexpr__55484.cljs$core$IFn$_invoke$arity$1 ? fexpr__55484.cljs$core$IFn$_invoke$arity$1(data) : fexpr__55484.call(null,data));\n} else {\ntry{return alert(\"Element picker not installed. Add it to your preload.\");\n}catch (e55485){var _e = e55485;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,252,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (_e,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Element picker not installed in app. You must add it to you preloads. See https://book.fulcrologic.com/#err-inspect-elm-picker-missing\"], null);\n});})(_e,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data))\n,null)),null,-983822920,null);\n}}\n\nbreak;\ncase \"fulcro.inspect.client/network-request\":\nvar map__55486 = data;\nvar map__55486__$1 = (((((!((map__55486 == null))))?(((((map__55486.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55486.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55486):map__55486);\nvar remote_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55486__$1,new cljs.core.Keyword(\"fulcro.inspect.client\",\"remote\",\"fulcro.inspect.client/remote\",-306964848));\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55486__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\nvar mutation = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55486__$1,new cljs.core.Keyword(null,\"mutation\",\"mutation\",-285823378));\nvar msg_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55486__$1,new cljs.core.Keyword(\"fulcro.inspect.ui-parser\",\"msg-id\",\"fulcro.inspect.ui-parser/msg-id\",-467621998));\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55486__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar b2__44459__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(b2__44459__auto__)){\nvar app__$1 = b2__44459__auto__;\nvar b2__44459__auto____$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1),remote_name);\nif(cljs.core.truth_(b2__44459__auto____$1)){\nvar remote = b2__44459__auto____$1;\nvar b2__44459__auto____$2 = new cljs.core.Keyword(null,\"transmit!\",\"transmit!\",-107149039).cljs$core$IFn$_invoke$arity$1(remote);\nif(cljs.core.truth_(b2__44459__auto____$2)){\nvar transmit_BANG_ = b2__44459__auto____$2;\nvar b2__44459__auto____$3 = edn_query_language.core.query__GT_ast((function (){var or__4131__auto__ = query;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn mutation;\n}\n})());\nif(cljs.core.truth_(b2__44459__auto____$3)){\nvar ast = b2__44459__auto____$3;\nvar b2__44459__auto____$4 = cljs.core.random_uuid();\nif(cljs.core.truth_(b2__44459__auto____$4)){\nvar tx_id = b2__44459__auto____$4;\ncom.fulcrologic.fulcro.inspect.inspect_client.send_started_BANG_(app__$1,remote_name,tx_id,(function (){var or__4131__auto__ = query;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn mutation;\n}\n})());\n\nvar G__55488 = remote;\nvar G__55489 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423),tx_id,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"ast\",\"com.fulcrologic.fulcro.algorithms.tx-processing/ast\",1718830373),ast,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"idx\",\"com.fulcrologic.fulcro.algorithms.tx-processing/idx\",-1121773698),(0),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"update-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/update-handler\",-1256285755),cljs.core.identity,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"result-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/result-handler\",-114902209),((function (G__55488,tx_id,b2__44459__auto____$4,ast,b2__44459__auto____$3,transmit_BANG_,b2__44459__auto____$2,remote,b2__44459__auto____$1,app__$1,b2__44459__auto__,map__55486,map__55486__$1,remote_name,query,mutation,msg_id,app_uuid,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data){\nreturn (function (p__55490){\nvar map__55491 = p__55490;\nvar map__55491__$1 = (((((!((map__55491 == null))))?(((((map__55491.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55491.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55491):map__55491);\nvar result = map__55491__$1;\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55491__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar error_QMARK__55602 = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"remote-error?\",\"remote-error?\",-391127497));\nif(cljs.core.truth_((error_QMARK__55602.cljs$core$IFn$_invoke$arity$1 ? error_QMARK__55602.cljs$core$IFn$_invoke$arity$1(result) : error_QMARK__55602.call(null,result)))){\ncom.fulcrologic.fulcro.inspect.inspect_client.send_failed_BANG_(app__$1,tx_id,result);\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.send_finished_BANG_(app__$1,remote_name,tx_id,body);\n}\n\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"message-response\",\"fulcro.inspect.client/message-response\",587955053),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"fulcro.inspect.ui-parser\",\"msg-id\",\"fulcro.inspect.ui-parser/msg-id\",-467621998),msg_id,new cljs.core.Keyword(\"fulcro.inspect.ui-parser\",\"msg-response\",\"fulcro.inspect.ui-parser/msg-response\",1721295840),body], null));\n});})(G__55488,tx_id,b2__44459__auto____$4,ast,b2__44459__auto____$3,transmit_BANG_,b2__44459__auto____$2,remote,b2__44459__auto____$1,app__$1,b2__44459__auto__,map__55486,map__55486__$1,remote_name,query,mutation,msg_id,app_uuid,G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data))\n], null);\nreturn (transmit_BANG_.cljs$core$IFn$_invoke$arity$2 ? transmit_BANG_.cljs$core$IFn$_invoke$arity$2(G__55488,G__55489) : transmit_BANG_.call(null,G__55488,G__55489));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n\nbreak;\ncase \"fulcro.inspect.client/console-log\":\nvar map__55493 = data;\nvar map__55493__$1 = (((((!((map__55493 == null))))?(((((map__55493.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55493.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55493):map__55493);\nvar log = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55493__$1,new cljs.core.Keyword(null,\"log\",\"log\",-1595516004));\nvar log_js = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55493__$1,new cljs.core.Keyword(null,\"log-js\",\"log-js\",-1565471667));\nvar warn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55493__$1,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552));\nvar error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55493__$1,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\nif(cljs.core.truth_(log)){\nreturn console.log(log);\n} else {\nif(cljs.core.truth_(log_js)){\nreturn console.log(cljs.core.clj__GT_js(log_js));\n} else {\nif(cljs.core.truth_(warn)){\nreturn console.warn(warn);\n} else {\nif(cljs.core.truth_(error)){\nreturn console.error(error);\n} else {\nreturn null;\n}\n}\n}\n}\n\nbreak;\ncase \"fulcro.inspect.client/check-client-version\":\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"client-version\",\"fulcro.inspect.client/client-version\",728119531),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"version\",\"version\",425292698),\"3.0.0\"], null));\n\nbreak;\ndefault:\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,316,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unknown message\",type], null);\n});})(G__55454,G__55454__$1,map__55452,map__55452__$1,message,type,data))\n,null)),null,-2130662053,null);\n\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.install = (function com$fulcrologic$fulcro$inspect$inspect_client$install(_){\ndocument.documentElement.setAttribute(\"__fulcro-inspect-remote-installed__\",true);\n\nif(cljs.core.truth_(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_))){\nreturn null;\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,325,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Installing Fulcro 3.x Inspect\",cljs.core.PersistentArrayMap.EMPTY], null);\n}),null)),null,-1572784406,null);\n\ncljs.core.reset_BANG_(com.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_,true);\n\nreturn com.fulcrologic.fulcro.inspect.inspect_client.listen_local_messages();\n}\n});\n/**\n * Register the application with Inspect, if it is available.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.app_started_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$app_started_BANG_(app__$1){\nif(cljs.core.truth_((function (){var and__4120__auto__ = (function (){var or__4131__auto__ = goog.DEBUG;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn com.fulcrologic.fulcro.inspect.inspect_client.INSPECT;\n}\n})();\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(\"disabled\",com.fulcrologic.fulcro.inspect.inspect_client.INSPECT);\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar networking = com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1);\nvar state_STAR_ = com.fulcrologic.fulcro.inspect.inspect_client.state_atom(app__$1);\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.fulcro_app_id(app__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_,cljs.core.assoc,app_uuid,app__$1);\n\ncom.fulcrologic.fulcro.inspect.inspect_client.record_history_entry_BANG_(app__$1,cljs.core.deref(state_STAR_));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state_STAR_,cljs.core.assoc,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid);\n\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"init-app\",\"fulcro.inspect.client/init-app\",-1984595648),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233),com.fulcrologic.fulcro.inspect.inspect_client.app_id(app__$1),new cljs.core.Keyword(\"fulcro.inspect.client\",\"remotes\",\"fulcro.inspect.client/remotes\",-2062632712),cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(((function (networking,state_STAR_,app_uuid){\nreturn (function (p1__55498_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),p1__55498_SHARP_);\n});})(networking,state_STAR_,app_uuid))\n,cljs.core.str),cljs.core.keys(networking)),new cljs.core.Keyword(\"fulcro.inspect.client\",\"initial-state\",\"fulcro.inspect.client/initial-state\",1225829482),cljs.core.deref(state_STAR_)]));\n\nreturn cljs.core.add_watch(state_STAR_,app_uuid,((function (networking,state_STAR_,app_uuid){\nreturn (function (p1__55501_SHARP_,p2__55502_SHARP_,p3__55499_SHARP_,p4__55500_SHARP_){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.db_changed_BANG_(app__$1,p3__55499_SHARP_,p4__55500_SHARP_);\n});})(networking,state_STAR_,app_uuid))\n);\n} else {\nreturn null;\n}\n});\n/**\n * Notify inspect that a transaction finished.\n * \n * app - The app\n * env - The mutation env that completed.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.optimistic_action_finished_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$optimistic_action_finished_BANG_(app__$1,p__55510,p__55511){\nvar map__55512 = p__55510;\nvar map__55512__$1 = (((((!((map__55512 == null))))?(((((map__55512.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55512.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55512):map__55512);\nvar component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55512__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\nvar ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55512__$1,new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55512__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55512__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420));\nvar map__55513 = p__55511;\nvar map__55513__$1 = (((((!((map__55513 == null))))?(((((map__55513.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__55513.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55513):map__55513);\nvar tx_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55513__$1,new cljs.core.Keyword(null,\"tx-id\",\"tx-id\",638275288));\nvar tx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55513__$1,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418));\nvar state_id_before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55513__$1,new cljs.core.Keyword(null,\"state-id-before\",\"state-id-before\",-1436953055));\nvar db_before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55513__$1,new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536));\nvar db_after = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55513__$1,new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666));\nvar component_name = com.fulcrologic.fulcro.inspect.inspect_client.get_component_name(component);\nvar current_id = com.fulcrologic.fulcro.inspect.inspect_client.current_history_id(app__$1);\nvar tx__$1 = (function (){var G__55516 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(\"fulcro.inspect.ui.transactions\",\"tx-id\",\"fulcro.inspect.ui.transactions/tx-id\",315271198),tx_id,new cljs.core.Keyword(\"fulcro.history\",\"client-time\",\"fulcro.history/client-time\",1879420278),(new Date()),new cljs.core.Keyword(\"fulcro.history\",\"tx\",\"fulcro.history/tx\",1485693993),tx,new cljs.core.Keyword(\"fulcro.history\",\"db-before-id\",\"fulcro.history/db-before-id\",1439381422),state_id_before,new cljs.core.Keyword(\"fulcro.history\",\"db-after-id\",\"fulcro.history/db-after-id\",1928976932),current_id,new cljs.core.Keyword(\"fulcro.history\",\"network-sends\",\"fulcro.history/network-sends\",-234790789),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420),options], null);\nvar G__55516__$1 = (cljs.core.truth_(component_name)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__55516,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component_name):G__55516);\nif(cljs.core.truth_(ref)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__55516__$1,new cljs.core.Keyword(null,\"ident-ref\",\"ident-ref\",663643478),ref);\n} else {\nreturn G__55516__$1;\n}\n})();\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"new-client-transaction\",\"fulcro.inspect.client/new-client-transaction\",-1086637148),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid,new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx\",\"fulcro.inspect.client/tx\",-815771134),tx__$1]));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions used by Fulcro to talk to Fulcro Inspect.","~:file","com/fulcrologic/fulcro/inspect/inspect_client.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",59,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$ilet",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^6","Like `clojure.core/let`, but elides the block if Inspect isn't enabled.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",392,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","~:name","~$com.fulcrologic.fulcro.inspect.inspect-client/ilet","~:ns","~$com.fulcrologic.fulcro.inspect.inspect-client","~:macro",true],"~$ido",["^ ","^M",["^N",[["~$&","^P"]]],"^6","Wrap a block of code that will only run if Inspect is enabled.  Code in these blocks will also be removed via\n  DCE in Closure.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",372,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^Q","~$com.fulcrologic.fulcro.inspect.inspect-client/ido","^S","^T","^U",true]],"^Q","^T","~:op","^S","~:imports",null,"~:requires",["^ ","~$ah","~$com.fulcrologic.fulcro.algorithms.lookup","~$edn-query-language.core","^11","~$encode","~$com.fulcrologic.fulcro.inspect.transit","~$log","~$taoensso.timbre","~$diff","~$com.fulcrologic.fulcro.inspect.diff","~$eql","^11","~$async","^C","^13","^13","~$cljs.core","^1:","~$gobj","~$goog.object","~$goog","^1=","^1<","^1<","^C","^C","~$enc","~$taoensso.encore","~$encore","^1?","^10","^10","^15","^15","^1?","^1?","^17","^17"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",null,"^1C",["^ ","^14","^15","^19","^C","^1:","^1:","^T","^T","^C","^C","^1>","^1?","^1@","^1?","^15","^15","^1?","^1?"],"~:form",["^N",["~$ns","^T","Functions used by Fulcro to talk to Fulcro Inspect.",["^N",["^1C","^T"]],["^N",["^1B",["^11","~:as","^18"],["^10","^1G","^["],["^1<","^1G","^1;"],["^17","^1G","^16"],["^13","^1G","^12"],["^C","^1G","^19"],["^1?","^1G","^1@"],["^15","^1G","^14"],["^1?","^1G","^1>"]]]]],"~:flags",["^ ","^1C",["^J",[]],"^1B",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^1=","^1:","^11","^10","^1<","^17","^13","^C","^1?","^15"]],"^S","^T","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/inspect/inspect_client.cljc"],"~:compiled-at",1630698453746,"~:resource-name","com/fulcrologic/fulcro/inspect/inspect_client.cljc","~:warnings",[],"~:source","(ns ^:no-doc com.fulcrologic.fulcro.inspect.inspect-client\n  \"Functions used by Fulcro to talk to Fulcro Inspect.\"\n  #?(:cljs (:require-macros com.fulcrologic.fulcro.inspect.inspect-client))\n  (:require\n    [edn-query-language.core :as eql]\n    [com.fulcrologic.fulcro.algorithms.lookup :as ah]\n    #?@(:cljs [[goog.object :as gobj]\n               [com.fulcrologic.fulcro.inspect.diff :as diff]\n               [com.fulcrologic.fulcro.inspect.transit :as encode]\n               [cljs.core.async :as async]])\n    [taoensso.encore :as encore]\n    [taoensso.timbre :as log]\n    [taoensso.encore :as enc]))\n\n#?(:cljs (goog-define INSPECT false))\n\n;; This is here so that you can include the element picker without killing React Native\n(defonce run-picker (atom nil))\n\n(declare handle-devtool-message)\n(defonce started?* (atom false))\n(defonce tools-app* (atom nil))\n(defonce apps* (atom {}))\n(def app-uuid-key :fulcro.inspect.core/app-uuid)\n\n(defonce send-ch #?(:clj nil :cljs (async/chan (async/dropping-buffer 50000))))\n(defn post-message [type data]\n  #?(:cljs (try\n             (async/put! send-ch [type data])\n             (catch :default e\n               (log/error \"Cannot send to inspect. Channel closed. See https://book.fulcrologic.com/#err-inspect-ch-closed\")))))\n\n(defn cljs?\n  \"Returns true when env is a cljs macro &env\"\n  [env]\n  (boolean (:ns env)))\n\n(defn- isoget\n  \"Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n  `gobj/get`.\"\n  ([obj k] (isoget obj k nil))\n  ([obj k default]\n   #?(:clj  (get obj k default)\n      :cljs (or (gobj/get obj (some-> k (name))) default))))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; Helpers so we don't have to include other nses\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defn app-state [app] (some-> app :com.fulcrologic.fulcro.application/state-atom deref))\n(defn runtime-atom [app] (some-> app :com.fulcrologic.fulcro.application/runtime-atom))\n(defn state-atom [app] (some-> app :com.fulcrologic.fulcro.application/state-atom))\n(defn app-uuid [app] (some-> app :com.fulcrologic.fulcro.application/state-atom deref (get app-uuid-key)))\n(defn remotes [app] (some-> (runtime-atom app) deref :com.fulcrologic.fulcro.application/remotes))\n(defn app-id [app] (some-> (app-state app) :fulcro.inspect.core/app-id))\n(defn fulcro-app-id [app] (:com.fulcrologic.fulcro.application/id app))\n(defn get-component-name [component] (when component (some-> (isoget component :fulcro$options) :displayName)))\n(defn comp-transact! [app tx options]\n  (let [tx! (ah/app-algorithm app :tx!)]\n    (tx! app tx options)))\n\n(def MAX_HISTORY_SIZE 100)\n\n(defn current-history-id\n  \"Current time in the recorded history of states\"\n  [app]\n  (or (-> app (runtime-atom) deref ::time) 1))\n\n(defn record-history-entry!\n  \"Record a state change in this history. Returns the ID of the newly recorded entry.\"\n  [app state]\n  (let [now (current-history-id app)]\n    (swap! (runtime-atom app)\n      (fn [runtime]\n        (let [history        (::history runtime)\n              pruned-history (cond\n                               (nil? history) []\n                               (> (count history) MAX_HISTORY_SIZE) (subvec history 1)\n                               :else history)\n              new-history    (conj pruned-history {:id    now\n                                                   :value state})]\n          (assoc runtime\n            ::time (inc now)\n            ::history new-history))))\n    now))\n\n(defn get-history-entry [app id]\n  (let [history (-> app runtime-atom deref ::history)\n        entry   (first (filter\n                         (fn [{entry-id :id}] (= id entry-id))\n                         (seq history)))]\n    entry))\n\n\n(defn db-changed!\n  \"Notify Inspect that the database changed\"\n  [app old-state new-state]\n  #?(:cljs\n     (let [app-uuid (app-uuid app)\n           state-id (record-history-entry! app new-state)]\n       (post-message :fulcro.inspect.client/db-changed! {app-uuid-key                    app-uuid\n                                                         :fulcro.inspect.client/state-id state-id}))))\n\n(defn event-data [event]\n  #?(:cljs (some-> event (gobj/getValueByKeys \"data\" \"fulcro-inspect-devtool-message\") encode/read)))\n\n(defn start-send-message-loop []\n  #?(:cljs\n     (async/go-loop []\n       (when-let [[type data] (async/<! send-ch)]\n         (.postMessage js/window (clj->js {:fulcro-inspect-remote-message (encode/write {:type type :data data :timestamp (js/Date.)})}) \"*\")\n         (recur)))))\n\n(defn listen-local-messages []\n  #?(:cljs\n     (.addEventListener js/window \"message\"\n       (fn [^js event]\n         (cond\n           (and (identical? (.-source event) js/window)\n             (gobj/getValueByKeys event \"data\" \"fulcro-inspect-devtool-message\"))\n           (handle-devtool-message (event-data event))\n\n           (and (identical? (.-source event) js/window)\n             (gobj/getValueByKeys event \"data\" \"fulcro-inspect-start-consume\"))\n           (start-send-message-loop)))\n       false)))\n\n(defn transact-inspector!\n  ([tx]\n   (post-message :fulcro.inspect.client/transact-inspector {:fulcro.inspect.client/tx tx}))\n  ([ref tx]\n   (post-message :fulcro.inspect.client/transact-inspector {:fulcro.inspect.client/tx-ref ref :fulcro.inspect.client/tx tx})))\n\n(defn dispose-app [app-uuid]\n  (swap! apps* dissoc app-uuid)\n  (post-message :fulcro.inspect.client/dispose-app {app-uuid-key app-uuid}))\n\n(defn set-active-app [app-uuid]\n  (post-message :fulcro.inspect.client/set-active-app {app-uuid-key app-uuid}))\n\n#_(defn inspect-app [app]\n    #?(:cljs\n       (let [networking (remotes app)\n             state*     (state-atom app)\n             app-uuid   (random-uuid)]\n\n         (swap! apps* assoc app-uuid app)\n         #_(update-state-history app @state*)\n\n         (post-message :fulcro.inspect.client/init-app {app-uuid-key                         app-uuid\n                                                        :fulcro.inspect.core/app-id          (app-id app)\n                                                        :fulcro.inspect.client/remotes       (sort-by (juxt #(not= :remote %) str) (keys networking))\n                                                        :fulcro.inspect.client/initial-state @state*\n                                                        :fulcro.inspect.client/state-hash    (hash @state*)})\n\n         (add-watch state* app-uuid #(db-update app app-uuid %3 %4))\n\n         (swap! state* assoc app-uuid-key app-uuid)\n\n         app)))\n\n(defn send-started! [app remote tx-id txn]\n  #?(:cljs\n     (let [start    (js/Date.)\n           app-uuid (app-uuid app)]\n       (transact-inspector! [:fulcro.inspect.ui.network/history-id [app-uuid-key app-uuid]]\n         [`(fulcro.inspect.ui.network/request-start ~{:fulcro.inspect.ui.network/remote             remote\n                                                      :fulcro.inspect.ui.network/request-id         tx-id\n                                                      :fulcro.inspect.ui.network/request-started-at start\n                                                      :fulcro.inspect.ui.network/request-edn        txn})]))))\n\n(defn send-finished! [app remote tx-id response]\n  #?(:cljs\n     (let [finished (js/Date.)\n           app-uuid (app-uuid app)]\n       (transact-inspector! [:fulcro.inspect.ui.network/history-id [app-uuid-key app-uuid]]\n         [`(fulcro.inspect.ui.network/request-finish ~{:fulcro.inspect.ui.network/request-id          tx-id\n                                                       :fulcro.inspect.ui.network/request-finished-at finished\n                                                       :fulcro.inspect.ui.network/response-edn        response})]))))\n\n(defn send-failed! [app tx-id error]\n  #?(:cljs\n     (let [finished (js/Date.)\n           app-uuid (app-uuid app)]\n       (transact-inspector! [:fulcro.inspect.ui.network/history-id [app-uuid-key app-uuid]]\n         [`(fulcro.inspect.ui.network/request-finish ~{:fulcro.inspect.ui.network/request-id          tx-id\n                                                       :fulcro.inspect.ui.network/request-finished-at finished\n                                                       :fulcro.inspect.ui.network/error               error})]))))\n\n;; LANDMARK: Incoming message handler for Inspect\n(defn handle-devtool-message [{:keys [type data] :as message}]\n  (log/debug \"Devtools Message received\" message)\n  #?(:cljs\n     (case type\n       :fulcro.inspect.client/request-page-apps\n       (do\n         (doseq [app (vals @apps*)]\n           (let [state        (app-state app)\n                 state-id     (record-history-entry! app state)\n                 remote-names (remotes app)]\n             (post-message :fulcro.inspect.client/init-app\n               {app-uuid-key                                (app-uuid app)\n                :fulcro.inspect.core/app-id                 (app-id app)\n                :fulcro.inspect.client/remotes              (sort-by (juxt #(not= :remote %) str)\n                                                              (keys remote-names))\n                :fulcro.inspect.client/initial-history-step {:id    state-id\n                                                             :value state}}))))\n\n       :fulcro.inspect.client/reset-app-state\n       (let [{:keys                     [target-state]\n              :fulcro.inspect.core/keys [app-uuid]} data]\n         (if-let [app (get @apps* app-uuid)]\n           (let [render! (ah/app-algorithm app :schedule-render!)]\n             (when (:id target-state)\n               (let [{:keys [id]} target-state]\n                 (enc/when-let [app (get @apps* app-uuid)\n                                {:keys [value]} (get-history-entry app id)]\n                   (reset! (state-atom app) value))))\n             (render! app {:force-root? true}))\n           (log/info \"Reset app on invalid uuid\" app-uuid)))\n\n       ;; Remote tool has asked for the history step at id, and can accept a diff from the given closest entry\n       :fulcro.inspect.client/fetch-history-step\n       (let [{:keys                     [id based-on]\n              :fulcro.inspect.core/keys [app-uuid]} data]\n         (enc/when-let [app (get @apps* app-uuid)\n                        {:keys [value]} (get-history-entry app id)]\n           (let [prior-state (get-history-entry app based-on)\n                 diff        (when prior-state (diff/diff prior-state value))]\n             (post-message :fulcro.inspect.client/history-entry\n               (cond-> {app-uuid-key                  app-uuid\n                        :fulcro.inspect.core/state-id id}\n                 diff (assoc :fulcro.inspect.client/diff diff\n                             :based-on based-on)\n                 (not diff) (assoc :fulcro.inspect.client/state value))))))\n\n\n       :fulcro.inspect.client/transact\n       (let [{:keys                     [tx tx-ref]\n              :fulcro.inspect.core/keys [app-uuid]} data]\n         (if-let [app (get @apps* app-uuid)]\n           (if tx-ref\n             (comp-transact! app tx {:ref tx-ref})\n             (comp-transact! app tx {}))\n           (log/error \"Transact on invalid uuid\" app-uuid \"See https://book.fulcrologic.com/#err-inspect-invalid-app-uuid\")))\n\n       :fulcro.inspect.client/pick-element\n       (if @run-picker\n         (@run-picker data)\n         (try\n           (js/alert \"Element picker not installed. Add it to your preload.\")\n           (catch :default _e\n             (log/error \"Element picker not installed in app. You must add it to you preloads. See https://book.fulcrologic.com/#err-inspect-elm-picker-missing\"))))\n\n       ;; These couple us to react, and side-effect are often tied to React lifecycle, so they are not worth the glamor\n       #_#_:fulcro.inspect.client/show-dom-preview\n           (encore/if-let [{:fulcro.inspect.core/keys [app-uuid]} data\n                           app (some-> @apps* (get app-uuid))\n                           {:keys [value]} (get-history-entry app (:fulcro.inspect.client/state-id data))]\n             (if (map? value)\n               (binding [fdn/*denormalize-time* 900000000   ; force our props to seem like the most recent\n                         comp/*app*             app\n                         rc/*shared*            {}          ;; TODO: don't have historical shared props...\n                         comp/*depth*           0]\n                 (render-state! app value))\n           (log/error \"Unable to find app/state for preview. See https://book.fulcrologic.com/#err-inspect-cant-find-app\")))\n\n       #_#_:fulcro.inspect.client/hide-dom-preview\n           (encore/when-let [{:fulcro.inspect.core/keys [app-uuid]} data\n                             app     (some-> @apps* (get app-uuid))\n                             render! (ah/app-algorithm app :render!)]\n             (render! app {:force-root? true}))\n\n       :fulcro.inspect.client/network-request\n       (let [{:keys                          [query mutation]\n              remote-name                    :fulcro.inspect.client/remote\n              :fulcro.inspect.ui-parser/keys [msg-id]\n              :fulcro.inspect.core/keys      [app-uuid]} data]\n         (encore/when-let [app       (get @apps* app-uuid)\n                           remote    (get (remotes app) remote-name)\n                           transmit! (-> remote :transmit!)\n                           ast       (eql/query->ast (or query mutation))\n                           tx-id     (random-uuid)]\n           (send-started! app remote-name tx-id (or query mutation))\n           (transmit! remote {:com.fulcrologic.fulcro.algorithms.tx-processing/id             tx-id\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/ast            ast\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/idx            0\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/options        {}\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/update-handler identity\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/result-handler (fn [{:keys [body] :as result}]\n                                                                                                (let [error? (ah/app-algorithm app :remote-error?)]\n                                                                                                  (if (error? result)\n                                                                                                    (send-failed! app tx-id result)\n                                                                                                    (send-finished! app remote-name tx-id body)))\n                                                                                                (post-message :fulcro.inspect.client/message-response\n                                                                                                  {:fulcro.inspect.ui-parser/msg-id       msg-id\n                                                                                                   :fulcro.inspect.ui-parser/msg-response body}))})))\n\n       :fulcro.inspect.client/console-log\n       (let [{:keys [log log-js warn error]} data]\n         (cond\n           log\n           (js/console.log log)\n\n           log-js\n           (js/console.log (clj->js log-js))\n\n           warn\n           (js/console.warn warn)\n\n           error\n           (js/console.error error)))\n\n       :fulcro.inspect.client/check-client-version\n       (post-message :fulcro.inspect.client/client-version {:version \"3.0.0\"})\n\n       (log/debug \"Unknown message\" type))))\n\n\n(defn install [_]\n  #?(:cljs\n     (do\n       (js/document.documentElement.setAttribute \"__fulcro-inspect-remote-installed__\" true)\n\n       (when-not @started?*\n         (log/info \"Installing Fulcro 3.x Inspect\" {})\n\n         (reset! started?* true)\n\n         (listen-local-messages)))))\n\n(defn app-started!\n  \"Register the application with Inspect, if it is available.\"\n  [app]\n  #?(:cljs\n     (when (and (or goog.DEBUG INSPECT) (not= \"disabled\" INSPECT))\n       (let [networking (remotes app)\n             state*     (state-atom app)\n             app-uuid   (fulcro-app-id app)]\n         (swap! apps* assoc app-uuid app)\n         (record-history-entry! app @state*)\n         (swap! state* assoc app-uuid-key app-uuid)\n         (post-message :fulcro.inspect.client/init-app {app-uuid-key                         app-uuid\n                                                        :fulcro.inspect.core/app-id          (app-id app)\n                                                        :fulcro.inspect.client/remotes       (sort-by (juxt #(not= :remote %) str) (keys networking))\n                                                        :fulcro.inspect.client/initial-state @state*})\n         (add-watch state* app-uuid #(db-changed! app %3 %4))))))\n\n(defn optimistic-action-finished!\n  \"Notify inspect that a transaction finished.\n\n   app - The app\n   env - The mutation env that completed.\"\n  [app\n   {:keys [component ref state com.fulcrologic.fulcro.algorithms.tx-processing/options]}\n   {:keys [tx-id tx state-id-before db-before db-after]}]\n  #?(:cljs\n     (let [component-name (get-component-name component)\n           current-id     (current-history-id app)\n           tx             (cond-> {:fulcro.inspect.ui.transactions/tx-id                    tx-id\n                                   :fulcro.history/client-time                              (js/Date.)\n                                   :fulcro.history/tx                                       tx\n                                   :fulcro.history/db-before-id                             state-id-before\n                                   :fulcro.history/db-after-id                              current-id\n                                   :fulcro.history/network-sends                            []\n                                   :com.fulcrologic.fulcro.algorithms.tx-processing/options options}\n                            component-name (assoc :component component-name)\n                            ref (assoc :ident-ref ref))\n           app-uuid       (app-uuid app)]\n       (post-message :fulcro.inspect.client/new-client-transaction {app-uuid-key              app-uuid\n                                                                    :fulcro.inspect.client/tx tx}))))\n\n(defmacro ido\n  \"Wrap a block of code that will only run if Inspect is enabled.  Code in these blocks will also be removed via\n  DCE in Closure.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\\\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\\\" true}\n  \"\n  [& body]\n  (when (cljs? &env)\n    `(when (and (or ~'goog.DEBUG INSPECT) (not= \"disabled\" INSPECT))\n       (try\n         ~@body\n         (catch :default ~'e)))))\n\n(defmacro ilet\n  \"Like `clojure.core/let`, but elides the block if Inspect isn't enabled.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\\\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\\\" true}\n  \"\n  [bindings & body]\n  (when (cljs? &env)\n    `(ido\n       (let ~bindings\n         ~@body))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["js/goog.define","com.fulcrologic.fulcro.inspect.inspect-client/INSPECT","js/com","js/com.fulcrologic","js/com.fulcrologic.fulcro","js/com.fulcrologic.fulcro.inspect","js/com.fulcrologic.fulcro.inspect.inspect-client","js/com.fulcrologic.fulcro.inspect.inspect-client.run-picker","com.fulcrologic.fulcro.inspect.inspect-client/run-picker","cljs.core.atom","js/com.fulcrologic.fulcro.inspect.inspect-client.started?*","com.fulcrologic.fulcro.inspect.inspect-client/started?*","js/com.fulcrologic.fulcro.inspect.inspect-client.tools-app*","com.fulcrologic.fulcro.inspect.inspect-client/tools-app*","js/com.fulcrologic.fulcro.inspect.inspect-client.apps*","com.fulcrologic.fulcro.inspect.inspect-client/apps*","com.fulcrologic.fulcro.inspect.inspect-client/app-uuid-key","js/com.fulcrologic.fulcro.inspect.inspect-client.send-ch","com.fulcrologic.fulcro.inspect.inspect-client/send-ch","cljs.core.async.chan","cljs.core.async/dropping-buffer","com.fulcrologic.fulcro.inspect.inspect-client/post-message","type","data","e55330","cljs.core.async.put_BANG_","e","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","com.fulcrologic.fulcro.inspect.inspect-client/cljs?","env","cljs.core/boolean","var_args","G__55336","com.fulcrologic.fulcro.inspect.inspect-client/isoget","js/Error","obj","k","com.fulcrologic.fulcro.inspect.inspect_client.isoget","default","or__4131__auto__","goog.object/get","G__55340","cljs.core/name","com.fulcrologic.fulcro.inspect.inspect-client/app-state","app","G__55341","cljs.core/deref","com.fulcrologic.fulcro.inspect.inspect-client/runtime-atom","G__55342","com.fulcrologic.fulcro.inspect.inspect-client/state-atom","G__55346","com.fulcrologic.fulcro.inspect.inspect-client/app-uuid","G__55348","cljs.core.get","com.fulcrologic.fulcro.inspect.inspect-client/remotes","G__55350","com.fulcrologic.fulcro.inspect.inspect-client/app-id","G__55351","com.fulcrologic.fulcro.inspect.inspect-client/fulcro-app-id","com.fulcrologic.fulcro.inspect.inspect-client/get-component-name","component","G__55354","com.fulcrologic.fulcro.inspect.inspect-client/comp-transact!","tx","options","tx!","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","com.fulcrologic.fulcro.inspect.inspect-client/MAX_HISTORY_SIZE","com.fulcrologic.fulcro.inspect.inspect-client/current-history-id","com.fulcrologic.fulcro.inspect.inspect-client/record-history-entry!","state","now","cljs.core.swap_BANG_","runtime","history","pruned-history","cljs.core/count","cljs.core.subvec","new-history","cljs.core.conj","cljs.core.assoc","com.fulcrologic.fulcro.inspect.inspect-client/get-history-entry","id","entry","cljs.core/first","cljs.core.filter","p__55363","map__55364","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","entry-id","cljs.core._EQ_","cljs.core/seq","com.fulcrologic.fulcro.inspect.inspect-client/db-changed!","old-state","new-state","app-uuid","state-id","com.fulcrologic.fulcro.inspect.inspect-client/event-data","event","G__55368","goog.object/getValueByKeys","com.fulcrologic.fulcro.inspect.transit/read","com.fulcrologic.fulcro.inspect.inspect-client/start-send-message-loop","c__49232__auto__","cljs.core.async.impl.dispatch/run","f__49233__auto__","switch__49057__auto__","state_55398","state_val_55399","statearr-55400","cljs.core.async.impl.ioc-helpers/take!","inst_55396","cljs.core.async.impl.ioc-helpers/return-chan","inst_55374","statearr-55403","statearr-55404","statearr-55411","inst_55379","cljs.core.nth","inst_55380","inst_55381","inst_55382","inst_55383","js/Date","inst_55384","inst_55385","cljs.core/PersistentHashMap","inst_55386","inst_55387","inst_55388","inst_55389","inst_55390","statearr-55412","statearr-55413","statearr-55414","inst_55394","statearr-55415","statearr-55416","state-machine__49058__auto__","ret-value__49059__auto__","result__49060__auto__","cljs.core/keyword-identical?","ex__49061__auto__","e55417","statearr-55418","statearr-55419","state__49234__auto__","statearr-55420","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","js/window","cljs.core/clj->js","com.fulcrologic.fulcro.inspect.transit/write","com.fulcrologic.fulcro.inspect.inspect-client/listen-local-messages","and__4120__auto__","G__55424","com.fulcrologic.fulcro.inspect.inspect-client/handle-devtool-message","G__55427","com.fulcrologic.fulcro.inspect.inspect-client/transact-inspector!","ref","com.fulcrologic.fulcro.inspect.inspect-client/dispose-app","cljs.core/dissoc","com.fulcrologic.fulcro.inspect.inspect-client/set-active-app","com.fulcrologic.fulcro.inspect.inspect-client/send-started!","remote","tx-id","txn","start","cljs.core.sequence","cljs.core.concat","cljs.core/List","com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_","com.fulcrologic.fulcro.inspect.inspect-client/send-finished!","response","finished","com.fulcrologic.fulcro.inspect.inspect-client/send-failed!","error","p__55451","map__55452","message","G__55454","cljs.core/Keyword","seq__55455","chunk__55456","count__55457","i__55458","temp__5753__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/next","cljs.core/vals","remote-names","cljs.core.sort_by","p1__55440#","cljs.core.juxt","cljs.core.not_EQ_","cljs.core/str","cljs.core/keys","map__55459","target-state","temp__5751__auto__","render!","map__55461","b2__44459__auto__","map__55463","value","cljs.core/reset!","G__55465","G__55466","map__55467","based-on","map__55473","prior-state","diff","com.fulcrologic.fulcro.inspect.diff/diff","G__55481","cljs.core/not","map__55482","tx-ref","fexpr__55484","e55485","js/alert","_e","map__55486","query","mutation","remote-name","msg-id","transmit!","ast","edn-query-language.core/query->ast","cljs.core/random-uuid","G__55488","G__55489","cljs.core/identity","p__55490","map__55491","body","result","error?","map__55493","log","log-js","warn","js/console.log","js/console.warn","js/console.error","com.fulcrologic.fulcro.inspect.inspect-client/install","_","js/document.documentElement.setAttribute","com.fulcrologic.fulcro.inspect.inspect-client/app-started!","js/goog.DEBUG","networking","state*","cljs.core/assoc","p1__55498#","p1__55501#","p2__55502#","p3__55499#","p4__55500#","cljs.core/add-watch","p__55510","p__55511","map__55512","map__55513","com.fulcrologic.fulcro.inspect.inspect-client/optimistic-action-finished!","state-id-before","db-before","db-after","component-name","current-id","G__55516"]],"~:used-vars",["^J",["~$com.fulcrologic.fulcro.inspect.inspect-client/app-state","~$js/goog.define","~$cljs.core/str","~$com.fulcrologic.fulcro.inspect.inspect-client/cljs?","~$js/console.error","~$js/com.fulcrologic.fulcro.inspect","~$com.fulcrologic.fulcro.inspect.inspect-client/app-uuid-key","~$js/com.fulcrologic.fulcro.inspect.inspect-client.tools-app*","~$cljs.core/keys","~$com.fulcrologic.fulcro.inspect.inspect-client/event-data","~$com.fulcrologic.fulcro.inspect.inspect-client/app-id","~$com.fulcrologic.fulcro.inspect.inspect-client/db-changed!","~$taoensso.timbre/-log!","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/seq","~$com.fulcrologic.fulcro.inspect.inspect-client/runtime-atom","~$cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","~$js/com.fulcrologic.fulcro","~$com.fulcrologic.fulcro.inspect.inspect-client/set-active-app","~$com.fulcrologic.fulcro.inspect.inspect-client/record-history-entry!","~$com.fulcrologic.fulcro.inspect.inspect-client/tools-app*","~$cljs.core/not=","~$cljs.core/dissoc","~$cljs.core/Delay","~$cljs.core.async/put!","~$cljs.core/chunk-rest","~$cljs.core/atom","~$cljs.core/concat","~$js/console.warn","~$com.fulcrologic.fulcro.inspect.inspect-client/app-started!","~$com.fulcrologic.fulcro.inspect.inspect-client/optimistic-action-finished!","~$com.fulcrologic.fulcro.inspect.inspect-client/transact-inspector!","~$com.fulcrologic.fulcro.inspect.inspect-client/get-component-name","~$js/alert","~$com.fulcrologic.fulcro.inspect.inspect-client/dispose-app","~$cljs.core/reset!","~$com.fulcrologic.fulcro.inspect.inspect-client/INSPECT","~$com.fulcrologic.fulcro.inspect.inspect-client/listen-local-messages","~$taoensso.timbre/*config*","~$js/com.fulcrologic.fulcro.inspect.inspect-client.started?*","~$cljs.core/juxt","~$js/com.fulcrologic","~$cljs.core.async.impl.dispatch/run","~$cljs.core/List","~$cljs.core/swap!","~$cljs.core.async/chan","~$com.fulcrologic.fulcro.inspect.inspect-client/isoget","~$com.fulcrologic.fulcro.inspect.inspect-client/run-picker","~$js/com.fulcrologic.fulcro.inspect.inspect-client","~$cljs.core.async/dropping-buffer","~$com.fulcrologic.fulcro.inspect.inspect-client/state-atom","~$cljs.core/get","~$js/document.documentElement.setAttribute","~$com.fulcrologic.fulcro.inspect.inspect-client/send-failed!","~$com.fulcrologic.fulcro.inspect.inspect-client/install","~$js/com","~$com.fulcrologic.fulcro.inspect.inspect-client/send-finished!","~$cljs.core/clj->js","~$com.fulcrologic.fulcro.inspect.inspect-client/handle-devtool-message","~$com.fulcrologic.fulcro.inspect.inspect-client/apps*","~$js/com.fulcrologic.fulcro.inspect.inspect-client.send-ch","~$com.fulcrologic.fulcro.inspect.inspect-client/fulcro-app-id","~$js/console.log","~$js/com.fulcrologic.fulcro.inspect.inspect-client.run-picker","~$cljs.core/next","~$cljs.core/sequence","~$com.fulcrologic.fulcro.inspect.inspect-client/start-send-message-loop","~$cljs.core/not","~$com.fulcrologic.fulcro.inspect.inspect-client/remotes","~$com.fulcrologic.fulcro.inspect.inspect-client/comp-transact!","~$cljs.core/assoc","~$com.fulcrologic.fulcro.inspect.transit/read","~$com.fulcrologic.fulcro.inspect.inspect-client/send-started!","~$com.fulcrologic.fulcro.inspect.inspect-client/post-message","~$com.fulcrologic.fulcro.inspect.inspect-client/current-history-id","~$com.fulcrologic.fulcro.inspect.inspect-client/app-uuid","~$com.fulcrologic.fulcro.inspect.inspect-client/send-ch","~$goog.object/getValueByKeys","~$com.fulcrologic.fulcro.inspect.inspect-client/started?*","~$js/window","~$js/com.fulcrologic.fulcro.inspect.inspect-client.apps*","~$cljs.core/sort-by","~$com.fulcrologic.fulcro.inspect.inspect-client/get-history-entry","~$js/Error","~$cljs.core/boolean","~$com.fulcrologic.fulcro.inspect.inspect-client/MAX_HISTORY_SIZE","~$cljs.core/add-watch","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1L","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^1=","~$goog.dom.HtmlElement"]]],["^1L","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$cljs.core.async.impl.protocols"]]],["^1L","goog/i18n/datetimesymbols.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.labs.userAgent.util","~$goog.string"]]],["^1L","expound/util.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:"]]],["^1L","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^44","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1L","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.Promise","~$goog.events.EventTarget"]]],["^1L","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^15"]]],["^1L","cljs/spec/gen/alpha.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$goog.Uri"]]],["^1L","cljs/tools/reader/impl/utils.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$clojure.string","^46"]]],["^1L","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","~$goog.asserts"]]],["^1L","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^46"]]],["^1L","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1L","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^45","^1<","~$goog.string.internal"]]],["^1L","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4D"]]],["^1L","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A"]]],["^1L","expound/problems.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$expound.paths","^A"]]],["^1L","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^45","~$goog.reflect","^46"]]],["^1L","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1L","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1L","com/cognitect/transit/impl/reader.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1L","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.async.FreeList"]]],["^1L","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^4B","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1L","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4C"]]],["^1L","cljs/tools/reader/edn.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^46","~$goog.string.StringBuffer"]]],["^1L","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.structs.Heap"]]],["^1L","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.Timer","^4<","^4A","^4X","^4>","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^1<","^46","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^4C"]]],["^1L","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","com/fulcrologic/fulcro/algorithms/transit.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$cognitect.transit","~$com.fulcrologic.guardrails.core","^A","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1L","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","com/fulcrologic/guardrails/utils.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$clojure.walk"]]],["^1L","cljs/tools/reader/impl/inspect.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:"]]],["^1L","com/cognitect/transit/util.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1<"]]],["^1L","cljs/pprint.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^4@","^46","^55"]]],["^1L","cljs/tools/reader.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^51","^52","^53","^50","^4<","^46","^55"]]],["^1L","expound/alpha.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$expound.problems","^A","^4@","~$clojure.set","^5D","~$expound.printer","~$expound.util","~$expound.ansi","^G"]]],["^1L","taoensso/timbre.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^4@","~$goog.i18n.DateTimeFormat","^1?","~$taoensso.timbre.appenders.core"]]],["^1L","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1L","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.Disposable","^4A","~$goog.events","~$goog.events.Event","^4Z","^4[","^1<"]]],["^1L","com/fulcrologic/guardrails/core.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^C","^A","^4@","~$expound.alpha"]]],["^1L","goog/date/datelike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.disposable.IDisposable"]]],["^1L","expound/ansi.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^4@"]]],["^1L","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A"]]],["^1L","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^4@","^5F","~$cljs.reader","~$cljs.tools.reader.edn","^1<","^4<","^46","~$goog.string.format","^55","^5O","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^5;","^5:","~$taoensso.truss"]]],["^1L","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^5>","~$goog.structs.Collection","^5?"]]],"~:SHADOW-TIMESTAMP",[1630697950000,1630697950000,1630228118000],["^1L","taoensso/timbre/appenders/core.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^4@","^1?"]]],["^1L","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","^4O"]]],["^1L","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.events.ListenableKey"]]],["^1L","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.html.trustedtypes","^4G","^4H","^4I","^4J"]]],["^1L","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^44","^4:","^48"]]],["^1L","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","~$goog.events.Listener","^1<"]]],["^1L","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$taoensso.truss.impl"]]],["^1L","com/fulcrologic/guardrails/registry.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:"]]],["^1L","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^A"]]],["^1L","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^48","^4S"]]],["^1L","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","~$goog.html.SafeUrl","^4I","^4J","^4D"]]],["^1L","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^66","^4F","~$goog.html.uncheckedconversions","^4I","^4D"]]],["^1L","expound/paths.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^A","^5H"]]],["^1L","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^5F"]]],["^1L","clojure/walk.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:"]]],["^1L","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:"]]],["^1L","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1L","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^5X","~$goog.structs.PriorityPool"]]],["^1L","com/cognitect/transit/delimiters.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/date/date.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.date.DateLike","~$goog.i18n.DateTimeSymbols","^46"]]],["^1L","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","~$goog.dom.TagName","~$goog.dom.tags","^6:","^6;","~$goog.html.SafeStyleSheet","^66","^4F","^63","^4G","^4H","^4L","^1<","^4I","^4J","^4D"]]],["^1L","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1<"]]],["^1L","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<"]]],["^1L","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^45","^46"]]],["^1L","com/fulcrologic/fulcro/inspect/transit.cljs"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^5A","~$com.cognitect.transit.types","~$com.fulcrologic.fulcro.algorithms.transit","^15"]]],["^1L","com/cognitect/transit/impl/decoder.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^4V","^6E"]]],["^1L","cljs/reader.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^1<","^54","^5V","^55"]]],["^1L","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^6B","~$goog.dom.safe","^69","^6<","~$goog.math.Coordinate","~$goog.math.Size","^1<","^46","~$goog.string.Unicode","^4C"]]],["^1L","com/fulcrologic/guardrails/impl/externs.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$com.fulcrologic.guardrails.registry","^5R"]]],["^1L","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.debug.Error","^6J"]]],["^1L","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^44"]]],["^1L","goog/i18n/timezone.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^6@","^1<","^46"]]],["^1L","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.debug.LogRecord"]]],["^1L","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","^46","^5>","^5?","^5@","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1L","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.Thenable","^4A","^4W","~$goog.async.run","^4T","^6P","~$goog.promise.Resolver"]]],["^1L","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^44","^47","^4:"]]],["^1L","cljs/spec/alpha.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^1<","^5D","^G","^4@"]]],["^1L","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",[]]],["^1L","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.json"]]],["^1L","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^1<"]]],["^1L","cljs/tools/reader/impl/errors.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^51","^4@","~$cljs.tools.reader.impl.inspect"]]],["^1L","clojure/string.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^46","^55"]]],["^1L","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^15","^5D"]]],["^1L","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^5N","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1L","com/fulcrologic/fulcro/inspect/diff.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^A"]]],["^1L","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/i18n/datetimeformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.date","^6A","~$goog.i18n.TimeZone","^46"]]],["^1L","com/cognitect/transit/handlers.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^6G","^6E","~$goog.math.Long"]]],["^1L","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^1<","~$goog.structs.Node"]]],["^1L","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A"]]],["^1L","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^6K","^6<","^4I","^4D"]]],["^1L","com/cognitect/transit/types.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^6G","~$com.cognitect.transit.eq","^71"]]],["^1L","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4D"]]],["^1L","expound/printer.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^4@","^A","^E","^5F","^5H","^5I","^4K","^5D","^5W","^46"]]],["^1L","com/cognitect/transit/eq.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^6G"]]],["^1L","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","~$goog.debug.errorcontext","^4C"]]],["^1L","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","~$goog.math"]]],["^1L","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","cljs/tools/reader/reader_types.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^52","^46","^55"]]],["^1L","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","^68","^75"]]],["^1L","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4X","~$goog.dom","^6B","^6K","^68","^69","^4F","^4L","^4M","^4I"]]],["^1L","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","^69","^6:","^6;","^6D","^66","^4F","^4I","^4D"]]],["^1L","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","~$goog.debug","~$goog.debug.LogBuffer","^6Q"]]],["^1L","com/cognitect/transit/caching.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^6H"]]],["^1L","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^5N","~$goog.events.EventId"]]],["^1L","cljs/tools/reader/impl/commons.cljs"],["edd15ac0f3bbd862106bb6ba74797f0cdf57b655","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^50","^51","^52"]]],["^1L","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","cljs/core.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^71","~$goog.math.Integer","^46","^1<","^4<","^4?","^55"]]],["^1L","com/cognitect/transit.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^6G","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^6E","^73","^4U","^4V"]]],["^1L","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","^63","^4I","^4J"]]],["^1L","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^77","~$goog.debug.LogManager","^6Q","~$goog.debug.Logger"]]],["^1L","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","^6;","^1<","^4I","^4J","^4D"]]],["^1L","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^77","^4B","^5P","~$goog.events.EventType","^4O","^4C"]]],["^1L","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4O"]]],["^1L","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4C"]]],["^1L","clojure/set.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:"]]],["^1L","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4<","^4A","^46"]]],["^1L","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","^4J"]]],["^1L","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^79"]]],["^1L","com/cognitect/transit/impl/writer.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^6G","^4V","~$com.cognitect.transit.handlers","^6E","^6H","^71"]]],["^1L","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^5L"]]],["^1L","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^4A","~$goog.net.WrapperXmlHttpFactory","^5M"]]],["^1L","com/fulcrologic/fulcro/inspect/inspect_client.cljc"],["b14394806317d2d71b9ee21d94baa9ac23f0a7c0","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","^11","^10","^1<","^17","^13","^C","^1?","^15"]]],["^1L","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1="]]],["^1L","cognitect/transit.cljs"],["ad84ab433eb8b60faeacb580428cb748997b0ff3","^3[",["^ ","^40",null,"^41",["^J",[]],"^42",["^1=","^1:","~$com.cognitect.transit","^6E","^73","^71"]]]]],"~:clj-info",["^ ","jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/ast.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/alpha.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/config.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/impl/errors.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/fulcro/3.5.4/fulcro-3.5.4.jar!/com/fulcrologic/fulcro/inspect/inspect_client.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/utils.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/utils.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/impl/inspect.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/util.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/buffers.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/printer.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/ansi.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/ioc_macros.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/timers.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/mutex.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/edn.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre/appenders/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/default_data_readers.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/paths.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/problems.cljc",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/clojure/tools/reader/reader_types.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/env.clj",1630617534000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/channels.clj",1630617535000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/registry.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1629997474000,"jar:file:/Users/mazeboard/.m2/repository/edn-query-language/eql/1.0.1/eql-1.0.1.jar!/edn_query_language/core.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre.cljc",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/parser.clj",1630697950000,"jar:file:/Users/mazeboard/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1630697949000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1630228118000,"jar:file:/Users/mazeboard/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar!/cljs/tools/reader/reader_types.clj",1630697950000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions used by Fulcro to talk to Fulcro Inspect.","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",1,"^9",14,"^:",1,"^;",59,"^<",true],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K",["^ ","^L",["^ ","^M",["^N",[["^O","~$&","^P"]]],"^6","Like `clojure.core/let`, but elides the block if Inspect isn't enabled.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",392,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^Q","^R","^S","^T","^U",true],"^V",["^ ","^M",["^N",[["~$&","^P"]]],"^6","Wrap a block of code that will only run if Inspect is enabled.  Code in these blocks will also be removed via\n  DCE in Closure.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",372,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^Q","^W","^S","^T","^U",true]],"~:shadow/js-access-properties",["^J",["documentElement","setAttribute"]],"^Q","^T","^Y",null,"^Z",["^ ","^[","^10","^11","^11","^12","^13","^14","^15","^16","^17","^18","^11","^19","^C","^13","^13","^1:","^1:","^1;","^1<","^1=","^1=","^1<","^1<","^C","^C","^1>","^1?","^1@","^1?","^10","^10","^15","^15","^1?","^1?","^17","^17"],"^1A",["^J",["^1B","^1C"]],"~:shadow/js-access-global",["^J",["window","alert","Date","document","Error"]],"^1D",null,"~:defs",["^ ","~$comp-transact!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",57,"^9",7,"^:",57,"^;",21,"^M",["^N",["~$quote",["^N",[["~$app","~$tx","~$options"]]]]]],"^Q","^3F","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",21,"~:method-params",["^N",[["^9B","^9C","^9D"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^9",1,"~:variadic?",false,"^8",57,"~:ret-tag","~$any","^:",57,"~:max-fixed-arity",3,"~:fn-var",true,"^M",["^N",["^9A",["^N",[["^9B","^9C","^9D"]]]]]],"~$send-ch",["^ ","^Q","^3M","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",26,"^9",1,"^:",26,"^;",17,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",26,"^9",10,"^:",26,"^;",17],"~:tag","^9J"],"~$send-started!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",161,"^9",7,"^:",161,"^;",20,"^M",["^N",["^9A",["^N",[["^9B","~$remote","~$tx-id","~$txn"]]]]]],"^Q","^3I","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",20,"^9E",["^N",[["^9B","^9P","^9Q","^9R"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",161,"^9I","^9J","^:",161,"^9K",4,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B","^9P","^9Q","^9R"]]]]]],"~$get-history-entry",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",86,"^9",7,"^:",86,"^;",24,"^M",["^N",["^9A",["^N",[["^9B","~$id"]]]]]],"^Q","^3S","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",24,"^9E",["^N",[["^9B","^9T"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",86,"^9I",["^J",["^9J","~$clj-nil"]],"^:",86,"^9K",2,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B","^9T"]]]]]],"~$listen-local-messages",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",113,"^9",7,"^:",113,"^;",28,"^M",["^N",["^9A",["^N",[[]]]]]],"^Q","^2R","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",28,"^9E",["^N",[[]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",113,"^9I","~$js","^:",113,"^9K",0,"^9L",true,"^M",["^N",["^9A",["^N",[[]]]]]],"~$isoget",["^ ","^9@",null,"^5",["^ ","~:private",true,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"~:top-fn",["^ ","^9H",false,"~:fixed-arity",3,"^9K",3,"^9E",["^N",[["~$obj","~$k"],["^:0","~$k","~$default"]]],"^M",["^N",[["^:0","~$k"],["^:0","~$k","^:1"]]],"^9G",["^N",[null,null]]],"^9",8,"^8",38,"^:",38,"^M",["^N",["^9A",["^N",[["^:0","~$k"],["^:0","~$k","^:1"]]]]],"^6","Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n  `gobj/get`."],"^9Y",true,"^Q","^2[","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"^9Z",["^ ","^9H",false,"^9[",3,"^9K",3,"^9E",["^N",[["^:0","~$k"],["^:0","~$k","^:1"]]],"^M",["^N",[["^:0","~$k"],["^:0","~$k","^:1"]]],"^9G",["^N",[null,null]]],"^9E",["^N",[["^:0","~$k"],["^:0","~$k","^:1"]]],"^9F",null,"^9[",3,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"~:methods",[["^ ","^9[",2,"^9H",false,"^9N","^9J"],["^ ","^9[",3,"^9H",false,"^9N",["^J",[null,"^9J"]]]],"^8",38,"^:",38,"^9K",3,"^9L",true,"^M",["^N",[["^:0","~$k"],["^:0","~$k","^:1"]]],"^6","Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n  `gobj/get`."],"~$state-atom",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",51,"^9",7,"^:",51,"^;",17,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"^Q","^33","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",17,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",51,"^9I",["^J",["^9J","^9U"]],"^:",51,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"~$send-finished!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",171,"^9",7,"^:",171,"^;",21,"^M",["^N",["^9A",["^N",[["^9B","^9P","^9Q","~$response"]]]]]],"^Q","^39","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",21,"^9E",["^N",[["^9B","^9P","^9Q","^:5"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",171,"^9I","^9J","^:",171,"^9K",4,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B","^9P","^9Q","^:5"]]]]]],"~$run-picker",["^ ","^Q","^30","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",18,"^9",1,"^:",18,"^;",20,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",18,"^9",10,"^:",18,"^;",20],"^9N","~$cljs.core/Atom"],"~$install",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",319,"^9",7,"^:",319,"^;",14,"^M",["^N",["^9A",["^N",[["~$_"]]]]]],"^Q","^37","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"^9E",["^N",[["~$_"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",319,"^9I",["^J",["^9W","^9U"]],"^:",319,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["~$_"]]]]]],"~$app-id",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",54,"^9",7,"^:",54,"^;",13,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"^Q","^26","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",13,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",54,"^9I",["^J",["^9J","^9U"]],"^:",54,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"~$cljs?",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",33,"^9",7,"^:",33,"^;",12,"^M",["^N",["^9A",["^N",[["~$env"]]]]],"^6","Returns true when env is a cljs macro &env"],"^Q","^1[","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",12,"^9E",["^N",[["^:;"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",33,"^9I","~$boolean","^:",33,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^:;"]]]]],"^6","Returns true when env is a cljs macro &env"],"~$app-uuid-key",["^ ","^Q","^22","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",24,"^9",1,"^:",24,"^;",18,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",24,"^9",6,"^:",24,"^;",18],"^9N","~$cljs.core/Keyword"],"~$current-history-id",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",63,"^9",7,"^:",63,"^;",25,"^M",["^N",["^9A",["^N",[["^9B"]]]]],"^6","Current time in the recorded history of states"],"^Q","^3K","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",25,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",63,"^9I",["^J",["^9J","~$number"]],"^:",63,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]],"^6","Current time in the recorded history of states"],"~$start-send-message-loop",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",106,"^9",7,"^:",106,"^;",30,"^M",["^N",["^9A",["^N",[[]]]]]],"^Q","^3C","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",30,"^9E",["^N",[[]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",106,"^9I","^9J","^:",106,"^9K",0,"^9L",true,"^M",["^N",["^9A",["^N",[[]]]]]],"~$remotes",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",53,"^9",7,"^:",53,"^;",14,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"^Q","^3E","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",53,"^9I",["^J",["^9J","^9U"]],"^:",53,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"~$handle-devtool-message",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",190,"^9",7,"^:",190,"^;",29,"^M",["^N",["^9A",["^N",[[["^ ","~:keys",["~$type","~$data"],"^1G","~$message"]]]]]]],"^Q","^3;","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",29,"^9E",["^N",[["~$p__55451"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",190,"^:",190,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[[["^ ","^:D",["^:E","^:F"],"^1G","^:G"]]]]]]],"~$app-uuid",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",52,"^9",7,"^:",52,"^;",15,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"^Q","^3L","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",15,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",52,"^9I",["^J",["^9J","^9U"]],"^:",52,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"~$tools-app*",["^ ","^Q","^2A","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",22,"^9",1,"^:",22,"^;",20,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",22,"^9",10,"^:",22,"^;",20],"^9N","^:7"],"~$INSPECT",["^ ","^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",15,"^9",23,"^:",15,"^;",30,"~:jsdoc",["^N",["@define {boolean}"]],"^9N","^:<"],"^Q","^2Q","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",30,"^9",10,"^8",15,"^:",15,"^9N","^:<","^:L",["^N",["@define {boolean}"]]],"~$app-started!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",331,"^9",7,"^:",331,"^;",19,"^M",["^N",["^9A",["^N",[["^9B"]]]]],"^6","Register the application with Inspect, if it is available."],"^Q","^2J","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",331,"^9I",["^J",["^9J","^9U"]],"^:",331,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]],"^6","Register the application with Inspect, if it is available."],"~$post-message",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",27,"^9",7,"^:",27,"^;",19,"^M",["^N",["^9A",["^N",[["^:E","^:F"]]]]]],"^Q","^3J","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^9E",["^N",[["^:E","^:F"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",27,"^:",27,"^9K",2,"^9L",true,"^M",["^N",["^9A",["^N",[["^:E","^:F"]]]]]],"~$optimistic-action-finished!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",348,"^9",7,"^:",348,"^;",34,"^M",["^N",["^9A",["^N",[["^9B",["^ ","^:D",["~$component","~$ref","~$state","~$com.fulcrologic.fulcro.algorithms.tx-processing/options"]],["^ ","^:D",["^9Q","^9C","~$state-id-before","~$db-before","~$db-after"]]]]]]],"^6","Notify inspect that a transaction finished.\n\n   app - The app\n   env - The mutation env that completed."],"^Q","^2K","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",34,"^9E",["^N",[["^9B","~$p__55510","~$p__55511"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",348,"^9I","^9J","^:",348,"^9K",3,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B",["^ ","^:D",["^:P","^:Q","^:R","^:S"]],["^ ","^:D",["^9Q","^9C","^:T","^:U","^:V"]]]]]]],"^6","Notify inspect that a transaction finished.\n\n   app - The app\n   env - The mutation env that completed."],"~$dispose-app",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",133,"^9",7,"^:",133,"^;",18,"^M",["^N",["^9A",["^N",[["^:I"]]]]]],"^Q","^2O","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",18,"^9E",["^N",[["^:I"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",133,"^9I","^9J","^:",133,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^:I"]]]]]],"~$MAX_HISTORY_SIZE",["^ ","^Q","^3V","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",61,"^9",1,"^:",61,"^;",22,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",61,"^9",6,"^:",61,"^;",22],"^9N","^:@"],"~$started?*",["^ ","^Q","^3O","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",21,"^9",1,"^:",21,"^;",19,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",21,"^9",10,"^:",21,"^;",19],"^9N","^:7"],"~$app-state",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",49,"^9",7,"^:",49,"^;",16,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"^Q","^1X","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",16,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",49,"^9I",["^J",["^9J","^9U"]],"^:",49,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"~$send-failed!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",180,"^9",7,"^:",180,"^;",19,"^M",["^N",["^9A",["^N",[["^9B","^9Q","~$error"]]]]]],"^Q","^36","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^9E",["^N",[["^9B","^9Q","^;2"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",180,"^9I","^9J","^:",180,"^9K",3,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B","^9Q","^;2"]]]]]],"~$apps*",["^ ","^Q","^3<","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",23,"^9",1,"^:",23,"^;",15,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",23,"^9",10,"^:",23,"^;",15],"^9N","^:7"],"~$transact-inspector!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",127,"^9",7,"^:",127,"^;",26,"^M",["^N",["^9A",["^N",[["^9C"],["^:Q","^9C"]]]]],"^9Z",["^ ","^9H",false,"^9[",2,"^9K",2,"^9E",["^N",[["^9C"],["^:Q","^9C"]]],"^M",["^N",[["^9C"],["^:Q","^9C"]]],"^9G",["^N",[null,null]]]],"^Q","^2L","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",26,"^9Z",["^ ","^9H",false,"^9[",2,"^9K",2,"^9E",["^N",[["^9C"],["^:Q","^9C"]]],"^M",["^N",[["^9C"],["^:Q","^9C"]]],"^9G",["^N",[null,null]]],"^9E",["^N",[["^9C"],["^:Q","^9C"]]],"^9F",null,"^9[",2,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^:2",[["^ ","^9[",1,"^9H",false,"^9N","^9J"],["^ ","^9[",2,"^9H",false,"^9N","^9J"]],"^8",127,"^:",127,"^9K",2,"^9L",true,"^M",["^N",[["^9C"],["^:Q","^9C"]]]],"~$get-component-name",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",56,"^9",7,"^:",56,"^;",25,"^M",["^N",["^9A",["^N",[["^:P"]]]]]],"^Q","^2M","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",25,"^9E",["^N",[["^:P"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",56,"^9I",["^J",["^9J","^9U"]],"^:",56,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^:P"]]]]]],"~$db-changed!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",94,"^9",7,"^:",94,"^;",18,"^M",["^N",["^9A",["^N",[["^9B","~$old-state","~$new-state"]]]]],"^6","Notify Inspect that the database changed"],"^Q","^27","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",18,"^9E",["^N",[["^9B","^;7","^;8"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",94,"^9I","^9J","^:",94,"^9K",3,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B","^;7","^;8"]]]]],"^6","Notify Inspect that the database changed"],"~$event-data",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",103,"^9",7,"^:",103,"^;",17,"^M",["^N",["^9A",["^N",[["~$event"]]]]]],"^Q","^25","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",17,"^9E",["^N",[["^;:"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",103,"^9I",["^J",["^9J","^9U"]],"^:",103,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^;:"]]]]]],"~$runtime-atom",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",50,"^9",7,"^:",50,"^;",19,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"^Q","^2<","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",50,"^9I",["^J",["^9J","^9U"]],"^:",50,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"~$fulcro-app-id",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",55,"^9",7,"^:",55,"^;",20,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"^Q","^3>","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",20,"^9E",["^N",[["^9B"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",55,"^9I","^9J","^:",55,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B"]]]]]],"~$set-active-app",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",137,"^9",7,"^:",137,"^;",21,"^M",["^N",["^9A",["^N",[["^:I"]]]]]],"^Q","^2?","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",21,"^9E",["^N",[["^:I"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",137,"^9I","^9J","^:",137,"^9K",1,"^9L",true,"^M",["^N",["^9A",["^N",[["^:I"]]]]]],"~$record-history-entry!",["^ ","^9@",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",68,"^9",7,"^:",68,"^;",28,"^M",["^N",["^9A",["^N",[["^9B","^:R"]]]]],"^6","Record a state change in this history. Returns the ID of the newly recorded entry."],"^Q","^2@","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",28,"^9E",["^N",[["^9B","^:R"]]],"^9F",null,"^9G",["^N",[null,null]],"^9",1,"^9H",false,"^8",68,"^9I",["^J",["^9J","^:@"]],"^:",68,"^9K",2,"^9L",true,"^M",["^N",["^9A",["^N",[["^9B","^:R"]]]]],"^6","Record a state change in this history. Returns the ID of the newly recorded entry."]],"^1C",["^ ","^14","^15","^19","^C","^1:","^1:","^T","^T","^C","^C","^1>","^1?","^1@","^1?","^15","^15","^1?","^1?"],"~:cljs.analyzer/constants",["^ ","^1A",["^J",["~:fulcro.inspect.client/init-app","~:remote","~:fulcro.inspect.ui-parser/msg-response","~:fulcro.inspect.client/initial-history-step","~:state-id-before","~:fulcro.inspect.ui.network/history-id","~:fulcro.inspect.client/tx","~$fulcro.inspect.ui.network/request-start","~:fulcro.history/db-after-id","~:fulcro.inspect.client/new-client-transaction","~:fulcro.inspect.client/db-changed!","~:com.fulcrologic.fulcro.algorithms.tx-processing/ast","~:com.fulcrologic.fulcro.algorithms.tx-processing/update-handler","~$fulcro.inspect.ui.network/request-finish","~:else","~:db-after","~:ref","~:fulcro.inspect.core/app-id","~:displayName","~:fulcro.inspect.client/set-active-app","~:fulcro.inspect.client/state-id","^S","~:fulcro.inspect.client/history-entry","~:warn","~:fulcro.history/tx","~:tx!","~:value","~:fulcro.inspect.client/initial-state","~:tx-ref","~:fulcro.inspect.ui.network/request-edn","~:fulcro.inspect.client/client-version","~:fulcro.inspect.ui.network/request-id","~:recur","~:type","~:fulcro.inspect.core/state-id","~:debug","~:log-js","~:state","~:fulcro.inspect.ui.network/error","~:fulcro.inspect.ui.network/request-started-at","~:fulcro.inspect.core/app-uuid","~:force-root?","~:fulcro.inspect.client/message-response","~:component","~:mutation","~:schedule-render!","~:com.fulcrologic.fulcro.application/state-atom","~:fulcro.history/db-before-id","~:fulcro.inspect.client/diff","~:com.fulcrologic.fulcro.application/id","~:fulcro.inspect.client/transact-inspector","~:db-before","~:fulcro.inspect.client/remote","~:transmit!","~:fulcro.inspect.ui.network/response-edn","~:tx","~:fulcro.inspect.ui-parser/msg-id","~:com.fulcrologic.fulcro.inspect.inspect-client/time","~:com.fulcrologic.fulcro.inspect.inspect-client/history","~:com.fulcrologic.fulcro.application/runtime-atom","~:id","~:fulcro$options","~:fulcro.inspect.ui.network/request-finished-at","~:info","~:ident-ref","~:fulcro.history/client-time","~:target-state","~:remote-error?","~:com.fulcrologic.fulcro.algorithms.tx-processing/id","~:fulcro.inspect.client/remotes","~:error","~:tx-id","~:fulcro.inspect.ui.network/remote","~:fulcro-inspect-remote-message","~:version","~:query","~:fulcro.history/network-sends","~:timestamp","~:body","~:fulcro.inspect.client/tx-ref","~:fulcro.inspect.client/dispose-app","~:com.fulcrologic.fulcro.algorithms.tx-processing/options","~:auto","~:log","~:p","~:fulcro.inspect.client/state","~:com.fulcrologic.fulcro.application/remotes","~:based-on","~:fulcro.inspect.ui.transactions/tx-id","~:com.fulcrologic.fulcro.algorithms.tx-processing/idx","~:com.fulcrologic.fulcro.algorithms.tx-processing/result-handler","~:data"]],"~:order",["^<;","^<Y","~:p~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^3Z",[["^=E","~:static-fns"],true,["^=E","~:shadow-tweaks"],null,["^=E","~:source-map-inline"],null,["^=E","~:elide-asserts"],false,["^=E","~:optimize-constants"],null,["^=E","^1O"],null,["^=E","~:external-config"],null,["^=E","~:tooling-config"],null,["^=E","~:emit-constants"],null,["^=E","~:load-tests"],null,["^=E","~:form-size-threshold"],null,["^=E","~:data-readers"],null,["^=E","~:infer-externs"],"^=9",["^=E","^1Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^=E","~:fn-invoke-direct"],null,["^=E","~:source-map"],"/dev/null"]]]