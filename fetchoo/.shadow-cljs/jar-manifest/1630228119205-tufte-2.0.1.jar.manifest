["^ ","~:foreign-libs",[],"~:externs",[],"~:resources",[["^ ","~:cache-key",[1630228119205],"~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Basic stats utils. Private, subject to change.","~:file","taoensso/tufte/stats.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",25],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$taoensso.tufte.stats","~:imports",null,"~:requires",["^ ","~$taoensso.encore","^E","~$enc","^E","~$goog.array","^G","~$cljs.core","^H","~$goog","^I"],"~:seen",["^@",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^H","^H"],"~:cljc",true,"~:flags",["^ ","^K",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^I","^H","^E","^G"]],"~:ns","^B","~:output-name","taoensso.tufte.stats.js","~:resource-id",["~:shadow.build.classpath/resource","taoensso/tufte/stats.cljc"],"~:resource-name","taoensso/tufte/stats.cljc","~:type","~:cljs","~:last-modified",1630228119205,"^D",["^@",["^H","^I","^E","^G"]],"~:pom-info",["^ ","~:group-id","~$com.taoensso","~:artifact-id","~$tufte","~:version","2.0.1","^A","tufte","~:description","Simple profiling and performance monitoring for Clojure/Script","~:url","https://github.com/ptaoussanis/tufte","~:id","~$com.taoensso/tufte","~:coordinate",["^17","2.0.1"]],"~:macro-requires",["^@",["^H"]],"^15",["~#url","jar:file:/Users/mazeboard/.m2/repository/com/taoensso/tufte/2.0.1/tufte-2.0.1.jar!/taoensso/tufte/stats.cljc"],"~:provides",["^@",["^B"]],"~:from-jar",true,"^Q",["^I","^H","^E","^G"]],["^ ","^3",[1630228119205],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","Simple logging handler for integration with Timbre.","^9","taoensso/tufte/timbre.cljc","^:",1,"^;",5,"^<",1,"^=",26],"^>",["^ ","~$log!","~$taoensso.timbre"],"^?",["^@",[]],"^A","~$taoensso.tufte.timbre","^C",null,"^D",["^ ","^E","^E","^F","^E","~$taoensso.tufte","^1@","^12","^1@","^1>","^1>","~$timbre","^1>","^H","^H","^I","^I"],"^J",["^@",["^K"]],"^L",null,"^M",["^ ","^1>","^1>","^1A","^1>","^H","^H"],"^N",true,"^O",["^ ","^K",["^@",[]]],"^P",["^ "],"^Q",["^I","^H","^E","^1@","^1>"]],"^R","^1?","^S","taoensso.tufte.timbre.js","^T",["^U","taoensso/tufte/timbre.cljc"],"^V","taoensso/tufte/timbre.cljc","^W","^X","^Y",1630228119205,"^D",["^@",["^H","^I","^1@","^1>","^E"]],"^Z",["^ ","^[","^10","^11","^12","^13","2.0.1","^A","tufte","^14","Simple profiling and performance monitoring for Clojure/Script","^15","https://github.com/ptaoussanis/tufte","^16","^17","^18",["^17","2.0.1"]],"^19",["^@",["^H","^1>"]],"^15",["^1:","jar:file:/Users/mazeboard/.m2/repository/com/taoensso/tufte/2.0.1/tufte-2.0.1.jar!/taoensso/tufte/timbre.cljc"],"^1;",["^@",["^1?"]],"^1<",true,"^Q",["^I","^H","^E","^1@","^1>"]],["^ ","^3",[1630228119205],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","^8","This is mostly stuff for the README atm.","^9","taoensso/tufte/examples.cljc","^:",1,"^;",5,"^<",1,"^=",28],"^>",null,"^?",["^@",[]],"^A","~$taoensso.tufte.examples","^C",null,"^D",["^ ","^1@","^1@","^H","^H","^I","^I"],"^J",["^@",["^K"]],"^L",null,"^M",["^ ","^H","^H"],"^N",true,"^O",["^ ","^K",["^@",[]]],"^P",["^ "],"^Q",["^I","^H","^1@"]],"^R","^1C","^S","taoensso.tufte.examples.js","^T",["^U","taoensso/tufte/examples.cljc"],"^V","taoensso/tufte/examples.cljc","^W","^X","^Y",1630228119205,"^D",["^@",["^H","^I","^1@"]],"^Z",["^ ","^[","^10","^11","^12","^13","2.0.1","^A","tufte","^14","Simple profiling and performance monitoring for Clojure/Script","^15","https://github.com/ptaoussanis/tufte","^16","^17","^18",["^17","2.0.1"]],"^19",["^@",["^H"]],"^15",["^1:","jar:file:/Users/mazeboard/.m2/repository/com/taoensso/tufte/2.0.1/tufte-2.0.1.jar!/taoensso/tufte/examples.cljc"],"^1;",["^@",["^1C"]],"^1<",true,"^Q",["^I","^H","^1@"]],["^ ","^3",[1630228119205],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^8","Private implementation details.\n  `profiled` -> [<result> <derefable-and-mergeable-pstats>].\n\n  Profiling consists of:\n    1. State init   ; On  thread\n    2. Capture      ; On  thread\n    3. State deref  ; On  thread\n    4. ?Merging     ; Off thread, on demand (deferred cost)\n    5. ?Realization ; Off thread, on demand (deferred cost)\n\n  Basic implementation:\n    - Capture [<id> <elapsed>]s into single mutable acc\n      - May compact acc      to id-times, {<id> (<time>        ...)}\n      - May compact id-times to id-stats, {<id> (<stats/stats> ...)}\n    - Merge pours (read-only) acc0 + acc1 into id-times\n      - May compact id-times to id-stats, {<id> (<stats/stats> ...)}\n    - Realization:\n        - Generates {<id> <stats/stats>} from id-times.\n        - Merges with id-stats.","^9","taoensso/tufte/impl.cljc","^:",1,"^;",5,"^<",1,"^=",24],"^>",null,"^?",["^@",[]],"^A","~$taoensso.tufte.impl","^C",null,"^D",["^ ","~$clojure.string","^1E","~$str","^1E","^E","^E","^F","^E","^B","^B","~$stats","^B","^H","^H","^I","^I"],"^J",["^@",["^K"]],"^L",null,"^M",["^ ","^H","^H"],"^N",true,"^O",["^ ","^K",["^@",[]]],"^P",["^ "],"^Q",["^I","^H","^1E","^E","^B"]],"^R","^1D","^S","taoensso.tufte.impl.js","^T",["^U","taoensso/tufte/impl.cljc"],"^V","taoensso/tufte/impl.cljc","^W","^X","^Y",1630228119205,"^D",["^@",["^B","^H","^I","^1E","^E"]],"^Z",["^ ","^[","^10","^11","^12","^13","2.0.1","^A","tufte","^14","Simple profiling and performance monitoring for Clojure/Script","^15","https://github.com/ptaoussanis/tufte","^16","^17","^18",["^17","2.0.1"]],"^19",["^@",["^H"]],"^15",["^1:","jar:file:/Users/mazeboard/.m2/repository/com/taoensso/tufte/2.0.1/tufte-2.0.1.jar!/taoensso/tufte/impl.cljc"],"^1;",["^@",["^1D"]],"^1<",true,"^Q",["^I","^H","^1E","^E","^B"]],["^ ","^3",[1630228119205],"^4",["^ ","^5",null,"^6",["^ "],"^7",["^ ","^1B","Peter Taoussanis (@ptaoussanis)","^8","A simple, fast, monitoring profiler for Clojure/Script.\n\n  Usage: wrap+name interesting body exprs with the `p` macro. Then activate\n  profiling of these wrapped exprs using the `profiled` or `profile` macros:\n\n    (profiled {} (p :my-fn (my-fn))) ; Returns [<body-result> <?pstats>]\n    (profile  {} (p :my-fn (my-fn))) ; Returns  <body-result>, dispatches\n                                     ; ?pstats to any registered handlers.\n\n  Extensive facilities are provided for compile-time elision and runtime\n  filtering.\n\n  See the relevant docstrings for more info:\n    `p`, `profiled`, `profile`, `add-handler!` ; Core API\n\n    (p        [opts & body] [id & body]) ; e.g. `(p ::my-pid (do-work))`\n    (profiled [opts & body])             ; e.g. `(profiled {:level 2} (my-fn))`\n    (profile  [opts & body])             ; e.g. `(profiled {:level 2} (my-fn))`\n\n    (add-handler! [handler-id ns-pattern handler-fn])\n\n  How/where to use this library:\n    Tufte profiling is highly optimized: even without elision, you can usually\n    leave profiling enabled in production (e.g. for sampled profiling, or to\n    detect unusual performance behaviour). Tufte's stats maps are well suited\n    to programmatic monitoring.","^9","taoensso/tufte.cljc","^:",1,"^;",5,"^<",1,"^=",19],"^>",["^ ","~$profiled","^1@"],"^?",["^@",[]],"^A","^1@","^C",null,"^D",["^ ","^E","^E","^F","^E","^B","^B","^1G","^B","^1D","^1D","~$impl","^1D","^H","^H","^I","^I"],"^J",["^@",["^K","^M"]],"^L",["^ ","~$PStats","^1D"],"^M",["^ ","^1@","^1@","^H","^H"],"^N",true,"^O",["^ ","^K",["^@",[]],"^M",["^@",[]]],"^P",["^ "],"^Q",["^I","^H","^E","^B","^1D"]],"^R","^1@","^S","taoensso.tufte.js","^T",["^U","taoensso/tufte.cljc"],"^V","taoensso/tufte.cljc","^W","^X","^Y",1630228119205,"^D",["^@",["^B","^H","^I","^1D","^E"]],"^Z",["^ ","^[","^10","^11","^12","^13","2.0.1","^A","tufte","^14","Simple profiling and performance monitoring for Clojure/Script","^15","https://github.com/ptaoussanis/tufte","^16","^17","^18",["^17","2.0.1"]],"^19",["^@",["^H","^1@"]],"^15",["^1:","jar:file:/Users/mazeboard/.m2/repository/com/taoensso/tufte/2.0.1/tufte-2.0.1.jar!/taoensso/tufte.cljc"],"^1;",["^@",["^1@"]],"^1<",true,"^Q",["^I","^H","^E","^B","^1D"]]],"~:data-readers",null,"~:shadow.build.classpath/CACHE-TIMESTAMP",1630228360000]